
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Location
 * 
 */
export type Location = $Result.DefaultSelection<Prisma.$LocationPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model AgencyRegistrationRequest
 * 
 */
export type AgencyRegistrationRequest = $Result.DefaultSelection<Prisma.$AgencyRegistrationRequestPayload>
/**
 * Model UserSettings
 * 
 */
export type UserSettings = $Result.DefaultSelection<Prisma.$UserSettingsPayload>
/**
 * Model DeviceToken
 * 
 */
export type DeviceToken = $Result.DefaultSelection<Prisma.$DeviceTokenPayload>
/**
 * Model SearchHistory
 * 
 */
export type SearchHistory = $Result.DefaultSelection<Prisma.$SearchHistoryPayload>
/**
 * Model UserBlock
 * 
 */
export type UserBlock = $Result.DefaultSelection<Prisma.$UserBlockPayload>
/**
 * Model IdentityVerification
 * 
 */
export type IdentityVerification = $Result.DefaultSelection<Prisma.$IdentityVerificationPayload>
/**
 * Model SubscriptionPlan
 * 
 */
export type SubscriptionPlan = $Result.DefaultSelection<Prisma.$SubscriptionPlanPayload>
/**
 * Model Subscription
 * 
 */
export type Subscription = $Result.DefaultSelection<Prisma.$SubscriptionPayload>
/**
 * Model Tag
 * 
 */
export type Tag = $Result.DefaultSelection<Prisma.$TagPayload>
/**
 * Model PostTag
 * 
 */
export type PostTag = $Result.DefaultSelection<Prisma.$PostTagPayload>
/**
 * Model Admin
 * 
 */
export type Admin = $Result.DefaultSelection<Prisma.$AdminPayload>
/**
 * Model UserReputation
 * 
 */
export type UserReputation = $Result.DefaultSelection<Prisma.$UserReputationPayload>
/**
 * Model Escort
 * 
 */
export type Escort = $Result.DefaultSelection<Prisma.$EscortPayload>
/**
 * Model Agency
 * 
 */
export type Agency = $Result.DefaultSelection<Prisma.$AgencyPayload>
/**
 * Model Client
 * 
 */
export type Client = $Result.DefaultSelection<Prisma.$ClientPayload>
/**
 * Model PointsPackage
 * 
 */
export type PointsPackage = $Result.DefaultSelection<Prisma.$PointsPackagePayload>
/**
 * Model PointsPurchase
 * 
 */
export type PointsPurchase = $Result.DefaultSelection<Prisma.$PointsPurchasePayload>
/**
 * Model PointTransaction
 * 
 */
export type PointTransaction = $Result.DefaultSelection<Prisma.$PointTransactionPayload>
/**
 * Model PointsHistory
 * 
 */
export type PointsHistory = $Result.DefaultSelection<Prisma.$PointsHistoryPayload>
/**
 * Model PremiumActivation
 * 
 */
export type PremiumActivation = $Result.DefaultSelection<Prisma.$PremiumActivationPayload>
/**
 * Model ClientReview
 * 
 */
export type ClientReview = $Result.DefaultSelection<Prisma.$ClientReviewPayload>
/**
 * Model Ban
 * 
 */
export type Ban = $Result.DefaultSelection<Prisma.$BanPayload>
/**
 * Model BanAppeal
 * 
 */
export type BanAppeal = $Result.DefaultSelection<Prisma.$BanAppealPayload>
/**
 * Model UserInteraction
 * 
 */
export type UserInteraction = $Result.DefaultSelection<Prisma.$UserInteractionPayload>
/**
 * Model ChatRateLimit
 * 
 */
export type ChatRateLimit = $Result.DefaultSelection<Prisma.$ChatRateLimitPayload>
/**
 * Model AgencyMembership
 * 
 */
export type AgencyMembership = $Result.DefaultSelection<Prisma.$AgencyMembershipPayload>
/**
 * Model AgencyInvitation
 * 
 */
export type AgencyInvitation = $Result.DefaultSelection<Prisma.$AgencyInvitationPayload>
/**
 * Model EscortVerification
 * 
 */
export type EscortVerification = $Result.DefaultSelection<Prisma.$EscortVerificationPayload>
/**
 * Model VerificationPricing
 * 
 */
export type VerificationPricing = $Result.DefaultSelection<Prisma.$VerificationPricingPayload>
/**
 * Model BoostPricing
 * 
 */
export type BoostPricing = $Result.DefaultSelection<Prisma.$BoostPricingPayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model TrendingHistory
 * 
 */
export type TrendingHistory = $Result.DefaultSelection<Prisma.$TrendingHistoryPayload>
/**
 * Model Chat
 * 
 */
export type Chat = $Result.DefaultSelection<Prisma.$ChatPayload>
/**
 * Model ChatMember
 * 
 */
export type ChatMember = $Result.DefaultSelection<Prisma.$ChatMemberPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>
/**
 * Model Favorite
 * 
 */
export type Favorite = $Result.DefaultSelection<Prisma.$FavoritePayload>
/**
 * Model Like
 * 
 */
export type Like = $Result.DefaultSelection<Prisma.$LikePayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Report
 * 
 */
export type Report = $Result.DefaultSelection<Prisma.$ReportPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model Boost
 * 
 */
export type Boost = $Result.DefaultSelection<Prisma.$BoostPayload>
/**
 * Model AppMetrics
 * 
 */
export type AppMetrics = $Result.DefaultSelection<Prisma.$AppMetricsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserType: {
  ESCORT: 'ESCORT',
  AGENCY: 'AGENCY',
  CLIENT: 'CLIENT',
  ADMIN: 'ADMIN'
};

export type UserType = (typeof UserType)[keyof typeof UserType]


export const AccountStatus: {
  ACTIVE: 'ACTIVE',
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  SUSPENDED: 'SUSPENDED',
  BANNED: 'BANNED'
};

export type AccountStatus = (typeof AccountStatus)[keyof typeof AccountStatus]


export const AgencyRequestStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

export type AgencyRequestStatus = (typeof AgencyRequestStatus)[keyof typeof AgencyRequestStatus]


export const ContentFilterLevel: {
  NONE: 'NONE',
  MODERATE: 'MODERATE',
  STRICT: 'STRICT'
};

export type ContentFilterLevel = (typeof ContentFilterLevel)[keyof typeof ContentFilterLevel]


export const VerificationStatus: {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  EXPIRED: 'EXPIRED'
};

export type VerificationStatus = (typeof VerificationStatus)[keyof typeof VerificationStatus]


export const SubscriptionStatus: {
  ACTIVE: 'ACTIVE',
  CANCELLED: 'CANCELLED',
  EXPIRED: 'EXPIRED',
  PAUSED: 'PAUSED',
  PENDING: 'PENDING',
  PAST_DUE: 'PAST_DUE'
};

export type SubscriptionStatus = (typeof SubscriptionStatus)[keyof typeof SubscriptionStatus]


export const TagCategory: {
  GENERAL: 'GENERAL',
  SERVICE: 'SERVICE',
  LOCATION: 'LOCATION',
  PHYSICAL: 'PHYSICAL',
  PREFERENCE: 'PREFERENCE',
  SPECIAL: 'SPECIAL'
};

export type TagCategory = (typeof TagCategory)[keyof typeof TagCategory]


export const AdminRole: {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

export type AdminRole = (typeof AdminRole)[keyof typeof AdminRole]


export const PremiumTier: {
  BASIC: 'BASIC',
  PREMIUM: 'PREMIUM',
  VIP: 'VIP'
};

export type PremiumTier = (typeof PremiumTier)[keyof typeof PremiumTier]


export const PaymentStatus: {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED',
  CANCELLED: 'CANCELLED',
  DISPUTED: 'DISPUTED',
  PROCESSING: 'PROCESSING'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const PointTransactionType: {
  PURCHASE: 'PURCHASE',
  BONUS_POINTS: 'BONUS_POINTS',
  DAILY_LOGIN: 'DAILY_LOGIN',
  REGISTRATION_BONUS: 'REGISTRATION_BONUS',
  REFERRAL_REWARD: 'REFERRAL_REWARD',
  STREAK_BONUS: 'STREAK_BONUS',
  PREMIUM_DAY: 'PREMIUM_DAY',
  CHAT_PRIORITY: 'CHAT_PRIORITY',
  EXTRA_FAVORITE: 'EXTRA_FAVORITE',
  PROFILE_BOOST: 'PROFILE_BOOST',
  PHONE_ACCESS: 'PHONE_ACCESS',
  IMAGE_MESSAGE: 'IMAGE_MESSAGE',
  REFUND: 'REFUND',
  ADMIN_ADJUSTMENT: 'ADMIN_ADJUSTMENT',
  EXPIRED_PREMIUM: 'EXPIRED_PREMIUM'
};

export type PointTransactionType = (typeof PointTransactionType)[keyof typeof PointTransactionType]


export const BanSeverity: {
  WARNING: 'WARNING',
  TEMPORARY: 'TEMPORARY',
  PERMANENT: 'PERMANENT',
  SHADOW: 'SHADOW'
};

export type BanSeverity = (typeof BanSeverity)[keyof typeof BanSeverity]


export const AppealStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  UNDER_REVIEW: 'UNDER_REVIEW'
};

export type AppealStatus = (typeof AppealStatus)[keyof typeof AppealStatus]


export const InteractionType: {
  VIEW: 'VIEW',
  LIKE: 'LIKE',
  CHAT: 'CHAT',
  PROFILE_VISIT: 'PROFILE_VISIT',
  POST_CLICK: 'POST_CLICK',
  FAVORITE: 'FAVORITE',
  SHARE: 'SHARE',
  REPORT: 'REPORT',
  BOOST_VIEW: 'BOOST_VIEW',
  CONTACT_CLICK: 'CONTACT_CLICK',
  IMAGE_VIEW: 'IMAGE_VIEW',
  PHONE_VIEW: 'PHONE_VIEW',
  LOCATION_VIEW: 'LOCATION_VIEW',
  WHATSAPP_CLICK: 'WHATSAPP_CLICK',
  WHATSAPP_OPEN: 'WHATSAPP_OPEN',
  TIME_SPENT: 'TIME_SPENT',
  DISCOVERY_VIEW: 'DISCOVERY_VIEW',
  POST_DETAIL_VIEW: 'POST_DETAIL_VIEW',
  UNLIKE: 'UNLIKE',
  UNFAVORITE: 'UNFAVORITE'
};

export type InteractionType = (typeof InteractionType)[keyof typeof InteractionType]


export const RateLimitType: {
  DAILY_MESSAGES: 'DAILY_MESSAGES',
  HOURLY_MESSAGES: 'HOURLY_MESSAGES',
  PHONE_ACCESS: 'PHONE_ACCESS',
  IMAGE_MESSAGES: 'IMAGE_MESSAGES',
  VOICE_MESSAGES: 'VOICE_MESSAGES',
  FILE_UPLOADS: 'FILE_UPLOADS'
};

export type RateLimitType = (typeof RateLimitType)[keyof typeof RateLimitType]


export const MembershipStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  SUSPENDED: 'SUSPENDED'
};

export type MembershipStatus = (typeof MembershipStatus)[keyof typeof MembershipStatus]


export const AgencyRole: {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  MEMBER: 'MEMBER'
};

export type AgencyRole = (typeof AgencyRole)[keyof typeof AgencyRole]


export const InvitationStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  EXPIRED: 'EXPIRED',
  CANCELLED: 'CANCELLED'
};

export type InvitationStatus = (typeof InvitationStatus)[keyof typeof InvitationStatus]


export const BoostType: {
  BASIC: 'BASIC',
  PREMIUM: 'PREMIUM',
  FEATURED: 'FEATURED',
  SUPER: 'SUPER',
  MEGA: 'MEGA'
};

export type BoostType = (typeof BoostType)[keyof typeof BoostType]


export const DisputeStatus: {
  ACTIVE: 'ACTIVE',
  RESOLVED: 'RESOLVED',
  ESCALATED: 'ESCALATED',
  CLOSED: 'CLOSED'
};

export type DisputeStatus = (typeof DisputeStatus)[keyof typeof DisputeStatus]


export const ChatRole: {
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR',
  MEMBER: 'MEMBER'
};

export type ChatRole = (typeof ChatRole)[keyof typeof ChatRole]


export const MessageType: {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  FILE: 'FILE',
  AUDIO: 'AUDIO',
  VIDEO: 'VIDEO',
  SYSTEM: 'SYSTEM',
  LOCATION: 'LOCATION',
  CONTACT: 'CONTACT'
};

export type MessageType = (typeof MessageType)[keyof typeof MessageType]


export const ReportReason: {
  SPAM: 'SPAM',
  INAPPROPRIATE_CONTENT: 'INAPPROPRIATE_CONTENT',
  FAKE_PROFILE: 'FAKE_PROFILE',
  SCAM: 'SCAM',
  HARASSMENT: 'HARASSMENT',
  COPYRIGHT: 'COPYRIGHT',
  UNDERAGE: 'UNDERAGE',
  VIOLENCE: 'VIOLENCE',
  FRAUD: 'FRAUD',
  IMPERSONATION: 'IMPERSONATION',
  ADULT_CONTENT: 'ADULT_CONTENT',
  OTHER: 'OTHER'
};

export type ReportReason = (typeof ReportReason)[keyof typeof ReportReason]


export const ReportStatus: {
  PENDING: 'PENDING',
  REVIEWED: 'REVIEWED',
  RESOLVED: 'RESOLVED',
  REJECTED: 'REJECTED',
  ESCALATED: 'ESCALATED'
};

export type ReportStatus = (typeof ReportStatus)[keyof typeof ReportStatus]


export const ReportSeverity: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

export type ReportSeverity = (typeof ReportSeverity)[keyof typeof ReportSeverity]


export const NotificationType: {
  MESSAGE: 'MESSAGE',
  LIKE: 'LIKE',
  FAVORITE: 'FAVORITE',
  REVIEW: 'REVIEW',
  BOOST_EXPIRED: 'BOOST_EXPIRED',
  PAYMENT_SUCCESS: 'PAYMENT_SUCCESS',
  PAYMENT_FAILED: 'PAYMENT_FAILED',
  AGENCY_INVITE: 'AGENCY_INVITE',
  VERIFICATION_COMPLETED: 'VERIFICATION_COMPLETED',
  VERIFICATION_EXPIRING: 'VERIFICATION_EXPIRING',
  MEMBERSHIP_REQUEST: 'MEMBERSHIP_REQUEST',
  SYSTEM: 'SYSTEM',
  TRENDING: 'TRENDING',
  PROMOTION: 'PROMOTION',
  SECURITY_ALERT: 'SECURITY_ALERT',
  SUBSCRIPTION_EXPIRING: 'SUBSCRIPTION_EXPIRING',
  NEW_FOLLOWER: 'NEW_FOLLOWER',
  POST_APPROVED: 'POST_APPROVED',
  POST_REJECTED: 'POST_REJECTED',
  PROFILE_INCOMPLETE: 'PROFILE_INCOMPLETE',
  AGENCY_APPROVED: 'AGENCY_APPROVED',
  AGENCY_REJECTED: 'AGENCY_REJECTED',
  POINTS_LOW: 'POINTS_LOW',
  DAILY_POINTS_AVAILABLE: 'DAILY_POINTS_AVAILABLE',
  PREMIUM_EXPIRED: 'PREMIUM_EXPIRED'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]


export const NotificationPriority: {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type NotificationPriority = (typeof NotificationPriority)[keyof typeof NotificationPriority]


export const PaymentType: {
  BOOST: 'BOOST',
  PREMIUM: 'PREMIUM',
  POINTS: 'POINTS',
  VERIFICATION: 'VERIFICATION',
  SUBSCRIPTION: 'SUBSCRIPTION',
  TIP: 'TIP',
  COMMISSION: 'COMMISSION',
  POST_ADDITIONAL: 'POST_ADDITIONAL',
  STACK_BOOST: 'STACK_BOOST'
};

export type PaymentType = (typeof PaymentType)[keyof typeof PaymentType]

}

export type UserType = $Enums.UserType

export const UserType: typeof $Enums.UserType

export type AccountStatus = $Enums.AccountStatus

export const AccountStatus: typeof $Enums.AccountStatus

export type AgencyRequestStatus = $Enums.AgencyRequestStatus

export const AgencyRequestStatus: typeof $Enums.AgencyRequestStatus

export type ContentFilterLevel = $Enums.ContentFilterLevel

export const ContentFilterLevel: typeof $Enums.ContentFilterLevel

export type VerificationStatus = $Enums.VerificationStatus

export const VerificationStatus: typeof $Enums.VerificationStatus

export type SubscriptionStatus = $Enums.SubscriptionStatus

export const SubscriptionStatus: typeof $Enums.SubscriptionStatus

export type TagCategory = $Enums.TagCategory

export const TagCategory: typeof $Enums.TagCategory

export type AdminRole = $Enums.AdminRole

export const AdminRole: typeof $Enums.AdminRole

export type PremiumTier = $Enums.PremiumTier

export const PremiumTier: typeof $Enums.PremiumTier

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type PointTransactionType = $Enums.PointTransactionType

export const PointTransactionType: typeof $Enums.PointTransactionType

export type BanSeverity = $Enums.BanSeverity

export const BanSeverity: typeof $Enums.BanSeverity

export type AppealStatus = $Enums.AppealStatus

export const AppealStatus: typeof $Enums.AppealStatus

export type InteractionType = $Enums.InteractionType

export const InteractionType: typeof $Enums.InteractionType

export type RateLimitType = $Enums.RateLimitType

export const RateLimitType: typeof $Enums.RateLimitType

export type MembershipStatus = $Enums.MembershipStatus

export const MembershipStatus: typeof $Enums.MembershipStatus

export type AgencyRole = $Enums.AgencyRole

export const AgencyRole: typeof $Enums.AgencyRole

export type InvitationStatus = $Enums.InvitationStatus

export const InvitationStatus: typeof $Enums.InvitationStatus

export type BoostType = $Enums.BoostType

export const BoostType: typeof $Enums.BoostType

export type DisputeStatus = $Enums.DisputeStatus

export const DisputeStatus: typeof $Enums.DisputeStatus

export type ChatRole = $Enums.ChatRole

export const ChatRole: typeof $Enums.ChatRole

export type MessageType = $Enums.MessageType

export const MessageType: typeof $Enums.MessageType

export type ReportReason = $Enums.ReportReason

export const ReportReason: typeof $Enums.ReportReason

export type ReportStatus = $Enums.ReportStatus

export const ReportStatus: typeof $Enums.ReportStatus

export type ReportSeverity = $Enums.ReportSeverity

export const ReportSeverity: typeof $Enums.ReportSeverity

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

export type NotificationPriority = $Enums.NotificationPriority

export const NotificationPriority: typeof $Enums.NotificationPriority

export type PaymentType = $Enums.PaymentType

export const PaymentType: typeof $Enums.PaymentType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Locations
 * const locations = await prisma.location.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Locations
   * const locations = await prisma.location.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.location`: Exposes CRUD operations for the **Location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.LocationDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.agencyRegistrationRequest`: Exposes CRUD operations for the **AgencyRegistrationRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyRegistrationRequests
    * const agencyRegistrationRequests = await prisma.agencyRegistrationRequest.findMany()
    * ```
    */
  get agencyRegistrationRequest(): Prisma.AgencyRegistrationRequestDelegate<ExtArgs>;

  /**
   * `prisma.userSettings`: Exposes CRUD operations for the **UserSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSettings
    * const userSettings = await prisma.userSettings.findMany()
    * ```
    */
  get userSettings(): Prisma.UserSettingsDelegate<ExtArgs>;

  /**
   * `prisma.deviceToken`: Exposes CRUD operations for the **DeviceToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DeviceTokens
    * const deviceTokens = await prisma.deviceToken.findMany()
    * ```
    */
  get deviceToken(): Prisma.DeviceTokenDelegate<ExtArgs>;

  /**
   * `prisma.searchHistory`: Exposes CRUD operations for the **SearchHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SearchHistories
    * const searchHistories = await prisma.searchHistory.findMany()
    * ```
    */
  get searchHistory(): Prisma.SearchHistoryDelegate<ExtArgs>;

  /**
   * `prisma.userBlock`: Exposes CRUD operations for the **UserBlock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserBlocks
    * const userBlocks = await prisma.userBlock.findMany()
    * ```
    */
  get userBlock(): Prisma.UserBlockDelegate<ExtArgs>;

  /**
   * `prisma.identityVerification`: Exposes CRUD operations for the **IdentityVerification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more IdentityVerifications
    * const identityVerifications = await prisma.identityVerification.findMany()
    * ```
    */
  get identityVerification(): Prisma.IdentityVerificationDelegate<ExtArgs>;

  /**
   * `prisma.subscriptionPlan`: Exposes CRUD operations for the **SubscriptionPlan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SubscriptionPlans
    * const subscriptionPlans = await prisma.subscriptionPlan.findMany()
    * ```
    */
  get subscriptionPlan(): Prisma.SubscriptionPlanDelegate<ExtArgs>;

  /**
   * `prisma.subscription`: Exposes CRUD operations for the **Subscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subscriptions
    * const subscriptions = await prisma.subscription.findMany()
    * ```
    */
  get subscription(): Prisma.SubscriptionDelegate<ExtArgs>;

  /**
   * `prisma.tag`: Exposes CRUD operations for the **Tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tag.findMany()
    * ```
    */
  get tag(): Prisma.TagDelegate<ExtArgs>;

  /**
   * `prisma.postTag`: Exposes CRUD operations for the **PostTag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PostTags
    * const postTags = await prisma.postTag.findMany()
    * ```
    */
  get postTag(): Prisma.PostTagDelegate<ExtArgs>;

  /**
   * `prisma.admin`: Exposes CRUD operations for the **Admin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admin.findMany()
    * ```
    */
  get admin(): Prisma.AdminDelegate<ExtArgs>;

  /**
   * `prisma.userReputation`: Exposes CRUD operations for the **UserReputation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserReputations
    * const userReputations = await prisma.userReputation.findMany()
    * ```
    */
  get userReputation(): Prisma.UserReputationDelegate<ExtArgs>;

  /**
   * `prisma.escort`: Exposes CRUD operations for the **Escort** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Escorts
    * const escorts = await prisma.escort.findMany()
    * ```
    */
  get escort(): Prisma.EscortDelegate<ExtArgs>;

  /**
   * `prisma.agency`: Exposes CRUD operations for the **Agency** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Agencies
    * const agencies = await prisma.agency.findMany()
    * ```
    */
  get agency(): Prisma.AgencyDelegate<ExtArgs>;

  /**
   * `prisma.client`: Exposes CRUD operations for the **Client** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.client.findMany()
    * ```
    */
  get client(): Prisma.ClientDelegate<ExtArgs>;

  /**
   * `prisma.pointsPackage`: Exposes CRUD operations for the **PointsPackage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PointsPackages
    * const pointsPackages = await prisma.pointsPackage.findMany()
    * ```
    */
  get pointsPackage(): Prisma.PointsPackageDelegate<ExtArgs>;

  /**
   * `prisma.pointsPurchase`: Exposes CRUD operations for the **PointsPurchase** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PointsPurchases
    * const pointsPurchases = await prisma.pointsPurchase.findMany()
    * ```
    */
  get pointsPurchase(): Prisma.PointsPurchaseDelegate<ExtArgs>;

  /**
   * `prisma.pointTransaction`: Exposes CRUD operations for the **PointTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PointTransactions
    * const pointTransactions = await prisma.pointTransaction.findMany()
    * ```
    */
  get pointTransaction(): Prisma.PointTransactionDelegate<ExtArgs>;

  /**
   * `prisma.pointsHistory`: Exposes CRUD operations for the **PointsHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PointsHistories
    * const pointsHistories = await prisma.pointsHistory.findMany()
    * ```
    */
  get pointsHistory(): Prisma.PointsHistoryDelegate<ExtArgs>;

  /**
   * `prisma.premiumActivation`: Exposes CRUD operations for the **PremiumActivation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PremiumActivations
    * const premiumActivations = await prisma.premiumActivation.findMany()
    * ```
    */
  get premiumActivation(): Prisma.PremiumActivationDelegate<ExtArgs>;

  /**
   * `prisma.clientReview`: Exposes CRUD operations for the **ClientReview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClientReviews
    * const clientReviews = await prisma.clientReview.findMany()
    * ```
    */
  get clientReview(): Prisma.ClientReviewDelegate<ExtArgs>;

  /**
   * `prisma.ban`: Exposes CRUD operations for the **Ban** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bans
    * const bans = await prisma.ban.findMany()
    * ```
    */
  get ban(): Prisma.BanDelegate<ExtArgs>;

  /**
   * `prisma.banAppeal`: Exposes CRUD operations for the **BanAppeal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BanAppeals
    * const banAppeals = await prisma.banAppeal.findMany()
    * ```
    */
  get banAppeal(): Prisma.BanAppealDelegate<ExtArgs>;

  /**
   * `prisma.userInteraction`: Exposes CRUD operations for the **UserInteraction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserInteractions
    * const userInteractions = await prisma.userInteraction.findMany()
    * ```
    */
  get userInteraction(): Prisma.UserInteractionDelegate<ExtArgs>;

  /**
   * `prisma.chatRateLimit`: Exposes CRUD operations for the **ChatRateLimit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatRateLimits
    * const chatRateLimits = await prisma.chatRateLimit.findMany()
    * ```
    */
  get chatRateLimit(): Prisma.ChatRateLimitDelegate<ExtArgs>;

  /**
   * `prisma.agencyMembership`: Exposes CRUD operations for the **AgencyMembership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyMemberships
    * const agencyMemberships = await prisma.agencyMembership.findMany()
    * ```
    */
  get agencyMembership(): Prisma.AgencyMembershipDelegate<ExtArgs>;

  /**
   * `prisma.agencyInvitation`: Exposes CRUD operations for the **AgencyInvitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AgencyInvitations
    * const agencyInvitations = await prisma.agencyInvitation.findMany()
    * ```
    */
  get agencyInvitation(): Prisma.AgencyInvitationDelegate<ExtArgs>;

  /**
   * `prisma.escortVerification`: Exposes CRUD operations for the **EscortVerification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EscortVerifications
    * const escortVerifications = await prisma.escortVerification.findMany()
    * ```
    */
  get escortVerification(): Prisma.EscortVerificationDelegate<ExtArgs>;

  /**
   * `prisma.verificationPricing`: Exposes CRUD operations for the **VerificationPricing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationPricings
    * const verificationPricings = await prisma.verificationPricing.findMany()
    * ```
    */
  get verificationPricing(): Prisma.VerificationPricingDelegate<ExtArgs>;

  /**
   * `prisma.boostPricing`: Exposes CRUD operations for the **BoostPricing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BoostPricings
    * const boostPricings = await prisma.boostPricing.findMany()
    * ```
    */
  get boostPricing(): Prisma.BoostPricingDelegate<ExtArgs>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs>;

  /**
   * `prisma.trendingHistory`: Exposes CRUD operations for the **TrendingHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TrendingHistories
    * const trendingHistories = await prisma.trendingHistory.findMany()
    * ```
    */
  get trendingHistory(): Prisma.TrendingHistoryDelegate<ExtArgs>;

  /**
   * `prisma.chat`: Exposes CRUD operations for the **Chat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chats
    * const chats = await prisma.chat.findMany()
    * ```
    */
  get chat(): Prisma.ChatDelegate<ExtArgs>;

  /**
   * `prisma.chatMember`: Exposes CRUD operations for the **ChatMember** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatMembers
    * const chatMembers = await prisma.chatMember.findMany()
    * ```
    */
  get chatMember(): Prisma.ChatMemberDelegate<ExtArgs>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs>;

  /**
   * `prisma.favorite`: Exposes CRUD operations for the **Favorite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorite.findMany()
    * ```
    */
  get favorite(): Prisma.FavoriteDelegate<ExtArgs>;

  /**
   * `prisma.like`: Exposes CRUD operations for the **Like** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.like.findMany()
    * ```
    */
  get like(): Prisma.LikeDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.report`: Exposes CRUD operations for the **Report** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.report.findMany()
    * ```
    */
  get report(): Prisma.ReportDelegate<ExtArgs>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs>;

  /**
   * `prisma.boost`: Exposes CRUD operations for the **Boost** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Boosts
    * const boosts = await prisma.boost.findMany()
    * ```
    */
  get boost(): Prisma.BoostDelegate<ExtArgs>;

  /**
   * `prisma.appMetrics`: Exposes CRUD operations for the **AppMetrics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AppMetrics
    * const appMetrics = await prisma.appMetrics.findMany()
    * ```
    */
  get appMetrics(): Prisma.AppMetricsDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Location: 'Location',
    User: 'User',
    AgencyRegistrationRequest: 'AgencyRegistrationRequest',
    UserSettings: 'UserSettings',
    DeviceToken: 'DeviceToken',
    SearchHistory: 'SearchHistory',
    UserBlock: 'UserBlock',
    IdentityVerification: 'IdentityVerification',
    SubscriptionPlan: 'SubscriptionPlan',
    Subscription: 'Subscription',
    Tag: 'Tag',
    PostTag: 'PostTag',
    Admin: 'Admin',
    UserReputation: 'UserReputation',
    Escort: 'Escort',
    Agency: 'Agency',
    Client: 'Client',
    PointsPackage: 'PointsPackage',
    PointsPurchase: 'PointsPurchase',
    PointTransaction: 'PointTransaction',
    PointsHistory: 'PointsHistory',
    PremiumActivation: 'PremiumActivation',
    ClientReview: 'ClientReview',
    Ban: 'Ban',
    BanAppeal: 'BanAppeal',
    UserInteraction: 'UserInteraction',
    ChatRateLimit: 'ChatRateLimit',
    AgencyMembership: 'AgencyMembership',
    AgencyInvitation: 'AgencyInvitation',
    EscortVerification: 'EscortVerification',
    VerificationPricing: 'VerificationPricing',
    BoostPricing: 'BoostPricing',
    Post: 'Post',
    TrendingHistory: 'TrendingHistory',
    Chat: 'Chat',
    ChatMember: 'ChatMember',
    Message: 'Message',
    Favorite: 'Favorite',
    Like: 'Like',
    Review: 'Review',
    Report: 'Report',
    Notification: 'Notification',
    Payment: 'Payment',
    Boost: 'Boost',
    AppMetrics: 'AppMetrics'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "location" | "user" | "agencyRegistrationRequest" | "userSettings" | "deviceToken" | "searchHistory" | "userBlock" | "identityVerification" | "subscriptionPlan" | "subscription" | "tag" | "postTag" | "admin" | "userReputation" | "escort" | "agency" | "client" | "pointsPackage" | "pointsPurchase" | "pointTransaction" | "pointsHistory" | "premiumActivation" | "clientReview" | "ban" | "banAppeal" | "userInteraction" | "chatRateLimit" | "agencyMembership" | "agencyInvitation" | "escortVerification" | "verificationPricing" | "boostPricing" | "post" | "trendingHistory" | "chat" | "chatMember" | "message" | "favorite" | "like" | "review" | "report" | "notification" | "payment" | "boost" | "appMetrics"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Location: {
        payload: Prisma.$LocationPayload<ExtArgs>
        fields: Prisma.LocationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LocationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LocationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findFirst: {
            args: Prisma.LocationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LocationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          findMany: {
            args: Prisma.LocationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          create: {
            args: Prisma.LocationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          createMany: {
            args: Prisma.LocationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LocationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>[]
          }
          delete: {
            args: Prisma.LocationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          update: {
            args: Prisma.LocationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          deleteMany: {
            args: Prisma.LocationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LocationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LocationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LocationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.LocationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.LocationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      AgencyRegistrationRequest: {
        payload: Prisma.$AgencyRegistrationRequestPayload<ExtArgs>
        fields: Prisma.AgencyRegistrationRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyRegistrationRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyRegistrationRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          findFirst: {
            args: Prisma.AgencyRegistrationRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyRegistrationRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          findMany: {
            args: Prisma.AgencyRegistrationRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>[]
          }
          create: {
            args: Prisma.AgencyRegistrationRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          createMany: {
            args: Prisma.AgencyRegistrationRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyRegistrationRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>[]
          }
          delete: {
            args: Prisma.AgencyRegistrationRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          update: {
            args: Prisma.AgencyRegistrationRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          deleteMany: {
            args: Prisma.AgencyRegistrationRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyRegistrationRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgencyRegistrationRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyRegistrationRequestPayload>
          }
          aggregate: {
            args: Prisma.AgencyRegistrationRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyRegistrationRequest>
          }
          groupBy: {
            args: Prisma.AgencyRegistrationRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyRegistrationRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyRegistrationRequestCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyRegistrationRequestCountAggregateOutputType> | number
          }
        }
      }
      UserSettings: {
        payload: Prisma.$UserSettingsPayload<ExtArgs>
        fields: Prisma.UserSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findFirst: {
            args: Prisma.UserSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findMany: {
            args: Prisma.UserSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>[]
          }
          create: {
            args: Prisma.UserSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          createMany: {
            args: Prisma.UserSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSettingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>[]
          }
          delete: {
            args: Prisma.UserSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          update: {
            args: Prisma.UserSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          deleteMany: {
            args: Prisma.UserSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          aggregate: {
            args: Prisma.UserSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSettings>
          }
          groupBy: {
            args: Prisma.UserSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsCountAggregateOutputType> | number
          }
        }
      }
      DeviceToken: {
        payload: Prisma.$DeviceTokenPayload<ExtArgs>
        fields: Prisma.DeviceTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeviceTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeviceTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          findFirst: {
            args: Prisma.DeviceTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeviceTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          findMany: {
            args: Prisma.DeviceTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>[]
          }
          create: {
            args: Prisma.DeviceTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          createMany: {
            args: Prisma.DeviceTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeviceTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>[]
          }
          delete: {
            args: Prisma.DeviceTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          update: {
            args: Prisma.DeviceTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          deleteMany: {
            args: Prisma.DeviceTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeviceTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DeviceTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DeviceTokenPayload>
          }
          aggregate: {
            args: Prisma.DeviceTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeviceToken>
          }
          groupBy: {
            args: Prisma.DeviceTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeviceTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeviceTokenCountArgs<ExtArgs>
            result: $Utils.Optional<DeviceTokenCountAggregateOutputType> | number
          }
        }
      }
      SearchHistory: {
        payload: Prisma.$SearchHistoryPayload<ExtArgs>
        fields: Prisma.SearchHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SearchHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SearchHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          findFirst: {
            args: Prisma.SearchHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SearchHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          findMany: {
            args: Prisma.SearchHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>[]
          }
          create: {
            args: Prisma.SearchHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          createMany: {
            args: Prisma.SearchHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SearchHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>[]
          }
          delete: {
            args: Prisma.SearchHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          update: {
            args: Prisma.SearchHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          deleteMany: {
            args: Prisma.SearchHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SearchHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SearchHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchHistoryPayload>
          }
          aggregate: {
            args: Prisma.SearchHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSearchHistory>
          }
          groupBy: {
            args: Prisma.SearchHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SearchHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SearchHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<SearchHistoryCountAggregateOutputType> | number
          }
        }
      }
      UserBlock: {
        payload: Prisma.$UserBlockPayload<ExtArgs>
        fields: Prisma.UserBlockFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserBlockFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserBlockFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          findFirst: {
            args: Prisma.UserBlockFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserBlockFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          findMany: {
            args: Prisma.UserBlockFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>[]
          }
          create: {
            args: Prisma.UserBlockCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          createMany: {
            args: Prisma.UserBlockCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserBlockCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>[]
          }
          delete: {
            args: Prisma.UserBlockDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          update: {
            args: Prisma.UserBlockUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          deleteMany: {
            args: Prisma.UserBlockDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserBlockUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserBlockUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserBlockPayload>
          }
          aggregate: {
            args: Prisma.UserBlockAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserBlock>
          }
          groupBy: {
            args: Prisma.UserBlockGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserBlockGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserBlockCountArgs<ExtArgs>
            result: $Utils.Optional<UserBlockCountAggregateOutputType> | number
          }
        }
      }
      IdentityVerification: {
        payload: Prisma.$IdentityVerificationPayload<ExtArgs>
        fields: Prisma.IdentityVerificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.IdentityVerificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.IdentityVerificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          findFirst: {
            args: Prisma.IdentityVerificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.IdentityVerificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          findMany: {
            args: Prisma.IdentityVerificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>[]
          }
          create: {
            args: Prisma.IdentityVerificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          createMany: {
            args: Prisma.IdentityVerificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.IdentityVerificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>[]
          }
          delete: {
            args: Prisma.IdentityVerificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          update: {
            args: Prisma.IdentityVerificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          deleteMany: {
            args: Prisma.IdentityVerificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.IdentityVerificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.IdentityVerificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$IdentityVerificationPayload>
          }
          aggregate: {
            args: Prisma.IdentityVerificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIdentityVerification>
          }
          groupBy: {
            args: Prisma.IdentityVerificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<IdentityVerificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.IdentityVerificationCountArgs<ExtArgs>
            result: $Utils.Optional<IdentityVerificationCountAggregateOutputType> | number
          }
        }
      }
      SubscriptionPlan: {
        payload: Prisma.$SubscriptionPlanPayload<ExtArgs>
        fields: Prisma.SubscriptionPlanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionPlanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionPlanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionPlanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionPlanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          findMany: {
            args: Prisma.SubscriptionPlanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>[]
          }
          create: {
            args: Prisma.SubscriptionPlanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          createMany: {
            args: Prisma.SubscriptionPlanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionPlanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionPlanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          update: {
            args: Prisma.SubscriptionPlanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionPlanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionPlanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionPlanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPlanPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionPlanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscriptionPlan>
          }
          groupBy: {
            args: Prisma.SubscriptionPlanGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionPlanGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionPlanCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionPlanCountAggregateOutputType> | number
          }
        }
      }
      Subscription: {
        payload: Prisma.$SubscriptionPayload<ExtArgs>
        fields: Prisma.SubscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findFirst: {
            args: Prisma.SubscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          findMany: {
            args: Prisma.SubscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          create: {
            args: Prisma.SubscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          createMany: {
            args: Prisma.SubscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SubscriptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>[]
          }
          delete: {
            args: Prisma.SubscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          update: {
            args: Prisma.SubscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          deleteMany: {
            args: Prisma.SubscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubscriptionPayload>
          }
          aggregate: {
            args: Prisma.SubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubscription>
          }
          groupBy: {
            args: Prisma.SubscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<SubscriptionCountAggregateOutputType> | number
          }
        }
      }
      Tag: {
        payload: Prisma.$TagPayload<ExtArgs>
        fields: Prisma.TagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findFirst: {
            args: Prisma.TagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          findMany: {
            args: Prisma.TagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          create: {
            args: Prisma.TagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          createMany: {
            args: Prisma.TagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>[]
          }
          delete: {
            args: Prisma.TagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          update: {
            args: Prisma.TagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          deleteMany: {
            args: Prisma.TagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagPayload>
          }
          aggregate: {
            args: Prisma.TagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTag>
          }
          groupBy: {
            args: Prisma.TagGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagCountArgs<ExtArgs>
            result: $Utils.Optional<TagCountAggregateOutputType> | number
          }
        }
      }
      PostTag: {
        payload: Prisma.$PostTagPayload<ExtArgs>
        fields: Prisma.PostTagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostTagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostTagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          findFirst: {
            args: Prisma.PostTagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostTagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          findMany: {
            args: Prisma.PostTagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>[]
          }
          create: {
            args: Prisma.PostTagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          createMany: {
            args: Prisma.PostTagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostTagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>[]
          }
          delete: {
            args: Prisma.PostTagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          update: {
            args: Prisma.PostTagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          deleteMany: {
            args: Prisma.PostTagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostTagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostTagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostTagPayload>
          }
          aggregate: {
            args: Prisma.PostTagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePostTag>
          }
          groupBy: {
            args: Prisma.PostTagGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostTagGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostTagCountArgs<ExtArgs>
            result: $Utils.Optional<PostTagCountAggregateOutputType> | number
          }
        }
      }
      Admin: {
        payload: Prisma.$AdminPayload<ExtArgs>
        fields: Prisma.AdminFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdminFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdminFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findFirst: {
            args: Prisma.AdminFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdminFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          findMany: {
            args: Prisma.AdminFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          create: {
            args: Prisma.AdminCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          createMany: {
            args: Prisma.AdminCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdminCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>[]
          }
          delete: {
            args: Prisma.AdminDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          update: {
            args: Prisma.AdminUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          deleteMany: {
            args: Prisma.AdminDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdminUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AdminUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdminPayload>
          }
          aggregate: {
            args: Prisma.AdminAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin>
          }
          groupBy: {
            args: Prisma.AdminGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdminCountArgs<ExtArgs>
            result: $Utils.Optional<AdminCountAggregateOutputType> | number
          }
        }
      }
      UserReputation: {
        payload: Prisma.$UserReputationPayload<ExtArgs>
        fields: Prisma.UserReputationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserReputationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserReputationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          findFirst: {
            args: Prisma.UserReputationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserReputationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          findMany: {
            args: Prisma.UserReputationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>[]
          }
          create: {
            args: Prisma.UserReputationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          createMany: {
            args: Prisma.UserReputationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserReputationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>[]
          }
          delete: {
            args: Prisma.UserReputationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          update: {
            args: Prisma.UserReputationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          deleteMany: {
            args: Prisma.UserReputationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserReputationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserReputationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserReputationPayload>
          }
          aggregate: {
            args: Prisma.UserReputationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserReputation>
          }
          groupBy: {
            args: Prisma.UserReputationGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserReputationGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserReputationCountArgs<ExtArgs>
            result: $Utils.Optional<UserReputationCountAggregateOutputType> | number
          }
        }
      }
      Escort: {
        payload: Prisma.$EscortPayload<ExtArgs>
        fields: Prisma.EscortFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EscortFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EscortFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          findFirst: {
            args: Prisma.EscortFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EscortFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          findMany: {
            args: Prisma.EscortFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>[]
          }
          create: {
            args: Prisma.EscortCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          createMany: {
            args: Prisma.EscortCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EscortCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>[]
          }
          delete: {
            args: Prisma.EscortDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          update: {
            args: Prisma.EscortUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          deleteMany: {
            args: Prisma.EscortDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EscortUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EscortUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortPayload>
          }
          aggregate: {
            args: Prisma.EscortAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEscort>
          }
          groupBy: {
            args: Prisma.EscortGroupByArgs<ExtArgs>
            result: $Utils.Optional<EscortGroupByOutputType>[]
          }
          count: {
            args: Prisma.EscortCountArgs<ExtArgs>
            result: $Utils.Optional<EscortCountAggregateOutputType> | number
          }
        }
      }
      Agency: {
        payload: Prisma.$AgencyPayload<ExtArgs>
        fields: Prisma.AgencyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findFirst: {
            args: Prisma.AgencyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          findMany: {
            args: Prisma.AgencyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          create: {
            args: Prisma.AgencyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          createMany: {
            args: Prisma.AgencyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>[]
          }
          delete: {
            args: Prisma.AgencyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          update: {
            args: Prisma.AgencyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          deleteMany: {
            args: Prisma.AgencyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgencyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyPayload>
          }
          aggregate: {
            args: Prisma.AgencyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgency>
          }
          groupBy: {
            args: Prisma.AgencyGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyCountAggregateOutputType> | number
          }
        }
      }
      Client: {
        payload: Prisma.$ClientPayload<ExtArgs>
        fields: Prisma.ClientFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findFirst: {
            args: Prisma.ClientFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          findMany: {
            args: Prisma.ClientFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          create: {
            args: Prisma.ClientCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          createMany: {
            args: Prisma.ClientCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>[]
          }
          delete: {
            args: Prisma.ClientDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          update: {
            args: Prisma.ClientUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          deleteMany: {
            args: Prisma.ClientDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClientUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientPayload>
          }
          aggregate: {
            args: Prisma.ClientAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClient>
          }
          groupBy: {
            args: Prisma.ClientGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientCountArgs<ExtArgs>
            result: $Utils.Optional<ClientCountAggregateOutputType> | number
          }
        }
      }
      PointsPackage: {
        payload: Prisma.$PointsPackagePayload<ExtArgs>
        fields: Prisma.PointsPackageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PointsPackageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PointsPackageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          findFirst: {
            args: Prisma.PointsPackageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PointsPackageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          findMany: {
            args: Prisma.PointsPackageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>[]
          }
          create: {
            args: Prisma.PointsPackageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          createMany: {
            args: Prisma.PointsPackageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PointsPackageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>[]
          }
          delete: {
            args: Prisma.PointsPackageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          update: {
            args: Prisma.PointsPackageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          deleteMany: {
            args: Prisma.PointsPackageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PointsPackageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PointsPackageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPackagePayload>
          }
          aggregate: {
            args: Prisma.PointsPackageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePointsPackage>
          }
          groupBy: {
            args: Prisma.PointsPackageGroupByArgs<ExtArgs>
            result: $Utils.Optional<PointsPackageGroupByOutputType>[]
          }
          count: {
            args: Prisma.PointsPackageCountArgs<ExtArgs>
            result: $Utils.Optional<PointsPackageCountAggregateOutputType> | number
          }
        }
      }
      PointsPurchase: {
        payload: Prisma.$PointsPurchasePayload<ExtArgs>
        fields: Prisma.PointsPurchaseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PointsPurchaseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PointsPurchaseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          findFirst: {
            args: Prisma.PointsPurchaseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PointsPurchaseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          findMany: {
            args: Prisma.PointsPurchaseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>[]
          }
          create: {
            args: Prisma.PointsPurchaseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          createMany: {
            args: Prisma.PointsPurchaseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PointsPurchaseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>[]
          }
          delete: {
            args: Prisma.PointsPurchaseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          update: {
            args: Prisma.PointsPurchaseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          deleteMany: {
            args: Prisma.PointsPurchaseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PointsPurchaseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PointsPurchaseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsPurchasePayload>
          }
          aggregate: {
            args: Prisma.PointsPurchaseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePointsPurchase>
          }
          groupBy: {
            args: Prisma.PointsPurchaseGroupByArgs<ExtArgs>
            result: $Utils.Optional<PointsPurchaseGroupByOutputType>[]
          }
          count: {
            args: Prisma.PointsPurchaseCountArgs<ExtArgs>
            result: $Utils.Optional<PointsPurchaseCountAggregateOutputType> | number
          }
        }
      }
      PointTransaction: {
        payload: Prisma.$PointTransactionPayload<ExtArgs>
        fields: Prisma.PointTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PointTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PointTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          findFirst: {
            args: Prisma.PointTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PointTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          findMany: {
            args: Prisma.PointTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>[]
          }
          create: {
            args: Prisma.PointTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          createMany: {
            args: Prisma.PointTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PointTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>[]
          }
          delete: {
            args: Prisma.PointTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          update: {
            args: Prisma.PointTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          deleteMany: {
            args: Prisma.PointTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PointTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PointTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointTransactionPayload>
          }
          aggregate: {
            args: Prisma.PointTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePointTransaction>
          }
          groupBy: {
            args: Prisma.PointTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PointTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PointTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<PointTransactionCountAggregateOutputType> | number
          }
        }
      }
      PointsHistory: {
        payload: Prisma.$PointsHistoryPayload<ExtArgs>
        fields: Prisma.PointsHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PointsHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PointsHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          findFirst: {
            args: Prisma.PointsHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PointsHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          findMany: {
            args: Prisma.PointsHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>[]
          }
          create: {
            args: Prisma.PointsHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          createMany: {
            args: Prisma.PointsHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PointsHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>[]
          }
          delete: {
            args: Prisma.PointsHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          update: {
            args: Prisma.PointsHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          deleteMany: {
            args: Prisma.PointsHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PointsHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PointsHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PointsHistoryPayload>
          }
          aggregate: {
            args: Prisma.PointsHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePointsHistory>
          }
          groupBy: {
            args: Prisma.PointsHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<PointsHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.PointsHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<PointsHistoryCountAggregateOutputType> | number
          }
        }
      }
      PremiumActivation: {
        payload: Prisma.$PremiumActivationPayload<ExtArgs>
        fields: Prisma.PremiumActivationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PremiumActivationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PremiumActivationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          findFirst: {
            args: Prisma.PremiumActivationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PremiumActivationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          findMany: {
            args: Prisma.PremiumActivationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>[]
          }
          create: {
            args: Prisma.PremiumActivationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          createMany: {
            args: Prisma.PremiumActivationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PremiumActivationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>[]
          }
          delete: {
            args: Prisma.PremiumActivationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          update: {
            args: Prisma.PremiumActivationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          deleteMany: {
            args: Prisma.PremiumActivationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PremiumActivationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PremiumActivationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PremiumActivationPayload>
          }
          aggregate: {
            args: Prisma.PremiumActivationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePremiumActivation>
          }
          groupBy: {
            args: Prisma.PremiumActivationGroupByArgs<ExtArgs>
            result: $Utils.Optional<PremiumActivationGroupByOutputType>[]
          }
          count: {
            args: Prisma.PremiumActivationCountArgs<ExtArgs>
            result: $Utils.Optional<PremiumActivationCountAggregateOutputType> | number
          }
        }
      }
      ClientReview: {
        payload: Prisma.$ClientReviewPayload<ExtArgs>
        fields: Prisma.ClientReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClientReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClientReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          findFirst: {
            args: Prisma.ClientReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClientReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          findMany: {
            args: Prisma.ClientReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>[]
          }
          create: {
            args: Prisma.ClientReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          createMany: {
            args: Prisma.ClientReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClientReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>[]
          }
          delete: {
            args: Prisma.ClientReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          update: {
            args: Prisma.ClientReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          deleteMany: {
            args: Prisma.ClientReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClientReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ClientReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClientReviewPayload>
          }
          aggregate: {
            args: Prisma.ClientReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClientReview>
          }
          groupBy: {
            args: Prisma.ClientReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClientReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ClientReviewCountAggregateOutputType> | number
          }
        }
      }
      Ban: {
        payload: Prisma.$BanPayload<ExtArgs>
        fields: Prisma.BanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          findFirst: {
            args: Prisma.BanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          findMany: {
            args: Prisma.BanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>[]
          }
          create: {
            args: Prisma.BanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          createMany: {
            args: Prisma.BanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BanCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>[]
          }
          delete: {
            args: Prisma.BanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          update: {
            args: Prisma.BanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          deleteMany: {
            args: Prisma.BanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanPayload>
          }
          aggregate: {
            args: Prisma.BanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBan>
          }
          groupBy: {
            args: Prisma.BanGroupByArgs<ExtArgs>
            result: $Utils.Optional<BanGroupByOutputType>[]
          }
          count: {
            args: Prisma.BanCountArgs<ExtArgs>
            result: $Utils.Optional<BanCountAggregateOutputType> | number
          }
        }
      }
      BanAppeal: {
        payload: Prisma.$BanAppealPayload<ExtArgs>
        fields: Prisma.BanAppealFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BanAppealFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BanAppealFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          findFirst: {
            args: Prisma.BanAppealFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BanAppealFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          findMany: {
            args: Prisma.BanAppealFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>[]
          }
          create: {
            args: Prisma.BanAppealCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          createMany: {
            args: Prisma.BanAppealCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BanAppealCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>[]
          }
          delete: {
            args: Prisma.BanAppealDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          update: {
            args: Prisma.BanAppealUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          deleteMany: {
            args: Prisma.BanAppealDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BanAppealUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BanAppealUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BanAppealPayload>
          }
          aggregate: {
            args: Prisma.BanAppealAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBanAppeal>
          }
          groupBy: {
            args: Prisma.BanAppealGroupByArgs<ExtArgs>
            result: $Utils.Optional<BanAppealGroupByOutputType>[]
          }
          count: {
            args: Prisma.BanAppealCountArgs<ExtArgs>
            result: $Utils.Optional<BanAppealCountAggregateOutputType> | number
          }
        }
      }
      UserInteraction: {
        payload: Prisma.$UserInteractionPayload<ExtArgs>
        fields: Prisma.UserInteractionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserInteractionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserInteractionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          findFirst: {
            args: Prisma.UserInteractionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserInteractionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          findMany: {
            args: Prisma.UserInteractionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>[]
          }
          create: {
            args: Prisma.UserInteractionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          createMany: {
            args: Prisma.UserInteractionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserInteractionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>[]
          }
          delete: {
            args: Prisma.UserInteractionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          update: {
            args: Prisma.UserInteractionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          deleteMany: {
            args: Prisma.UserInteractionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserInteractionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserInteractionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserInteractionPayload>
          }
          aggregate: {
            args: Prisma.UserInteractionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserInteraction>
          }
          groupBy: {
            args: Prisma.UserInteractionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserInteractionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserInteractionCountArgs<ExtArgs>
            result: $Utils.Optional<UserInteractionCountAggregateOutputType> | number
          }
        }
      }
      ChatRateLimit: {
        payload: Prisma.$ChatRateLimitPayload<ExtArgs>
        fields: Prisma.ChatRateLimitFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatRateLimitFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatRateLimitFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          findFirst: {
            args: Prisma.ChatRateLimitFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatRateLimitFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          findMany: {
            args: Prisma.ChatRateLimitFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>[]
          }
          create: {
            args: Prisma.ChatRateLimitCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          createMany: {
            args: Prisma.ChatRateLimitCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChatRateLimitCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>[]
          }
          delete: {
            args: Prisma.ChatRateLimitDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          update: {
            args: Prisma.ChatRateLimitUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          deleteMany: {
            args: Prisma.ChatRateLimitDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatRateLimitUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChatRateLimitUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatRateLimitPayload>
          }
          aggregate: {
            args: Prisma.ChatRateLimitAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatRateLimit>
          }
          groupBy: {
            args: Prisma.ChatRateLimitGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatRateLimitGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatRateLimitCountArgs<ExtArgs>
            result: $Utils.Optional<ChatRateLimitCountAggregateOutputType> | number
          }
        }
      }
      AgencyMembership: {
        payload: Prisma.$AgencyMembershipPayload<ExtArgs>
        fields: Prisma.AgencyMembershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyMembershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyMembershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          findFirst: {
            args: Prisma.AgencyMembershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyMembershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          findMany: {
            args: Prisma.AgencyMembershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>[]
          }
          create: {
            args: Prisma.AgencyMembershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          createMany: {
            args: Prisma.AgencyMembershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyMembershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>[]
          }
          delete: {
            args: Prisma.AgencyMembershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          update: {
            args: Prisma.AgencyMembershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          deleteMany: {
            args: Prisma.AgencyMembershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyMembershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgencyMembershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyMembershipPayload>
          }
          aggregate: {
            args: Prisma.AgencyMembershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyMembership>
          }
          groupBy: {
            args: Prisma.AgencyMembershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyMembershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyMembershipCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyMembershipCountAggregateOutputType> | number
          }
        }
      }
      AgencyInvitation: {
        payload: Prisma.$AgencyInvitationPayload<ExtArgs>
        fields: Prisma.AgencyInvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AgencyInvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AgencyInvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          findFirst: {
            args: Prisma.AgencyInvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AgencyInvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          findMany: {
            args: Prisma.AgencyInvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>[]
          }
          create: {
            args: Prisma.AgencyInvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          createMany: {
            args: Prisma.AgencyInvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AgencyInvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>[]
          }
          delete: {
            args: Prisma.AgencyInvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          update: {
            args: Prisma.AgencyInvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          deleteMany: {
            args: Prisma.AgencyInvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AgencyInvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AgencyInvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AgencyInvitationPayload>
          }
          aggregate: {
            args: Prisma.AgencyInvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAgencyInvitation>
          }
          groupBy: {
            args: Prisma.AgencyInvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<AgencyInvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.AgencyInvitationCountArgs<ExtArgs>
            result: $Utils.Optional<AgencyInvitationCountAggregateOutputType> | number
          }
        }
      }
      EscortVerification: {
        payload: Prisma.$EscortVerificationPayload<ExtArgs>
        fields: Prisma.EscortVerificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EscortVerificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EscortVerificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          findFirst: {
            args: Prisma.EscortVerificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EscortVerificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          findMany: {
            args: Prisma.EscortVerificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>[]
          }
          create: {
            args: Prisma.EscortVerificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          createMany: {
            args: Prisma.EscortVerificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EscortVerificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>[]
          }
          delete: {
            args: Prisma.EscortVerificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          update: {
            args: Prisma.EscortVerificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          deleteMany: {
            args: Prisma.EscortVerificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EscortVerificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EscortVerificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscortVerificationPayload>
          }
          aggregate: {
            args: Prisma.EscortVerificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEscortVerification>
          }
          groupBy: {
            args: Prisma.EscortVerificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<EscortVerificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.EscortVerificationCountArgs<ExtArgs>
            result: $Utils.Optional<EscortVerificationCountAggregateOutputType> | number
          }
        }
      }
      VerificationPricing: {
        payload: Prisma.$VerificationPricingPayload<ExtArgs>
        fields: Prisma.VerificationPricingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationPricingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationPricingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          findFirst: {
            args: Prisma.VerificationPricingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationPricingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          findMany: {
            args: Prisma.VerificationPricingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>[]
          }
          create: {
            args: Prisma.VerificationPricingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          createMany: {
            args: Prisma.VerificationPricingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationPricingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>[]
          }
          delete: {
            args: Prisma.VerificationPricingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          update: {
            args: Prisma.VerificationPricingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          deleteMany: {
            args: Prisma.VerificationPricingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationPricingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.VerificationPricingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPricingPayload>
          }
          aggregate: {
            args: Prisma.VerificationPricingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationPricing>
          }
          groupBy: {
            args: Prisma.VerificationPricingGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationPricingGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationPricingCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationPricingCountAggregateOutputType> | number
          }
        }
      }
      BoostPricing: {
        payload: Prisma.$BoostPricingPayload<ExtArgs>
        fields: Prisma.BoostPricingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BoostPricingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BoostPricingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          findFirst: {
            args: Prisma.BoostPricingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BoostPricingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          findMany: {
            args: Prisma.BoostPricingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>[]
          }
          create: {
            args: Prisma.BoostPricingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          createMany: {
            args: Prisma.BoostPricingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BoostPricingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>[]
          }
          delete: {
            args: Prisma.BoostPricingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          update: {
            args: Prisma.BoostPricingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          deleteMany: {
            args: Prisma.BoostPricingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BoostPricingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BoostPricingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPricingPayload>
          }
          aggregate: {
            args: Prisma.BoostPricingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBoostPricing>
          }
          groupBy: {
            args: Prisma.BoostPricingGroupByArgs<ExtArgs>
            result: $Utils.Optional<BoostPricingGroupByOutputType>[]
          }
          count: {
            args: Prisma.BoostPricingCountArgs<ExtArgs>
            result: $Utils.Optional<BoostPricingCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      TrendingHistory: {
        payload: Prisma.$TrendingHistoryPayload<ExtArgs>
        fields: Prisma.TrendingHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrendingHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrendingHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          findFirst: {
            args: Prisma.TrendingHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrendingHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          findMany: {
            args: Prisma.TrendingHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>[]
          }
          create: {
            args: Prisma.TrendingHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          createMany: {
            args: Prisma.TrendingHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrendingHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>[]
          }
          delete: {
            args: Prisma.TrendingHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          update: {
            args: Prisma.TrendingHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          deleteMany: {
            args: Prisma.TrendingHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TrendingHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TrendingHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TrendingHistoryPayload>
          }
          aggregate: {
            args: Prisma.TrendingHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTrendingHistory>
          }
          groupBy: {
            args: Prisma.TrendingHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<TrendingHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrendingHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<TrendingHistoryCountAggregateOutputType> | number
          }
        }
      }
      Chat: {
        payload: Prisma.$ChatPayload<ExtArgs>
        fields: Prisma.ChatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          findFirst: {
            args: Prisma.ChatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          findMany: {
            args: Prisma.ChatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>[]
          }
          create: {
            args: Prisma.ChatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          createMany: {
            args: Prisma.ChatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>[]
          }
          delete: {
            args: Prisma.ChatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          update: {
            args: Prisma.ChatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          deleteMany: {
            args: Prisma.ChatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatPayload>
          }
          aggregate: {
            args: Prisma.ChatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat>
          }
          groupBy: {
            args: Prisma.ChatGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatCountArgs<ExtArgs>
            result: $Utils.Optional<ChatCountAggregateOutputType> | number
          }
        }
      }
      ChatMember: {
        payload: Prisma.$ChatMemberPayload<ExtArgs>
        fields: Prisma.ChatMemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatMemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatMemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          findFirst: {
            args: Prisma.ChatMemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatMemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          findMany: {
            args: Prisma.ChatMemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>[]
          }
          create: {
            args: Prisma.ChatMemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          createMany: {
            args: Prisma.ChatMemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ChatMemberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>[]
          }
          delete: {
            args: Prisma.ChatMemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          update: {
            args: Prisma.ChatMemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          deleteMany: {
            args: Prisma.ChatMemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatMemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChatMemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMemberPayload>
          }
          aggregate: {
            args: Prisma.ChatMemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatMember>
          }
          groupBy: {
            args: Prisma.ChatMemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatMemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatMemberCountArgs<ExtArgs>
            result: $Utils.Optional<ChatMemberCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
      Favorite: {
        payload: Prisma.$FavoritePayload<ExtArgs>
        fields: Prisma.FavoriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findFirst: {
            args: Prisma.FavoriteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findMany: {
            args: Prisma.FavoriteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          create: {
            args: Prisma.FavoriteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          createMany: {
            args: Prisma.FavoriteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          delete: {
            args: Prisma.FavoriteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          update: {
            args: Prisma.FavoriteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          deleteMany: {
            args: Prisma.FavoriteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FavoriteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          aggregate: {
            args: Prisma.FavoriteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFavorite>
          }
          groupBy: {
            args: Prisma.FavoriteGroupByArgs<ExtArgs>
            result: $Utils.Optional<FavoriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCountArgs<ExtArgs>
            result: $Utils.Optional<FavoriteCountAggregateOutputType> | number
          }
        }
      }
      Like: {
        payload: Prisma.$LikePayload<ExtArgs>
        fields: Prisma.LikeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LikeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LikeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findFirst: {
            args: Prisma.LikeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LikeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          findMany: {
            args: Prisma.LikeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          create: {
            args: Prisma.LikeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          createMany: {
            args: Prisma.LikeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LikeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>[]
          }
          delete: {
            args: Prisma.LikeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          update: {
            args: Prisma.LikeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          deleteMany: {
            args: Prisma.LikeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LikeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LikeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LikePayload>
          }
          aggregate: {
            args: Prisma.LikeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLike>
          }
          groupBy: {
            args: Prisma.LikeGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikeGroupByOutputType>[]
          }
          count: {
            args: Prisma.LikeCountArgs<ExtArgs>
            result: $Utils.Optional<LikeCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Report: {
        payload: Prisma.$ReportPayload<ExtArgs>
        fields: Prisma.ReportFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReportFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReportFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findFirst: {
            args: Prisma.ReportFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReportFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          findMany: {
            args: Prisma.ReportFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          create: {
            args: Prisma.ReportCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          createMany: {
            args: Prisma.ReportCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReportCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>[]
          }
          delete: {
            args: Prisma.ReportDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          update: {
            args: Prisma.ReportUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          deleteMany: {
            args: Prisma.ReportDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReportUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReportUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReportPayload>
          }
          aggregate: {
            args: Prisma.ReportAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport>
          }
          groupBy: {
            args: Prisma.ReportGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReportCountArgs<ExtArgs>
            result: $Utils.Optional<ReportCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      Boost: {
        payload: Prisma.$BoostPayload<ExtArgs>
        fields: Prisma.BoostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BoostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BoostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          findFirst: {
            args: Prisma.BoostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BoostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          findMany: {
            args: Prisma.BoostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>[]
          }
          create: {
            args: Prisma.BoostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          createMany: {
            args: Prisma.BoostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BoostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>[]
          }
          delete: {
            args: Prisma.BoostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          update: {
            args: Prisma.BoostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          deleteMany: {
            args: Prisma.BoostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BoostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BoostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BoostPayload>
          }
          aggregate: {
            args: Prisma.BoostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBoost>
          }
          groupBy: {
            args: Prisma.BoostGroupByArgs<ExtArgs>
            result: $Utils.Optional<BoostGroupByOutputType>[]
          }
          count: {
            args: Prisma.BoostCountArgs<ExtArgs>
            result: $Utils.Optional<BoostCountAggregateOutputType> | number
          }
        }
      }
      AppMetrics: {
        payload: Prisma.$AppMetricsPayload<ExtArgs>
        fields: Prisma.AppMetricsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AppMetricsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AppMetricsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          findFirst: {
            args: Prisma.AppMetricsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AppMetricsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          findMany: {
            args: Prisma.AppMetricsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>[]
          }
          create: {
            args: Prisma.AppMetricsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          createMany: {
            args: Prisma.AppMetricsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AppMetricsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>[]
          }
          delete: {
            args: Prisma.AppMetricsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          update: {
            args: Prisma.AppMetricsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          deleteMany: {
            args: Prisma.AppMetricsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AppMetricsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AppMetricsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AppMetricsPayload>
          }
          aggregate: {
            args: Prisma.AppMetricsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAppMetrics>
          }
          groupBy: {
            args: Prisma.AppMetricsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AppMetricsGroupByOutputType>[]
          }
          count: {
            args: Prisma.AppMetricsCountArgs<ExtArgs>
            result: $Utils.Optional<AppMetricsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    posts: number
    users: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | LocationCountOutputTypeCountPostsArgs
    users?: boolean | LocationCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    reviewedAgencyRequests: number
    banHistory: number
    boosts: number
    chatMembers: number
    chatRateLimits: number
    deviceTokens: number
    favorites: number
    likes: number
    receivedMessages: number
    sentMessages: number
    notifications: number
    posts: number
    reports: number
    reportsReceived: number
    searchHistory: number
    subscriptions: number
    blockedBy: number
    blockedUsers: number
    receivedInteractions: number
    interactions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewedAgencyRequests?: boolean | UserCountOutputTypeCountReviewedAgencyRequestsArgs
    banHistory?: boolean | UserCountOutputTypeCountBanHistoryArgs
    boosts?: boolean | UserCountOutputTypeCountBoostsArgs
    chatMembers?: boolean | UserCountOutputTypeCountChatMembersArgs
    chatRateLimits?: boolean | UserCountOutputTypeCountChatRateLimitsArgs
    deviceTokens?: boolean | UserCountOutputTypeCountDeviceTokensArgs
    favorites?: boolean | UserCountOutputTypeCountFavoritesArgs
    likes?: boolean | UserCountOutputTypeCountLikesArgs
    receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    posts?: boolean | UserCountOutputTypeCountPostsArgs
    reports?: boolean | UserCountOutputTypeCountReportsArgs
    reportsReceived?: boolean | UserCountOutputTypeCountReportsReceivedArgs
    searchHistory?: boolean | UserCountOutputTypeCountSearchHistoryArgs
    subscriptions?: boolean | UserCountOutputTypeCountSubscriptionsArgs
    blockedBy?: boolean | UserCountOutputTypeCountBlockedByArgs
    blockedUsers?: boolean | UserCountOutputTypeCountBlockedUsersArgs
    receivedInteractions?: boolean | UserCountOutputTypeCountReceivedInteractionsArgs
    interactions?: boolean | UserCountOutputTypeCountInteractionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewedAgencyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyRegistrationRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBanHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BanWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBoostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BoostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChatMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMemberWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountChatRateLimitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatRateLimitWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeviceTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReportsReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSearchHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SearchHistoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBlockedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserBlockWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBlockedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserBlockWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInteractionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInteractionWhereInput
  }


  /**
   * Count Type SubscriptionPlanCountOutputType
   */

  export type SubscriptionPlanCountOutputType = {
    subscriptions: number
  }

  export type SubscriptionPlanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptions?: boolean | SubscriptionPlanCountOutputTypeCountSubscriptionsArgs
  }

  // Custom InputTypes
  /**
   * SubscriptionPlanCountOutputType without action
   */
  export type SubscriptionPlanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlanCountOutputType
     */
    select?: SubscriptionPlanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubscriptionPlanCountOutputType without action
   */
  export type SubscriptionPlanCountOutputTypeCountSubscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
  }


  /**
   * Count Type TagCountOutputType
   */

  export type TagCountOutputType = {
    posts: number
  }

  export type TagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | TagCountOutputTypeCountPostsArgs
  }

  // Custom InputTypes
  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagCountOutputType
     */
    select?: TagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagCountOutputType without action
   */
  export type TagCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
  }


  /**
   * Count Type EscortCountOutputType
   */

  export type EscortCountOutputType = {
    agencyInvitations: number
    agencyMemberships: number
    clientReviews: number
    verifications: number
    reviewsGiven: number
    reviews: number
  }

  export type EscortCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agencyInvitations?: boolean | EscortCountOutputTypeCountAgencyInvitationsArgs
    agencyMemberships?: boolean | EscortCountOutputTypeCountAgencyMembershipsArgs
    clientReviews?: boolean | EscortCountOutputTypeCountClientReviewsArgs
    verifications?: boolean | EscortCountOutputTypeCountVerificationsArgs
    reviewsGiven?: boolean | EscortCountOutputTypeCountReviewsGivenArgs
    reviews?: boolean | EscortCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortCountOutputType
     */
    select?: EscortCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountAgencyInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInvitationWhereInput
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountAgencyMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMembershipWhereInput
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountClientReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientReviewWhereInput
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscortVerificationWhereInput
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountReviewsGivenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * EscortCountOutputType without action
   */
  export type EscortCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }


  /**
   * Count Type AgencyCountOutputType
   */

  export type AgencyCountOutputType = {
    invitations: number
    memberships: number
    verifications: number
  }

  export type AgencyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    invitations?: boolean | AgencyCountOutputTypeCountInvitationsArgs
    memberships?: boolean | AgencyCountOutputTypeCountMembershipsArgs
    verifications?: boolean | AgencyCountOutputTypeCountVerificationsArgs
  }

  // Custom InputTypes
  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyCountOutputType
     */
    select?: AgencyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInvitationWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMembershipWhereInput
  }

  /**
   * AgencyCountOutputType without action
   */
  export type AgencyCountOutputTypeCountVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscortVerificationWhereInput
  }


  /**
   * Count Type ClientCountOutputType
   */

  export type ClientCountOutputType = {
    clientReviews: number
    payments: number
    pointTransactions: number
    pointsHistory: number
    pointsPurchases: number
    premiumActivations: number
  }

  export type ClientCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientReviews?: boolean | ClientCountOutputTypeCountClientReviewsArgs
    payments?: boolean | ClientCountOutputTypeCountPaymentsArgs
    pointTransactions?: boolean | ClientCountOutputTypeCountPointTransactionsArgs
    pointsHistory?: boolean | ClientCountOutputTypeCountPointsHistoryArgs
    pointsPurchases?: boolean | ClientCountOutputTypeCountPointsPurchasesArgs
    premiumActivations?: boolean | ClientCountOutputTypeCountPremiumActivationsArgs
  }

  // Custom InputTypes
  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientCountOutputType
     */
    select?: ClientCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountClientReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientReviewWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPaymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPointTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointTransactionWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPointsHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsHistoryWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPointsPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsPurchaseWhereInput
  }

  /**
   * ClientCountOutputType without action
   */
  export type ClientCountOutputTypeCountPremiumActivationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PremiumActivationWhereInput
  }


  /**
   * Count Type PointsPackageCountOutputType
   */

  export type PointsPackageCountOutputType = {
    purchases: number
  }

  export type PointsPackageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchases?: boolean | PointsPackageCountOutputTypeCountPurchasesArgs
  }

  // Custom InputTypes
  /**
   * PointsPackageCountOutputType without action
   */
  export type PointsPackageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackageCountOutputType
     */
    select?: PointsPackageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PointsPackageCountOutputType without action
   */
  export type PointsPackageCountOutputTypeCountPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsPurchaseWhereInput
  }


  /**
   * Count Type BanCountOutputType
   */

  export type BanCountOutputType = {
    appeals: number
  }

  export type BanCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    appeals?: boolean | BanCountOutputTypeCountAppealsArgs
  }

  // Custom InputTypes
  /**
   * BanCountOutputType without action
   */
  export type BanCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanCountOutputType
     */
    select?: BanCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BanCountOutputType without action
   */
  export type BanCountOutputTypeCountAppealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BanAppealWhereInput
  }


  /**
   * Count Type VerificationPricingCountOutputType
   */

  export type VerificationPricingCountOutputType = {
    verifications: number
  }

  export type VerificationPricingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    verifications?: boolean | VerificationPricingCountOutputTypeCountVerificationsArgs
  }

  // Custom InputTypes
  /**
   * VerificationPricingCountOutputType without action
   */
  export type VerificationPricingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricingCountOutputType
     */
    select?: VerificationPricingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VerificationPricingCountOutputType without action
   */
  export type VerificationPricingCountOutputTypeCountVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscortVerificationWhereInput
  }


  /**
   * Count Type BoostPricingCountOutputType
   */

  export type BoostPricingCountOutputType = {
    boosts: number
  }

  export type BoostPricingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boosts?: boolean | BoostPricingCountOutputTypeCountBoostsArgs
  }

  // Custom InputTypes
  /**
   * BoostPricingCountOutputType without action
   */
  export type BoostPricingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricingCountOutputType
     */
    select?: BoostPricingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BoostPricingCountOutputType without action
   */
  export type BoostPricingCountOutputTypeCountBoostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BoostWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    boosts: number
    favorites: number
    likes: number
    tags: number
    reports: number
    trendingHistory: number
    interactions: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boosts?: boolean | PostCountOutputTypeCountBoostsArgs
    favorites?: boolean | PostCountOutputTypeCountFavoritesArgs
    likes?: boolean | PostCountOutputTypeCountLikesArgs
    tags?: boolean | PostCountOutputTypeCountTagsArgs
    reports?: boolean | PostCountOutputTypeCountReportsArgs
    trendingHistory?: boolean | PostCountOutputTypeCountTrendingHistoryArgs
    interactions?: boolean | PostCountOutputTypeCountInteractionsArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountBoostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BoostWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountFavoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountTagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountTrendingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrendingHistoryWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInteractionWhereInput
  }


  /**
   * Count Type ChatCountOutputType
   */

  export type ChatCountOutputType = {
    members: number
    messages: number
  }

  export type ChatCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | ChatCountOutputTypeCountMembersArgs
    messages?: boolean | ChatCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * ChatCountOutputType without action
   */
  export type ChatCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatCountOutputType
     */
    select?: ChatCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChatCountOutputType without action
   */
  export type ChatCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMemberWhereInput
  }

  /**
   * ChatCountOutputType without action
   */
  export type ChatCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationMinAggregateOutputType = {
    id: string | null
    country: string | null
    state: string | null
    city: string | null
  }

  export type LocationMaxAggregateOutputType = {
    id: string | null
    country: string | null
    state: string | null
    city: string | null
  }

  export type LocationCountAggregateOutputType = {
    id: number
    country: number
    state: number
    city: number
    _all: number
  }


  export type LocationMinAggregateInputType = {
    id?: true
    country?: true
    state?: true
    city?: true
  }

  export type LocationMaxAggregateInputType = {
    id?: true
    country?: true
    state?: true
    city?: true
  }

  export type LocationCountAggregateInputType = {
    id?: true
    country?: true
    state?: true
    city?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Location to aggregate.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type LocationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LocationWhereInput
    orderBy?: LocationOrderByWithAggregationInput | LocationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: LocationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    id: string
    country: string
    state: string | null
    city: string
    _count: LocationCountAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends LocationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type LocationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    country?: boolean
    state?: boolean
    city?: boolean
    posts?: boolean | Location$postsArgs<ExtArgs>
    users?: boolean | Location$usersArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type LocationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    country?: boolean
    state?: boolean
    city?: boolean
  }, ExtArgs["result"]["location"]>

  export type LocationSelectScalar = {
    id?: boolean
    country?: boolean
    state?: boolean
    city?: boolean
  }

  export type LocationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | Location$postsArgs<ExtArgs>
    users?: boolean | Location$usersArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LocationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $LocationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Location"
    objects: {
      posts: Prisma.$PostPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      country: string
      state: string | null
      city: string
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type LocationGetPayload<S extends boolean | null | undefined | LocationDefaultArgs> = $Result.GetResult<Prisma.$LocationPayload, S>

  type LocationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LocationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface LocationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Location'], meta: { name: 'Location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {LocationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LocationFindUniqueArgs>(args: SelectSubset<T, LocationFindUniqueArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LocationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LocationFindUniqueOrThrowArgs>(args: SelectSubset<T, LocationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LocationFindFirstArgs>(args?: SelectSubset<T, LocationFindFirstArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LocationFindFirstOrThrowArgs>(args?: SelectSubset<T, LocationFindFirstOrThrowArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationWithIdOnly = await prisma.location.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LocationFindManyArgs>(args?: SelectSubset<T, LocationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Location.
     * @param {LocationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends LocationCreateArgs>(args: SelectSubset<T, LocationCreateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Locations.
     * @param {LocationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LocationCreateManyArgs>(args?: SelectSubset<T, LocationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {LocationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LocationCreateManyAndReturnArgs>(args?: SelectSubset<T, LocationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Location.
     * @param {LocationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends LocationDeleteArgs>(args: SelectSubset<T, LocationDeleteArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Location.
     * @param {LocationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LocationUpdateArgs>(args: SelectSubset<T, LocationUpdateArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Locations.
     * @param {LocationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LocationDeleteManyArgs>(args?: SelectSubset<T, LocationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LocationUpdateManyArgs>(args: SelectSubset<T, LocationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Location.
     * @param {LocationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends LocationUpsertArgs>(args: SelectSubset<T, LocationUpsertArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends LocationCountArgs>(
      args?: Subset<T, LocationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationGroupByArgs['orderBy'] }
        : { orderBy?: LocationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Location model
   */
  readonly fields: LocationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LocationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends Location$postsArgs<ExtArgs> = {}>(args?: Subset<T, Location$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany"> | Null>
    users<T extends Location$usersArgs<ExtArgs> = {}>(args?: Subset<T, Location$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Location model
   */ 
  interface LocationFieldRefs {
    readonly id: FieldRef<"Location", 'String'>
    readonly country: FieldRef<"Location", 'String'>
    readonly state: FieldRef<"Location", 'String'>
    readonly city: FieldRef<"Location", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Location findUnique
   */
  export type LocationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findUniqueOrThrow
   */
  export type LocationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location findFirst
   */
  export type LocationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findFirstOrThrow
   */
  export type LocationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Location to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location findMany
   */
  export type LocationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter, which Locations to fetch.
     */
    where?: LocationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Locations to fetch.
     */
    orderBy?: LocationOrderByWithRelationInput | LocationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Locations.
     */
    cursor?: LocationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * Location create
   */
  export type LocationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to create a Location.
     */
    data: XOR<LocationCreateInput, LocationUncheckedCreateInput>
  }

  /**
   * Location createMany
   */
  export type LocationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location createManyAndReturn
   */
  export type LocationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Locations.
     */
    data: LocationCreateManyInput | LocationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Location update
   */
  export type LocationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The data needed to update a Location.
     */
    data: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
    /**
     * Choose, which Location to update.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location updateMany
   */
  export type LocationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Locations.
     */
    data: XOR<LocationUpdateManyMutationInput, LocationUncheckedUpdateManyInput>
    /**
     * Filter which Locations to update
     */
    where?: LocationWhereInput
  }

  /**
   * Location upsert
   */
  export type LocationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * The filter to search for the Location to update in case it exists.
     */
    where: LocationWhereUniqueInput
    /**
     * In case the Location found by the `where` argument doesn't exist, create a new Location with this data.
     */
    create: XOR<LocationCreateInput, LocationUncheckedCreateInput>
    /**
     * In case the Location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LocationUpdateInput, LocationUncheckedUpdateInput>
  }

  /**
   * Location delete
   */
  export type LocationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    /**
     * Filter which Location to delete.
     */
    where: LocationWhereUniqueInput
  }

  /**
   * Location deleteMany
   */
  export type LocationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Locations to delete
     */
    where?: LocationWhereInput
  }

  /**
   * Location.posts
   */
  export type Location$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Location.users
   */
  export type Location$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Location without action
   */
  export type LocationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    profileViews: number | null
  }

  export type UserSumAggregateOutputType = {
    profileViews: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    username: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    avatar: string | null
    phone: string | null
    bio: string | null
    website: string | null
    userType: $Enums.UserType | null
    accountStatus: $Enums.AccountStatus | null
    canLogin: boolean | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    profileViews: number | null
    passwordResetToken: string | null
    passwordResetExpiry: Date | null
    emailVerificationToken: string | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    locationId: string | null
    timezone: string | null
    language: string | null
    lastLoginIP: string | null
    lastDailyReset: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLogin: Date | null
    lastActiveAt: Date | null
    deletedAt: Date | null
    deletionReason: string | null
    googleId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    username: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    avatar: string | null
    phone: string | null
    bio: string | null
    website: string | null
    userType: $Enums.UserType | null
    accountStatus: $Enums.AccountStatus | null
    canLogin: boolean | null
    isActive: boolean | null
    isBanned: boolean | null
    banReason: string | null
    profileViews: number | null
    passwordResetToken: string | null
    passwordResetExpiry: Date | null
    emailVerificationToken: string | null
    emailVerified: boolean | null
    emailVerifiedAt: Date | null
    locationId: string | null
    timezone: string | null
    language: string | null
    lastLoginIP: string | null
    lastDailyReset: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    lastLogin: Date | null
    lastActiveAt: Date | null
    deletedAt: Date | null
    deletionReason: string | null
    googleId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    username: number
    firstName: number
    lastName: number
    password: number
    avatar: number
    phone: number
    bio: number
    website: number
    userType: number
    accountStatus: number
    canLogin: number
    isActive: number
    isBanned: number
    banReason: number
    profileViews: number
    passwordResetToken: number
    passwordResetExpiry: number
    emailVerificationToken: number
    emailVerified: number
    emailVerifiedAt: number
    locationId: number
    timezone: number
    language: number
    lastLoginIP: number
    lastDailyReset: number
    createdAt: number
    updatedAt: number
    lastLogin: number
    lastActiveAt: number
    deletedAt: number
    deletionReason: number
    googleId: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    profileViews?: true
  }

  export type UserSumAggregateInputType = {
    profileViews?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    username?: true
    firstName?: true
    lastName?: true
    password?: true
    avatar?: true
    phone?: true
    bio?: true
    website?: true
    userType?: true
    accountStatus?: true
    canLogin?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    profileViews?: true
    passwordResetToken?: true
    passwordResetExpiry?: true
    emailVerificationToken?: true
    emailVerified?: true
    emailVerifiedAt?: true
    locationId?: true
    timezone?: true
    language?: true
    lastLoginIP?: true
    lastDailyReset?: true
    createdAt?: true
    updatedAt?: true
    lastLogin?: true
    lastActiveAt?: true
    deletedAt?: true
    deletionReason?: true
    googleId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    username?: true
    firstName?: true
    lastName?: true
    password?: true
    avatar?: true
    phone?: true
    bio?: true
    website?: true
    userType?: true
    accountStatus?: true
    canLogin?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    profileViews?: true
    passwordResetToken?: true
    passwordResetExpiry?: true
    emailVerificationToken?: true
    emailVerified?: true
    emailVerifiedAt?: true
    locationId?: true
    timezone?: true
    language?: true
    lastLoginIP?: true
    lastDailyReset?: true
    createdAt?: true
    updatedAt?: true
    lastLogin?: true
    lastActiveAt?: true
    deletedAt?: true
    deletionReason?: true
    googleId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    username?: true
    firstName?: true
    lastName?: true
    password?: true
    avatar?: true
    phone?: true
    bio?: true
    website?: true
    userType?: true
    accountStatus?: true
    canLogin?: true
    isActive?: true
    isBanned?: true
    banReason?: true
    profileViews?: true
    passwordResetToken?: true
    passwordResetExpiry?: true
    emailVerificationToken?: true
    emailVerified?: true
    emailVerifiedAt?: true
    locationId?: true
    timezone?: true
    language?: true
    lastLoginIP?: true
    lastDailyReset?: true
    createdAt?: true
    updatedAt?: true
    lastLogin?: true
    lastActiveAt?: true
    deletedAt?: true
    deletionReason?: true
    googleId?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar: string | null
    phone: string | null
    bio: string | null
    website: string | null
    userType: $Enums.UserType
    accountStatus: $Enums.AccountStatus
    canLogin: boolean
    isActive: boolean
    isBanned: boolean
    banReason: string | null
    profileViews: number
    passwordResetToken: string | null
    passwordResetExpiry: Date | null
    emailVerificationToken: string | null
    emailVerified: boolean
    emailVerifiedAt: Date | null
    locationId: string | null
    timezone: string | null
    language: string | null
    lastLoginIP: string | null
    lastDailyReset: Date
    createdAt: Date
    updatedAt: Date
    lastLogin: Date | null
    lastActiveAt: Date | null
    deletedAt: Date | null
    deletionReason: string | null
    googleId: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    avatar?: boolean
    phone?: boolean
    bio?: boolean
    website?: boolean
    userType?: boolean
    accountStatus?: boolean
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    profileViews?: boolean
    passwordResetToken?: boolean
    passwordResetExpiry?: boolean
    emailVerificationToken?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    locationId?: boolean
    timezone?: boolean
    language?: boolean
    lastLoginIP?: boolean
    lastDailyReset?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLogin?: boolean
    lastActiveAt?: boolean
    deletedAt?: boolean
    deletionReason?: boolean
    googleId?: boolean
    admin?: boolean | User$adminArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    reviewedAgencyRequests?: boolean | User$reviewedAgencyRequestsArgs<ExtArgs>
    agencyRegistrationRequest?: boolean | User$agencyRegistrationRequestArgs<ExtArgs>
    banHistory?: boolean | User$banHistoryArgs<ExtArgs>
    boosts?: boolean | User$boostsArgs<ExtArgs>
    chatMembers?: boolean | User$chatMembersArgs<ExtArgs>
    chatRateLimits?: boolean | User$chatRateLimitsArgs<ExtArgs>
    client?: boolean | User$clientArgs<ExtArgs>
    deviceTokens?: boolean | User$deviceTokensArgs<ExtArgs>
    escort?: boolean | User$escortArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    identityVerification?: boolean | User$identityVerificationArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    reportsReceived?: boolean | User$reportsReceivedArgs<ExtArgs>
    searchHistory?: boolean | User$searchHistoryArgs<ExtArgs>
    subscriptions?: boolean | User$subscriptionsArgs<ExtArgs>
    blockedBy?: boolean | User$blockedByArgs<ExtArgs>
    blockedUsers?: boolean | User$blockedUsersArgs<ExtArgs>
    receivedInteractions?: boolean | User$receivedInteractionsArgs<ExtArgs>
    interactions?: boolean | User$interactionsArgs<ExtArgs>
    reputation?: boolean | User$reputationArgs<ExtArgs>
    settings?: boolean | User$settingsArgs<ExtArgs>
    location?: boolean | User$locationArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    avatar?: boolean
    phone?: boolean
    bio?: boolean
    website?: boolean
    userType?: boolean
    accountStatus?: boolean
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    profileViews?: boolean
    passwordResetToken?: boolean
    passwordResetExpiry?: boolean
    emailVerificationToken?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    locationId?: boolean
    timezone?: boolean
    language?: boolean
    lastLoginIP?: boolean
    lastDailyReset?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLogin?: boolean
    lastActiveAt?: boolean
    deletedAt?: boolean
    deletionReason?: boolean
    googleId?: boolean
    location?: boolean | User$locationArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    username?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    avatar?: boolean
    phone?: boolean
    bio?: boolean
    website?: boolean
    userType?: boolean
    accountStatus?: boolean
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: boolean
    profileViews?: boolean
    passwordResetToken?: boolean
    passwordResetExpiry?: boolean
    emailVerificationToken?: boolean
    emailVerified?: boolean
    emailVerifiedAt?: boolean
    locationId?: boolean
    timezone?: boolean
    language?: boolean
    lastLoginIP?: boolean
    lastDailyReset?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastLogin?: boolean
    lastActiveAt?: boolean
    deletedAt?: boolean
    deletionReason?: boolean
    googleId?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | User$adminArgs<ExtArgs>
    agency?: boolean | User$agencyArgs<ExtArgs>
    reviewedAgencyRequests?: boolean | User$reviewedAgencyRequestsArgs<ExtArgs>
    agencyRegistrationRequest?: boolean | User$agencyRegistrationRequestArgs<ExtArgs>
    banHistory?: boolean | User$banHistoryArgs<ExtArgs>
    boosts?: boolean | User$boostsArgs<ExtArgs>
    chatMembers?: boolean | User$chatMembersArgs<ExtArgs>
    chatRateLimits?: boolean | User$chatRateLimitsArgs<ExtArgs>
    client?: boolean | User$clientArgs<ExtArgs>
    deviceTokens?: boolean | User$deviceTokensArgs<ExtArgs>
    escort?: boolean | User$escortArgs<ExtArgs>
    favorites?: boolean | User$favoritesArgs<ExtArgs>
    identityVerification?: boolean | User$identityVerificationArgs<ExtArgs>
    likes?: boolean | User$likesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    reports?: boolean | User$reportsArgs<ExtArgs>
    reportsReceived?: boolean | User$reportsReceivedArgs<ExtArgs>
    searchHistory?: boolean | User$searchHistoryArgs<ExtArgs>
    subscriptions?: boolean | User$subscriptionsArgs<ExtArgs>
    blockedBy?: boolean | User$blockedByArgs<ExtArgs>
    blockedUsers?: boolean | User$blockedUsersArgs<ExtArgs>
    receivedInteractions?: boolean | User$receivedInteractionsArgs<ExtArgs>
    interactions?: boolean | User$interactionsArgs<ExtArgs>
    reputation?: boolean | User$reputationArgs<ExtArgs>
    settings?: boolean | User$settingsArgs<ExtArgs>
    location?: boolean | User$locationArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | User$locationArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      admin: Prisma.$AdminPayload<ExtArgs> | null
      agency: Prisma.$AgencyPayload<ExtArgs> | null
      reviewedAgencyRequests: Prisma.$AgencyRegistrationRequestPayload<ExtArgs>[]
      agencyRegistrationRequest: Prisma.$AgencyRegistrationRequestPayload<ExtArgs> | null
      banHistory: Prisma.$BanPayload<ExtArgs>[]
      boosts: Prisma.$BoostPayload<ExtArgs>[]
      chatMembers: Prisma.$ChatMemberPayload<ExtArgs>[]
      chatRateLimits: Prisma.$ChatRateLimitPayload<ExtArgs>[]
      client: Prisma.$ClientPayload<ExtArgs> | null
      deviceTokens: Prisma.$DeviceTokenPayload<ExtArgs>[]
      escort: Prisma.$EscortPayload<ExtArgs> | null
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      identityVerification: Prisma.$IdentityVerificationPayload<ExtArgs> | null
      likes: Prisma.$LikePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      posts: Prisma.$PostPayload<ExtArgs>[]
      reports: Prisma.$ReportPayload<ExtArgs>[]
      reportsReceived: Prisma.$ReportPayload<ExtArgs>[]
      searchHistory: Prisma.$SearchHistoryPayload<ExtArgs>[]
      subscriptions: Prisma.$SubscriptionPayload<ExtArgs>[]
      blockedBy: Prisma.$UserBlockPayload<ExtArgs>[]
      blockedUsers: Prisma.$UserBlockPayload<ExtArgs>[]
      receivedInteractions: Prisma.$UserInteractionPayload<ExtArgs>[]
      interactions: Prisma.$UserInteractionPayload<ExtArgs>[]
      reputation: Prisma.$UserReputationPayload<ExtArgs> | null
      settings: Prisma.$UserSettingsPayload<ExtArgs> | null
      location: Prisma.$LocationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      username: string
      firstName: string
      lastName: string
      password: string
      avatar: string | null
      phone: string | null
      bio: string | null
      website: string | null
      userType: $Enums.UserType
      accountStatus: $Enums.AccountStatus
      canLogin: boolean
      isActive: boolean
      isBanned: boolean
      banReason: string | null
      profileViews: number
      passwordResetToken: string | null
      passwordResetExpiry: Date | null
      emailVerificationToken: string | null
      emailVerified: boolean
      emailVerifiedAt: Date | null
      locationId: string | null
      timezone: string | null
      language: string | null
      lastLoginIP: string | null
      lastDailyReset: Date
      createdAt: Date
      updatedAt: Date
      lastLogin: Date | null
      lastActiveAt: Date | null
      deletedAt: Date | null
      deletionReason: string | null
      googleId: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends User$adminArgs<ExtArgs> = {}>(args?: Subset<T, User$adminArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    agency<T extends User$agencyArgs<ExtArgs> = {}>(args?: Subset<T, User$agencyArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    reviewedAgencyRequests<T extends User$reviewedAgencyRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewedAgencyRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findMany"> | Null>
    agencyRegistrationRequest<T extends User$agencyRegistrationRequestArgs<ExtArgs> = {}>(args?: Subset<T, User$agencyRegistrationRequestArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    banHistory<T extends User$banHistoryArgs<ExtArgs> = {}>(args?: Subset<T, User$banHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findMany"> | Null>
    boosts<T extends User$boostsArgs<ExtArgs> = {}>(args?: Subset<T, User$boostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findMany"> | Null>
    chatMembers<T extends User$chatMembersArgs<ExtArgs> = {}>(args?: Subset<T, User$chatMembersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findMany"> | Null>
    chatRateLimits<T extends User$chatRateLimitsArgs<ExtArgs> = {}>(args?: Subset<T, User$chatRateLimitsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findMany"> | Null>
    client<T extends User$clientArgs<ExtArgs> = {}>(args?: Subset<T, User$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    deviceTokens<T extends User$deviceTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$deviceTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findMany"> | Null>
    escort<T extends User$escortArgs<ExtArgs> = {}>(args?: Subset<T, User$escortArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    favorites<T extends User$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, User$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany"> | Null>
    identityVerification<T extends User$identityVerificationArgs<ExtArgs> = {}>(args?: Subset<T, User$identityVerificationArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    likes<T extends User$likesArgs<ExtArgs> = {}>(args?: Subset<T, User$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany"> | Null>
    receivedMessages<T extends User$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany"> | Null>
    posts<T extends User$postsArgs<ExtArgs> = {}>(args?: Subset<T, User$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany"> | Null>
    reports<T extends User$reportsArgs<ExtArgs> = {}>(args?: Subset<T, User$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany"> | Null>
    reportsReceived<T extends User$reportsReceivedArgs<ExtArgs> = {}>(args?: Subset<T, User$reportsReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany"> | Null>
    searchHistory<T extends User$searchHistoryArgs<ExtArgs> = {}>(args?: Subset<T, User$searchHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    subscriptions<T extends User$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany"> | Null>
    blockedBy<T extends User$blockedByArgs<ExtArgs> = {}>(args?: Subset<T, User$blockedByArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findMany"> | Null>
    blockedUsers<T extends User$blockedUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$blockedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findMany"> | Null>
    receivedInteractions<T extends User$receivedInteractionsArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedInteractionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    interactions<T extends User$interactionsArgs<ExtArgs> = {}>(args?: Subset<T, User$interactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    reputation<T extends User$reputationArgs<ExtArgs> = {}>(args?: Subset<T, User$reputationArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    settings<T extends User$settingsArgs<ExtArgs> = {}>(args?: Subset<T, User$settingsArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    location<T extends User$locationArgs<ExtArgs> = {}>(args?: Subset<T, User$locationArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly bio: FieldRef<"User", 'String'>
    readonly website: FieldRef<"User", 'String'>
    readonly userType: FieldRef<"User", 'UserType'>
    readonly accountStatus: FieldRef<"User", 'AccountStatus'>
    readonly canLogin: FieldRef<"User", 'Boolean'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly isBanned: FieldRef<"User", 'Boolean'>
    readonly banReason: FieldRef<"User", 'String'>
    readonly profileViews: FieldRef<"User", 'Int'>
    readonly passwordResetToken: FieldRef<"User", 'String'>
    readonly passwordResetExpiry: FieldRef<"User", 'DateTime'>
    readonly emailVerificationToken: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly emailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly locationId: FieldRef<"User", 'String'>
    readonly timezone: FieldRef<"User", 'String'>
    readonly language: FieldRef<"User", 'String'>
    readonly lastLoginIP: FieldRef<"User", 'String'>
    readonly lastDailyReset: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly lastLogin: FieldRef<"User", 'DateTime'>
    readonly lastActiveAt: FieldRef<"User", 'DateTime'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly deletionReason: FieldRef<"User", 'String'>
    readonly googleId: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.admin
   */
  export type User$adminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    where?: AdminWhereInput
  }

  /**
   * User.agency
   */
  export type User$agencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    where?: AgencyWhereInput
  }

  /**
   * User.reviewedAgencyRequests
   */
  export type User$reviewedAgencyRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    where?: AgencyRegistrationRequestWhereInput
    orderBy?: AgencyRegistrationRequestOrderByWithRelationInput | AgencyRegistrationRequestOrderByWithRelationInput[]
    cursor?: AgencyRegistrationRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyRegistrationRequestScalarFieldEnum | AgencyRegistrationRequestScalarFieldEnum[]
  }

  /**
   * User.agencyRegistrationRequest
   */
  export type User$agencyRegistrationRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    where?: AgencyRegistrationRequestWhereInput
  }

  /**
   * User.banHistory
   */
  export type User$banHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    where?: BanWhereInput
    orderBy?: BanOrderByWithRelationInput | BanOrderByWithRelationInput[]
    cursor?: BanWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BanScalarFieldEnum | BanScalarFieldEnum[]
  }

  /**
   * User.boosts
   */
  export type User$boostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    where?: BoostWhereInput
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    cursor?: BoostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * User.chatMembers
   */
  export type User$chatMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    where?: ChatMemberWhereInput
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    cursor?: ChatMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatMemberScalarFieldEnum | ChatMemberScalarFieldEnum[]
  }

  /**
   * User.chatRateLimits
   */
  export type User$chatRateLimitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    where?: ChatRateLimitWhereInput
    orderBy?: ChatRateLimitOrderByWithRelationInput | ChatRateLimitOrderByWithRelationInput[]
    cursor?: ChatRateLimitWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatRateLimitScalarFieldEnum | ChatRateLimitScalarFieldEnum[]
  }

  /**
   * User.client
   */
  export type User$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * User.deviceTokens
   */
  export type User$deviceTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    where?: DeviceTokenWhereInput
    orderBy?: DeviceTokenOrderByWithRelationInput | DeviceTokenOrderByWithRelationInput[]
    cursor?: DeviceTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeviceTokenScalarFieldEnum | DeviceTokenScalarFieldEnum[]
  }

  /**
   * User.escort
   */
  export type User$escortArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    where?: EscortWhereInput
  }

  /**
   * User.favorites
   */
  export type User$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * User.identityVerification
   */
  export type User$identityVerificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    where?: IdentityVerificationWhereInput
  }

  /**
   * User.likes
   */
  export type User$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * User.receivedMessages
   */
  export type User$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.posts
   */
  export type User$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * User.reports
   */
  export type User$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.reportsReceived
   */
  export type User$reportsReceivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * User.searchHistory
   */
  export type User$searchHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    where?: SearchHistoryWhereInput
    orderBy?: SearchHistoryOrderByWithRelationInput | SearchHistoryOrderByWithRelationInput[]
    cursor?: SearchHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SearchHistoryScalarFieldEnum | SearchHistoryScalarFieldEnum[]
  }

  /**
   * User.subscriptions
   */
  export type User$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    cursor?: SubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * User.blockedBy
   */
  export type User$blockedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    where?: UserBlockWhereInput
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    cursor?: UserBlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserBlockScalarFieldEnum | UserBlockScalarFieldEnum[]
  }

  /**
   * User.blockedUsers
   */
  export type User$blockedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    where?: UserBlockWhereInput
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    cursor?: UserBlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserBlockScalarFieldEnum | UserBlockScalarFieldEnum[]
  }

  /**
   * User.receivedInteractions
   */
  export type User$receivedInteractionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    where?: UserInteractionWhereInput
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    cursor?: UserInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * User.interactions
   */
  export type User$interactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    where?: UserInteractionWhereInput
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    cursor?: UserInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * User.reputation
   */
  export type User$reputationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    where?: UserReputationWhereInput
  }

  /**
   * User.settings
   */
  export type User$settingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    where?: UserSettingsWhereInput
  }

  /**
   * User.location
   */
  export type User$locationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model AgencyRegistrationRequest
   */

  export type AggregateAgencyRegistrationRequest = {
    _count: AgencyRegistrationRequestCountAggregateOutputType | null
    _min: AgencyRegistrationRequestMinAggregateOutputType | null
    _max: AgencyRegistrationRequestMaxAggregateOutputType | null
  }

  export type AgencyRegistrationRequestMinAggregateOutputType = {
    id: string | null
    userId: string | null
    fullName: string | null
    documentNumber: string | null
    businessPhone: string | null
    businessEmail: string | null
    documentFrontImage: string | null
    documentBackImage: string | null
    reviewNotes: string | null
    rejectionReason: string | null
    submittedAt: Date | null
    reviewedAt: Date | null
    reviewedBy: string | null
    status: $Enums.AgencyRequestStatus | null
  }

  export type AgencyRegistrationRequestMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    fullName: string | null
    documentNumber: string | null
    businessPhone: string | null
    businessEmail: string | null
    documentFrontImage: string | null
    documentBackImage: string | null
    reviewNotes: string | null
    rejectionReason: string | null
    submittedAt: Date | null
    reviewedAt: Date | null
    reviewedBy: string | null
    status: $Enums.AgencyRequestStatus | null
  }

  export type AgencyRegistrationRequestCountAggregateOutputType = {
    id: number
    userId: number
    fullName: number
    documentNumber: number
    businessPhone: number
    businessEmail: number
    documentFrontImage: number
    documentBackImage: number
    reviewNotes: number
    rejectionReason: number
    submittedAt: number
    reviewedAt: number
    reviewedBy: number
    status: number
    _all: number
  }


  export type AgencyRegistrationRequestMinAggregateInputType = {
    id?: true
    userId?: true
    fullName?: true
    documentNumber?: true
    businessPhone?: true
    businessEmail?: true
    documentFrontImage?: true
    documentBackImage?: true
    reviewNotes?: true
    rejectionReason?: true
    submittedAt?: true
    reviewedAt?: true
    reviewedBy?: true
    status?: true
  }

  export type AgencyRegistrationRequestMaxAggregateInputType = {
    id?: true
    userId?: true
    fullName?: true
    documentNumber?: true
    businessPhone?: true
    businessEmail?: true
    documentFrontImage?: true
    documentBackImage?: true
    reviewNotes?: true
    rejectionReason?: true
    submittedAt?: true
    reviewedAt?: true
    reviewedBy?: true
    status?: true
  }

  export type AgencyRegistrationRequestCountAggregateInputType = {
    id?: true
    userId?: true
    fullName?: true
    documentNumber?: true
    businessPhone?: true
    businessEmail?: true
    documentFrontImage?: true
    documentBackImage?: true
    reviewNotes?: true
    rejectionReason?: true
    submittedAt?: true
    reviewedAt?: true
    reviewedBy?: true
    status?: true
    _all?: true
  }

  export type AgencyRegistrationRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyRegistrationRequest to aggregate.
     */
    where?: AgencyRegistrationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRegistrationRequests to fetch.
     */
    orderBy?: AgencyRegistrationRequestOrderByWithRelationInput | AgencyRegistrationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyRegistrationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRegistrationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRegistrationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyRegistrationRequests
    **/
    _count?: true | AgencyRegistrationRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyRegistrationRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyRegistrationRequestMaxAggregateInputType
  }

  export type GetAgencyRegistrationRequestAggregateType<T extends AgencyRegistrationRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyRegistrationRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyRegistrationRequest[P]>
      : GetScalarType<T[P], AggregateAgencyRegistrationRequest[P]>
  }




  export type AgencyRegistrationRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyRegistrationRequestWhereInput
    orderBy?: AgencyRegistrationRequestOrderByWithAggregationInput | AgencyRegistrationRequestOrderByWithAggregationInput[]
    by: AgencyRegistrationRequestScalarFieldEnum[] | AgencyRegistrationRequestScalarFieldEnum
    having?: AgencyRegistrationRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyRegistrationRequestCountAggregateInputType | true
    _min?: AgencyRegistrationRequestMinAggregateInputType
    _max?: AgencyRegistrationRequestMaxAggregateInputType
  }

  export type AgencyRegistrationRequestGroupByOutputType = {
    id: string
    userId: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes: string | null
    rejectionReason: string | null
    submittedAt: Date
    reviewedAt: Date | null
    reviewedBy: string | null
    status: $Enums.AgencyRequestStatus
    _count: AgencyRegistrationRequestCountAggregateOutputType | null
    _min: AgencyRegistrationRequestMinAggregateOutputType | null
    _max: AgencyRegistrationRequestMaxAggregateOutputType | null
  }

  type GetAgencyRegistrationRequestGroupByPayload<T extends AgencyRegistrationRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyRegistrationRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyRegistrationRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyRegistrationRequestGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyRegistrationRequestGroupByOutputType[P]>
        }
      >
    >


  export type AgencyRegistrationRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fullName?: boolean
    documentNumber?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    documentFrontImage?: boolean
    documentBackImage?: boolean
    reviewNotes?: boolean
    rejectionReason?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    status?: boolean
    reviewer?: boolean | AgencyRegistrationRequest$reviewerArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyRegistrationRequest"]>

  export type AgencyRegistrationRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fullName?: boolean
    documentNumber?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    documentFrontImage?: boolean
    documentBackImage?: boolean
    reviewNotes?: boolean
    rejectionReason?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    status?: boolean
    reviewer?: boolean | AgencyRegistrationRequest$reviewerArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyRegistrationRequest"]>

  export type AgencyRegistrationRequestSelectScalar = {
    id?: boolean
    userId?: boolean
    fullName?: boolean
    documentNumber?: boolean
    businessPhone?: boolean
    businessEmail?: boolean
    documentFrontImage?: boolean
    documentBackImage?: boolean
    reviewNotes?: boolean
    rejectionReason?: boolean
    submittedAt?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    status?: boolean
  }

  export type AgencyRegistrationRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewer?: boolean | AgencyRegistrationRequest$reviewerArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AgencyRegistrationRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviewer?: boolean | AgencyRegistrationRequest$reviewerArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AgencyRegistrationRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyRegistrationRequest"
    objects: {
      reviewer: Prisma.$UserPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      fullName: string
      documentNumber: string
      businessPhone: string
      businessEmail: string
      documentFrontImage: string
      documentBackImage: string
      reviewNotes: string | null
      rejectionReason: string | null
      submittedAt: Date
      reviewedAt: Date | null
      reviewedBy: string | null
      status: $Enums.AgencyRequestStatus
    }, ExtArgs["result"]["agencyRegistrationRequest"]>
    composites: {}
  }

  type AgencyRegistrationRequestGetPayload<S extends boolean | null | undefined | AgencyRegistrationRequestDefaultArgs> = $Result.GetResult<Prisma.$AgencyRegistrationRequestPayload, S>

  type AgencyRegistrationRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgencyRegistrationRequestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgencyRegistrationRequestCountAggregateInputType | true
    }

  export interface AgencyRegistrationRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyRegistrationRequest'], meta: { name: 'AgencyRegistrationRequest' } }
    /**
     * Find zero or one AgencyRegistrationRequest that matches the filter.
     * @param {AgencyRegistrationRequestFindUniqueArgs} args - Arguments to find a AgencyRegistrationRequest
     * @example
     * // Get one AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyRegistrationRequestFindUniqueArgs>(args: SelectSubset<T, AgencyRegistrationRequestFindUniqueArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgencyRegistrationRequest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgencyRegistrationRequestFindUniqueOrThrowArgs} args - Arguments to find a AgencyRegistrationRequest
     * @example
     * // Get one AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyRegistrationRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyRegistrationRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgencyRegistrationRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestFindFirstArgs} args - Arguments to find a AgencyRegistrationRequest
     * @example
     * // Get one AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyRegistrationRequestFindFirstArgs>(args?: SelectSubset<T, AgencyRegistrationRequestFindFirstArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgencyRegistrationRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestFindFirstOrThrowArgs} args - Arguments to find a AgencyRegistrationRequest
     * @example
     * // Get one AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyRegistrationRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyRegistrationRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgencyRegistrationRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyRegistrationRequests
     * const agencyRegistrationRequests = await prisma.agencyRegistrationRequest.findMany()
     * 
     * // Get first 10 AgencyRegistrationRequests
     * const agencyRegistrationRequests = await prisma.agencyRegistrationRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyRegistrationRequestWithIdOnly = await prisma.agencyRegistrationRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyRegistrationRequestFindManyArgs>(args?: SelectSubset<T, AgencyRegistrationRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgencyRegistrationRequest.
     * @param {AgencyRegistrationRequestCreateArgs} args - Arguments to create a AgencyRegistrationRequest.
     * @example
     * // Create one AgencyRegistrationRequest
     * const AgencyRegistrationRequest = await prisma.agencyRegistrationRequest.create({
     *   data: {
     *     // ... data to create a AgencyRegistrationRequest
     *   }
     * })
     * 
     */
    create<T extends AgencyRegistrationRequestCreateArgs>(args: SelectSubset<T, AgencyRegistrationRequestCreateArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgencyRegistrationRequests.
     * @param {AgencyRegistrationRequestCreateManyArgs} args - Arguments to create many AgencyRegistrationRequests.
     * @example
     * // Create many AgencyRegistrationRequests
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyRegistrationRequestCreateManyArgs>(args?: SelectSubset<T, AgencyRegistrationRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyRegistrationRequests and returns the data saved in the database.
     * @param {AgencyRegistrationRequestCreateManyAndReturnArgs} args - Arguments to create many AgencyRegistrationRequests.
     * @example
     * // Create many AgencyRegistrationRequests
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyRegistrationRequests and only return the `id`
     * const agencyRegistrationRequestWithIdOnly = await prisma.agencyRegistrationRequest.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyRegistrationRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyRegistrationRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgencyRegistrationRequest.
     * @param {AgencyRegistrationRequestDeleteArgs} args - Arguments to delete one AgencyRegistrationRequest.
     * @example
     * // Delete one AgencyRegistrationRequest
     * const AgencyRegistrationRequest = await prisma.agencyRegistrationRequest.delete({
     *   where: {
     *     // ... filter to delete one AgencyRegistrationRequest
     *   }
     * })
     * 
     */
    delete<T extends AgencyRegistrationRequestDeleteArgs>(args: SelectSubset<T, AgencyRegistrationRequestDeleteArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgencyRegistrationRequest.
     * @param {AgencyRegistrationRequestUpdateArgs} args - Arguments to update one AgencyRegistrationRequest.
     * @example
     * // Update one AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyRegistrationRequestUpdateArgs>(args: SelectSubset<T, AgencyRegistrationRequestUpdateArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgencyRegistrationRequests.
     * @param {AgencyRegistrationRequestDeleteManyArgs} args - Arguments to filter AgencyRegistrationRequests to delete.
     * @example
     * // Delete a few AgencyRegistrationRequests
     * const { count } = await prisma.agencyRegistrationRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyRegistrationRequestDeleteManyArgs>(args?: SelectSubset<T, AgencyRegistrationRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyRegistrationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyRegistrationRequests
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyRegistrationRequestUpdateManyArgs>(args: SelectSubset<T, AgencyRegistrationRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgencyRegistrationRequest.
     * @param {AgencyRegistrationRequestUpsertArgs} args - Arguments to update or create a AgencyRegistrationRequest.
     * @example
     * // Update or create a AgencyRegistrationRequest
     * const agencyRegistrationRequest = await prisma.agencyRegistrationRequest.upsert({
     *   create: {
     *     // ... data to create a AgencyRegistrationRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyRegistrationRequest we want to update
     *   }
     * })
     */
    upsert<T extends AgencyRegistrationRequestUpsertArgs>(args: SelectSubset<T, AgencyRegistrationRequestUpsertArgs<ExtArgs>>): Prisma__AgencyRegistrationRequestClient<$Result.GetResult<Prisma.$AgencyRegistrationRequestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgencyRegistrationRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestCountArgs} args - Arguments to filter AgencyRegistrationRequests to count.
     * @example
     * // Count the number of AgencyRegistrationRequests
     * const count = await prisma.agencyRegistrationRequest.count({
     *   where: {
     *     // ... the filter for the AgencyRegistrationRequests we want to count
     *   }
     * })
    **/
    count<T extends AgencyRegistrationRequestCountArgs>(
      args?: Subset<T, AgencyRegistrationRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyRegistrationRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyRegistrationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyRegistrationRequestAggregateArgs>(args: Subset<T, AgencyRegistrationRequestAggregateArgs>): Prisma.PrismaPromise<GetAgencyRegistrationRequestAggregateType<T>>

    /**
     * Group by AgencyRegistrationRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyRegistrationRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyRegistrationRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyRegistrationRequestGroupByArgs['orderBy'] }
        : { orderBy?: AgencyRegistrationRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyRegistrationRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyRegistrationRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyRegistrationRequest model
   */
  readonly fields: AgencyRegistrationRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyRegistrationRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyRegistrationRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reviewer<T extends AgencyRegistrationRequest$reviewerArgs<ExtArgs> = {}>(args?: Subset<T, AgencyRegistrationRequest$reviewerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyRegistrationRequest model
   */ 
  interface AgencyRegistrationRequestFieldRefs {
    readonly id: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly userId: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly fullName: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly documentNumber: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly businessPhone: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly businessEmail: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly documentFrontImage: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly documentBackImage: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly reviewNotes: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly rejectionReason: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly submittedAt: FieldRef<"AgencyRegistrationRequest", 'DateTime'>
    readonly reviewedAt: FieldRef<"AgencyRegistrationRequest", 'DateTime'>
    readonly reviewedBy: FieldRef<"AgencyRegistrationRequest", 'String'>
    readonly status: FieldRef<"AgencyRegistrationRequest", 'AgencyRequestStatus'>
  }
    

  // Custom InputTypes
  /**
   * AgencyRegistrationRequest findUnique
   */
  export type AgencyRegistrationRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRegistrationRequest to fetch.
     */
    where: AgencyRegistrationRequestWhereUniqueInput
  }

  /**
   * AgencyRegistrationRequest findUniqueOrThrow
   */
  export type AgencyRegistrationRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRegistrationRequest to fetch.
     */
    where: AgencyRegistrationRequestWhereUniqueInput
  }

  /**
   * AgencyRegistrationRequest findFirst
   */
  export type AgencyRegistrationRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRegistrationRequest to fetch.
     */
    where?: AgencyRegistrationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRegistrationRequests to fetch.
     */
    orderBy?: AgencyRegistrationRequestOrderByWithRelationInput | AgencyRegistrationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyRegistrationRequests.
     */
    cursor?: AgencyRegistrationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRegistrationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRegistrationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyRegistrationRequests.
     */
    distinct?: AgencyRegistrationRequestScalarFieldEnum | AgencyRegistrationRequestScalarFieldEnum[]
  }

  /**
   * AgencyRegistrationRequest findFirstOrThrow
   */
  export type AgencyRegistrationRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRegistrationRequest to fetch.
     */
    where?: AgencyRegistrationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRegistrationRequests to fetch.
     */
    orderBy?: AgencyRegistrationRequestOrderByWithRelationInput | AgencyRegistrationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyRegistrationRequests.
     */
    cursor?: AgencyRegistrationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRegistrationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRegistrationRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyRegistrationRequests.
     */
    distinct?: AgencyRegistrationRequestScalarFieldEnum | AgencyRegistrationRequestScalarFieldEnum[]
  }

  /**
   * AgencyRegistrationRequest findMany
   */
  export type AgencyRegistrationRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter, which AgencyRegistrationRequests to fetch.
     */
    where?: AgencyRegistrationRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyRegistrationRequests to fetch.
     */
    orderBy?: AgencyRegistrationRequestOrderByWithRelationInput | AgencyRegistrationRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyRegistrationRequests.
     */
    cursor?: AgencyRegistrationRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyRegistrationRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyRegistrationRequests.
     */
    skip?: number
    distinct?: AgencyRegistrationRequestScalarFieldEnum | AgencyRegistrationRequestScalarFieldEnum[]
  }

  /**
   * AgencyRegistrationRequest create
   */
  export type AgencyRegistrationRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyRegistrationRequest.
     */
    data: XOR<AgencyRegistrationRequestCreateInput, AgencyRegistrationRequestUncheckedCreateInput>
  }

  /**
   * AgencyRegistrationRequest createMany
   */
  export type AgencyRegistrationRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyRegistrationRequests.
     */
    data: AgencyRegistrationRequestCreateManyInput | AgencyRegistrationRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyRegistrationRequest createManyAndReturn
   */
  export type AgencyRegistrationRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgencyRegistrationRequests.
     */
    data: AgencyRegistrationRequestCreateManyInput | AgencyRegistrationRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyRegistrationRequest update
   */
  export type AgencyRegistrationRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyRegistrationRequest.
     */
    data: XOR<AgencyRegistrationRequestUpdateInput, AgencyRegistrationRequestUncheckedUpdateInput>
    /**
     * Choose, which AgencyRegistrationRequest to update.
     */
    where: AgencyRegistrationRequestWhereUniqueInput
  }

  /**
   * AgencyRegistrationRequest updateMany
   */
  export type AgencyRegistrationRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyRegistrationRequests.
     */
    data: XOR<AgencyRegistrationRequestUpdateManyMutationInput, AgencyRegistrationRequestUncheckedUpdateManyInput>
    /**
     * Filter which AgencyRegistrationRequests to update
     */
    where?: AgencyRegistrationRequestWhereInput
  }

  /**
   * AgencyRegistrationRequest upsert
   */
  export type AgencyRegistrationRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyRegistrationRequest to update in case it exists.
     */
    where: AgencyRegistrationRequestWhereUniqueInput
    /**
     * In case the AgencyRegistrationRequest found by the `where` argument doesn't exist, create a new AgencyRegistrationRequest with this data.
     */
    create: XOR<AgencyRegistrationRequestCreateInput, AgencyRegistrationRequestUncheckedCreateInput>
    /**
     * In case the AgencyRegistrationRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyRegistrationRequestUpdateInput, AgencyRegistrationRequestUncheckedUpdateInput>
  }

  /**
   * AgencyRegistrationRequest delete
   */
  export type AgencyRegistrationRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
    /**
     * Filter which AgencyRegistrationRequest to delete.
     */
    where: AgencyRegistrationRequestWhereUniqueInput
  }

  /**
   * AgencyRegistrationRequest deleteMany
   */
  export type AgencyRegistrationRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyRegistrationRequests to delete
     */
    where?: AgencyRegistrationRequestWhereInput
  }

  /**
   * AgencyRegistrationRequest.reviewer
   */
  export type AgencyRegistrationRequest$reviewerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AgencyRegistrationRequest without action
   */
  export type AgencyRegistrationRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyRegistrationRequest
     */
    select?: AgencyRegistrationRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyRegistrationRequestInclude<ExtArgs> | null
  }


  /**
   * Model UserSettings
   */

  export type AggregateUserSettings = {
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  export type UserSettingsMinAggregateOutputType = {
    id: string | null
    userId: string | null
    emailNotifications: boolean | null
    pushNotifications: boolean | null
    messageNotifications: boolean | null
    likeNotifications: boolean | null
    boostNotifications: boolean | null
    profileReminders: boolean | null
    verificationReminders: boolean | null
    showOnline: boolean | null
    showLastSeen: boolean | null
    allowDirectMessages: boolean | null
    showPhoneNumber: boolean | null
    showInDiscovery: boolean | null
    showInTrending: boolean | null
    showInSearch: boolean | null
    contentFilter: $Enums.ContentFilterLevel | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSettingsMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    emailNotifications: boolean | null
    pushNotifications: boolean | null
    messageNotifications: boolean | null
    likeNotifications: boolean | null
    boostNotifications: boolean | null
    profileReminders: boolean | null
    verificationReminders: boolean | null
    showOnline: boolean | null
    showLastSeen: boolean | null
    allowDirectMessages: boolean | null
    showPhoneNumber: boolean | null
    showInDiscovery: boolean | null
    showInTrending: boolean | null
    showInSearch: boolean | null
    contentFilter: $Enums.ContentFilterLevel | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSettingsCountAggregateOutputType = {
    id: number
    userId: number
    emailNotifications: number
    pushNotifications: number
    messageNotifications: number
    likeNotifications: number
    boostNotifications: number
    profileReminders: number
    verificationReminders: number
    showOnline: number
    showLastSeen: number
    allowDirectMessages: number
    showPhoneNumber: number
    showInDiscovery: number
    showInTrending: number
    showInSearch: number
    contentFilter: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSettingsMinAggregateInputType = {
    id?: true
    userId?: true
    emailNotifications?: true
    pushNotifications?: true
    messageNotifications?: true
    likeNotifications?: true
    boostNotifications?: true
    profileReminders?: true
    verificationReminders?: true
    showOnline?: true
    showLastSeen?: true
    allowDirectMessages?: true
    showPhoneNumber?: true
    showInDiscovery?: true
    showInTrending?: true
    showInSearch?: true
    contentFilter?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSettingsMaxAggregateInputType = {
    id?: true
    userId?: true
    emailNotifications?: true
    pushNotifications?: true
    messageNotifications?: true
    likeNotifications?: true
    boostNotifications?: true
    profileReminders?: true
    verificationReminders?: true
    showOnline?: true
    showLastSeen?: true
    allowDirectMessages?: true
    showPhoneNumber?: true
    showInDiscovery?: true
    showInTrending?: true
    showInSearch?: true
    contentFilter?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSettingsCountAggregateInputType = {
    id?: true
    userId?: true
    emailNotifications?: true
    pushNotifications?: true
    messageNotifications?: true
    likeNotifications?: true
    boostNotifications?: true
    profileReminders?: true
    verificationReminders?: true
    showOnline?: true
    showLastSeen?: true
    allowDirectMessages?: true
    showPhoneNumber?: true
    showInDiscovery?: true
    showInTrending?: true
    showInSearch?: true
    contentFilter?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to aggregate.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSettings
    **/
    _count?: true | UserSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSettingsMaxAggregateInputType
  }

  export type GetUserSettingsAggregateType<T extends UserSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSettings[P]>
      : GetScalarType<T[P], AggregateUserSettings[P]>
  }




  export type UserSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSettingsWhereInput
    orderBy?: UserSettingsOrderByWithAggregationInput | UserSettingsOrderByWithAggregationInput[]
    by: UserSettingsScalarFieldEnum[] | UserSettingsScalarFieldEnum
    having?: UserSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSettingsCountAggregateInputType | true
    _min?: UserSettingsMinAggregateInputType
    _max?: UserSettingsMaxAggregateInputType
  }

  export type UserSettingsGroupByOutputType = {
    id: string
    userId: string
    emailNotifications: boolean
    pushNotifications: boolean
    messageNotifications: boolean
    likeNotifications: boolean
    boostNotifications: boolean
    profileReminders: boolean
    verificationReminders: boolean
    showOnline: boolean
    showLastSeen: boolean
    allowDirectMessages: boolean
    showPhoneNumber: boolean
    showInDiscovery: boolean
    showInTrending: boolean
    showInSearch: boolean
    contentFilter: $Enums.ContentFilterLevel
    createdAt: Date
    updatedAt: Date
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  type GetUserSettingsGroupByPayload<T extends UserSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
        }
      >
    >


  export type UserSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSettings"]>

  export type UserSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSettings"]>

  export type UserSettingsSelectScalar = {
    id?: boolean
    userId?: boolean
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSettingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSettings"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      emailNotifications: boolean
      pushNotifications: boolean
      messageNotifications: boolean
      likeNotifications: boolean
      boostNotifications: boolean
      profileReminders: boolean
      verificationReminders: boolean
      showOnline: boolean
      showLastSeen: boolean
      allowDirectMessages: boolean
      showPhoneNumber: boolean
      showInDiscovery: boolean
      showInTrending: boolean
      showInSearch: boolean
      contentFilter: $Enums.ContentFilterLevel
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSettings"]>
    composites: {}
  }

  type UserSettingsGetPayload<S extends boolean | null | undefined | UserSettingsDefaultArgs> = $Result.GetResult<Prisma.$UserSettingsPayload, S>

  type UserSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSettingsCountAggregateInputType | true
    }

  export interface UserSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSettings'], meta: { name: 'UserSettings' } }
    /**
     * Find zero or one UserSettings that matches the filter.
     * @param {UserSettingsFindUniqueArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSettingsFindUniqueArgs>(args: SelectSubset<T, UserSettingsFindUniqueArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSettingsFindUniqueOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSettingsFindFirstArgs>(args?: SelectSubset<T, UserSettingsFindFirstArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSettings
     * const userSettings = await prisma.userSettings.findMany()
     * 
     * // Get first 10 UserSettings
     * const userSettings = await prisma.userSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSettingsWithIdOnly = await prisma.userSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSettingsFindManyArgs>(args?: SelectSubset<T, UserSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSettings.
     * @param {UserSettingsCreateArgs} args - Arguments to create a UserSettings.
     * @example
     * // Create one UserSettings
     * const UserSettings = await prisma.userSettings.create({
     *   data: {
     *     // ... data to create a UserSettings
     *   }
     * })
     * 
     */
    create<T extends UserSettingsCreateArgs>(args: SelectSubset<T, UserSettingsCreateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSettings.
     * @param {UserSettingsCreateManyArgs} args - Arguments to create many UserSettings.
     * @example
     * // Create many UserSettings
     * const userSettings = await prisma.userSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSettingsCreateManyArgs>(args?: SelectSubset<T, UserSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSettings and returns the data saved in the database.
     * @param {UserSettingsCreateManyAndReturnArgs} args - Arguments to create many UserSettings.
     * @example
     * // Create many UserSettings
     * const userSettings = await prisma.userSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSettings and only return the `id`
     * const userSettingsWithIdOnly = await prisma.userSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSettingsCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSettingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserSettings.
     * @param {UserSettingsDeleteArgs} args - Arguments to delete one UserSettings.
     * @example
     * // Delete one UserSettings
     * const UserSettings = await prisma.userSettings.delete({
     *   where: {
     *     // ... filter to delete one UserSettings
     *   }
     * })
     * 
     */
    delete<T extends UserSettingsDeleteArgs>(args: SelectSubset<T, UserSettingsDeleteArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSettings.
     * @param {UserSettingsUpdateArgs} args - Arguments to update one UserSettings.
     * @example
     * // Update one UserSettings
     * const userSettings = await prisma.userSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSettingsUpdateArgs>(args: SelectSubset<T, UserSettingsUpdateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSettings.
     * @param {UserSettingsDeleteManyArgs} args - Arguments to filter UserSettings to delete.
     * @example
     * // Delete a few UserSettings
     * const { count } = await prisma.userSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSettingsDeleteManyArgs>(args?: SelectSubset<T, UserSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSettings
     * const userSettings = await prisma.userSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSettingsUpdateManyArgs>(args: SelectSubset<T, UserSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSettings.
     * @param {UserSettingsUpsertArgs} args - Arguments to update or create a UserSettings.
     * @example
     * // Update or create a UserSettings
     * const userSettings = await prisma.userSettings.upsert({
     *   create: {
     *     // ... data to create a UserSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSettings we want to update
     *   }
     * })
     */
    upsert<T extends UserSettingsUpsertArgs>(args: SelectSubset<T, UserSettingsUpsertArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsCountArgs} args - Arguments to filter UserSettings to count.
     * @example
     * // Count the number of UserSettings
     * const count = await prisma.userSettings.count({
     *   where: {
     *     // ... the filter for the UserSettings we want to count
     *   }
     * })
    **/
    count<T extends UserSettingsCountArgs>(
      args?: Subset<T, UserSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSettingsAggregateArgs>(args: Subset<T, UserSettingsAggregateArgs>): Prisma.PrismaPromise<GetUserSettingsAggregateType<T>>

    /**
     * Group by UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSettingsGroupByArgs['orderBy'] }
        : { orderBy?: UserSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSettings model
   */
  readonly fields: UserSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSettings model
   */ 
  interface UserSettingsFieldRefs {
    readonly id: FieldRef<"UserSettings", 'String'>
    readonly userId: FieldRef<"UserSettings", 'String'>
    readonly emailNotifications: FieldRef<"UserSettings", 'Boolean'>
    readonly pushNotifications: FieldRef<"UserSettings", 'Boolean'>
    readonly messageNotifications: FieldRef<"UserSettings", 'Boolean'>
    readonly likeNotifications: FieldRef<"UserSettings", 'Boolean'>
    readonly boostNotifications: FieldRef<"UserSettings", 'Boolean'>
    readonly profileReminders: FieldRef<"UserSettings", 'Boolean'>
    readonly verificationReminders: FieldRef<"UserSettings", 'Boolean'>
    readonly showOnline: FieldRef<"UserSettings", 'Boolean'>
    readonly showLastSeen: FieldRef<"UserSettings", 'Boolean'>
    readonly allowDirectMessages: FieldRef<"UserSettings", 'Boolean'>
    readonly showPhoneNumber: FieldRef<"UserSettings", 'Boolean'>
    readonly showInDiscovery: FieldRef<"UserSettings", 'Boolean'>
    readonly showInTrending: FieldRef<"UserSettings", 'Boolean'>
    readonly showInSearch: FieldRef<"UserSettings", 'Boolean'>
    readonly contentFilter: FieldRef<"UserSettings", 'ContentFilterLevel'>
    readonly createdAt: FieldRef<"UserSettings", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSettings findUnique
   */
  export type UserSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findUniqueOrThrow
   */
  export type UserSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findFirst
   */
  export type UserSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findFirstOrThrow
   */
  export type UserSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findMany
   */
  export type UserSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings create
   */
  export type UserSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSettings.
     */
    data: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
  }

  /**
   * UserSettings createMany
   */
  export type UserSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSettings.
     */
    data: UserSettingsCreateManyInput | UserSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSettings createManyAndReturn
   */
  export type UserSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserSettings.
     */
    data: UserSettingsCreateManyInput | UserSettingsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSettings update
   */
  export type UserSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSettings.
     */
    data: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
    /**
     * Choose, which UserSettings to update.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings updateMany
   */
  export type UserSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSettings.
     */
    data: XOR<UserSettingsUpdateManyMutationInput, UserSettingsUncheckedUpdateManyInput>
    /**
     * Filter which UserSettings to update
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings upsert
   */
  export type UserSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSettings to update in case it exists.
     */
    where: UserSettingsWhereUniqueInput
    /**
     * In case the UserSettings found by the `where` argument doesn't exist, create a new UserSettings with this data.
     */
    create: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
    /**
     * In case the UserSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
  }

  /**
   * UserSettings delete
   */
  export type UserSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter which UserSettings to delete.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings deleteMany
   */
  export type UserSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to delete
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings without action
   */
  export type UserSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
  }


  /**
   * Model DeviceToken
   */

  export type AggregateDeviceToken = {
    _count: DeviceTokenCountAggregateOutputType | null
    _min: DeviceTokenMinAggregateOutputType | null
    _max: DeviceTokenMaxAggregateOutputType | null
  }

  export type DeviceTokenMinAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    platform: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    lastUsedAt: Date | null
  }

  export type DeviceTokenMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    token: string | null
    platform: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    lastUsedAt: Date | null
  }

  export type DeviceTokenCountAggregateOutputType = {
    id: number
    userId: number
    token: number
    platform: number
    deviceInfo: number
    isActive: number
    createdAt: number
    updatedAt: number
    lastUsedAt: number
    _all: number
  }


  export type DeviceTokenMinAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    platform?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    lastUsedAt?: true
  }

  export type DeviceTokenMaxAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    platform?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    lastUsedAt?: true
  }

  export type DeviceTokenCountAggregateInputType = {
    id?: true
    userId?: true
    token?: true
    platform?: true
    deviceInfo?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    lastUsedAt?: true
    _all?: true
  }

  export type DeviceTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeviceToken to aggregate.
     */
    where?: DeviceTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeviceTokens to fetch.
     */
    orderBy?: DeviceTokenOrderByWithRelationInput | DeviceTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeviceTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeviceTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeviceTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DeviceTokens
    **/
    _count?: true | DeviceTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeviceTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeviceTokenMaxAggregateInputType
  }

  export type GetDeviceTokenAggregateType<T extends DeviceTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateDeviceToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeviceToken[P]>
      : GetScalarType<T[P], AggregateDeviceToken[P]>
  }




  export type DeviceTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceTokenWhereInput
    orderBy?: DeviceTokenOrderByWithAggregationInput | DeviceTokenOrderByWithAggregationInput[]
    by: DeviceTokenScalarFieldEnum[] | DeviceTokenScalarFieldEnum
    having?: DeviceTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeviceTokenCountAggregateInputType | true
    _min?: DeviceTokenMinAggregateInputType
    _max?: DeviceTokenMaxAggregateInputType
  }

  export type DeviceTokenGroupByOutputType = {
    id: string
    userId: string
    token: string
    platform: string
    deviceInfo: JsonValue | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    lastUsedAt: Date
    _count: DeviceTokenCountAggregateOutputType | null
    _min: DeviceTokenMinAggregateOutputType | null
    _max: DeviceTokenMaxAggregateOutputType | null
  }

  type GetDeviceTokenGroupByPayload<T extends DeviceTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeviceTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeviceTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeviceTokenGroupByOutputType[P]>
            : GetScalarType<T[P], DeviceTokenGroupByOutputType[P]>
        }
      >
    >


  export type DeviceTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    platform?: boolean
    deviceInfo?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastUsedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deviceToken"]>

  export type DeviceTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    token?: boolean
    platform?: boolean
    deviceInfo?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastUsedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deviceToken"]>

  export type DeviceTokenSelectScalar = {
    id?: boolean
    userId?: boolean
    token?: boolean
    platform?: boolean
    deviceInfo?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    lastUsedAt?: boolean
  }

  export type DeviceTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeviceTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DeviceTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DeviceToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      token: string
      platform: string
      deviceInfo: Prisma.JsonValue | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      lastUsedAt: Date
    }, ExtArgs["result"]["deviceToken"]>
    composites: {}
  }

  type DeviceTokenGetPayload<S extends boolean | null | undefined | DeviceTokenDefaultArgs> = $Result.GetResult<Prisma.$DeviceTokenPayload, S>

  type DeviceTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DeviceTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DeviceTokenCountAggregateInputType | true
    }

  export interface DeviceTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DeviceToken'], meta: { name: 'DeviceToken' } }
    /**
     * Find zero or one DeviceToken that matches the filter.
     * @param {DeviceTokenFindUniqueArgs} args - Arguments to find a DeviceToken
     * @example
     * // Get one DeviceToken
     * const deviceToken = await prisma.deviceToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeviceTokenFindUniqueArgs>(args: SelectSubset<T, DeviceTokenFindUniqueArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DeviceToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DeviceTokenFindUniqueOrThrowArgs} args - Arguments to find a DeviceToken
     * @example
     * // Get one DeviceToken
     * const deviceToken = await prisma.deviceToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeviceTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, DeviceTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DeviceToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenFindFirstArgs} args - Arguments to find a DeviceToken
     * @example
     * // Get one DeviceToken
     * const deviceToken = await prisma.deviceToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeviceTokenFindFirstArgs>(args?: SelectSubset<T, DeviceTokenFindFirstArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DeviceToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenFindFirstOrThrowArgs} args - Arguments to find a DeviceToken
     * @example
     * // Get one DeviceToken
     * const deviceToken = await prisma.deviceToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeviceTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, DeviceTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DeviceTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DeviceTokens
     * const deviceTokens = await prisma.deviceToken.findMany()
     * 
     * // Get first 10 DeviceTokens
     * const deviceTokens = await prisma.deviceToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deviceTokenWithIdOnly = await prisma.deviceToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeviceTokenFindManyArgs>(args?: SelectSubset<T, DeviceTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DeviceToken.
     * @param {DeviceTokenCreateArgs} args - Arguments to create a DeviceToken.
     * @example
     * // Create one DeviceToken
     * const DeviceToken = await prisma.deviceToken.create({
     *   data: {
     *     // ... data to create a DeviceToken
     *   }
     * })
     * 
     */
    create<T extends DeviceTokenCreateArgs>(args: SelectSubset<T, DeviceTokenCreateArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DeviceTokens.
     * @param {DeviceTokenCreateManyArgs} args - Arguments to create many DeviceTokens.
     * @example
     * // Create many DeviceTokens
     * const deviceToken = await prisma.deviceToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeviceTokenCreateManyArgs>(args?: SelectSubset<T, DeviceTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DeviceTokens and returns the data saved in the database.
     * @param {DeviceTokenCreateManyAndReturnArgs} args - Arguments to create many DeviceTokens.
     * @example
     * // Create many DeviceTokens
     * const deviceToken = await prisma.deviceToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DeviceTokens and only return the `id`
     * const deviceTokenWithIdOnly = await prisma.deviceToken.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeviceTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, DeviceTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a DeviceToken.
     * @param {DeviceTokenDeleteArgs} args - Arguments to delete one DeviceToken.
     * @example
     * // Delete one DeviceToken
     * const DeviceToken = await prisma.deviceToken.delete({
     *   where: {
     *     // ... filter to delete one DeviceToken
     *   }
     * })
     * 
     */
    delete<T extends DeviceTokenDeleteArgs>(args: SelectSubset<T, DeviceTokenDeleteArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DeviceToken.
     * @param {DeviceTokenUpdateArgs} args - Arguments to update one DeviceToken.
     * @example
     * // Update one DeviceToken
     * const deviceToken = await prisma.deviceToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeviceTokenUpdateArgs>(args: SelectSubset<T, DeviceTokenUpdateArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DeviceTokens.
     * @param {DeviceTokenDeleteManyArgs} args - Arguments to filter DeviceTokens to delete.
     * @example
     * // Delete a few DeviceTokens
     * const { count } = await prisma.deviceToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeviceTokenDeleteManyArgs>(args?: SelectSubset<T, DeviceTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DeviceTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DeviceTokens
     * const deviceToken = await prisma.deviceToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeviceTokenUpdateManyArgs>(args: SelectSubset<T, DeviceTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DeviceToken.
     * @param {DeviceTokenUpsertArgs} args - Arguments to update or create a DeviceToken.
     * @example
     * // Update or create a DeviceToken
     * const deviceToken = await prisma.deviceToken.upsert({
     *   create: {
     *     // ... data to create a DeviceToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DeviceToken we want to update
     *   }
     * })
     */
    upsert<T extends DeviceTokenUpsertArgs>(args: SelectSubset<T, DeviceTokenUpsertArgs<ExtArgs>>): Prisma__DeviceTokenClient<$Result.GetResult<Prisma.$DeviceTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DeviceTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenCountArgs} args - Arguments to filter DeviceTokens to count.
     * @example
     * // Count the number of DeviceTokens
     * const count = await prisma.deviceToken.count({
     *   where: {
     *     // ... the filter for the DeviceTokens we want to count
     *   }
     * })
    **/
    count<T extends DeviceTokenCountArgs>(
      args?: Subset<T, DeviceTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeviceTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DeviceToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeviceTokenAggregateArgs>(args: Subset<T, DeviceTokenAggregateArgs>): Prisma.PrismaPromise<GetDeviceTokenAggregateType<T>>

    /**
     * Group by DeviceToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeviceTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeviceTokenGroupByArgs['orderBy'] }
        : { orderBy?: DeviceTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeviceTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeviceTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DeviceToken model
   */
  readonly fields: DeviceTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DeviceToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeviceTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DeviceToken model
   */ 
  interface DeviceTokenFieldRefs {
    readonly id: FieldRef<"DeviceToken", 'String'>
    readonly userId: FieldRef<"DeviceToken", 'String'>
    readonly token: FieldRef<"DeviceToken", 'String'>
    readonly platform: FieldRef<"DeviceToken", 'String'>
    readonly deviceInfo: FieldRef<"DeviceToken", 'Json'>
    readonly isActive: FieldRef<"DeviceToken", 'Boolean'>
    readonly createdAt: FieldRef<"DeviceToken", 'DateTime'>
    readonly updatedAt: FieldRef<"DeviceToken", 'DateTime'>
    readonly lastUsedAt: FieldRef<"DeviceToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * DeviceToken findUnique
   */
  export type DeviceTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter, which DeviceToken to fetch.
     */
    where: DeviceTokenWhereUniqueInput
  }

  /**
   * DeviceToken findUniqueOrThrow
   */
  export type DeviceTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter, which DeviceToken to fetch.
     */
    where: DeviceTokenWhereUniqueInput
  }

  /**
   * DeviceToken findFirst
   */
  export type DeviceTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter, which DeviceToken to fetch.
     */
    where?: DeviceTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeviceTokens to fetch.
     */
    orderBy?: DeviceTokenOrderByWithRelationInput | DeviceTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeviceTokens.
     */
    cursor?: DeviceTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeviceTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeviceTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeviceTokens.
     */
    distinct?: DeviceTokenScalarFieldEnum | DeviceTokenScalarFieldEnum[]
  }

  /**
   * DeviceToken findFirstOrThrow
   */
  export type DeviceTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter, which DeviceToken to fetch.
     */
    where?: DeviceTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeviceTokens to fetch.
     */
    orderBy?: DeviceTokenOrderByWithRelationInput | DeviceTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DeviceTokens.
     */
    cursor?: DeviceTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeviceTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeviceTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DeviceTokens.
     */
    distinct?: DeviceTokenScalarFieldEnum | DeviceTokenScalarFieldEnum[]
  }

  /**
   * DeviceToken findMany
   */
  export type DeviceTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter, which DeviceTokens to fetch.
     */
    where?: DeviceTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DeviceTokens to fetch.
     */
    orderBy?: DeviceTokenOrderByWithRelationInput | DeviceTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DeviceTokens.
     */
    cursor?: DeviceTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DeviceTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DeviceTokens.
     */
    skip?: number
    distinct?: DeviceTokenScalarFieldEnum | DeviceTokenScalarFieldEnum[]
  }

  /**
   * DeviceToken create
   */
  export type DeviceTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a DeviceToken.
     */
    data: XOR<DeviceTokenCreateInput, DeviceTokenUncheckedCreateInput>
  }

  /**
   * DeviceToken createMany
   */
  export type DeviceTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DeviceTokens.
     */
    data: DeviceTokenCreateManyInput | DeviceTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DeviceToken createManyAndReturn
   */
  export type DeviceTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many DeviceTokens.
     */
    data: DeviceTokenCreateManyInput | DeviceTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DeviceToken update
   */
  export type DeviceTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a DeviceToken.
     */
    data: XOR<DeviceTokenUpdateInput, DeviceTokenUncheckedUpdateInput>
    /**
     * Choose, which DeviceToken to update.
     */
    where: DeviceTokenWhereUniqueInput
  }

  /**
   * DeviceToken updateMany
   */
  export type DeviceTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DeviceTokens.
     */
    data: XOR<DeviceTokenUpdateManyMutationInput, DeviceTokenUncheckedUpdateManyInput>
    /**
     * Filter which DeviceTokens to update
     */
    where?: DeviceTokenWhereInput
  }

  /**
   * DeviceToken upsert
   */
  export type DeviceTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the DeviceToken to update in case it exists.
     */
    where: DeviceTokenWhereUniqueInput
    /**
     * In case the DeviceToken found by the `where` argument doesn't exist, create a new DeviceToken with this data.
     */
    create: XOR<DeviceTokenCreateInput, DeviceTokenUncheckedCreateInput>
    /**
     * In case the DeviceToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeviceTokenUpdateInput, DeviceTokenUncheckedUpdateInput>
  }

  /**
   * DeviceToken delete
   */
  export type DeviceTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
    /**
     * Filter which DeviceToken to delete.
     */
    where: DeviceTokenWhereUniqueInput
  }

  /**
   * DeviceToken deleteMany
   */
  export type DeviceTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DeviceTokens to delete
     */
    where?: DeviceTokenWhereInput
  }

  /**
   * DeviceToken without action
   */
  export type DeviceTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceToken
     */
    select?: DeviceTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceTokenInclude<ExtArgs> | null
  }


  /**
   * Model SearchHistory
   */

  export type AggregateSearchHistory = {
    _count: SearchHistoryCountAggregateOutputType | null
    _avg: SearchHistoryAvgAggregateOutputType | null
    _sum: SearchHistorySumAggregateOutputType | null
    _min: SearchHistoryMinAggregateOutputType | null
    _max: SearchHistoryMaxAggregateOutputType | null
  }

  export type SearchHistoryAvgAggregateOutputType = {
    results: number | null
  }

  export type SearchHistorySumAggregateOutputType = {
    results: number | null
  }

  export type SearchHistoryMinAggregateOutputType = {
    id: string | null
    userId: string | null
    query: string | null
    results: number | null
    clicked: boolean | null
    createdAt: Date | null
  }

  export type SearchHistoryMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    query: string | null
    results: number | null
    clicked: boolean | null
    createdAt: Date | null
  }

  export type SearchHistoryCountAggregateOutputType = {
    id: number
    userId: number
    query: number
    filters: number
    results: number
    clicked: number
    createdAt: number
    _all: number
  }


  export type SearchHistoryAvgAggregateInputType = {
    results?: true
  }

  export type SearchHistorySumAggregateInputType = {
    results?: true
  }

  export type SearchHistoryMinAggregateInputType = {
    id?: true
    userId?: true
    query?: true
    results?: true
    clicked?: true
    createdAt?: true
  }

  export type SearchHistoryMaxAggregateInputType = {
    id?: true
    userId?: true
    query?: true
    results?: true
    clicked?: true
    createdAt?: true
  }

  export type SearchHistoryCountAggregateInputType = {
    id?: true
    userId?: true
    query?: true
    filters?: true
    results?: true
    clicked?: true
    createdAt?: true
    _all?: true
  }

  export type SearchHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SearchHistory to aggregate.
     */
    where?: SearchHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SearchHistories to fetch.
     */
    orderBy?: SearchHistoryOrderByWithRelationInput | SearchHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SearchHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SearchHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SearchHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SearchHistories
    **/
    _count?: true | SearchHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SearchHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SearchHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SearchHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SearchHistoryMaxAggregateInputType
  }

  export type GetSearchHistoryAggregateType<T extends SearchHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSearchHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSearchHistory[P]>
      : GetScalarType<T[P], AggregateSearchHistory[P]>
  }




  export type SearchHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SearchHistoryWhereInput
    orderBy?: SearchHistoryOrderByWithAggregationInput | SearchHistoryOrderByWithAggregationInput[]
    by: SearchHistoryScalarFieldEnum[] | SearchHistoryScalarFieldEnum
    having?: SearchHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SearchHistoryCountAggregateInputType | true
    _avg?: SearchHistoryAvgAggregateInputType
    _sum?: SearchHistorySumAggregateInputType
    _min?: SearchHistoryMinAggregateInputType
    _max?: SearchHistoryMaxAggregateInputType
  }

  export type SearchHistoryGroupByOutputType = {
    id: string
    userId: string
    query: string
    filters: JsonValue | null
    results: number
    clicked: boolean
    createdAt: Date
    _count: SearchHistoryCountAggregateOutputType | null
    _avg: SearchHistoryAvgAggregateOutputType | null
    _sum: SearchHistorySumAggregateOutputType | null
    _min: SearchHistoryMinAggregateOutputType | null
    _max: SearchHistoryMaxAggregateOutputType | null
  }

  type GetSearchHistoryGroupByPayload<T extends SearchHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SearchHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SearchHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SearchHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], SearchHistoryGroupByOutputType[P]>
        }
      >
    >


  export type SearchHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    query?: boolean
    filters?: boolean
    results?: boolean
    clicked?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["searchHistory"]>

  export type SearchHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    query?: boolean
    filters?: boolean
    results?: boolean
    clicked?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["searchHistory"]>

  export type SearchHistorySelectScalar = {
    id?: boolean
    userId?: boolean
    query?: boolean
    filters?: boolean
    results?: boolean
    clicked?: boolean
    createdAt?: boolean
  }

  export type SearchHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SearchHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SearchHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SearchHistory"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      query: string
      filters: Prisma.JsonValue | null
      results: number
      clicked: boolean
      createdAt: Date
    }, ExtArgs["result"]["searchHistory"]>
    composites: {}
  }

  type SearchHistoryGetPayload<S extends boolean | null | undefined | SearchHistoryDefaultArgs> = $Result.GetResult<Prisma.$SearchHistoryPayload, S>

  type SearchHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SearchHistoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SearchHistoryCountAggregateInputType | true
    }

  export interface SearchHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SearchHistory'], meta: { name: 'SearchHistory' } }
    /**
     * Find zero or one SearchHistory that matches the filter.
     * @param {SearchHistoryFindUniqueArgs} args - Arguments to find a SearchHistory
     * @example
     * // Get one SearchHistory
     * const searchHistory = await prisma.searchHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SearchHistoryFindUniqueArgs>(args: SelectSubset<T, SearchHistoryFindUniqueArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SearchHistory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SearchHistoryFindUniqueOrThrowArgs} args - Arguments to find a SearchHistory
     * @example
     * // Get one SearchHistory
     * const searchHistory = await prisma.searchHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SearchHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SearchHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SearchHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryFindFirstArgs} args - Arguments to find a SearchHistory
     * @example
     * // Get one SearchHistory
     * const searchHistory = await prisma.searchHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SearchHistoryFindFirstArgs>(args?: SelectSubset<T, SearchHistoryFindFirstArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SearchHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryFindFirstOrThrowArgs} args - Arguments to find a SearchHistory
     * @example
     * // Get one SearchHistory
     * const searchHistory = await prisma.searchHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SearchHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SearchHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SearchHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SearchHistories
     * const searchHistories = await prisma.searchHistory.findMany()
     * 
     * // Get first 10 SearchHistories
     * const searchHistories = await prisma.searchHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const searchHistoryWithIdOnly = await prisma.searchHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SearchHistoryFindManyArgs>(args?: SelectSubset<T, SearchHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SearchHistory.
     * @param {SearchHistoryCreateArgs} args - Arguments to create a SearchHistory.
     * @example
     * // Create one SearchHistory
     * const SearchHistory = await prisma.searchHistory.create({
     *   data: {
     *     // ... data to create a SearchHistory
     *   }
     * })
     * 
     */
    create<T extends SearchHistoryCreateArgs>(args: SelectSubset<T, SearchHistoryCreateArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SearchHistories.
     * @param {SearchHistoryCreateManyArgs} args - Arguments to create many SearchHistories.
     * @example
     * // Create many SearchHistories
     * const searchHistory = await prisma.searchHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SearchHistoryCreateManyArgs>(args?: SelectSubset<T, SearchHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SearchHistories and returns the data saved in the database.
     * @param {SearchHistoryCreateManyAndReturnArgs} args - Arguments to create many SearchHistories.
     * @example
     * // Create many SearchHistories
     * const searchHistory = await prisma.searchHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SearchHistories and only return the `id`
     * const searchHistoryWithIdOnly = await prisma.searchHistory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SearchHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, SearchHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SearchHistory.
     * @param {SearchHistoryDeleteArgs} args - Arguments to delete one SearchHistory.
     * @example
     * // Delete one SearchHistory
     * const SearchHistory = await prisma.searchHistory.delete({
     *   where: {
     *     // ... filter to delete one SearchHistory
     *   }
     * })
     * 
     */
    delete<T extends SearchHistoryDeleteArgs>(args: SelectSubset<T, SearchHistoryDeleteArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SearchHistory.
     * @param {SearchHistoryUpdateArgs} args - Arguments to update one SearchHistory.
     * @example
     * // Update one SearchHistory
     * const searchHistory = await prisma.searchHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SearchHistoryUpdateArgs>(args: SelectSubset<T, SearchHistoryUpdateArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SearchHistories.
     * @param {SearchHistoryDeleteManyArgs} args - Arguments to filter SearchHistories to delete.
     * @example
     * // Delete a few SearchHistories
     * const { count } = await prisma.searchHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SearchHistoryDeleteManyArgs>(args?: SelectSubset<T, SearchHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SearchHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SearchHistories
     * const searchHistory = await prisma.searchHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SearchHistoryUpdateManyArgs>(args: SelectSubset<T, SearchHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SearchHistory.
     * @param {SearchHistoryUpsertArgs} args - Arguments to update or create a SearchHistory.
     * @example
     * // Update or create a SearchHistory
     * const searchHistory = await prisma.searchHistory.upsert({
     *   create: {
     *     // ... data to create a SearchHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SearchHistory we want to update
     *   }
     * })
     */
    upsert<T extends SearchHistoryUpsertArgs>(args: SelectSubset<T, SearchHistoryUpsertArgs<ExtArgs>>): Prisma__SearchHistoryClient<$Result.GetResult<Prisma.$SearchHistoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SearchHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryCountArgs} args - Arguments to filter SearchHistories to count.
     * @example
     * // Count the number of SearchHistories
     * const count = await prisma.searchHistory.count({
     *   where: {
     *     // ... the filter for the SearchHistories we want to count
     *   }
     * })
    **/
    count<T extends SearchHistoryCountArgs>(
      args?: Subset<T, SearchHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SearchHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SearchHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SearchHistoryAggregateArgs>(args: Subset<T, SearchHistoryAggregateArgs>): Prisma.PrismaPromise<GetSearchHistoryAggregateType<T>>

    /**
     * Group by SearchHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SearchHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SearchHistoryGroupByArgs['orderBy'] }
        : { orderBy?: SearchHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SearchHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSearchHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SearchHistory model
   */
  readonly fields: SearchHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SearchHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SearchHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SearchHistory model
   */ 
  interface SearchHistoryFieldRefs {
    readonly id: FieldRef<"SearchHistory", 'String'>
    readonly userId: FieldRef<"SearchHistory", 'String'>
    readonly query: FieldRef<"SearchHistory", 'String'>
    readonly filters: FieldRef<"SearchHistory", 'Json'>
    readonly results: FieldRef<"SearchHistory", 'Int'>
    readonly clicked: FieldRef<"SearchHistory", 'Boolean'>
    readonly createdAt: FieldRef<"SearchHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SearchHistory findUnique
   */
  export type SearchHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SearchHistory to fetch.
     */
    where: SearchHistoryWhereUniqueInput
  }

  /**
   * SearchHistory findUniqueOrThrow
   */
  export type SearchHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SearchHistory to fetch.
     */
    where: SearchHistoryWhereUniqueInput
  }

  /**
   * SearchHistory findFirst
   */
  export type SearchHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SearchHistory to fetch.
     */
    where?: SearchHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SearchHistories to fetch.
     */
    orderBy?: SearchHistoryOrderByWithRelationInput | SearchHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SearchHistories.
     */
    cursor?: SearchHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SearchHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SearchHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SearchHistories.
     */
    distinct?: SearchHistoryScalarFieldEnum | SearchHistoryScalarFieldEnum[]
  }

  /**
   * SearchHistory findFirstOrThrow
   */
  export type SearchHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SearchHistory to fetch.
     */
    where?: SearchHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SearchHistories to fetch.
     */
    orderBy?: SearchHistoryOrderByWithRelationInput | SearchHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SearchHistories.
     */
    cursor?: SearchHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SearchHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SearchHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SearchHistories.
     */
    distinct?: SearchHistoryScalarFieldEnum | SearchHistoryScalarFieldEnum[]
  }

  /**
   * SearchHistory findMany
   */
  export type SearchHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter, which SearchHistories to fetch.
     */
    where?: SearchHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SearchHistories to fetch.
     */
    orderBy?: SearchHistoryOrderByWithRelationInput | SearchHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SearchHistories.
     */
    cursor?: SearchHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SearchHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SearchHistories.
     */
    skip?: number
    distinct?: SearchHistoryScalarFieldEnum | SearchHistoryScalarFieldEnum[]
  }

  /**
   * SearchHistory create
   */
  export type SearchHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a SearchHistory.
     */
    data: XOR<SearchHistoryCreateInput, SearchHistoryUncheckedCreateInput>
  }

  /**
   * SearchHistory createMany
   */
  export type SearchHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SearchHistories.
     */
    data: SearchHistoryCreateManyInput | SearchHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SearchHistory createManyAndReturn
   */
  export type SearchHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SearchHistories.
     */
    data: SearchHistoryCreateManyInput | SearchHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SearchHistory update
   */
  export type SearchHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a SearchHistory.
     */
    data: XOR<SearchHistoryUpdateInput, SearchHistoryUncheckedUpdateInput>
    /**
     * Choose, which SearchHistory to update.
     */
    where: SearchHistoryWhereUniqueInput
  }

  /**
   * SearchHistory updateMany
   */
  export type SearchHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SearchHistories.
     */
    data: XOR<SearchHistoryUpdateManyMutationInput, SearchHistoryUncheckedUpdateManyInput>
    /**
     * Filter which SearchHistories to update
     */
    where?: SearchHistoryWhereInput
  }

  /**
   * SearchHistory upsert
   */
  export type SearchHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the SearchHistory to update in case it exists.
     */
    where: SearchHistoryWhereUniqueInput
    /**
     * In case the SearchHistory found by the `where` argument doesn't exist, create a new SearchHistory with this data.
     */
    create: XOR<SearchHistoryCreateInput, SearchHistoryUncheckedCreateInput>
    /**
     * In case the SearchHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SearchHistoryUpdateInput, SearchHistoryUncheckedUpdateInput>
  }

  /**
   * SearchHistory delete
   */
  export type SearchHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
    /**
     * Filter which SearchHistory to delete.
     */
    where: SearchHistoryWhereUniqueInput
  }

  /**
   * SearchHistory deleteMany
   */
  export type SearchHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SearchHistories to delete
     */
    where?: SearchHistoryWhereInput
  }

  /**
   * SearchHistory without action
   */
  export type SearchHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SearchHistory
     */
    select?: SearchHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchHistoryInclude<ExtArgs> | null
  }


  /**
   * Model UserBlock
   */

  export type AggregateUserBlock = {
    _count: UserBlockCountAggregateOutputType | null
    _min: UserBlockMinAggregateOutputType | null
    _max: UserBlockMaxAggregateOutputType | null
  }

  export type UserBlockMinAggregateOutputType = {
    id: string | null
    blockerId: string | null
    blockedId: string | null
    reason: string | null
    createdAt: Date | null
  }

  export type UserBlockMaxAggregateOutputType = {
    id: string | null
    blockerId: string | null
    blockedId: string | null
    reason: string | null
    createdAt: Date | null
  }

  export type UserBlockCountAggregateOutputType = {
    id: number
    blockerId: number
    blockedId: number
    reason: number
    createdAt: number
    _all: number
  }


  export type UserBlockMinAggregateInputType = {
    id?: true
    blockerId?: true
    blockedId?: true
    reason?: true
    createdAt?: true
  }

  export type UserBlockMaxAggregateInputType = {
    id?: true
    blockerId?: true
    blockedId?: true
    reason?: true
    createdAt?: true
  }

  export type UserBlockCountAggregateInputType = {
    id?: true
    blockerId?: true
    blockedId?: true
    reason?: true
    createdAt?: true
    _all?: true
  }

  export type UserBlockAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserBlock to aggregate.
     */
    where?: UserBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBlocks to fetch.
     */
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBlocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBlocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserBlocks
    **/
    _count?: true | UserBlockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserBlockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserBlockMaxAggregateInputType
  }

  export type GetUserBlockAggregateType<T extends UserBlockAggregateArgs> = {
        [P in keyof T & keyof AggregateUserBlock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserBlock[P]>
      : GetScalarType<T[P], AggregateUserBlock[P]>
  }




  export type UserBlockGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserBlockWhereInput
    orderBy?: UserBlockOrderByWithAggregationInput | UserBlockOrderByWithAggregationInput[]
    by: UserBlockScalarFieldEnum[] | UserBlockScalarFieldEnum
    having?: UserBlockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserBlockCountAggregateInputType | true
    _min?: UserBlockMinAggregateInputType
    _max?: UserBlockMaxAggregateInputType
  }

  export type UserBlockGroupByOutputType = {
    id: string
    blockerId: string
    blockedId: string
    reason: string | null
    createdAt: Date
    _count: UserBlockCountAggregateOutputType | null
    _min: UserBlockMinAggregateOutputType | null
    _max: UserBlockMaxAggregateOutputType | null
  }

  type GetUserBlockGroupByPayload<T extends UserBlockGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserBlockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserBlockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserBlockGroupByOutputType[P]>
            : GetScalarType<T[P], UserBlockGroupByOutputType[P]>
        }
      >
    >


  export type UserBlockSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blockerId?: boolean
    blockedId?: boolean
    reason?: boolean
    createdAt?: boolean
    blocked?: boolean | UserDefaultArgs<ExtArgs>
    blocker?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userBlock"]>

  export type UserBlockSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    blockerId?: boolean
    blockedId?: boolean
    reason?: boolean
    createdAt?: boolean
    blocked?: boolean | UserDefaultArgs<ExtArgs>
    blocker?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userBlock"]>

  export type UserBlockSelectScalar = {
    id?: boolean
    blockerId?: boolean
    blockedId?: boolean
    reason?: boolean
    createdAt?: boolean
  }

  export type UserBlockInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blocked?: boolean | UserDefaultArgs<ExtArgs>
    blocker?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserBlockIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    blocked?: boolean | UserDefaultArgs<ExtArgs>
    blocker?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserBlockPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserBlock"
    objects: {
      blocked: Prisma.$UserPayload<ExtArgs>
      blocker: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      blockerId: string
      blockedId: string
      reason: string | null
      createdAt: Date
    }, ExtArgs["result"]["userBlock"]>
    composites: {}
  }

  type UserBlockGetPayload<S extends boolean | null | undefined | UserBlockDefaultArgs> = $Result.GetResult<Prisma.$UserBlockPayload, S>

  type UserBlockCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserBlockFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserBlockCountAggregateInputType | true
    }

  export interface UserBlockDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserBlock'], meta: { name: 'UserBlock' } }
    /**
     * Find zero or one UserBlock that matches the filter.
     * @param {UserBlockFindUniqueArgs} args - Arguments to find a UserBlock
     * @example
     * // Get one UserBlock
     * const userBlock = await prisma.userBlock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserBlockFindUniqueArgs>(args: SelectSubset<T, UserBlockFindUniqueArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserBlock that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserBlockFindUniqueOrThrowArgs} args - Arguments to find a UserBlock
     * @example
     * // Get one UserBlock
     * const userBlock = await prisma.userBlock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserBlockFindUniqueOrThrowArgs>(args: SelectSubset<T, UserBlockFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserBlock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockFindFirstArgs} args - Arguments to find a UserBlock
     * @example
     * // Get one UserBlock
     * const userBlock = await prisma.userBlock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserBlockFindFirstArgs>(args?: SelectSubset<T, UserBlockFindFirstArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserBlock that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockFindFirstOrThrowArgs} args - Arguments to find a UserBlock
     * @example
     * // Get one UserBlock
     * const userBlock = await prisma.userBlock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserBlockFindFirstOrThrowArgs>(args?: SelectSubset<T, UserBlockFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserBlocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserBlocks
     * const userBlocks = await prisma.userBlock.findMany()
     * 
     * // Get first 10 UserBlocks
     * const userBlocks = await prisma.userBlock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userBlockWithIdOnly = await prisma.userBlock.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserBlockFindManyArgs>(args?: SelectSubset<T, UserBlockFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserBlock.
     * @param {UserBlockCreateArgs} args - Arguments to create a UserBlock.
     * @example
     * // Create one UserBlock
     * const UserBlock = await prisma.userBlock.create({
     *   data: {
     *     // ... data to create a UserBlock
     *   }
     * })
     * 
     */
    create<T extends UserBlockCreateArgs>(args: SelectSubset<T, UserBlockCreateArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserBlocks.
     * @param {UserBlockCreateManyArgs} args - Arguments to create many UserBlocks.
     * @example
     * // Create many UserBlocks
     * const userBlock = await prisma.userBlock.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserBlockCreateManyArgs>(args?: SelectSubset<T, UserBlockCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserBlocks and returns the data saved in the database.
     * @param {UserBlockCreateManyAndReturnArgs} args - Arguments to create many UserBlocks.
     * @example
     * // Create many UserBlocks
     * const userBlock = await prisma.userBlock.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserBlocks and only return the `id`
     * const userBlockWithIdOnly = await prisma.userBlock.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserBlockCreateManyAndReturnArgs>(args?: SelectSubset<T, UserBlockCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserBlock.
     * @param {UserBlockDeleteArgs} args - Arguments to delete one UserBlock.
     * @example
     * // Delete one UserBlock
     * const UserBlock = await prisma.userBlock.delete({
     *   where: {
     *     // ... filter to delete one UserBlock
     *   }
     * })
     * 
     */
    delete<T extends UserBlockDeleteArgs>(args: SelectSubset<T, UserBlockDeleteArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserBlock.
     * @param {UserBlockUpdateArgs} args - Arguments to update one UserBlock.
     * @example
     * // Update one UserBlock
     * const userBlock = await prisma.userBlock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserBlockUpdateArgs>(args: SelectSubset<T, UserBlockUpdateArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserBlocks.
     * @param {UserBlockDeleteManyArgs} args - Arguments to filter UserBlocks to delete.
     * @example
     * // Delete a few UserBlocks
     * const { count } = await prisma.userBlock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserBlockDeleteManyArgs>(args?: SelectSubset<T, UserBlockDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserBlocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserBlocks
     * const userBlock = await prisma.userBlock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserBlockUpdateManyArgs>(args: SelectSubset<T, UserBlockUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserBlock.
     * @param {UserBlockUpsertArgs} args - Arguments to update or create a UserBlock.
     * @example
     * // Update or create a UserBlock
     * const userBlock = await prisma.userBlock.upsert({
     *   create: {
     *     // ... data to create a UserBlock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserBlock we want to update
     *   }
     * })
     */
    upsert<T extends UserBlockUpsertArgs>(args: SelectSubset<T, UserBlockUpsertArgs<ExtArgs>>): Prisma__UserBlockClient<$Result.GetResult<Prisma.$UserBlockPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserBlocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockCountArgs} args - Arguments to filter UserBlocks to count.
     * @example
     * // Count the number of UserBlocks
     * const count = await prisma.userBlock.count({
     *   where: {
     *     // ... the filter for the UserBlocks we want to count
     *   }
     * })
    **/
    count<T extends UserBlockCountArgs>(
      args?: Subset<T, UserBlockCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserBlockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserBlock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserBlockAggregateArgs>(args: Subset<T, UserBlockAggregateArgs>): Prisma.PrismaPromise<GetUserBlockAggregateType<T>>

    /**
     * Group by UserBlock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserBlockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserBlockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserBlockGroupByArgs['orderBy'] }
        : { orderBy?: UserBlockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserBlockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserBlockGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserBlock model
   */
  readonly fields: UserBlockFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserBlock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserBlockClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    blocked<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    blocker<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserBlock model
   */ 
  interface UserBlockFieldRefs {
    readonly id: FieldRef<"UserBlock", 'String'>
    readonly blockerId: FieldRef<"UserBlock", 'String'>
    readonly blockedId: FieldRef<"UserBlock", 'String'>
    readonly reason: FieldRef<"UserBlock", 'String'>
    readonly createdAt: FieldRef<"UserBlock", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserBlock findUnique
   */
  export type UserBlockFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter, which UserBlock to fetch.
     */
    where: UserBlockWhereUniqueInput
  }

  /**
   * UserBlock findUniqueOrThrow
   */
  export type UserBlockFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter, which UserBlock to fetch.
     */
    where: UserBlockWhereUniqueInput
  }

  /**
   * UserBlock findFirst
   */
  export type UserBlockFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter, which UserBlock to fetch.
     */
    where?: UserBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBlocks to fetch.
     */
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBlocks.
     */
    cursor?: UserBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBlocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBlocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBlocks.
     */
    distinct?: UserBlockScalarFieldEnum | UserBlockScalarFieldEnum[]
  }

  /**
   * UserBlock findFirstOrThrow
   */
  export type UserBlockFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter, which UserBlock to fetch.
     */
    where?: UserBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBlocks to fetch.
     */
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserBlocks.
     */
    cursor?: UserBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBlocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBlocks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserBlocks.
     */
    distinct?: UserBlockScalarFieldEnum | UserBlockScalarFieldEnum[]
  }

  /**
   * UserBlock findMany
   */
  export type UserBlockFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter, which UserBlocks to fetch.
     */
    where?: UserBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserBlocks to fetch.
     */
    orderBy?: UserBlockOrderByWithRelationInput | UserBlockOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserBlocks.
     */
    cursor?: UserBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserBlocks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserBlocks.
     */
    skip?: number
    distinct?: UserBlockScalarFieldEnum | UserBlockScalarFieldEnum[]
  }

  /**
   * UserBlock create
   */
  export type UserBlockCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * The data needed to create a UserBlock.
     */
    data: XOR<UserBlockCreateInput, UserBlockUncheckedCreateInput>
  }

  /**
   * UserBlock createMany
   */
  export type UserBlockCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserBlocks.
     */
    data: UserBlockCreateManyInput | UserBlockCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserBlock createManyAndReturn
   */
  export type UserBlockCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserBlocks.
     */
    data: UserBlockCreateManyInput | UserBlockCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserBlock update
   */
  export type UserBlockUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * The data needed to update a UserBlock.
     */
    data: XOR<UserBlockUpdateInput, UserBlockUncheckedUpdateInput>
    /**
     * Choose, which UserBlock to update.
     */
    where: UserBlockWhereUniqueInput
  }

  /**
   * UserBlock updateMany
   */
  export type UserBlockUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserBlocks.
     */
    data: XOR<UserBlockUpdateManyMutationInput, UserBlockUncheckedUpdateManyInput>
    /**
     * Filter which UserBlocks to update
     */
    where?: UserBlockWhereInput
  }

  /**
   * UserBlock upsert
   */
  export type UserBlockUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * The filter to search for the UserBlock to update in case it exists.
     */
    where: UserBlockWhereUniqueInput
    /**
     * In case the UserBlock found by the `where` argument doesn't exist, create a new UserBlock with this data.
     */
    create: XOR<UserBlockCreateInput, UserBlockUncheckedCreateInput>
    /**
     * In case the UserBlock was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserBlockUpdateInput, UserBlockUncheckedUpdateInput>
  }

  /**
   * UserBlock delete
   */
  export type UserBlockDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
    /**
     * Filter which UserBlock to delete.
     */
    where: UserBlockWhereUniqueInput
  }

  /**
   * UserBlock deleteMany
   */
  export type UserBlockDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserBlocks to delete
     */
    where?: UserBlockWhereInput
  }

  /**
   * UserBlock without action
   */
  export type UserBlockDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserBlock
     */
    select?: UserBlockSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserBlockInclude<ExtArgs> | null
  }


  /**
   * Model IdentityVerification
   */

  export type AggregateIdentityVerification = {
    _count: IdentityVerificationCountAggregateOutputType | null
    _min: IdentityVerificationMinAggregateOutputType | null
    _max: IdentityVerificationMaxAggregateOutputType | null
  }

  export type IdentityVerificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    documentType: string | null
    documentNumber: string | null
    selfieImage: string | null
    status: $Enums.VerificationStatus | null
    verifiedBy: string | null
    rejectionReason: string | null
    notes: string | null
    submittedAt: Date | null
    completedAt: Date | null
    expiresAt: Date | null
  }

  export type IdentityVerificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    documentType: string | null
    documentNumber: string | null
    selfieImage: string | null
    status: $Enums.VerificationStatus | null
    verifiedBy: string | null
    rejectionReason: string | null
    notes: string | null
    submittedAt: Date | null
    completedAt: Date | null
    expiresAt: Date | null
  }

  export type IdentityVerificationCountAggregateOutputType = {
    id: number
    userId: number
    documentType: number
    documentNumber: number
    documentImages: number
    selfieImage: number
    status: number
    verifiedBy: number
    rejectionReason: number
    notes: number
    submittedAt: number
    completedAt: number
    expiresAt: number
    _all: number
  }


  export type IdentityVerificationMinAggregateInputType = {
    id?: true
    userId?: true
    documentType?: true
    documentNumber?: true
    selfieImage?: true
    status?: true
    verifiedBy?: true
    rejectionReason?: true
    notes?: true
    submittedAt?: true
    completedAt?: true
    expiresAt?: true
  }

  export type IdentityVerificationMaxAggregateInputType = {
    id?: true
    userId?: true
    documentType?: true
    documentNumber?: true
    selfieImage?: true
    status?: true
    verifiedBy?: true
    rejectionReason?: true
    notes?: true
    submittedAt?: true
    completedAt?: true
    expiresAt?: true
  }

  export type IdentityVerificationCountAggregateInputType = {
    id?: true
    userId?: true
    documentType?: true
    documentNumber?: true
    documentImages?: true
    selfieImage?: true
    status?: true
    verifiedBy?: true
    rejectionReason?: true
    notes?: true
    submittedAt?: true
    completedAt?: true
    expiresAt?: true
    _all?: true
  }

  export type IdentityVerificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityVerification to aggregate.
     */
    where?: IdentityVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityVerifications to fetch.
     */
    orderBy?: IdentityVerificationOrderByWithRelationInput | IdentityVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: IdentityVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned IdentityVerifications
    **/
    _count?: true | IdentityVerificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentityVerificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentityVerificationMaxAggregateInputType
  }

  export type GetIdentityVerificationAggregateType<T extends IdentityVerificationAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentityVerification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentityVerification[P]>
      : GetScalarType<T[P], AggregateIdentityVerification[P]>
  }




  export type IdentityVerificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: IdentityVerificationWhereInput
    orderBy?: IdentityVerificationOrderByWithAggregationInput | IdentityVerificationOrderByWithAggregationInput[]
    by: IdentityVerificationScalarFieldEnum[] | IdentityVerificationScalarFieldEnum
    having?: IdentityVerificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentityVerificationCountAggregateInputType | true
    _min?: IdentityVerificationMinAggregateInputType
    _max?: IdentityVerificationMaxAggregateInputType
  }

  export type IdentityVerificationGroupByOutputType = {
    id: string
    userId: string
    documentType: string
    documentNumber: string
    documentImages: string[]
    selfieImage: string | null
    status: $Enums.VerificationStatus
    verifiedBy: string | null
    rejectionReason: string | null
    notes: string | null
    submittedAt: Date
    completedAt: Date | null
    expiresAt: Date | null
    _count: IdentityVerificationCountAggregateOutputType | null
    _min: IdentityVerificationMinAggregateOutputType | null
    _max: IdentityVerificationMaxAggregateOutputType | null
  }

  type GetIdentityVerificationGroupByPayload<T extends IdentityVerificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentityVerificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentityVerificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentityVerificationGroupByOutputType[P]>
            : GetScalarType<T[P], IdentityVerificationGroupByOutputType[P]>
        }
      >
    >


  export type IdentityVerificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentImages?: boolean
    selfieImage?: boolean
    status?: boolean
    verifiedBy?: boolean
    rejectionReason?: boolean
    notes?: boolean
    submittedAt?: boolean
    completedAt?: boolean
    expiresAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identityVerification"]>

  export type IdentityVerificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentImages?: boolean
    selfieImage?: boolean
    status?: boolean
    verifiedBy?: boolean
    rejectionReason?: boolean
    notes?: boolean
    submittedAt?: boolean
    completedAt?: boolean
    expiresAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identityVerification"]>

  export type IdentityVerificationSelectScalar = {
    id?: boolean
    userId?: boolean
    documentType?: boolean
    documentNumber?: boolean
    documentImages?: boolean
    selfieImage?: boolean
    status?: boolean
    verifiedBy?: boolean
    rejectionReason?: boolean
    notes?: boolean
    submittedAt?: boolean
    completedAt?: boolean
    expiresAt?: boolean
  }

  export type IdentityVerificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type IdentityVerificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $IdentityVerificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "IdentityVerification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      documentType: string
      documentNumber: string
      documentImages: string[]
      selfieImage: string | null
      status: $Enums.VerificationStatus
      verifiedBy: string | null
      rejectionReason: string | null
      notes: string | null
      submittedAt: Date
      completedAt: Date | null
      expiresAt: Date | null
    }, ExtArgs["result"]["identityVerification"]>
    composites: {}
  }

  type IdentityVerificationGetPayload<S extends boolean | null | undefined | IdentityVerificationDefaultArgs> = $Result.GetResult<Prisma.$IdentityVerificationPayload, S>

  type IdentityVerificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<IdentityVerificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: IdentityVerificationCountAggregateInputType | true
    }

  export interface IdentityVerificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['IdentityVerification'], meta: { name: 'IdentityVerification' } }
    /**
     * Find zero or one IdentityVerification that matches the filter.
     * @param {IdentityVerificationFindUniqueArgs} args - Arguments to find a IdentityVerification
     * @example
     * // Get one IdentityVerification
     * const identityVerification = await prisma.identityVerification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends IdentityVerificationFindUniqueArgs>(args: SelectSubset<T, IdentityVerificationFindUniqueArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one IdentityVerification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {IdentityVerificationFindUniqueOrThrowArgs} args - Arguments to find a IdentityVerification
     * @example
     * // Get one IdentityVerification
     * const identityVerification = await prisma.identityVerification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends IdentityVerificationFindUniqueOrThrowArgs>(args: SelectSubset<T, IdentityVerificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first IdentityVerification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationFindFirstArgs} args - Arguments to find a IdentityVerification
     * @example
     * // Get one IdentityVerification
     * const identityVerification = await prisma.identityVerification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends IdentityVerificationFindFirstArgs>(args?: SelectSubset<T, IdentityVerificationFindFirstArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first IdentityVerification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationFindFirstOrThrowArgs} args - Arguments to find a IdentityVerification
     * @example
     * // Get one IdentityVerification
     * const identityVerification = await prisma.identityVerification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends IdentityVerificationFindFirstOrThrowArgs>(args?: SelectSubset<T, IdentityVerificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more IdentityVerifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all IdentityVerifications
     * const identityVerifications = await prisma.identityVerification.findMany()
     * 
     * // Get first 10 IdentityVerifications
     * const identityVerifications = await prisma.identityVerification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const identityVerificationWithIdOnly = await prisma.identityVerification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends IdentityVerificationFindManyArgs>(args?: SelectSubset<T, IdentityVerificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a IdentityVerification.
     * @param {IdentityVerificationCreateArgs} args - Arguments to create a IdentityVerification.
     * @example
     * // Create one IdentityVerification
     * const IdentityVerification = await prisma.identityVerification.create({
     *   data: {
     *     // ... data to create a IdentityVerification
     *   }
     * })
     * 
     */
    create<T extends IdentityVerificationCreateArgs>(args: SelectSubset<T, IdentityVerificationCreateArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many IdentityVerifications.
     * @param {IdentityVerificationCreateManyArgs} args - Arguments to create many IdentityVerifications.
     * @example
     * // Create many IdentityVerifications
     * const identityVerification = await prisma.identityVerification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends IdentityVerificationCreateManyArgs>(args?: SelectSubset<T, IdentityVerificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many IdentityVerifications and returns the data saved in the database.
     * @param {IdentityVerificationCreateManyAndReturnArgs} args - Arguments to create many IdentityVerifications.
     * @example
     * // Create many IdentityVerifications
     * const identityVerification = await prisma.identityVerification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many IdentityVerifications and only return the `id`
     * const identityVerificationWithIdOnly = await prisma.identityVerification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends IdentityVerificationCreateManyAndReturnArgs>(args?: SelectSubset<T, IdentityVerificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a IdentityVerification.
     * @param {IdentityVerificationDeleteArgs} args - Arguments to delete one IdentityVerification.
     * @example
     * // Delete one IdentityVerification
     * const IdentityVerification = await prisma.identityVerification.delete({
     *   where: {
     *     // ... filter to delete one IdentityVerification
     *   }
     * })
     * 
     */
    delete<T extends IdentityVerificationDeleteArgs>(args: SelectSubset<T, IdentityVerificationDeleteArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one IdentityVerification.
     * @param {IdentityVerificationUpdateArgs} args - Arguments to update one IdentityVerification.
     * @example
     * // Update one IdentityVerification
     * const identityVerification = await prisma.identityVerification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends IdentityVerificationUpdateArgs>(args: SelectSubset<T, IdentityVerificationUpdateArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more IdentityVerifications.
     * @param {IdentityVerificationDeleteManyArgs} args - Arguments to filter IdentityVerifications to delete.
     * @example
     * // Delete a few IdentityVerifications
     * const { count } = await prisma.identityVerification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends IdentityVerificationDeleteManyArgs>(args?: SelectSubset<T, IdentityVerificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more IdentityVerifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many IdentityVerifications
     * const identityVerification = await prisma.identityVerification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends IdentityVerificationUpdateManyArgs>(args: SelectSubset<T, IdentityVerificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one IdentityVerification.
     * @param {IdentityVerificationUpsertArgs} args - Arguments to update or create a IdentityVerification.
     * @example
     * // Update or create a IdentityVerification
     * const identityVerification = await prisma.identityVerification.upsert({
     *   create: {
     *     // ... data to create a IdentityVerification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the IdentityVerification we want to update
     *   }
     * })
     */
    upsert<T extends IdentityVerificationUpsertArgs>(args: SelectSubset<T, IdentityVerificationUpsertArgs<ExtArgs>>): Prisma__IdentityVerificationClient<$Result.GetResult<Prisma.$IdentityVerificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of IdentityVerifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationCountArgs} args - Arguments to filter IdentityVerifications to count.
     * @example
     * // Count the number of IdentityVerifications
     * const count = await prisma.identityVerification.count({
     *   where: {
     *     // ... the filter for the IdentityVerifications we want to count
     *   }
     * })
    **/
    count<T extends IdentityVerificationCountArgs>(
      args?: Subset<T, IdentityVerificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentityVerificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a IdentityVerification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentityVerificationAggregateArgs>(args: Subset<T, IdentityVerificationAggregateArgs>): Prisma.PrismaPromise<GetIdentityVerificationAggregateType<T>>

    /**
     * Group by IdentityVerification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentityVerificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends IdentityVerificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: IdentityVerificationGroupByArgs['orderBy'] }
        : { orderBy?: IdentityVerificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, IdentityVerificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentityVerificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the IdentityVerification model
   */
  readonly fields: IdentityVerificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for IdentityVerification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__IdentityVerificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the IdentityVerification model
   */ 
  interface IdentityVerificationFieldRefs {
    readonly id: FieldRef<"IdentityVerification", 'String'>
    readonly userId: FieldRef<"IdentityVerification", 'String'>
    readonly documentType: FieldRef<"IdentityVerification", 'String'>
    readonly documentNumber: FieldRef<"IdentityVerification", 'String'>
    readonly documentImages: FieldRef<"IdentityVerification", 'String[]'>
    readonly selfieImage: FieldRef<"IdentityVerification", 'String'>
    readonly status: FieldRef<"IdentityVerification", 'VerificationStatus'>
    readonly verifiedBy: FieldRef<"IdentityVerification", 'String'>
    readonly rejectionReason: FieldRef<"IdentityVerification", 'String'>
    readonly notes: FieldRef<"IdentityVerification", 'String'>
    readonly submittedAt: FieldRef<"IdentityVerification", 'DateTime'>
    readonly completedAt: FieldRef<"IdentityVerification", 'DateTime'>
    readonly expiresAt: FieldRef<"IdentityVerification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * IdentityVerification findUnique
   */
  export type IdentityVerificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter, which IdentityVerification to fetch.
     */
    where: IdentityVerificationWhereUniqueInput
  }

  /**
   * IdentityVerification findUniqueOrThrow
   */
  export type IdentityVerificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter, which IdentityVerification to fetch.
     */
    where: IdentityVerificationWhereUniqueInput
  }

  /**
   * IdentityVerification findFirst
   */
  export type IdentityVerificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter, which IdentityVerification to fetch.
     */
    where?: IdentityVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityVerifications to fetch.
     */
    orderBy?: IdentityVerificationOrderByWithRelationInput | IdentityVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityVerifications.
     */
    cursor?: IdentityVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityVerifications.
     */
    distinct?: IdentityVerificationScalarFieldEnum | IdentityVerificationScalarFieldEnum[]
  }

  /**
   * IdentityVerification findFirstOrThrow
   */
  export type IdentityVerificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter, which IdentityVerification to fetch.
     */
    where?: IdentityVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityVerifications to fetch.
     */
    orderBy?: IdentityVerificationOrderByWithRelationInput | IdentityVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for IdentityVerifications.
     */
    cursor?: IdentityVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of IdentityVerifications.
     */
    distinct?: IdentityVerificationScalarFieldEnum | IdentityVerificationScalarFieldEnum[]
  }

  /**
   * IdentityVerification findMany
   */
  export type IdentityVerificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter, which IdentityVerifications to fetch.
     */
    where?: IdentityVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of IdentityVerifications to fetch.
     */
    orderBy?: IdentityVerificationOrderByWithRelationInput | IdentityVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing IdentityVerifications.
     */
    cursor?: IdentityVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` IdentityVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` IdentityVerifications.
     */
    skip?: number
    distinct?: IdentityVerificationScalarFieldEnum | IdentityVerificationScalarFieldEnum[]
  }

  /**
   * IdentityVerification create
   */
  export type IdentityVerificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * The data needed to create a IdentityVerification.
     */
    data: XOR<IdentityVerificationCreateInput, IdentityVerificationUncheckedCreateInput>
  }

  /**
   * IdentityVerification createMany
   */
  export type IdentityVerificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many IdentityVerifications.
     */
    data: IdentityVerificationCreateManyInput | IdentityVerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * IdentityVerification createManyAndReturn
   */
  export type IdentityVerificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many IdentityVerifications.
     */
    data: IdentityVerificationCreateManyInput | IdentityVerificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * IdentityVerification update
   */
  export type IdentityVerificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * The data needed to update a IdentityVerification.
     */
    data: XOR<IdentityVerificationUpdateInput, IdentityVerificationUncheckedUpdateInput>
    /**
     * Choose, which IdentityVerification to update.
     */
    where: IdentityVerificationWhereUniqueInput
  }

  /**
   * IdentityVerification updateMany
   */
  export type IdentityVerificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update IdentityVerifications.
     */
    data: XOR<IdentityVerificationUpdateManyMutationInput, IdentityVerificationUncheckedUpdateManyInput>
    /**
     * Filter which IdentityVerifications to update
     */
    where?: IdentityVerificationWhereInput
  }

  /**
   * IdentityVerification upsert
   */
  export type IdentityVerificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * The filter to search for the IdentityVerification to update in case it exists.
     */
    where: IdentityVerificationWhereUniqueInput
    /**
     * In case the IdentityVerification found by the `where` argument doesn't exist, create a new IdentityVerification with this data.
     */
    create: XOR<IdentityVerificationCreateInput, IdentityVerificationUncheckedCreateInput>
    /**
     * In case the IdentityVerification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<IdentityVerificationUpdateInput, IdentityVerificationUncheckedUpdateInput>
  }

  /**
   * IdentityVerification delete
   */
  export type IdentityVerificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
    /**
     * Filter which IdentityVerification to delete.
     */
    where: IdentityVerificationWhereUniqueInput
  }

  /**
   * IdentityVerification deleteMany
   */
  export type IdentityVerificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which IdentityVerifications to delete
     */
    where?: IdentityVerificationWhereInput
  }

  /**
   * IdentityVerification without action
   */
  export type IdentityVerificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IdentityVerification
     */
    select?: IdentityVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: IdentityVerificationInclude<ExtArgs> | null
  }


  /**
   * Model SubscriptionPlan
   */

  export type AggregateSubscriptionPlan = {
    _count: SubscriptionPlanCountAggregateOutputType | null
    _avg: SubscriptionPlanAvgAggregateOutputType | null
    _sum: SubscriptionPlanSumAggregateOutputType | null
    _min: SubscriptionPlanMinAggregateOutputType | null
    _max: SubscriptionPlanMaxAggregateOutputType | null
  }

  export type SubscriptionPlanAvgAggregateOutputType = {
    price: number | null
    duration: number | null
    priority: number | null
    maxPosts: number | null
    maxImages: number | null
    maxBoosts: number | null
  }

  export type SubscriptionPlanSumAggregateOutputType = {
    price: number | null
    duration: number | null
    priority: number | null
    maxPosts: number | null
    maxImages: number | null
    maxBoosts: number | null
  }

  export type SubscriptionPlanMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    duration: number | null
    isActive: boolean | null
    userType: $Enums.UserType | null
    priority: number | null
    maxPosts: number | null
    maxImages: number | null
    maxBoosts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionPlanMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    duration: number | null
    isActive: boolean | null
    userType: $Enums.UserType | null
    priority: number | null
    maxPosts: number | null
    maxImages: number | null
    maxBoosts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionPlanCountAggregateOutputType = {
    id: number
    name: number
    description: number
    price: number
    duration: number
    features: number
    isActive: number
    userType: number
    priority: number
    maxPosts: number
    maxImages: number
    maxBoosts: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionPlanAvgAggregateInputType = {
    price?: true
    duration?: true
    priority?: true
    maxPosts?: true
    maxImages?: true
    maxBoosts?: true
  }

  export type SubscriptionPlanSumAggregateInputType = {
    price?: true
    duration?: true
    priority?: true
    maxPosts?: true
    maxImages?: true
    maxBoosts?: true
  }

  export type SubscriptionPlanMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    duration?: true
    isActive?: true
    userType?: true
    priority?: true
    maxPosts?: true
    maxImages?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionPlanMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    duration?: true
    isActive?: true
    userType?: true
    priority?: true
    maxPosts?: true
    maxImages?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionPlanCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    duration?: true
    features?: true
    isActive?: true
    userType?: true
    priority?: true
    maxPosts?: true
    maxImages?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionPlanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionPlan to aggregate.
     */
    where?: SubscriptionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionPlans to fetch.
     */
    orderBy?: SubscriptionPlanOrderByWithRelationInput | SubscriptionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SubscriptionPlans
    **/
    _count?: true | SubscriptionPlanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionPlanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionPlanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionPlanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionPlanMaxAggregateInputType
  }

  export type GetSubscriptionPlanAggregateType<T extends SubscriptionPlanAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscriptionPlan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscriptionPlan[P]>
      : GetScalarType<T[P], AggregateSubscriptionPlan[P]>
  }




  export type SubscriptionPlanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionPlanWhereInput
    orderBy?: SubscriptionPlanOrderByWithAggregationInput | SubscriptionPlanOrderByWithAggregationInput[]
    by: SubscriptionPlanScalarFieldEnum[] | SubscriptionPlanScalarFieldEnum
    having?: SubscriptionPlanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionPlanCountAggregateInputType | true
    _avg?: SubscriptionPlanAvgAggregateInputType
    _sum?: SubscriptionPlanSumAggregateInputType
    _min?: SubscriptionPlanMinAggregateInputType
    _max?: SubscriptionPlanMaxAggregateInputType
  }

  export type SubscriptionPlanGroupByOutputType = {
    id: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonValue
    isActive: boolean
    userType: $Enums.UserType
    priority: number
    maxPosts: number | null
    maxImages: number | null
    maxBoosts: number | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionPlanCountAggregateOutputType | null
    _avg: SubscriptionPlanAvgAggregateOutputType | null
    _sum: SubscriptionPlanSumAggregateOutputType | null
    _min: SubscriptionPlanMinAggregateOutputType | null
    _max: SubscriptionPlanMaxAggregateOutputType | null
  }

  type GetSubscriptionPlanGroupByPayload<T extends SubscriptionPlanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionPlanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionPlanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionPlanGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionPlanGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionPlanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    duration?: boolean
    features?: boolean
    isActive?: boolean
    userType?: boolean
    priority?: boolean
    maxPosts?: boolean
    maxImages?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    subscriptions?: boolean | SubscriptionPlan$subscriptionsArgs<ExtArgs>
    _count?: boolean | SubscriptionPlanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscriptionPlan"]>

  export type SubscriptionPlanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    duration?: boolean
    features?: boolean
    isActive?: boolean
    userType?: boolean
    priority?: boolean
    maxPosts?: boolean
    maxImages?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["subscriptionPlan"]>

  export type SubscriptionPlanSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    duration?: boolean
    features?: boolean
    isActive?: boolean
    userType?: boolean
    priority?: boolean
    maxPosts?: boolean
    maxImages?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscriptionPlanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subscriptions?: boolean | SubscriptionPlan$subscriptionsArgs<ExtArgs>
    _count?: boolean | SubscriptionPlanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SubscriptionPlanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SubscriptionPlanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SubscriptionPlan"
    objects: {
      subscriptions: Prisma.$SubscriptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string
      price: number
      duration: number
      features: Prisma.JsonValue
      isActive: boolean
      userType: $Enums.UserType
      priority: number
      maxPosts: number | null
      maxImages: number | null
      maxBoosts: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscriptionPlan"]>
    composites: {}
  }

  type SubscriptionPlanGetPayload<S extends boolean | null | undefined | SubscriptionPlanDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionPlanPayload, S>

  type SubscriptionPlanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubscriptionPlanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubscriptionPlanCountAggregateInputType | true
    }

  export interface SubscriptionPlanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SubscriptionPlan'], meta: { name: 'SubscriptionPlan' } }
    /**
     * Find zero or one SubscriptionPlan that matches the filter.
     * @param {SubscriptionPlanFindUniqueArgs} args - Arguments to find a SubscriptionPlan
     * @example
     * // Get one SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionPlanFindUniqueArgs>(args: SelectSubset<T, SubscriptionPlanFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SubscriptionPlan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubscriptionPlanFindUniqueOrThrowArgs} args - Arguments to find a SubscriptionPlan
     * @example
     * // Get one SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionPlanFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionPlanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SubscriptionPlan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanFindFirstArgs} args - Arguments to find a SubscriptionPlan
     * @example
     * // Get one SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionPlanFindFirstArgs>(args?: SelectSubset<T, SubscriptionPlanFindFirstArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SubscriptionPlan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanFindFirstOrThrowArgs} args - Arguments to find a SubscriptionPlan
     * @example
     * // Get one SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionPlanFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionPlanFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SubscriptionPlans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SubscriptionPlans
     * const subscriptionPlans = await prisma.subscriptionPlan.findMany()
     * 
     * // Get first 10 SubscriptionPlans
     * const subscriptionPlans = await prisma.subscriptionPlan.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionPlanWithIdOnly = await prisma.subscriptionPlan.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionPlanFindManyArgs>(args?: SelectSubset<T, SubscriptionPlanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SubscriptionPlan.
     * @param {SubscriptionPlanCreateArgs} args - Arguments to create a SubscriptionPlan.
     * @example
     * // Create one SubscriptionPlan
     * const SubscriptionPlan = await prisma.subscriptionPlan.create({
     *   data: {
     *     // ... data to create a SubscriptionPlan
     *   }
     * })
     * 
     */
    create<T extends SubscriptionPlanCreateArgs>(args: SelectSubset<T, SubscriptionPlanCreateArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SubscriptionPlans.
     * @param {SubscriptionPlanCreateManyArgs} args - Arguments to create many SubscriptionPlans.
     * @example
     * // Create many SubscriptionPlans
     * const subscriptionPlan = await prisma.subscriptionPlan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionPlanCreateManyArgs>(args?: SelectSubset<T, SubscriptionPlanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SubscriptionPlans and returns the data saved in the database.
     * @param {SubscriptionPlanCreateManyAndReturnArgs} args - Arguments to create many SubscriptionPlans.
     * @example
     * // Create many SubscriptionPlans
     * const subscriptionPlan = await prisma.subscriptionPlan.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SubscriptionPlans and only return the `id`
     * const subscriptionPlanWithIdOnly = await prisma.subscriptionPlan.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionPlanCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionPlanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a SubscriptionPlan.
     * @param {SubscriptionPlanDeleteArgs} args - Arguments to delete one SubscriptionPlan.
     * @example
     * // Delete one SubscriptionPlan
     * const SubscriptionPlan = await prisma.subscriptionPlan.delete({
     *   where: {
     *     // ... filter to delete one SubscriptionPlan
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionPlanDeleteArgs>(args: SelectSubset<T, SubscriptionPlanDeleteArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SubscriptionPlan.
     * @param {SubscriptionPlanUpdateArgs} args - Arguments to update one SubscriptionPlan.
     * @example
     * // Update one SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionPlanUpdateArgs>(args: SelectSubset<T, SubscriptionPlanUpdateArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SubscriptionPlans.
     * @param {SubscriptionPlanDeleteManyArgs} args - Arguments to filter SubscriptionPlans to delete.
     * @example
     * // Delete a few SubscriptionPlans
     * const { count } = await prisma.subscriptionPlan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionPlanDeleteManyArgs>(args?: SelectSubset<T, SubscriptionPlanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SubscriptionPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SubscriptionPlans
     * const subscriptionPlan = await prisma.subscriptionPlan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionPlanUpdateManyArgs>(args: SelectSubset<T, SubscriptionPlanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SubscriptionPlan.
     * @param {SubscriptionPlanUpsertArgs} args - Arguments to update or create a SubscriptionPlan.
     * @example
     * // Update or create a SubscriptionPlan
     * const subscriptionPlan = await prisma.subscriptionPlan.upsert({
     *   create: {
     *     // ... data to create a SubscriptionPlan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SubscriptionPlan we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionPlanUpsertArgs>(args: SelectSubset<T, SubscriptionPlanUpsertArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SubscriptionPlans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanCountArgs} args - Arguments to filter SubscriptionPlans to count.
     * @example
     * // Count the number of SubscriptionPlans
     * const count = await prisma.subscriptionPlan.count({
     *   where: {
     *     // ... the filter for the SubscriptionPlans we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionPlanCountArgs>(
      args?: Subset<T, SubscriptionPlanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionPlanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SubscriptionPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionPlanAggregateArgs>(args: Subset<T, SubscriptionPlanAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionPlanAggregateType<T>>

    /**
     * Group by SubscriptionPlan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionPlanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionPlanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionPlanGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionPlanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionPlanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionPlanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SubscriptionPlan model
   */
  readonly fields: SubscriptionPlanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SubscriptionPlan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionPlanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subscriptions<T extends SubscriptionPlan$subscriptionsArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionPlan$subscriptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SubscriptionPlan model
   */ 
  interface SubscriptionPlanFieldRefs {
    readonly id: FieldRef<"SubscriptionPlan", 'String'>
    readonly name: FieldRef<"SubscriptionPlan", 'String'>
    readonly description: FieldRef<"SubscriptionPlan", 'String'>
    readonly price: FieldRef<"SubscriptionPlan", 'Float'>
    readonly duration: FieldRef<"SubscriptionPlan", 'Int'>
    readonly features: FieldRef<"SubscriptionPlan", 'Json'>
    readonly isActive: FieldRef<"SubscriptionPlan", 'Boolean'>
    readonly userType: FieldRef<"SubscriptionPlan", 'UserType'>
    readonly priority: FieldRef<"SubscriptionPlan", 'Int'>
    readonly maxPosts: FieldRef<"SubscriptionPlan", 'Int'>
    readonly maxImages: FieldRef<"SubscriptionPlan", 'Int'>
    readonly maxBoosts: FieldRef<"SubscriptionPlan", 'Int'>
    readonly createdAt: FieldRef<"SubscriptionPlan", 'DateTime'>
    readonly updatedAt: FieldRef<"SubscriptionPlan", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SubscriptionPlan findUnique
   */
  export type SubscriptionPlanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionPlan to fetch.
     */
    where: SubscriptionPlanWhereUniqueInput
  }

  /**
   * SubscriptionPlan findUniqueOrThrow
   */
  export type SubscriptionPlanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionPlan to fetch.
     */
    where: SubscriptionPlanWhereUniqueInput
  }

  /**
   * SubscriptionPlan findFirst
   */
  export type SubscriptionPlanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionPlan to fetch.
     */
    where?: SubscriptionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionPlans to fetch.
     */
    orderBy?: SubscriptionPlanOrderByWithRelationInput | SubscriptionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionPlans.
     */
    cursor?: SubscriptionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionPlans.
     */
    distinct?: SubscriptionPlanScalarFieldEnum | SubscriptionPlanScalarFieldEnum[]
  }

  /**
   * SubscriptionPlan findFirstOrThrow
   */
  export type SubscriptionPlanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionPlan to fetch.
     */
    where?: SubscriptionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionPlans to fetch.
     */
    orderBy?: SubscriptionPlanOrderByWithRelationInput | SubscriptionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SubscriptionPlans.
     */
    cursor?: SubscriptionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionPlans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SubscriptionPlans.
     */
    distinct?: SubscriptionPlanScalarFieldEnum | SubscriptionPlanScalarFieldEnum[]
  }

  /**
   * SubscriptionPlan findMany
   */
  export type SubscriptionPlanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter, which SubscriptionPlans to fetch.
     */
    where?: SubscriptionPlanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SubscriptionPlans to fetch.
     */
    orderBy?: SubscriptionPlanOrderByWithRelationInput | SubscriptionPlanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SubscriptionPlans.
     */
    cursor?: SubscriptionPlanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SubscriptionPlans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SubscriptionPlans.
     */
    skip?: number
    distinct?: SubscriptionPlanScalarFieldEnum | SubscriptionPlanScalarFieldEnum[]
  }

  /**
   * SubscriptionPlan create
   */
  export type SubscriptionPlanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * The data needed to create a SubscriptionPlan.
     */
    data: XOR<SubscriptionPlanCreateInput, SubscriptionPlanUncheckedCreateInput>
  }

  /**
   * SubscriptionPlan createMany
   */
  export type SubscriptionPlanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SubscriptionPlans.
     */
    data: SubscriptionPlanCreateManyInput | SubscriptionPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscriptionPlan createManyAndReturn
   */
  export type SubscriptionPlanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SubscriptionPlans.
     */
    data: SubscriptionPlanCreateManyInput | SubscriptionPlanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SubscriptionPlan update
   */
  export type SubscriptionPlanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * The data needed to update a SubscriptionPlan.
     */
    data: XOR<SubscriptionPlanUpdateInput, SubscriptionPlanUncheckedUpdateInput>
    /**
     * Choose, which SubscriptionPlan to update.
     */
    where: SubscriptionPlanWhereUniqueInput
  }

  /**
   * SubscriptionPlan updateMany
   */
  export type SubscriptionPlanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SubscriptionPlans.
     */
    data: XOR<SubscriptionPlanUpdateManyMutationInput, SubscriptionPlanUncheckedUpdateManyInput>
    /**
     * Filter which SubscriptionPlans to update
     */
    where?: SubscriptionPlanWhereInput
  }

  /**
   * SubscriptionPlan upsert
   */
  export type SubscriptionPlanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * The filter to search for the SubscriptionPlan to update in case it exists.
     */
    where: SubscriptionPlanWhereUniqueInput
    /**
     * In case the SubscriptionPlan found by the `where` argument doesn't exist, create a new SubscriptionPlan with this data.
     */
    create: XOR<SubscriptionPlanCreateInput, SubscriptionPlanUncheckedCreateInput>
    /**
     * In case the SubscriptionPlan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionPlanUpdateInput, SubscriptionPlanUncheckedUpdateInput>
  }

  /**
   * SubscriptionPlan delete
   */
  export type SubscriptionPlanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
    /**
     * Filter which SubscriptionPlan to delete.
     */
    where: SubscriptionPlanWhereUniqueInput
  }

  /**
   * SubscriptionPlan deleteMany
   */
  export type SubscriptionPlanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SubscriptionPlans to delete
     */
    where?: SubscriptionPlanWhereInput
  }

  /**
   * SubscriptionPlan.subscriptions
   */
  export type SubscriptionPlan$subscriptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    cursor?: SubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * SubscriptionPlan without action
   */
  export type SubscriptionPlanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubscriptionPlan
     */
    select?: SubscriptionPlanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionPlanInclude<ExtArgs> | null
  }


  /**
   * Model Subscription
   */

  export type AggregateSubscription = {
    _count: SubscriptionCountAggregateOutputType | null
    _avg: SubscriptionAvgAggregateOutputType | null
    _sum: SubscriptionSumAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  export type SubscriptionAvgAggregateOutputType = {
    postsUsed: number | null
    imagesUsed: number | null
    boostsUsed: number | null
  }

  export type SubscriptionSumAggregateOutputType = {
    postsUsed: number | null
    imagesUsed: number | null
    boostsUsed: number | null
  }

  export type SubscriptionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    planId: string | null
    status: $Enums.SubscriptionStatus | null
    stripeSubscriptionId: string | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    postsUsed: number | null
    imagesUsed: number | null
    boostsUsed: number | null
    startsAt: Date | null
    endsAt: Date | null
    cancelledAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    planId: string | null
    status: $Enums.SubscriptionStatus | null
    stripeSubscriptionId: string | null
    currentPeriodStart: Date | null
    currentPeriodEnd: Date | null
    postsUsed: number | null
    imagesUsed: number | null
    boostsUsed: number | null
    startsAt: Date | null
    endsAt: Date | null
    cancelledAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SubscriptionCountAggregateOutputType = {
    id: number
    userId: number
    planId: number
    status: number
    stripeSubscriptionId: number
    currentPeriodStart: number
    currentPeriodEnd: number
    postsUsed: number
    imagesUsed: number
    boostsUsed: number
    startsAt: number
    endsAt: number
    cancelledAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SubscriptionAvgAggregateInputType = {
    postsUsed?: true
    imagesUsed?: true
    boostsUsed?: true
  }

  export type SubscriptionSumAggregateInputType = {
    postsUsed?: true
    imagesUsed?: true
    boostsUsed?: true
  }

  export type SubscriptionMinAggregateInputType = {
    id?: true
    userId?: true
    planId?: true
    status?: true
    stripeSubscriptionId?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    postsUsed?: true
    imagesUsed?: true
    boostsUsed?: true
    startsAt?: true
    endsAt?: true
    cancelledAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionMaxAggregateInputType = {
    id?: true
    userId?: true
    planId?: true
    status?: true
    stripeSubscriptionId?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    postsUsed?: true
    imagesUsed?: true
    boostsUsed?: true
    startsAt?: true
    endsAt?: true
    cancelledAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SubscriptionCountAggregateInputType = {
    id?: true
    userId?: true
    planId?: true
    status?: true
    stripeSubscriptionId?: true
    currentPeriodStart?: true
    currentPeriodEnd?: true
    postsUsed?: true
    imagesUsed?: true
    boostsUsed?: true
    startsAt?: true
    endsAt?: true
    cancelledAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscription to aggregate.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subscriptions
    **/
    _count?: true | SubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubscriptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubscriptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubscriptionMaxAggregateInputType
  }

  export type GetSubscriptionAggregateType<T extends SubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubscription[P]>
      : GetScalarType<T[P], AggregateSubscription[P]>
  }




  export type SubscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubscriptionWhereInput
    orderBy?: SubscriptionOrderByWithAggregationInput | SubscriptionOrderByWithAggregationInput[]
    by: SubscriptionScalarFieldEnum[] | SubscriptionScalarFieldEnum
    having?: SubscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubscriptionCountAggregateInputType | true
    _avg?: SubscriptionAvgAggregateInputType
    _sum?: SubscriptionSumAggregateInputType
    _min?: SubscriptionMinAggregateInputType
    _max?: SubscriptionMaxAggregateInputType
  }

  export type SubscriptionGroupByOutputType = {
    id: string
    userId: string
    planId: string
    status: $Enums.SubscriptionStatus
    stripeSubscriptionId: string | null
    currentPeriodStart: Date
    currentPeriodEnd: Date
    postsUsed: number
    imagesUsed: number
    boostsUsed: number
    startsAt: Date
    endsAt: Date
    cancelledAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: SubscriptionCountAggregateOutputType | null
    _avg: SubscriptionAvgAggregateOutputType | null
    _sum: SubscriptionSumAggregateOutputType | null
    _min: SubscriptionMinAggregateOutputType | null
    _max: SubscriptionMaxAggregateOutputType | null
  }

  type GetSubscriptionGroupByPayload<T extends SubscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], SubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type SubscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    planId?: boolean
    status?: boolean
    stripeSubscriptionId?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    postsUsed?: boolean
    imagesUsed?: boolean
    boostsUsed?: boolean
    startsAt?: boolean
    endsAt?: boolean
    cancelledAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    plan?: boolean | SubscriptionPlanDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    planId?: boolean
    status?: boolean
    stripeSubscriptionId?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    postsUsed?: boolean
    imagesUsed?: boolean
    boostsUsed?: boolean
    startsAt?: boolean
    endsAt?: boolean
    cancelledAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    plan?: boolean | SubscriptionPlanDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subscription"]>

  export type SubscriptionSelectScalar = {
    id?: boolean
    userId?: boolean
    planId?: boolean
    status?: boolean
    stripeSubscriptionId?: boolean
    currentPeriodStart?: boolean
    currentPeriodEnd?: boolean
    postsUsed?: boolean
    imagesUsed?: boolean
    boostsUsed?: boolean
    startsAt?: boolean
    endsAt?: boolean
    cancelledAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SubscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    plan?: boolean | SubscriptionPlanDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SubscriptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    plan?: boolean | SubscriptionPlanDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SubscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subscription"
    objects: {
      plan: Prisma.$SubscriptionPlanPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      planId: string
      status: $Enums.SubscriptionStatus
      stripeSubscriptionId: string | null
      currentPeriodStart: Date
      currentPeriodEnd: Date
      postsUsed: number
      imagesUsed: number
      boostsUsed: number
      startsAt: Date
      endsAt: Date
      cancelledAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["subscription"]>
    composites: {}
  }

  type SubscriptionGetPayload<S extends boolean | null | undefined | SubscriptionDefaultArgs> = $Result.GetResult<Prisma.$SubscriptionPayload, S>

  type SubscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubscriptionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubscriptionCountAggregateInputType | true
    }

  export interface SubscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subscription'], meta: { name: 'Subscription' } }
    /**
     * Find zero or one Subscription that matches the filter.
     * @param {SubscriptionFindUniqueArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubscriptionFindUniqueArgs>(args: SelectSubset<T, SubscriptionFindUniqueArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Subscription that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubscriptionFindUniqueOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, SubscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Subscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubscriptionFindFirstArgs>(args?: SelectSubset<T, SubscriptionFindFirstArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Subscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindFirstOrThrowArgs} args - Arguments to find a Subscription
     * @example
     * // Get one Subscription
     * const subscription = await prisma.subscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, SubscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Subscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subscriptions
     * const subscriptions = await prisma.subscription.findMany()
     * 
     * // Get first 10 Subscriptions
     * const subscriptions = await prisma.subscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubscriptionFindManyArgs>(args?: SelectSubset<T, SubscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Subscription.
     * @param {SubscriptionCreateArgs} args - Arguments to create a Subscription.
     * @example
     * // Create one Subscription
     * const Subscription = await prisma.subscription.create({
     *   data: {
     *     // ... data to create a Subscription
     *   }
     * })
     * 
     */
    create<T extends SubscriptionCreateArgs>(args: SelectSubset<T, SubscriptionCreateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Subscriptions.
     * @param {SubscriptionCreateManyArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubscriptionCreateManyArgs>(args?: SelectSubset<T, SubscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Subscriptions and returns the data saved in the database.
     * @param {SubscriptionCreateManyAndReturnArgs} args - Arguments to create many Subscriptions.
     * @example
     * // Create many Subscriptions
     * const subscription = await prisma.subscription.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Subscriptions and only return the `id`
     * const subscriptionWithIdOnly = await prisma.subscription.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SubscriptionCreateManyAndReturnArgs>(args?: SelectSubset<T, SubscriptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Subscription.
     * @param {SubscriptionDeleteArgs} args - Arguments to delete one Subscription.
     * @example
     * // Delete one Subscription
     * const Subscription = await prisma.subscription.delete({
     *   where: {
     *     // ... filter to delete one Subscription
     *   }
     * })
     * 
     */
    delete<T extends SubscriptionDeleteArgs>(args: SelectSubset<T, SubscriptionDeleteArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Subscription.
     * @param {SubscriptionUpdateArgs} args - Arguments to update one Subscription.
     * @example
     * // Update one Subscription
     * const subscription = await prisma.subscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubscriptionUpdateArgs>(args: SelectSubset<T, SubscriptionUpdateArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Subscriptions.
     * @param {SubscriptionDeleteManyArgs} args - Arguments to filter Subscriptions to delete.
     * @example
     * // Delete a few Subscriptions
     * const { count } = await prisma.subscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubscriptionDeleteManyArgs>(args?: SelectSubset<T, SubscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subscriptions
     * const subscription = await prisma.subscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubscriptionUpdateManyArgs>(args: SelectSubset<T, SubscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subscription.
     * @param {SubscriptionUpsertArgs} args - Arguments to update or create a Subscription.
     * @example
     * // Update or create a Subscription
     * const subscription = await prisma.subscription.upsert({
     *   create: {
     *     // ... data to create a Subscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subscription we want to update
     *   }
     * })
     */
    upsert<T extends SubscriptionUpsertArgs>(args: SelectSubset<T, SubscriptionUpsertArgs<ExtArgs>>): Prisma__SubscriptionClient<$Result.GetResult<Prisma.$SubscriptionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Subscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionCountArgs} args - Arguments to filter Subscriptions to count.
     * @example
     * // Count the number of Subscriptions
     * const count = await prisma.subscription.count({
     *   where: {
     *     // ... the filter for the Subscriptions we want to count
     *   }
     * })
    **/
    count<T extends SubscriptionCountArgs>(
      args?: Subset<T, SubscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubscriptionAggregateArgs>(args: Subset<T, SubscriptionAggregateArgs>): Prisma.PrismaPromise<GetSubscriptionAggregateType<T>>

    /**
     * Group by Subscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubscriptionGroupByArgs['orderBy'] }
        : { orderBy?: SubscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subscription model
   */
  readonly fields: SubscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    plan<T extends SubscriptionPlanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubscriptionPlanDefaultArgs<ExtArgs>>): Prisma__SubscriptionPlanClient<$Result.GetResult<Prisma.$SubscriptionPlanPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subscription model
   */ 
  interface SubscriptionFieldRefs {
    readonly id: FieldRef<"Subscription", 'String'>
    readonly userId: FieldRef<"Subscription", 'String'>
    readonly planId: FieldRef<"Subscription", 'String'>
    readonly status: FieldRef<"Subscription", 'SubscriptionStatus'>
    readonly stripeSubscriptionId: FieldRef<"Subscription", 'String'>
    readonly currentPeriodStart: FieldRef<"Subscription", 'DateTime'>
    readonly currentPeriodEnd: FieldRef<"Subscription", 'DateTime'>
    readonly postsUsed: FieldRef<"Subscription", 'Int'>
    readonly imagesUsed: FieldRef<"Subscription", 'Int'>
    readonly boostsUsed: FieldRef<"Subscription", 'Int'>
    readonly startsAt: FieldRef<"Subscription", 'DateTime'>
    readonly endsAt: FieldRef<"Subscription", 'DateTime'>
    readonly cancelledAt: FieldRef<"Subscription", 'DateTime'>
    readonly createdAt: FieldRef<"Subscription", 'DateTime'>
    readonly updatedAt: FieldRef<"Subscription", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Subscription findUnique
   */
  export type SubscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findUniqueOrThrow
   */
  export type SubscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription findFirst
   */
  export type SubscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findFirstOrThrow
   */
  export type SubscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscription to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subscriptions.
     */
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription findMany
   */
  export type SubscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which Subscriptions to fetch.
     */
    where?: SubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subscriptions to fetch.
     */
    orderBy?: SubscriptionOrderByWithRelationInput | SubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subscriptions.
     */
    cursor?: SubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subscriptions.
     */
    skip?: number
    distinct?: SubscriptionScalarFieldEnum | SubscriptionScalarFieldEnum[]
  }

  /**
   * Subscription create
   */
  export type SubscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a Subscription.
     */
    data: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
  }

  /**
   * Subscription createMany
   */
  export type SubscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subscription createManyAndReturn
   */
  export type SubscriptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Subscriptions.
     */
    data: SubscriptionCreateManyInput | SubscriptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Subscription update
   */
  export type SubscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a Subscription.
     */
    data: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
    /**
     * Choose, which Subscription to update.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription updateMany
   */
  export type SubscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subscriptions.
     */
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which Subscriptions to update
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription upsert
   */
  export type SubscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the Subscription to update in case it exists.
     */
    where: SubscriptionWhereUniqueInput
    /**
     * In case the Subscription found by the `where` argument doesn't exist, create a new Subscription with this data.
     */
    create: XOR<SubscriptionCreateInput, SubscriptionUncheckedCreateInput>
    /**
     * In case the Subscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubscriptionUpdateInput, SubscriptionUncheckedUpdateInput>
  }

  /**
   * Subscription delete
   */
  export type SubscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
    /**
     * Filter which Subscription to delete.
     */
    where: SubscriptionWhereUniqueInput
  }

  /**
   * Subscription deleteMany
   */
  export type SubscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subscriptions to delete
     */
    where?: SubscriptionWhereInput
  }

  /**
   * Subscription without action
   */
  export type SubscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subscription
     */
    select?: SubscriptionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubscriptionInclude<ExtArgs> | null
  }


  /**
   * Model Tag
   */

  export type AggregateTag = {
    _count: TagCountAggregateOutputType | null
    _avg: TagAvgAggregateOutputType | null
    _sum: TagSumAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  export type TagAvgAggregateOutputType = {
    usageCount: number | null
    priority: number | null
  }

  export type TagSumAggregateOutputType = {
    usageCount: number | null
    priority: number | null
  }

  export type TagMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    color: string | null
    icon: string | null
    isActive: boolean | null
    usageCount: number | null
    category: $Enums.TagCategory | null
    priority: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TagMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    color: string | null
    icon: string | null
    isActive: boolean | null
    usageCount: number | null
    category: $Enums.TagCategory | null
    priority: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TagCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    description: number
    color: number
    icon: number
    isActive: number
    usageCount: number
    category: number
    priority: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TagAvgAggregateInputType = {
    usageCount?: true
    priority?: true
  }

  export type TagSumAggregateInputType = {
    usageCount?: true
    priority?: true
  }

  export type TagMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    color?: true
    icon?: true
    isActive?: true
    usageCount?: true
    category?: true
    priority?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TagMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    color?: true
    icon?: true
    isActive?: true
    usageCount?: true
    category?: true
    priority?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TagCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    color?: true
    icon?: true
    isActive?: true
    usageCount?: true
    category?: true
    priority?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tag to aggregate.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagMaxAggregateInputType
  }

  export type GetTagAggregateType<T extends TagAggregateArgs> = {
        [P in keyof T & keyof AggregateTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTag[P]>
      : GetScalarType<T[P], AggregateTag[P]>
  }




  export type TagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagWhereInput
    orderBy?: TagOrderByWithAggregationInput | TagOrderByWithAggregationInput[]
    by: TagScalarFieldEnum[] | TagScalarFieldEnum
    having?: TagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagCountAggregateInputType | true
    _avg?: TagAvgAggregateInputType
    _sum?: TagSumAggregateInputType
    _min?: TagMinAggregateInputType
    _max?: TagMaxAggregateInputType
  }

  export type TagGroupByOutputType = {
    id: string
    name: string
    slug: string
    description: string | null
    color: string | null
    icon: string | null
    isActive: boolean
    usageCount: number
    category: $Enums.TagCategory
    priority: number
    createdAt: Date
    updatedAt: Date
    _count: TagCountAggregateOutputType | null
    _avg: TagAvgAggregateOutputType | null
    _sum: TagSumAggregateOutputType | null
    _min: TagMinAggregateOutputType | null
    _max: TagMaxAggregateOutputType | null
  }

  type GetTagGroupByPayload<T extends TagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagGroupByOutputType[P]>
            : GetScalarType<T[P], TagGroupByOutputType[P]>
        }
      >
    >


  export type TagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    color?: boolean
    icon?: boolean
    isActive?: boolean
    usageCount?: boolean
    category?: boolean
    priority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    posts?: boolean | Tag$postsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tag"]>

  export type TagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    color?: boolean
    icon?: boolean
    isActive?: boolean
    usageCount?: boolean
    category?: boolean
    priority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["tag"]>

  export type TagSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    color?: boolean
    icon?: boolean
    isActive?: boolean
    usageCount?: boolean
    category?: boolean
    priority?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type TagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | Tag$postsArgs<ExtArgs>
    _count?: boolean | TagCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $TagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tag"
    objects: {
      posts: Prisma.$PostTagPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      description: string | null
      color: string | null
      icon: string | null
      isActive: boolean
      usageCount: number
      category: $Enums.TagCategory
      priority: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tag"]>
    composites: {}
  }

  type TagGetPayload<S extends boolean | null | undefined | TagDefaultArgs> = $Result.GetResult<Prisma.$TagPayload, S>

  type TagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TagFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TagCountAggregateInputType | true
    }

  export interface TagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tag'], meta: { name: 'Tag' } }
    /**
     * Find zero or one Tag that matches the filter.
     * @param {TagFindUniqueArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TagFindUniqueArgs>(args: SelectSubset<T, TagFindUniqueArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tag that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TagFindUniqueOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TagFindUniqueOrThrowArgs>(args: SelectSubset<T, TagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TagFindFirstArgs>(args?: SelectSubset<T, TagFindFirstArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindFirstOrThrowArgs} args - Arguments to find a Tag
     * @example
     * // Get one Tag
     * const tag = await prisma.tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TagFindFirstOrThrowArgs>(args?: SelectSubset<T, TagFindFirstOrThrowArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tag.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagWithIdOnly = await prisma.tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TagFindManyArgs>(args?: SelectSubset<T, TagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tag.
     * @param {TagCreateArgs} args - Arguments to create a Tag.
     * @example
     * // Create one Tag
     * const Tag = await prisma.tag.create({
     *   data: {
     *     // ... data to create a Tag
     *   }
     * })
     * 
     */
    create<T extends TagCreateArgs>(args: SelectSubset<T, TagCreateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tags.
     * @param {TagCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TagCreateManyArgs>(args?: SelectSubset<T, TagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tags and returns the data saved in the database.
     * @param {TagCreateManyAndReturnArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tag = await prisma.tag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tags and only return the `id`
     * const tagWithIdOnly = await prisma.tag.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TagCreateManyAndReturnArgs>(args?: SelectSubset<T, TagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Tag.
     * @param {TagDeleteArgs} args - Arguments to delete one Tag.
     * @example
     * // Delete one Tag
     * const Tag = await prisma.tag.delete({
     *   where: {
     *     // ... filter to delete one Tag
     *   }
     * })
     * 
     */
    delete<T extends TagDeleteArgs>(args: SelectSubset<T, TagDeleteArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tag.
     * @param {TagUpdateArgs} args - Arguments to update one Tag.
     * @example
     * // Update one Tag
     * const tag = await prisma.tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TagUpdateArgs>(args: SelectSubset<T, TagUpdateArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tags.
     * @param {TagDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TagDeleteManyArgs>(args?: SelectSubset<T, TagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tag = await prisma.tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TagUpdateManyArgs>(args: SelectSubset<T, TagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tag.
     * @param {TagUpsertArgs} args - Arguments to update or create a Tag.
     * @example
     * // Update or create a Tag
     * const tag = await prisma.tag.upsert({
     *   create: {
     *     // ... data to create a Tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tag we want to update
     *   }
     * })
     */
    upsert<T extends TagUpsertArgs>(args: SelectSubset<T, TagUpsertArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tag.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagCountArgs>(
      args?: Subset<T, TagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagAggregateArgs>(args: Subset<T, TagAggregateArgs>): Prisma.PrismaPromise<GetTagAggregateType<T>>

    /**
     * Group by Tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagGroupByArgs['orderBy'] }
        : { orderBy?: TagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tag model
   */
  readonly fields: TagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    posts<T extends Tag$postsArgs<ExtArgs> = {}>(args?: Subset<T, Tag$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tag model
   */ 
  interface TagFieldRefs {
    readonly id: FieldRef<"Tag", 'String'>
    readonly name: FieldRef<"Tag", 'String'>
    readonly slug: FieldRef<"Tag", 'String'>
    readonly description: FieldRef<"Tag", 'String'>
    readonly color: FieldRef<"Tag", 'String'>
    readonly icon: FieldRef<"Tag", 'String'>
    readonly isActive: FieldRef<"Tag", 'Boolean'>
    readonly usageCount: FieldRef<"Tag", 'Int'>
    readonly category: FieldRef<"Tag", 'TagCategory'>
    readonly priority: FieldRef<"Tag", 'Int'>
    readonly createdAt: FieldRef<"Tag", 'DateTime'>
    readonly updatedAt: FieldRef<"Tag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Tag findUnique
   */
  export type TagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findUniqueOrThrow
   */
  export type TagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag findFirst
   */
  export type TagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findFirstOrThrow
   */
  export type TagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tag to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag findMany
   */
  export type TagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagOrderByWithRelationInput | TagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagScalarFieldEnum | TagScalarFieldEnum[]
  }

  /**
   * Tag create
   */
  export type TagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to create a Tag.
     */
    data: XOR<TagCreateInput, TagUncheckedCreateInput>
  }

  /**
   * Tag createMany
   */
  export type TagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag createManyAndReturn
   */
  export type TagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Tags.
     */
    data: TagCreateManyInput | TagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tag update
   */
  export type TagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The data needed to update a Tag.
     */
    data: XOR<TagUpdateInput, TagUncheckedUpdateInput>
    /**
     * Choose, which Tag to update.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag updateMany
   */
  export type TagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagUpdateManyMutationInput, TagUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagWhereInput
  }

  /**
   * Tag upsert
   */
  export type TagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * The filter to search for the Tag to update in case it exists.
     */
    where: TagWhereUniqueInput
    /**
     * In case the Tag found by the `where` argument doesn't exist, create a new Tag with this data.
     */
    create: XOR<TagCreateInput, TagUncheckedCreateInput>
    /**
     * In case the Tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagUpdateInput, TagUncheckedUpdateInput>
  }

  /**
   * Tag delete
   */
  export type TagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
    /**
     * Filter which Tag to delete.
     */
    where: TagWhereUniqueInput
  }

  /**
   * Tag deleteMany
   */
  export type TagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagWhereInput
  }

  /**
   * Tag.posts
   */
  export type Tag$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    cursor?: PostTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * Tag without action
   */
  export type TagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tag
     */
    select?: TagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagInclude<ExtArgs> | null
  }


  /**
   * Model PostTag
   */

  export type AggregatePostTag = {
    _count: PostTagCountAggregateOutputType | null
    _min: PostTagMinAggregateOutputType | null
    _max: PostTagMaxAggregateOutputType | null
  }

  export type PostTagMinAggregateOutputType = {
    id: string | null
    postId: string | null
    tagId: string | null
    createdAt: Date | null
  }

  export type PostTagMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    tagId: string | null
    createdAt: Date | null
  }

  export type PostTagCountAggregateOutputType = {
    id: number
    postId: number
    tagId: number
    createdAt: number
    _all: number
  }


  export type PostTagMinAggregateInputType = {
    id?: true
    postId?: true
    tagId?: true
    createdAt?: true
  }

  export type PostTagMaxAggregateInputType = {
    id?: true
    postId?: true
    tagId?: true
    createdAt?: true
  }

  export type PostTagCountAggregateInputType = {
    id?: true
    postId?: true
    tagId?: true
    createdAt?: true
    _all?: true
  }

  export type PostTagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostTag to aggregate.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PostTags
    **/
    _count?: true | PostTagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostTagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostTagMaxAggregateInputType
  }

  export type GetPostTagAggregateType<T extends PostTagAggregateArgs> = {
        [P in keyof T & keyof AggregatePostTag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePostTag[P]>
      : GetScalarType<T[P], AggregatePostTag[P]>
  }




  export type PostTagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithAggregationInput | PostTagOrderByWithAggregationInput[]
    by: PostTagScalarFieldEnum[] | PostTagScalarFieldEnum
    having?: PostTagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostTagCountAggregateInputType | true
    _min?: PostTagMinAggregateInputType
    _max?: PostTagMaxAggregateInputType
  }

  export type PostTagGroupByOutputType = {
    id: string
    postId: string
    tagId: string
    createdAt: Date
    _count: PostTagCountAggregateOutputType | null
    _min: PostTagMinAggregateOutputType | null
    _max: PostTagMaxAggregateOutputType | null
  }

  type GetPostTagGroupByPayload<T extends PostTagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostTagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostTagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostTagGroupByOutputType[P]>
            : GetScalarType<T[P], PostTagGroupByOutputType[P]>
        }
      >
    >


  export type PostTagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    tagId?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["postTag"]>

  export type PostTagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    tagId?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["postTag"]>

  export type PostTagSelectScalar = {
    id?: boolean
    postId?: boolean
    tagId?: boolean
    createdAt?: boolean
  }

  export type PostTagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }
  export type PostTagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    tag?: boolean | TagDefaultArgs<ExtArgs>
  }

  export type $PostTagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PostTag"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      tag: Prisma.$TagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      tagId: string
      createdAt: Date
    }, ExtArgs["result"]["postTag"]>
    composites: {}
  }

  type PostTagGetPayload<S extends boolean | null | undefined | PostTagDefaultArgs> = $Result.GetResult<Prisma.$PostTagPayload, S>

  type PostTagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PostTagFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostTagCountAggregateInputType | true
    }

  export interface PostTagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PostTag'], meta: { name: 'PostTag' } }
    /**
     * Find zero or one PostTag that matches the filter.
     * @param {PostTagFindUniqueArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostTagFindUniqueArgs>(args: SelectSubset<T, PostTagFindUniqueArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PostTag that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PostTagFindUniqueOrThrowArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostTagFindUniqueOrThrowArgs>(args: SelectSubset<T, PostTagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PostTag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindFirstArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostTagFindFirstArgs>(args?: SelectSubset<T, PostTagFindFirstArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PostTag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindFirstOrThrowArgs} args - Arguments to find a PostTag
     * @example
     * // Get one PostTag
     * const postTag = await prisma.postTag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostTagFindFirstOrThrowArgs>(args?: SelectSubset<T, PostTagFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PostTags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PostTags
     * const postTags = await prisma.postTag.findMany()
     * 
     * // Get first 10 PostTags
     * const postTags = await prisma.postTag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postTagWithIdOnly = await prisma.postTag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostTagFindManyArgs>(args?: SelectSubset<T, PostTagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PostTag.
     * @param {PostTagCreateArgs} args - Arguments to create a PostTag.
     * @example
     * // Create one PostTag
     * const PostTag = await prisma.postTag.create({
     *   data: {
     *     // ... data to create a PostTag
     *   }
     * })
     * 
     */
    create<T extends PostTagCreateArgs>(args: SelectSubset<T, PostTagCreateArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PostTags.
     * @param {PostTagCreateManyArgs} args - Arguments to create many PostTags.
     * @example
     * // Create many PostTags
     * const postTag = await prisma.postTag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostTagCreateManyArgs>(args?: SelectSubset<T, PostTagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PostTags and returns the data saved in the database.
     * @param {PostTagCreateManyAndReturnArgs} args - Arguments to create many PostTags.
     * @example
     * // Create many PostTags
     * const postTag = await prisma.postTag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PostTags and only return the `id`
     * const postTagWithIdOnly = await prisma.postTag.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostTagCreateManyAndReturnArgs>(args?: SelectSubset<T, PostTagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PostTag.
     * @param {PostTagDeleteArgs} args - Arguments to delete one PostTag.
     * @example
     * // Delete one PostTag
     * const PostTag = await prisma.postTag.delete({
     *   where: {
     *     // ... filter to delete one PostTag
     *   }
     * })
     * 
     */
    delete<T extends PostTagDeleteArgs>(args: SelectSubset<T, PostTagDeleteArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PostTag.
     * @param {PostTagUpdateArgs} args - Arguments to update one PostTag.
     * @example
     * // Update one PostTag
     * const postTag = await prisma.postTag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostTagUpdateArgs>(args: SelectSubset<T, PostTagUpdateArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PostTags.
     * @param {PostTagDeleteManyArgs} args - Arguments to filter PostTags to delete.
     * @example
     * // Delete a few PostTags
     * const { count } = await prisma.postTag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostTagDeleteManyArgs>(args?: SelectSubset<T, PostTagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PostTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PostTags
     * const postTag = await prisma.postTag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostTagUpdateManyArgs>(args: SelectSubset<T, PostTagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PostTag.
     * @param {PostTagUpsertArgs} args - Arguments to update or create a PostTag.
     * @example
     * // Update or create a PostTag
     * const postTag = await prisma.postTag.upsert({
     *   create: {
     *     // ... data to create a PostTag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PostTag we want to update
     *   }
     * })
     */
    upsert<T extends PostTagUpsertArgs>(args: SelectSubset<T, PostTagUpsertArgs<ExtArgs>>): Prisma__PostTagClient<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PostTags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagCountArgs} args - Arguments to filter PostTags to count.
     * @example
     * // Count the number of PostTags
     * const count = await prisma.postTag.count({
     *   where: {
     *     // ... the filter for the PostTags we want to count
     *   }
     * })
    **/
    count<T extends PostTagCountArgs>(
      args?: Subset<T, PostTagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostTagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PostTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostTagAggregateArgs>(args: Subset<T, PostTagAggregateArgs>): Prisma.PrismaPromise<GetPostTagAggregateType<T>>

    /**
     * Group by PostTag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostTagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostTagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostTagGroupByArgs['orderBy'] }
        : { orderBy?: PostTagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostTagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostTagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PostTag model
   */
  readonly fields: PostTagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PostTag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostTagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tag<T extends TagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagDefaultArgs<ExtArgs>>): Prisma__TagClient<$Result.GetResult<Prisma.$TagPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PostTag model
   */ 
  interface PostTagFieldRefs {
    readonly id: FieldRef<"PostTag", 'String'>
    readonly postId: FieldRef<"PostTag", 'String'>
    readonly tagId: FieldRef<"PostTag", 'String'>
    readonly createdAt: FieldRef<"PostTag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PostTag findUnique
   */
  export type PostTagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag findUniqueOrThrow
   */
  export type PostTagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag findFirst
   */
  export type PostTagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostTags.
     */
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag findFirstOrThrow
   */
  export type PostTagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTag to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PostTags.
     */
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag findMany
   */
  export type PostTagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter, which PostTags to fetch.
     */
    where?: PostTagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PostTags to fetch.
     */
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PostTags.
     */
    cursor?: PostTagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PostTags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PostTags.
     */
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * PostTag create
   */
  export type PostTagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The data needed to create a PostTag.
     */
    data: XOR<PostTagCreateInput, PostTagUncheckedCreateInput>
  }

  /**
   * PostTag createMany
   */
  export type PostTagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PostTags.
     */
    data: PostTagCreateManyInput | PostTagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PostTag createManyAndReturn
   */
  export type PostTagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PostTags.
     */
    data: PostTagCreateManyInput | PostTagCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PostTag update
   */
  export type PostTagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The data needed to update a PostTag.
     */
    data: XOR<PostTagUpdateInput, PostTagUncheckedUpdateInput>
    /**
     * Choose, which PostTag to update.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag updateMany
   */
  export type PostTagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PostTags.
     */
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyInput>
    /**
     * Filter which PostTags to update
     */
    where?: PostTagWhereInput
  }

  /**
   * PostTag upsert
   */
  export type PostTagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * The filter to search for the PostTag to update in case it exists.
     */
    where: PostTagWhereUniqueInput
    /**
     * In case the PostTag found by the `where` argument doesn't exist, create a new PostTag with this data.
     */
    create: XOR<PostTagCreateInput, PostTagUncheckedCreateInput>
    /**
     * In case the PostTag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostTagUpdateInput, PostTagUncheckedUpdateInput>
  }

  /**
   * PostTag delete
   */
  export type PostTagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    /**
     * Filter which PostTag to delete.
     */
    where: PostTagWhereUniqueInput
  }

  /**
   * PostTag deleteMany
   */
  export type PostTagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PostTags to delete
     */
    where?: PostTagWhereInput
  }

  /**
   * PostTag without action
   */
  export type PostTagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
  }


  /**
   * Model Admin
   */

  export type AggregateAdmin = {
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  export type AdminAvgAggregateOutputType = {
    totalBans: number | null
    totalReports: number | null
    totalVerifications: number | null
    totalAgencyApprovals: number | null
  }

  export type AdminSumAggregateOutputType = {
    totalBans: number | null
    totalReports: number | null
    totalVerifications: number | null
    totalAgencyApprovals: number | null
  }

  export type AdminMinAggregateOutputType = {
    id: string | null
    userId: string | null
    role: $Enums.AdminRole | null
    totalBans: number | null
    totalReports: number | null
    totalVerifications: number | null
    totalAgencyApprovals: number | null
    canDeletePosts: boolean | null
    canBanUsers: boolean | null
    canModifyPrices: boolean | null
    canAccessMetrics: boolean | null
    canApproveAgencies: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdminMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    role: $Enums.AdminRole | null
    totalBans: number | null
    totalReports: number | null
    totalVerifications: number | null
    totalAgencyApprovals: number | null
    canDeletePosts: boolean | null
    canBanUsers: boolean | null
    canModifyPrices: boolean | null
    canAccessMetrics: boolean | null
    canApproveAgencies: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdminCountAggregateOutputType = {
    id: number
    userId: number
    role: number
    permissions: number
    totalBans: number
    totalReports: number
    totalVerifications: number
    totalAgencyApprovals: number
    canDeletePosts: number
    canBanUsers: number
    canModifyPrices: number
    canAccessMetrics: number
    canApproveAgencies: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AdminAvgAggregateInputType = {
    totalBans?: true
    totalReports?: true
    totalVerifications?: true
    totalAgencyApprovals?: true
  }

  export type AdminSumAggregateInputType = {
    totalBans?: true
    totalReports?: true
    totalVerifications?: true
    totalAgencyApprovals?: true
  }

  export type AdminMinAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    totalBans?: true
    totalReports?: true
    totalVerifications?: true
    totalAgencyApprovals?: true
    canDeletePosts?: true
    canBanUsers?: true
    canModifyPrices?: true
    canAccessMetrics?: true
    canApproveAgencies?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdminMaxAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    totalBans?: true
    totalReports?: true
    totalVerifications?: true
    totalAgencyApprovals?: true
    canDeletePosts?: true
    canBanUsers?: true
    canModifyPrices?: true
    canAccessMetrics?: true
    canApproveAgencies?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdminCountAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    permissions?: true
    totalBans?: true
    totalReports?: true
    totalVerifications?: true
    totalAgencyApprovals?: true
    canDeletePosts?: true
    canBanUsers?: true
    canModifyPrices?: true
    canAccessMetrics?: true
    canApproveAgencies?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AdminAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admin to aggregate.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Admins
    **/
    _count?: true | AdminCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminMaxAggregateInputType
  }

  export type GetAdminAggregateType<T extends AdminAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin[P]>
      : GetScalarType<T[P], AggregateAdmin[P]>
  }




  export type AdminGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdminWhereInput
    orderBy?: AdminOrderByWithAggregationInput | AdminOrderByWithAggregationInput[]
    by: AdminScalarFieldEnum[] | AdminScalarFieldEnum
    having?: AdminScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminCountAggregateInputType | true
    _avg?: AdminAvgAggregateInputType
    _sum?: AdminSumAggregateInputType
    _min?: AdminMinAggregateInputType
    _max?: AdminMaxAggregateInputType
  }

  export type AdminGroupByOutputType = {
    id: string
    userId: string
    role: $Enums.AdminRole
    permissions: JsonValue | null
    totalBans: number
    totalReports: number
    totalVerifications: number
    totalAgencyApprovals: number
    canDeletePosts: boolean
    canBanUsers: boolean
    canModifyPrices: boolean
    canAccessMetrics: boolean
    canApproveAgencies: boolean
    createdAt: Date
    updatedAt: Date
    _count: AdminCountAggregateOutputType | null
    _avg: AdminAvgAggregateOutputType | null
    _sum: AdminSumAggregateOutputType | null
    _min: AdminMinAggregateOutputType | null
    _max: AdminMaxAggregateOutputType | null
  }

  type GetAdminGroupByPayload<T extends AdminGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminGroupByOutputType[P]>
            : GetScalarType<T[P], AdminGroupByOutputType[P]>
        }
      >
    >


  export type AdminSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    totalBans?: boolean
    totalReports?: boolean
    totalVerifications?: boolean
    totalAgencyApprovals?: boolean
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    totalBans?: boolean
    totalReports?: boolean
    totalVerifications?: boolean
    totalAgencyApprovals?: boolean
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin"]>

  export type AdminSelectScalar = {
    id?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    totalBans?: boolean
    totalReports?: boolean
    totalVerifications?: boolean
    totalAgencyApprovals?: boolean
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AdminInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AdminIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AdminPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Admin"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      role: $Enums.AdminRole
      permissions: Prisma.JsonValue | null
      totalBans: number
      totalReports: number
      totalVerifications: number
      totalAgencyApprovals: number
      canDeletePosts: boolean
      canBanUsers: boolean
      canModifyPrices: boolean
      canAccessMetrics: boolean
      canApproveAgencies: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["admin"]>
    composites: {}
  }

  type AdminGetPayload<S extends boolean | null | undefined | AdminDefaultArgs> = $Result.GetResult<Prisma.$AdminPayload, S>

  type AdminCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdminFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdminCountAggregateInputType | true
    }

  export interface AdminDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Admin'], meta: { name: 'Admin' } }
    /**
     * Find zero or one Admin that matches the filter.
     * @param {AdminFindUniqueArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdminFindUniqueArgs>(args: SelectSubset<T, AdminFindUniqueArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Admin that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AdminFindUniqueOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdminFindUniqueOrThrowArgs>(args: SelectSubset<T, AdminFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Admin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdminFindFirstArgs>(args?: SelectSubset<T, AdminFindFirstArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Admin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindFirstOrThrowArgs} args - Arguments to find a Admin
     * @example
     * // Get one Admin
     * const admin = await prisma.admin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdminFindFirstOrThrowArgs>(args?: SelectSubset<T, AdminFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admin.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admin.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminWithIdOnly = await prisma.admin.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdminFindManyArgs>(args?: SelectSubset<T, AdminFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Admin.
     * @param {AdminCreateArgs} args - Arguments to create a Admin.
     * @example
     * // Create one Admin
     * const Admin = await prisma.admin.create({
     *   data: {
     *     // ... data to create a Admin
     *   }
     * })
     * 
     */
    create<T extends AdminCreateArgs>(args: SelectSubset<T, AdminCreateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Admins.
     * @param {AdminCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdminCreateManyArgs>(args?: SelectSubset<T, AdminCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {AdminCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admin = await prisma.admin.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminWithIdOnly = await prisma.admin.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdminCreateManyAndReturnArgs>(args?: SelectSubset<T, AdminCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Admin.
     * @param {AdminDeleteArgs} args - Arguments to delete one Admin.
     * @example
     * // Delete one Admin
     * const Admin = await prisma.admin.delete({
     *   where: {
     *     // ... filter to delete one Admin
     *   }
     * })
     * 
     */
    delete<T extends AdminDeleteArgs>(args: SelectSubset<T, AdminDeleteArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Admin.
     * @param {AdminUpdateArgs} args - Arguments to update one Admin.
     * @example
     * // Update one Admin
     * const admin = await prisma.admin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdminUpdateArgs>(args: SelectSubset<T, AdminUpdateArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Admins.
     * @param {AdminDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdminDeleteManyArgs>(args?: SelectSubset<T, AdminDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admin = await prisma.admin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdminUpdateManyArgs>(args: SelectSubset<T, AdminUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Admin.
     * @param {AdminUpsertArgs} args - Arguments to update or create a Admin.
     * @example
     * // Update or create a Admin
     * const admin = await prisma.admin.upsert({
     *   create: {
     *     // ... data to create a Admin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin we want to update
     *   }
     * })
     */
    upsert<T extends AdminUpsertArgs>(args: SelectSubset<T, AdminUpsertArgs<ExtArgs>>): Prisma__AdminClient<$Result.GetResult<Prisma.$AdminPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admin.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends AdminCountArgs>(
      args?: Subset<T, AdminCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminAggregateArgs>(args: Subset<T, AdminAggregateArgs>): Prisma.PrismaPromise<GetAdminAggregateType<T>>

    /**
     * Group by Admin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdminGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdminGroupByArgs['orderBy'] }
        : { orderBy?: AdminGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdminGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Admin model
   */
  readonly fields: AdminFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Admin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdminClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Admin model
   */ 
  interface AdminFieldRefs {
    readonly id: FieldRef<"Admin", 'String'>
    readonly userId: FieldRef<"Admin", 'String'>
    readonly role: FieldRef<"Admin", 'AdminRole'>
    readonly permissions: FieldRef<"Admin", 'Json'>
    readonly totalBans: FieldRef<"Admin", 'Int'>
    readonly totalReports: FieldRef<"Admin", 'Int'>
    readonly totalVerifications: FieldRef<"Admin", 'Int'>
    readonly totalAgencyApprovals: FieldRef<"Admin", 'Int'>
    readonly canDeletePosts: FieldRef<"Admin", 'Boolean'>
    readonly canBanUsers: FieldRef<"Admin", 'Boolean'>
    readonly canModifyPrices: FieldRef<"Admin", 'Boolean'>
    readonly canAccessMetrics: FieldRef<"Admin", 'Boolean'>
    readonly canApproveAgencies: FieldRef<"Admin", 'Boolean'>
    readonly createdAt: FieldRef<"Admin", 'DateTime'>
    readonly updatedAt: FieldRef<"Admin", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Admin findUnique
   */
  export type AdminFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findUniqueOrThrow
   */
  export type AdminFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin findFirst
   */
  export type AdminFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findFirstOrThrow
   */
  export type AdminFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admin to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Admins.
     */
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin findMany
   */
  export type AdminFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter, which Admins to fetch.
     */
    where?: AdminWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Admins to fetch.
     */
    orderBy?: AdminOrderByWithRelationInput | AdminOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Admins.
     */
    cursor?: AdminWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Admins.
     */
    skip?: number
    distinct?: AdminScalarFieldEnum | AdminScalarFieldEnum[]
  }

  /**
   * Admin create
   */
  export type AdminCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to create a Admin.
     */
    data: XOR<AdminCreateInput, AdminUncheckedCreateInput>
  }

  /**
   * Admin createMany
   */
  export type AdminCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Admin createManyAndReturn
   */
  export type AdminCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Admins.
     */
    data: AdminCreateManyInput | AdminCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Admin update
   */
  export type AdminUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The data needed to update a Admin.
     */
    data: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
    /**
     * Choose, which Admin to update.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin updateMany
   */
  export type AdminUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Admins.
     */
    data: XOR<AdminUpdateManyMutationInput, AdminUncheckedUpdateManyInput>
    /**
     * Filter which Admins to update
     */
    where?: AdminWhereInput
  }

  /**
   * Admin upsert
   */
  export type AdminUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * The filter to search for the Admin to update in case it exists.
     */
    where: AdminWhereUniqueInput
    /**
     * In case the Admin found by the `where` argument doesn't exist, create a new Admin with this data.
     */
    create: XOR<AdminCreateInput, AdminUncheckedCreateInput>
    /**
     * In case the Admin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdminUpdateInput, AdminUncheckedUpdateInput>
  }

  /**
   * Admin delete
   */
  export type AdminDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
    /**
     * Filter which Admin to delete.
     */
    where: AdminWhereUniqueInput
  }

  /**
   * Admin deleteMany
   */
  export type AdminDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Admins to delete
     */
    where?: AdminWhereInput
  }

  /**
   * Admin without action
   */
  export type AdminDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin
     */
    select?: AdminSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdminInclude<ExtArgs> | null
  }


  /**
   * Model UserReputation
   */

  export type AggregateUserReputation = {
    _count: UserReputationCountAggregateOutputType | null
    _avg: UserReputationAvgAggregateOutputType | null
    _sum: UserReputationSumAggregateOutputType | null
    _min: UserReputationMinAggregateOutputType | null
    _max: UserReputationMaxAggregateOutputType | null
  }

  export type UserReputationAvgAggregateOutputType = {
    overallScore: number | null
    responseRate: number | null
    averageResponseTime: number | null
    profileCompleteness: number | null
    trustScore: number | null
    totalViews: number | null
    totalLikes: number | null
    totalMessages: number | null
    totalFavorites: number | null
    discoveryScore: number | null
    trendingScore: number | null
    qualityScore: number | null
    spamScore: number | null
    reportScore: number | null
  }

  export type UserReputationSumAggregateOutputType = {
    overallScore: number | null
    responseRate: number | null
    averageResponseTime: number | null
    profileCompleteness: number | null
    trustScore: number | null
    totalViews: number | null
    totalLikes: number | null
    totalMessages: number | null
    totalFavorites: number | null
    discoveryScore: number | null
    trendingScore: number | null
    qualityScore: number | null
    spamScore: number | null
    reportScore: number | null
  }

  export type UserReputationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    overallScore: number | null
    responseRate: number | null
    averageResponseTime: number | null
    profileCompleteness: number | null
    trustScore: number | null
    totalViews: number | null
    totalLikes: number | null
    totalMessages: number | null
    totalFavorites: number | null
    discoveryScore: number | null
    trendingScore: number | null
    qualityScore: number | null
    lastScoreUpdate: Date | null
    spamScore: number | null
    reportScore: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserReputationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    overallScore: number | null
    responseRate: number | null
    averageResponseTime: number | null
    profileCompleteness: number | null
    trustScore: number | null
    totalViews: number | null
    totalLikes: number | null
    totalMessages: number | null
    totalFavorites: number | null
    discoveryScore: number | null
    trendingScore: number | null
    qualityScore: number | null
    lastScoreUpdate: Date | null
    spamScore: number | null
    reportScore: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserReputationCountAggregateOutputType = {
    id: number
    userId: number
    overallScore: number
    responseRate: number
    averageResponseTime: number
    profileCompleteness: number
    trustScore: number
    totalViews: number
    totalLikes: number
    totalMessages: number
    totalFavorites: number
    discoveryScore: number
    trendingScore: number
    qualityScore: number
    lastScoreUpdate: number
    spamScore: number
    reportScore: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserReputationAvgAggregateInputType = {
    overallScore?: true
    responseRate?: true
    averageResponseTime?: true
    profileCompleteness?: true
    trustScore?: true
    totalViews?: true
    totalLikes?: true
    totalMessages?: true
    totalFavorites?: true
    discoveryScore?: true
    trendingScore?: true
    qualityScore?: true
    spamScore?: true
    reportScore?: true
  }

  export type UserReputationSumAggregateInputType = {
    overallScore?: true
    responseRate?: true
    averageResponseTime?: true
    profileCompleteness?: true
    trustScore?: true
    totalViews?: true
    totalLikes?: true
    totalMessages?: true
    totalFavorites?: true
    discoveryScore?: true
    trendingScore?: true
    qualityScore?: true
    spamScore?: true
    reportScore?: true
  }

  export type UserReputationMinAggregateInputType = {
    id?: true
    userId?: true
    overallScore?: true
    responseRate?: true
    averageResponseTime?: true
    profileCompleteness?: true
    trustScore?: true
    totalViews?: true
    totalLikes?: true
    totalMessages?: true
    totalFavorites?: true
    discoveryScore?: true
    trendingScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    spamScore?: true
    reportScore?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserReputationMaxAggregateInputType = {
    id?: true
    userId?: true
    overallScore?: true
    responseRate?: true
    averageResponseTime?: true
    profileCompleteness?: true
    trustScore?: true
    totalViews?: true
    totalLikes?: true
    totalMessages?: true
    totalFavorites?: true
    discoveryScore?: true
    trendingScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    spamScore?: true
    reportScore?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserReputationCountAggregateInputType = {
    id?: true
    userId?: true
    overallScore?: true
    responseRate?: true
    averageResponseTime?: true
    profileCompleteness?: true
    trustScore?: true
    totalViews?: true
    totalLikes?: true
    totalMessages?: true
    totalFavorites?: true
    discoveryScore?: true
    trendingScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    spamScore?: true
    reportScore?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserReputationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserReputation to aggregate.
     */
    where?: UserReputationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserReputations to fetch.
     */
    orderBy?: UserReputationOrderByWithRelationInput | UserReputationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserReputationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserReputations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserReputations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserReputations
    **/
    _count?: true | UserReputationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserReputationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserReputationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserReputationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserReputationMaxAggregateInputType
  }

  export type GetUserReputationAggregateType<T extends UserReputationAggregateArgs> = {
        [P in keyof T & keyof AggregateUserReputation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserReputation[P]>
      : GetScalarType<T[P], AggregateUserReputation[P]>
  }




  export type UserReputationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserReputationWhereInput
    orderBy?: UserReputationOrderByWithAggregationInput | UserReputationOrderByWithAggregationInput[]
    by: UserReputationScalarFieldEnum[] | UserReputationScalarFieldEnum
    having?: UserReputationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserReputationCountAggregateInputType | true
    _avg?: UserReputationAvgAggregateInputType
    _sum?: UserReputationSumAggregateInputType
    _min?: UserReputationMinAggregateInputType
    _max?: UserReputationMaxAggregateInputType
  }

  export type UserReputationGroupByOutputType = {
    id: string
    userId: string
    overallScore: number
    responseRate: number
    averageResponseTime: number | null
    profileCompleteness: number
    trustScore: number
    totalViews: number
    totalLikes: number
    totalMessages: number
    totalFavorites: number
    discoveryScore: number
    trendingScore: number
    qualityScore: number
    lastScoreUpdate: Date
    spamScore: number
    reportScore: number
    createdAt: Date
    updatedAt: Date
    _count: UserReputationCountAggregateOutputType | null
    _avg: UserReputationAvgAggregateOutputType | null
    _sum: UserReputationSumAggregateOutputType | null
    _min: UserReputationMinAggregateOutputType | null
    _max: UserReputationMaxAggregateOutputType | null
  }

  type GetUserReputationGroupByPayload<T extends UserReputationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserReputationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserReputationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserReputationGroupByOutputType[P]>
            : GetScalarType<T[P], UserReputationGroupByOutputType[P]>
        }
      >
    >


  export type UserReputationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    overallScore?: boolean
    responseRate?: boolean
    averageResponseTime?: boolean
    profileCompleteness?: boolean
    trustScore?: boolean
    totalViews?: boolean
    totalLikes?: boolean
    totalMessages?: boolean
    totalFavorites?: boolean
    discoveryScore?: boolean
    trendingScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    spamScore?: boolean
    reportScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userReputation"]>

  export type UserReputationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    overallScore?: boolean
    responseRate?: boolean
    averageResponseTime?: boolean
    profileCompleteness?: boolean
    trustScore?: boolean
    totalViews?: boolean
    totalLikes?: boolean
    totalMessages?: boolean
    totalFavorites?: boolean
    discoveryScore?: boolean
    trendingScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    spamScore?: boolean
    reportScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userReputation"]>

  export type UserReputationSelectScalar = {
    id?: boolean
    userId?: boolean
    overallScore?: boolean
    responseRate?: boolean
    averageResponseTime?: boolean
    profileCompleteness?: boolean
    trustScore?: boolean
    totalViews?: boolean
    totalLikes?: boolean
    totalMessages?: boolean
    totalFavorites?: boolean
    discoveryScore?: boolean
    trendingScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    spamScore?: boolean
    reportScore?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserReputationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserReputationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserReputationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserReputation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      overallScore: number
      responseRate: number
      averageResponseTime: number | null
      profileCompleteness: number
      trustScore: number
      totalViews: number
      totalLikes: number
      totalMessages: number
      totalFavorites: number
      discoveryScore: number
      trendingScore: number
      qualityScore: number
      lastScoreUpdate: Date
      spamScore: number
      reportScore: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userReputation"]>
    composites: {}
  }

  type UserReputationGetPayload<S extends boolean | null | undefined | UserReputationDefaultArgs> = $Result.GetResult<Prisma.$UserReputationPayload, S>

  type UserReputationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserReputationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserReputationCountAggregateInputType | true
    }

  export interface UserReputationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserReputation'], meta: { name: 'UserReputation' } }
    /**
     * Find zero or one UserReputation that matches the filter.
     * @param {UserReputationFindUniqueArgs} args - Arguments to find a UserReputation
     * @example
     * // Get one UserReputation
     * const userReputation = await prisma.userReputation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserReputationFindUniqueArgs>(args: SelectSubset<T, UserReputationFindUniqueArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserReputation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserReputationFindUniqueOrThrowArgs} args - Arguments to find a UserReputation
     * @example
     * // Get one UserReputation
     * const userReputation = await prisma.userReputation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserReputationFindUniqueOrThrowArgs>(args: SelectSubset<T, UserReputationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserReputation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationFindFirstArgs} args - Arguments to find a UserReputation
     * @example
     * // Get one UserReputation
     * const userReputation = await prisma.userReputation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserReputationFindFirstArgs>(args?: SelectSubset<T, UserReputationFindFirstArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserReputation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationFindFirstOrThrowArgs} args - Arguments to find a UserReputation
     * @example
     * // Get one UserReputation
     * const userReputation = await prisma.userReputation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserReputationFindFirstOrThrowArgs>(args?: SelectSubset<T, UserReputationFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserReputations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserReputations
     * const userReputations = await prisma.userReputation.findMany()
     * 
     * // Get first 10 UserReputations
     * const userReputations = await prisma.userReputation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userReputationWithIdOnly = await prisma.userReputation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserReputationFindManyArgs>(args?: SelectSubset<T, UserReputationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserReputation.
     * @param {UserReputationCreateArgs} args - Arguments to create a UserReputation.
     * @example
     * // Create one UserReputation
     * const UserReputation = await prisma.userReputation.create({
     *   data: {
     *     // ... data to create a UserReputation
     *   }
     * })
     * 
     */
    create<T extends UserReputationCreateArgs>(args: SelectSubset<T, UserReputationCreateArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserReputations.
     * @param {UserReputationCreateManyArgs} args - Arguments to create many UserReputations.
     * @example
     * // Create many UserReputations
     * const userReputation = await prisma.userReputation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserReputationCreateManyArgs>(args?: SelectSubset<T, UserReputationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserReputations and returns the data saved in the database.
     * @param {UserReputationCreateManyAndReturnArgs} args - Arguments to create many UserReputations.
     * @example
     * // Create many UserReputations
     * const userReputation = await prisma.userReputation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserReputations and only return the `id`
     * const userReputationWithIdOnly = await prisma.userReputation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserReputationCreateManyAndReturnArgs>(args?: SelectSubset<T, UserReputationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserReputation.
     * @param {UserReputationDeleteArgs} args - Arguments to delete one UserReputation.
     * @example
     * // Delete one UserReputation
     * const UserReputation = await prisma.userReputation.delete({
     *   where: {
     *     // ... filter to delete one UserReputation
     *   }
     * })
     * 
     */
    delete<T extends UserReputationDeleteArgs>(args: SelectSubset<T, UserReputationDeleteArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserReputation.
     * @param {UserReputationUpdateArgs} args - Arguments to update one UserReputation.
     * @example
     * // Update one UserReputation
     * const userReputation = await prisma.userReputation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserReputationUpdateArgs>(args: SelectSubset<T, UserReputationUpdateArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserReputations.
     * @param {UserReputationDeleteManyArgs} args - Arguments to filter UserReputations to delete.
     * @example
     * // Delete a few UserReputations
     * const { count } = await prisma.userReputation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserReputationDeleteManyArgs>(args?: SelectSubset<T, UserReputationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserReputations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserReputations
     * const userReputation = await prisma.userReputation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserReputationUpdateManyArgs>(args: SelectSubset<T, UserReputationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserReputation.
     * @param {UserReputationUpsertArgs} args - Arguments to update or create a UserReputation.
     * @example
     * // Update or create a UserReputation
     * const userReputation = await prisma.userReputation.upsert({
     *   create: {
     *     // ... data to create a UserReputation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserReputation we want to update
     *   }
     * })
     */
    upsert<T extends UserReputationUpsertArgs>(args: SelectSubset<T, UserReputationUpsertArgs<ExtArgs>>): Prisma__UserReputationClient<$Result.GetResult<Prisma.$UserReputationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserReputations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationCountArgs} args - Arguments to filter UserReputations to count.
     * @example
     * // Count the number of UserReputations
     * const count = await prisma.userReputation.count({
     *   where: {
     *     // ... the filter for the UserReputations we want to count
     *   }
     * })
    **/
    count<T extends UserReputationCountArgs>(
      args?: Subset<T, UserReputationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserReputationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserReputation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserReputationAggregateArgs>(args: Subset<T, UserReputationAggregateArgs>): Prisma.PrismaPromise<GetUserReputationAggregateType<T>>

    /**
     * Group by UserReputation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserReputationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserReputationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserReputationGroupByArgs['orderBy'] }
        : { orderBy?: UserReputationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserReputationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserReputationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserReputation model
   */
  readonly fields: UserReputationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserReputation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserReputationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserReputation model
   */ 
  interface UserReputationFieldRefs {
    readonly id: FieldRef<"UserReputation", 'String'>
    readonly userId: FieldRef<"UserReputation", 'String'>
    readonly overallScore: FieldRef<"UserReputation", 'Float'>
    readonly responseRate: FieldRef<"UserReputation", 'Float'>
    readonly averageResponseTime: FieldRef<"UserReputation", 'Int'>
    readonly profileCompleteness: FieldRef<"UserReputation", 'Float'>
    readonly trustScore: FieldRef<"UserReputation", 'Float'>
    readonly totalViews: FieldRef<"UserReputation", 'Int'>
    readonly totalLikes: FieldRef<"UserReputation", 'Int'>
    readonly totalMessages: FieldRef<"UserReputation", 'Int'>
    readonly totalFavorites: FieldRef<"UserReputation", 'Int'>
    readonly discoveryScore: FieldRef<"UserReputation", 'Float'>
    readonly trendingScore: FieldRef<"UserReputation", 'Float'>
    readonly qualityScore: FieldRef<"UserReputation", 'Float'>
    readonly lastScoreUpdate: FieldRef<"UserReputation", 'DateTime'>
    readonly spamScore: FieldRef<"UserReputation", 'Float'>
    readonly reportScore: FieldRef<"UserReputation", 'Float'>
    readonly createdAt: FieldRef<"UserReputation", 'DateTime'>
    readonly updatedAt: FieldRef<"UserReputation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserReputation findUnique
   */
  export type UserReputationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter, which UserReputation to fetch.
     */
    where: UserReputationWhereUniqueInput
  }

  /**
   * UserReputation findUniqueOrThrow
   */
  export type UserReputationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter, which UserReputation to fetch.
     */
    where: UserReputationWhereUniqueInput
  }

  /**
   * UserReputation findFirst
   */
  export type UserReputationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter, which UserReputation to fetch.
     */
    where?: UserReputationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserReputations to fetch.
     */
    orderBy?: UserReputationOrderByWithRelationInput | UserReputationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserReputations.
     */
    cursor?: UserReputationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserReputations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserReputations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserReputations.
     */
    distinct?: UserReputationScalarFieldEnum | UserReputationScalarFieldEnum[]
  }

  /**
   * UserReputation findFirstOrThrow
   */
  export type UserReputationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter, which UserReputation to fetch.
     */
    where?: UserReputationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserReputations to fetch.
     */
    orderBy?: UserReputationOrderByWithRelationInput | UserReputationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserReputations.
     */
    cursor?: UserReputationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserReputations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserReputations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserReputations.
     */
    distinct?: UserReputationScalarFieldEnum | UserReputationScalarFieldEnum[]
  }

  /**
   * UserReputation findMany
   */
  export type UserReputationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter, which UserReputations to fetch.
     */
    where?: UserReputationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserReputations to fetch.
     */
    orderBy?: UserReputationOrderByWithRelationInput | UserReputationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserReputations.
     */
    cursor?: UserReputationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserReputations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserReputations.
     */
    skip?: number
    distinct?: UserReputationScalarFieldEnum | UserReputationScalarFieldEnum[]
  }

  /**
   * UserReputation create
   */
  export type UserReputationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * The data needed to create a UserReputation.
     */
    data: XOR<UserReputationCreateInput, UserReputationUncheckedCreateInput>
  }

  /**
   * UserReputation createMany
   */
  export type UserReputationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserReputations.
     */
    data: UserReputationCreateManyInput | UserReputationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserReputation createManyAndReturn
   */
  export type UserReputationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserReputations.
     */
    data: UserReputationCreateManyInput | UserReputationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserReputation update
   */
  export type UserReputationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * The data needed to update a UserReputation.
     */
    data: XOR<UserReputationUpdateInput, UserReputationUncheckedUpdateInput>
    /**
     * Choose, which UserReputation to update.
     */
    where: UserReputationWhereUniqueInput
  }

  /**
   * UserReputation updateMany
   */
  export type UserReputationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserReputations.
     */
    data: XOR<UserReputationUpdateManyMutationInput, UserReputationUncheckedUpdateManyInput>
    /**
     * Filter which UserReputations to update
     */
    where?: UserReputationWhereInput
  }

  /**
   * UserReputation upsert
   */
  export type UserReputationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * The filter to search for the UserReputation to update in case it exists.
     */
    where: UserReputationWhereUniqueInput
    /**
     * In case the UserReputation found by the `where` argument doesn't exist, create a new UserReputation with this data.
     */
    create: XOR<UserReputationCreateInput, UserReputationUncheckedCreateInput>
    /**
     * In case the UserReputation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserReputationUpdateInput, UserReputationUncheckedUpdateInput>
  }

  /**
   * UserReputation delete
   */
  export type UserReputationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
    /**
     * Filter which UserReputation to delete.
     */
    where: UserReputationWhereUniqueInput
  }

  /**
   * UserReputation deleteMany
   */
  export type UserReputationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserReputations to delete
     */
    where?: UserReputationWhereInput
  }

  /**
   * UserReputation without action
   */
  export type UserReputationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserReputation
     */
    select?: UserReputationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserReputationInclude<ExtArgs> | null
  }


  /**
   * Model Escort
   */

  export type AggregateEscort = {
    _count: EscortCountAggregateOutputType | null
    _avg: EscortAvgAggregateOutputType | null
    _sum: EscortSumAggregateOutputType | null
    _min: EscortMinAggregateOutputType | null
    _max: EscortMaxAggregateOutputType | null
  }

  export type EscortAvgAggregateOutputType = {
    rating: number | null
    totalRatings: number | null
    age: number | null
    maxPosts: number | null
    currentPosts: number | null
    totalBookings: number | null
    completedBookings: number | null
  }

  export type EscortSumAggregateOutputType = {
    rating: number | null
    totalRatings: number | null
    age: number | null
    maxPosts: number | null
    currentPosts: number | null
    totalBookings: number | null
    completedBookings: number | null
  }

  export type EscortMinAggregateOutputType = {
    id: string | null
    userId: string | null
    isVerified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    verificationExpiresAt: Date | null
    rating: number | null
    totalRatings: number | null
    age: number | null
    height: string | null
    weight: string | null
    bodyType: string | null
    ethnicity: string | null
    hairColor: string | null
    eyeColor: string | null
    maxPosts: number | null
    currentPosts: number | null
    totalBookings: number | null
    completedBookings: number | null
  }

  export type EscortMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    isVerified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    verificationExpiresAt: Date | null
    rating: number | null
    totalRatings: number | null
    age: number | null
    height: string | null
    weight: string | null
    bodyType: string | null
    ethnicity: string | null
    hairColor: string | null
    eyeColor: string | null
    maxPosts: number | null
    currentPosts: number | null
    totalBookings: number | null
    completedBookings: number | null
  }

  export type EscortCountAggregateOutputType = {
    id: number
    userId: number
    isVerified: number
    verifiedAt: number
    verifiedBy: number
    verificationExpiresAt: number
    rating: number
    totalRatings: number
    age: number
    height: number
    weight: number
    bodyType: number
    ethnicity: number
    hairColor: number
    eyeColor: number
    rates: number
    availability: number
    languages: number
    maxPosts: number
    currentPosts: number
    totalBookings: number
    completedBookings: number
    services: number
    _all: number
  }


  export type EscortAvgAggregateInputType = {
    rating?: true
    totalRatings?: true
    age?: true
    maxPosts?: true
    currentPosts?: true
    totalBookings?: true
    completedBookings?: true
  }

  export type EscortSumAggregateInputType = {
    rating?: true
    totalRatings?: true
    age?: true
    maxPosts?: true
    currentPosts?: true
    totalBookings?: true
    completedBookings?: true
  }

  export type EscortMinAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    verifiedBy?: true
    verificationExpiresAt?: true
    rating?: true
    totalRatings?: true
    age?: true
    height?: true
    weight?: true
    bodyType?: true
    ethnicity?: true
    hairColor?: true
    eyeColor?: true
    maxPosts?: true
    currentPosts?: true
    totalBookings?: true
    completedBookings?: true
  }

  export type EscortMaxAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    verifiedBy?: true
    verificationExpiresAt?: true
    rating?: true
    totalRatings?: true
    age?: true
    height?: true
    weight?: true
    bodyType?: true
    ethnicity?: true
    hairColor?: true
    eyeColor?: true
    maxPosts?: true
    currentPosts?: true
    totalBookings?: true
    completedBookings?: true
  }

  export type EscortCountAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    verifiedBy?: true
    verificationExpiresAt?: true
    rating?: true
    totalRatings?: true
    age?: true
    height?: true
    weight?: true
    bodyType?: true
    ethnicity?: true
    hairColor?: true
    eyeColor?: true
    rates?: true
    availability?: true
    languages?: true
    maxPosts?: true
    currentPosts?: true
    totalBookings?: true
    completedBookings?: true
    services?: true
    _all?: true
  }

  export type EscortAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Escort to aggregate.
     */
    where?: EscortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escorts to fetch.
     */
    orderBy?: EscortOrderByWithRelationInput | EscortOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EscortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escorts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escorts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Escorts
    **/
    _count?: true | EscortCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EscortAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EscortSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EscortMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EscortMaxAggregateInputType
  }

  export type GetEscortAggregateType<T extends EscortAggregateArgs> = {
        [P in keyof T & keyof AggregateEscort]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEscort[P]>
      : GetScalarType<T[P], AggregateEscort[P]>
  }




  export type EscortGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscortWhereInput
    orderBy?: EscortOrderByWithAggregationInput | EscortOrderByWithAggregationInput[]
    by: EscortScalarFieldEnum[] | EscortScalarFieldEnum
    having?: EscortScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EscortCountAggregateInputType | true
    _avg?: EscortAvgAggregateInputType
    _sum?: EscortSumAggregateInputType
    _min?: EscortMinAggregateInputType
    _max?: EscortMaxAggregateInputType
  }

  export type EscortGroupByOutputType = {
    id: string
    userId: string
    isVerified: boolean
    verifiedAt: Date | null
    verifiedBy: string | null
    verificationExpiresAt: Date | null
    rating: number
    totalRatings: number
    age: number | null
    height: string | null
    weight: string | null
    bodyType: string | null
    ethnicity: string | null
    hairColor: string | null
    eyeColor: string | null
    rates: JsonValue | null
    availability: JsonValue | null
    languages: string[]
    maxPosts: number
    currentPosts: number
    totalBookings: number
    completedBookings: number
    services: string[]
    _count: EscortCountAggregateOutputType | null
    _avg: EscortAvgAggregateOutputType | null
    _sum: EscortSumAggregateOutputType | null
    _min: EscortMinAggregateOutputType | null
    _max: EscortMaxAggregateOutputType | null
  }

  type GetEscortGroupByPayload<T extends EscortGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EscortGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EscortGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EscortGroupByOutputType[P]>
            : GetScalarType<T[P], EscortGroupByOutputType[P]>
        }
      >
    >


  export type EscortSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationExpiresAt?: boolean
    rating?: boolean
    totalRatings?: boolean
    age?: boolean
    height?: boolean
    weight?: boolean
    bodyType?: boolean
    ethnicity?: boolean
    hairColor?: boolean
    eyeColor?: boolean
    rates?: boolean
    availability?: boolean
    languages?: boolean
    maxPosts?: boolean
    currentPosts?: boolean
    totalBookings?: boolean
    completedBookings?: boolean
    services?: boolean
    agencyInvitations?: boolean | Escort$agencyInvitationsArgs<ExtArgs>
    agencyMemberships?: boolean | Escort$agencyMembershipsArgs<ExtArgs>
    clientReviews?: boolean | Escort$clientReviewsArgs<ExtArgs>
    verifications?: boolean | Escort$verificationsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewsGiven?: boolean | Escort$reviewsGivenArgs<ExtArgs>
    reviews?: boolean | Escort$reviewsArgs<ExtArgs>
    _count?: boolean | EscortCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escort"]>

  export type EscortSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationExpiresAt?: boolean
    rating?: boolean
    totalRatings?: boolean
    age?: boolean
    height?: boolean
    weight?: boolean
    bodyType?: boolean
    ethnicity?: boolean
    hairColor?: boolean
    eyeColor?: boolean
    rates?: boolean
    availability?: boolean
    languages?: boolean
    maxPosts?: boolean
    currentPosts?: boolean
    totalBookings?: boolean
    completedBookings?: boolean
    services?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escort"]>

  export type EscortSelectScalar = {
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationExpiresAt?: boolean
    rating?: boolean
    totalRatings?: boolean
    age?: boolean
    height?: boolean
    weight?: boolean
    bodyType?: boolean
    ethnicity?: boolean
    hairColor?: boolean
    eyeColor?: boolean
    rates?: boolean
    availability?: boolean
    languages?: boolean
    maxPosts?: boolean
    currentPosts?: boolean
    totalBookings?: boolean
    completedBookings?: boolean
    services?: boolean
  }

  export type EscortInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agencyInvitations?: boolean | Escort$agencyInvitationsArgs<ExtArgs>
    agencyMemberships?: boolean | Escort$agencyMembershipsArgs<ExtArgs>
    clientReviews?: boolean | Escort$clientReviewsArgs<ExtArgs>
    verifications?: boolean | Escort$verificationsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    reviewsGiven?: boolean | Escort$reviewsGivenArgs<ExtArgs>
    reviews?: boolean | Escort$reviewsArgs<ExtArgs>
    _count?: boolean | EscortCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EscortIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $EscortPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Escort"
    objects: {
      agencyInvitations: Prisma.$AgencyInvitationPayload<ExtArgs>[]
      agencyMemberships: Prisma.$AgencyMembershipPayload<ExtArgs>[]
      clientReviews: Prisma.$ClientReviewPayload<ExtArgs>[]
      verifications: Prisma.$EscortVerificationPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
      reviewsGiven: Prisma.$ReviewPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      isVerified: boolean
      verifiedAt: Date | null
      verifiedBy: string | null
      verificationExpiresAt: Date | null
      rating: number
      totalRatings: number
      age: number | null
      height: string | null
      weight: string | null
      bodyType: string | null
      ethnicity: string | null
      hairColor: string | null
      eyeColor: string | null
      rates: Prisma.JsonValue | null
      availability: Prisma.JsonValue | null
      languages: string[]
      maxPosts: number
      currentPosts: number
      totalBookings: number
      completedBookings: number
      services: string[]
    }, ExtArgs["result"]["escort"]>
    composites: {}
  }

  type EscortGetPayload<S extends boolean | null | undefined | EscortDefaultArgs> = $Result.GetResult<Prisma.$EscortPayload, S>

  type EscortCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EscortFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EscortCountAggregateInputType | true
    }

  export interface EscortDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Escort'], meta: { name: 'Escort' } }
    /**
     * Find zero or one Escort that matches the filter.
     * @param {EscortFindUniqueArgs} args - Arguments to find a Escort
     * @example
     * // Get one Escort
     * const escort = await prisma.escort.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EscortFindUniqueArgs>(args: SelectSubset<T, EscortFindUniqueArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Escort that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EscortFindUniqueOrThrowArgs} args - Arguments to find a Escort
     * @example
     * // Get one Escort
     * const escort = await prisma.escort.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EscortFindUniqueOrThrowArgs>(args: SelectSubset<T, EscortFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Escort that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortFindFirstArgs} args - Arguments to find a Escort
     * @example
     * // Get one Escort
     * const escort = await prisma.escort.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EscortFindFirstArgs>(args?: SelectSubset<T, EscortFindFirstArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Escort that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortFindFirstOrThrowArgs} args - Arguments to find a Escort
     * @example
     * // Get one Escort
     * const escort = await prisma.escort.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EscortFindFirstOrThrowArgs>(args?: SelectSubset<T, EscortFindFirstOrThrowArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Escorts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Escorts
     * const escorts = await prisma.escort.findMany()
     * 
     * // Get first 10 Escorts
     * const escorts = await prisma.escort.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const escortWithIdOnly = await prisma.escort.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EscortFindManyArgs>(args?: SelectSubset<T, EscortFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Escort.
     * @param {EscortCreateArgs} args - Arguments to create a Escort.
     * @example
     * // Create one Escort
     * const Escort = await prisma.escort.create({
     *   data: {
     *     // ... data to create a Escort
     *   }
     * })
     * 
     */
    create<T extends EscortCreateArgs>(args: SelectSubset<T, EscortCreateArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Escorts.
     * @param {EscortCreateManyArgs} args - Arguments to create many Escorts.
     * @example
     * // Create many Escorts
     * const escort = await prisma.escort.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EscortCreateManyArgs>(args?: SelectSubset<T, EscortCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Escorts and returns the data saved in the database.
     * @param {EscortCreateManyAndReturnArgs} args - Arguments to create many Escorts.
     * @example
     * // Create many Escorts
     * const escort = await prisma.escort.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Escorts and only return the `id`
     * const escortWithIdOnly = await prisma.escort.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EscortCreateManyAndReturnArgs>(args?: SelectSubset<T, EscortCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Escort.
     * @param {EscortDeleteArgs} args - Arguments to delete one Escort.
     * @example
     * // Delete one Escort
     * const Escort = await prisma.escort.delete({
     *   where: {
     *     // ... filter to delete one Escort
     *   }
     * })
     * 
     */
    delete<T extends EscortDeleteArgs>(args: SelectSubset<T, EscortDeleteArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Escort.
     * @param {EscortUpdateArgs} args - Arguments to update one Escort.
     * @example
     * // Update one Escort
     * const escort = await prisma.escort.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EscortUpdateArgs>(args: SelectSubset<T, EscortUpdateArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Escorts.
     * @param {EscortDeleteManyArgs} args - Arguments to filter Escorts to delete.
     * @example
     * // Delete a few Escorts
     * const { count } = await prisma.escort.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EscortDeleteManyArgs>(args?: SelectSubset<T, EscortDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Escorts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Escorts
     * const escort = await prisma.escort.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EscortUpdateManyArgs>(args: SelectSubset<T, EscortUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Escort.
     * @param {EscortUpsertArgs} args - Arguments to update or create a Escort.
     * @example
     * // Update or create a Escort
     * const escort = await prisma.escort.upsert({
     *   create: {
     *     // ... data to create a Escort
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Escort we want to update
     *   }
     * })
     */
    upsert<T extends EscortUpsertArgs>(args: SelectSubset<T, EscortUpsertArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Escorts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortCountArgs} args - Arguments to filter Escorts to count.
     * @example
     * // Count the number of Escorts
     * const count = await prisma.escort.count({
     *   where: {
     *     // ... the filter for the Escorts we want to count
     *   }
     * })
    **/
    count<T extends EscortCountArgs>(
      args?: Subset<T, EscortCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EscortCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Escort.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EscortAggregateArgs>(args: Subset<T, EscortAggregateArgs>): Prisma.PrismaPromise<GetEscortAggregateType<T>>

    /**
     * Group by Escort.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EscortGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EscortGroupByArgs['orderBy'] }
        : { orderBy?: EscortGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EscortGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEscortGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Escort model
   */
  readonly fields: EscortFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Escort.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EscortClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agencyInvitations<T extends Escort$agencyInvitationsArgs<ExtArgs> = {}>(args?: Subset<T, Escort$agencyInvitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findMany"> | Null>
    agencyMemberships<T extends Escort$agencyMembershipsArgs<ExtArgs> = {}>(args?: Subset<T, Escort$agencyMembershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findMany"> | Null>
    clientReviews<T extends Escort$clientReviewsArgs<ExtArgs> = {}>(args?: Subset<T, Escort$clientReviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findMany"> | Null>
    verifications<T extends Escort$verificationsArgs<ExtArgs> = {}>(args?: Subset<T, Escort$verificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    reviewsGiven<T extends Escort$reviewsGivenArgs<ExtArgs> = {}>(args?: Subset<T, Escort$reviewsGivenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Escort$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Escort$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Escort model
   */ 
  interface EscortFieldRefs {
    readonly id: FieldRef<"Escort", 'String'>
    readonly userId: FieldRef<"Escort", 'String'>
    readonly isVerified: FieldRef<"Escort", 'Boolean'>
    readonly verifiedAt: FieldRef<"Escort", 'DateTime'>
    readonly verifiedBy: FieldRef<"Escort", 'String'>
    readonly verificationExpiresAt: FieldRef<"Escort", 'DateTime'>
    readonly rating: FieldRef<"Escort", 'Float'>
    readonly totalRatings: FieldRef<"Escort", 'Int'>
    readonly age: FieldRef<"Escort", 'Int'>
    readonly height: FieldRef<"Escort", 'String'>
    readonly weight: FieldRef<"Escort", 'String'>
    readonly bodyType: FieldRef<"Escort", 'String'>
    readonly ethnicity: FieldRef<"Escort", 'String'>
    readonly hairColor: FieldRef<"Escort", 'String'>
    readonly eyeColor: FieldRef<"Escort", 'String'>
    readonly rates: FieldRef<"Escort", 'Json'>
    readonly availability: FieldRef<"Escort", 'Json'>
    readonly languages: FieldRef<"Escort", 'String[]'>
    readonly maxPosts: FieldRef<"Escort", 'Int'>
    readonly currentPosts: FieldRef<"Escort", 'Int'>
    readonly totalBookings: FieldRef<"Escort", 'Int'>
    readonly completedBookings: FieldRef<"Escort", 'Int'>
    readonly services: FieldRef<"Escort", 'String[]'>
  }
    

  // Custom InputTypes
  /**
   * Escort findUnique
   */
  export type EscortFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter, which Escort to fetch.
     */
    where: EscortWhereUniqueInput
  }

  /**
   * Escort findUniqueOrThrow
   */
  export type EscortFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter, which Escort to fetch.
     */
    where: EscortWhereUniqueInput
  }

  /**
   * Escort findFirst
   */
  export type EscortFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter, which Escort to fetch.
     */
    where?: EscortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escorts to fetch.
     */
    orderBy?: EscortOrderByWithRelationInput | EscortOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Escorts.
     */
    cursor?: EscortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escorts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escorts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Escorts.
     */
    distinct?: EscortScalarFieldEnum | EscortScalarFieldEnum[]
  }

  /**
   * Escort findFirstOrThrow
   */
  export type EscortFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter, which Escort to fetch.
     */
    where?: EscortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escorts to fetch.
     */
    orderBy?: EscortOrderByWithRelationInput | EscortOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Escorts.
     */
    cursor?: EscortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escorts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escorts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Escorts.
     */
    distinct?: EscortScalarFieldEnum | EscortScalarFieldEnum[]
  }

  /**
   * Escort findMany
   */
  export type EscortFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter, which Escorts to fetch.
     */
    where?: EscortWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escorts to fetch.
     */
    orderBy?: EscortOrderByWithRelationInput | EscortOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Escorts.
     */
    cursor?: EscortWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escorts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escorts.
     */
    skip?: number
    distinct?: EscortScalarFieldEnum | EscortScalarFieldEnum[]
  }

  /**
   * Escort create
   */
  export type EscortCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * The data needed to create a Escort.
     */
    data: XOR<EscortCreateInput, EscortUncheckedCreateInput>
  }

  /**
   * Escort createMany
   */
  export type EscortCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Escorts.
     */
    data: EscortCreateManyInput | EscortCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Escort createManyAndReturn
   */
  export type EscortCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Escorts.
     */
    data: EscortCreateManyInput | EscortCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Escort update
   */
  export type EscortUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * The data needed to update a Escort.
     */
    data: XOR<EscortUpdateInput, EscortUncheckedUpdateInput>
    /**
     * Choose, which Escort to update.
     */
    where: EscortWhereUniqueInput
  }

  /**
   * Escort updateMany
   */
  export type EscortUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Escorts.
     */
    data: XOR<EscortUpdateManyMutationInput, EscortUncheckedUpdateManyInput>
    /**
     * Filter which Escorts to update
     */
    where?: EscortWhereInput
  }

  /**
   * Escort upsert
   */
  export type EscortUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * The filter to search for the Escort to update in case it exists.
     */
    where: EscortWhereUniqueInput
    /**
     * In case the Escort found by the `where` argument doesn't exist, create a new Escort with this data.
     */
    create: XOR<EscortCreateInput, EscortUncheckedCreateInput>
    /**
     * In case the Escort was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EscortUpdateInput, EscortUncheckedUpdateInput>
  }

  /**
   * Escort delete
   */
  export type EscortDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
    /**
     * Filter which Escort to delete.
     */
    where: EscortWhereUniqueInput
  }

  /**
   * Escort deleteMany
   */
  export type EscortDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Escorts to delete
     */
    where?: EscortWhereInput
  }

  /**
   * Escort.agencyInvitations
   */
  export type Escort$agencyInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    where?: AgencyInvitationWhereInput
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    cursor?: AgencyInvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyInvitationScalarFieldEnum | AgencyInvitationScalarFieldEnum[]
  }

  /**
   * Escort.agencyMemberships
   */
  export type Escort$agencyMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    where?: AgencyMembershipWhereInput
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    cursor?: AgencyMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyMembershipScalarFieldEnum | AgencyMembershipScalarFieldEnum[]
  }

  /**
   * Escort.clientReviews
   */
  export type Escort$clientReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    where?: ClientReviewWhereInput
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    cursor?: ClientReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientReviewScalarFieldEnum | ClientReviewScalarFieldEnum[]
  }

  /**
   * Escort.verifications
   */
  export type Escort$verificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    where?: EscortVerificationWhereInput
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    cursor?: EscortVerificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * Escort.reviewsGiven
   */
  export type Escort$reviewsGivenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Escort.reviews
   */
  export type Escort$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Escort without action
   */
  export type EscortDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escort
     */
    select?: EscortSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortInclude<ExtArgs> | null
  }


  /**
   * Model Agency
   */

  export type AggregateAgency = {
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  export type AgencyAvgAggregateOutputType = {
    maxPosts: number | null
    totalEscorts: number | null
    verifiedEscorts: number | null
    totalVerifications: number | null
    activeEscorts: number | null
    defaultCommissionRate: number | null
  }

  export type AgencySumAggregateOutputType = {
    maxPosts: number | null
    totalEscorts: number | null
    verifiedEscorts: number | null
    totalVerifications: number | null
    activeEscorts: number | null
    defaultCommissionRate: number | null
  }

  export type AgencyMinAggregateOutputType = {
    id: string | null
    userId: string | null
    isVerified: boolean | null
    verifiedAt: Date | null
    companyName: string | null
    businessLicense: string | null
    contactPerson: string | null
    address: string | null
    cedulaFrente: string | null
    cedulaTrasera: string | null
    verificationStatus: $Enums.VerificationStatus | null
    taxId: string | null
    maxPosts: number | null
    totalEscorts: number | null
    verifiedEscorts: number | null
    totalVerifications: number | null
    activeEscorts: number | null
    defaultCommissionRate: number | null
  }

  export type AgencyMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    isVerified: boolean | null
    verifiedAt: Date | null
    companyName: string | null
    businessLicense: string | null
    contactPerson: string | null
    address: string | null
    cedulaFrente: string | null
    cedulaTrasera: string | null
    verificationStatus: $Enums.VerificationStatus | null
    taxId: string | null
    maxPosts: number | null
    totalEscorts: number | null
    verifiedEscorts: number | null
    totalVerifications: number | null
    activeEscorts: number | null
    defaultCommissionRate: number | null
  }

  export type AgencyCountAggregateOutputType = {
    id: number
    userId: number
    isVerified: number
    verifiedAt: number
    companyName: number
    businessLicense: number
    contactPerson: number
    address: number
    cedulaFrente: number
    cedulaTrasera: number
    verificationStatus: number
    taxId: number
    maxPosts: number
    totalEscorts: number
    verifiedEscorts: number
    totalVerifications: number
    activeEscorts: number
    defaultCommissionRate: number
    _all: number
  }


  export type AgencyAvgAggregateInputType = {
    maxPosts?: true
    totalEscorts?: true
    verifiedEscorts?: true
    totalVerifications?: true
    activeEscorts?: true
    defaultCommissionRate?: true
  }

  export type AgencySumAggregateInputType = {
    maxPosts?: true
    totalEscorts?: true
    verifiedEscorts?: true
    totalVerifications?: true
    activeEscorts?: true
    defaultCommissionRate?: true
  }

  export type AgencyMinAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    companyName?: true
    businessLicense?: true
    contactPerson?: true
    address?: true
    cedulaFrente?: true
    cedulaTrasera?: true
    verificationStatus?: true
    taxId?: true
    maxPosts?: true
    totalEscorts?: true
    verifiedEscorts?: true
    totalVerifications?: true
    activeEscorts?: true
    defaultCommissionRate?: true
  }

  export type AgencyMaxAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    companyName?: true
    businessLicense?: true
    contactPerson?: true
    address?: true
    cedulaFrente?: true
    cedulaTrasera?: true
    verificationStatus?: true
    taxId?: true
    maxPosts?: true
    totalEscorts?: true
    verifiedEscorts?: true
    totalVerifications?: true
    activeEscorts?: true
    defaultCommissionRate?: true
  }

  export type AgencyCountAggregateInputType = {
    id?: true
    userId?: true
    isVerified?: true
    verifiedAt?: true
    companyName?: true
    businessLicense?: true
    contactPerson?: true
    address?: true
    cedulaFrente?: true
    cedulaTrasera?: true
    verificationStatus?: true
    taxId?: true
    maxPosts?: true
    totalEscorts?: true
    verifiedEscorts?: true
    totalVerifications?: true
    activeEscorts?: true
    defaultCommissionRate?: true
    _all?: true
  }

  export type AgencyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agency to aggregate.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Agencies
    **/
    _count?: true | AgencyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMaxAggregateInputType
  }

  export type GetAgencyAggregateType<T extends AgencyAggregateArgs> = {
        [P in keyof T & keyof AggregateAgency]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgency[P]>
      : GetScalarType<T[P], AggregateAgency[P]>
  }




  export type AgencyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyWhereInput
    orderBy?: AgencyOrderByWithAggregationInput | AgencyOrderByWithAggregationInput[]
    by: AgencyScalarFieldEnum[] | AgencyScalarFieldEnum
    having?: AgencyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyCountAggregateInputType | true
    _avg?: AgencyAvgAggregateInputType
    _sum?: AgencySumAggregateInputType
    _min?: AgencyMinAggregateInputType
    _max?: AgencyMaxAggregateInputType
  }

  export type AgencyGroupByOutputType = {
    id: string
    userId: string
    isVerified: boolean
    verifiedAt: Date | null
    companyName: string
    businessLicense: string | null
    contactPerson: string
    address: string
    cedulaFrente: string | null
    cedulaTrasera: string | null
    verificationStatus: $Enums.VerificationStatus
    taxId: string | null
    maxPosts: number | null
    totalEscorts: number
    verifiedEscorts: number
    totalVerifications: number
    activeEscorts: number
    defaultCommissionRate: number
    _count: AgencyCountAggregateOutputType | null
    _avg: AgencyAvgAggregateOutputType | null
    _sum: AgencySumAggregateOutputType | null
    _min: AgencyMinAggregateOutputType | null
    _max: AgencyMaxAggregateOutputType | null
  }

  type GetAgencyGroupByPayload<T extends AgencyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyGroupByOutputType[P]>
        }
      >
    >


  export type AgencySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    companyName?: boolean
    businessLicense?: boolean
    contactPerson?: boolean
    address?: boolean
    cedulaFrente?: boolean
    cedulaTrasera?: boolean
    verificationStatus?: boolean
    taxId?: boolean
    maxPosts?: boolean
    totalEscorts?: boolean
    verifiedEscorts?: boolean
    totalVerifications?: boolean
    activeEscorts?: boolean
    defaultCommissionRate?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    invitations?: boolean | Agency$invitationsArgs<ExtArgs>
    memberships?: boolean | Agency$membershipsArgs<ExtArgs>
    verifications?: boolean | Agency$verificationsArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    companyName?: boolean
    businessLicense?: boolean
    contactPerson?: boolean
    address?: boolean
    cedulaFrente?: boolean
    cedulaTrasera?: boolean
    verificationStatus?: boolean
    taxId?: boolean
    maxPosts?: boolean
    totalEscorts?: boolean
    verifiedEscorts?: boolean
    totalVerifications?: boolean
    activeEscorts?: boolean
    defaultCommissionRate?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agency"]>

  export type AgencySelectScalar = {
    id?: boolean
    userId?: boolean
    isVerified?: boolean
    verifiedAt?: boolean
    companyName?: boolean
    businessLicense?: boolean
    contactPerson?: boolean
    address?: boolean
    cedulaFrente?: boolean
    cedulaTrasera?: boolean
    verificationStatus?: boolean
    taxId?: boolean
    maxPosts?: boolean
    totalEscorts?: boolean
    verifiedEscorts?: boolean
    totalVerifications?: boolean
    activeEscorts?: boolean
    defaultCommissionRate?: boolean
  }

  export type AgencyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    invitations?: boolean | Agency$invitationsArgs<ExtArgs>
    memberships?: boolean | Agency$membershipsArgs<ExtArgs>
    verifications?: boolean | Agency$verificationsArgs<ExtArgs>
    _count?: boolean | AgencyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AgencyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AgencyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Agency"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      invitations: Prisma.$AgencyInvitationPayload<ExtArgs>[]
      memberships: Prisma.$AgencyMembershipPayload<ExtArgs>[]
      verifications: Prisma.$EscortVerificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      isVerified: boolean
      verifiedAt: Date | null
      companyName: string
      businessLicense: string | null
      contactPerson: string
      address: string
      cedulaFrente: string | null
      cedulaTrasera: string | null
      verificationStatus: $Enums.VerificationStatus
      taxId: string | null
      maxPosts: number | null
      totalEscorts: number
      verifiedEscorts: number
      totalVerifications: number
      activeEscorts: number
      defaultCommissionRate: number
    }, ExtArgs["result"]["agency"]>
    composites: {}
  }

  type AgencyGetPayload<S extends boolean | null | undefined | AgencyDefaultArgs> = $Result.GetResult<Prisma.$AgencyPayload, S>

  type AgencyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgencyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgencyCountAggregateInputType | true
    }

  export interface AgencyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Agency'], meta: { name: 'Agency' } }
    /**
     * Find zero or one Agency that matches the filter.
     * @param {AgencyFindUniqueArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyFindUniqueArgs>(args: SelectSubset<T, AgencyFindUniqueArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Agency that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgencyFindUniqueOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Agency that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyFindFirstArgs>(args?: SelectSubset<T, AgencyFindFirstArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Agency that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindFirstOrThrowArgs} args - Arguments to find a Agency
     * @example
     * // Get one Agency
     * const agency = await prisma.agency.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Agencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Agencies
     * const agencies = await prisma.agency.findMany()
     * 
     * // Get first 10 Agencies
     * const agencies = await prisma.agency.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyWithIdOnly = await prisma.agency.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyFindManyArgs>(args?: SelectSubset<T, AgencyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Agency.
     * @param {AgencyCreateArgs} args - Arguments to create a Agency.
     * @example
     * // Create one Agency
     * const Agency = await prisma.agency.create({
     *   data: {
     *     // ... data to create a Agency
     *   }
     * })
     * 
     */
    create<T extends AgencyCreateArgs>(args: SelectSubset<T, AgencyCreateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Agencies.
     * @param {AgencyCreateManyArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyCreateManyArgs>(args?: SelectSubset<T, AgencyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Agencies and returns the data saved in the database.
     * @param {AgencyCreateManyAndReturnArgs} args - Arguments to create many Agencies.
     * @example
     * // Create many Agencies
     * const agency = await prisma.agency.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Agencies and only return the `id`
     * const agencyWithIdOnly = await prisma.agency.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Agency.
     * @param {AgencyDeleteArgs} args - Arguments to delete one Agency.
     * @example
     * // Delete one Agency
     * const Agency = await prisma.agency.delete({
     *   where: {
     *     // ... filter to delete one Agency
     *   }
     * })
     * 
     */
    delete<T extends AgencyDeleteArgs>(args: SelectSubset<T, AgencyDeleteArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Agency.
     * @param {AgencyUpdateArgs} args - Arguments to update one Agency.
     * @example
     * // Update one Agency
     * const agency = await prisma.agency.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyUpdateArgs>(args: SelectSubset<T, AgencyUpdateArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Agencies.
     * @param {AgencyDeleteManyArgs} args - Arguments to filter Agencies to delete.
     * @example
     * // Delete a few Agencies
     * const { count } = await prisma.agency.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyDeleteManyArgs>(args?: SelectSubset<T, AgencyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Agencies
     * const agency = await prisma.agency.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyUpdateManyArgs>(args: SelectSubset<T, AgencyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Agency.
     * @param {AgencyUpsertArgs} args - Arguments to update or create a Agency.
     * @example
     * // Update or create a Agency
     * const agency = await prisma.agency.upsert({
     *   create: {
     *     // ... data to create a Agency
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Agency we want to update
     *   }
     * })
     */
    upsert<T extends AgencyUpsertArgs>(args: SelectSubset<T, AgencyUpsertArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Agencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyCountArgs} args - Arguments to filter Agencies to count.
     * @example
     * // Count the number of Agencies
     * const count = await prisma.agency.count({
     *   where: {
     *     // ... the filter for the Agencies we want to count
     *   }
     * })
    **/
    count<T extends AgencyCountArgs>(
      args?: Subset<T, AgencyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyAggregateArgs>(args: Subset<T, AgencyAggregateArgs>): Prisma.PrismaPromise<GetAgencyAggregateType<T>>

    /**
     * Group by Agency.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyGroupByArgs['orderBy'] }
        : { orderBy?: AgencyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Agency model
   */
  readonly fields: AgencyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Agency.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    invitations<T extends Agency$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findMany"> | Null>
    memberships<T extends Agency$membershipsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$membershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findMany"> | Null>
    verifications<T extends Agency$verificationsArgs<ExtArgs> = {}>(args?: Subset<T, Agency$verificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Agency model
   */ 
  interface AgencyFieldRefs {
    readonly id: FieldRef<"Agency", 'String'>
    readonly userId: FieldRef<"Agency", 'String'>
    readonly isVerified: FieldRef<"Agency", 'Boolean'>
    readonly verifiedAt: FieldRef<"Agency", 'DateTime'>
    readonly companyName: FieldRef<"Agency", 'String'>
    readonly businessLicense: FieldRef<"Agency", 'String'>
    readonly contactPerson: FieldRef<"Agency", 'String'>
    readonly address: FieldRef<"Agency", 'String'>
    readonly cedulaFrente: FieldRef<"Agency", 'String'>
    readonly cedulaTrasera: FieldRef<"Agency", 'String'>
    readonly verificationStatus: FieldRef<"Agency", 'VerificationStatus'>
    readonly taxId: FieldRef<"Agency", 'String'>
    readonly maxPosts: FieldRef<"Agency", 'Int'>
    readonly totalEscorts: FieldRef<"Agency", 'Int'>
    readonly verifiedEscorts: FieldRef<"Agency", 'Int'>
    readonly totalVerifications: FieldRef<"Agency", 'Int'>
    readonly activeEscorts: FieldRef<"Agency", 'Int'>
    readonly defaultCommissionRate: FieldRef<"Agency", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Agency findUnique
   */
  export type AgencyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findUniqueOrThrow
   */
  export type AgencyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency findFirst
   */
  export type AgencyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findFirstOrThrow
   */
  export type AgencyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agency to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Agencies.
     */
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency findMany
   */
  export type AgencyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter, which Agencies to fetch.
     */
    where?: AgencyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Agencies to fetch.
     */
    orderBy?: AgencyOrderByWithRelationInput | AgencyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Agencies.
     */
    cursor?: AgencyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Agencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Agencies.
     */
    skip?: number
    distinct?: AgencyScalarFieldEnum | AgencyScalarFieldEnum[]
  }

  /**
   * Agency create
   */
  export type AgencyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to create a Agency.
     */
    data: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
  }

  /**
   * Agency createMany
   */
  export type AgencyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Agency createManyAndReturn
   */
  export type AgencyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Agencies.
     */
    data: AgencyCreateManyInput | AgencyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Agency update
   */
  export type AgencyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The data needed to update a Agency.
     */
    data: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
    /**
     * Choose, which Agency to update.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency updateMany
   */
  export type AgencyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Agencies.
     */
    data: XOR<AgencyUpdateManyMutationInput, AgencyUncheckedUpdateManyInput>
    /**
     * Filter which Agencies to update
     */
    where?: AgencyWhereInput
  }

  /**
   * Agency upsert
   */
  export type AgencyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * The filter to search for the Agency to update in case it exists.
     */
    where: AgencyWhereUniqueInput
    /**
     * In case the Agency found by the `where` argument doesn't exist, create a new Agency with this data.
     */
    create: XOR<AgencyCreateInput, AgencyUncheckedCreateInput>
    /**
     * In case the Agency was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyUpdateInput, AgencyUncheckedUpdateInput>
  }

  /**
   * Agency delete
   */
  export type AgencyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
    /**
     * Filter which Agency to delete.
     */
    where: AgencyWhereUniqueInput
  }

  /**
   * Agency deleteMany
   */
  export type AgencyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Agencies to delete
     */
    where?: AgencyWhereInput
  }

  /**
   * Agency.invitations
   */
  export type Agency$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    where?: AgencyInvitationWhereInput
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    cursor?: AgencyInvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyInvitationScalarFieldEnum | AgencyInvitationScalarFieldEnum[]
  }

  /**
   * Agency.memberships
   */
  export type Agency$membershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    where?: AgencyMembershipWhereInput
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    cursor?: AgencyMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AgencyMembershipScalarFieldEnum | AgencyMembershipScalarFieldEnum[]
  }

  /**
   * Agency.verifications
   */
  export type Agency$verificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    where?: EscortVerificationWhereInput
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    cursor?: EscortVerificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * Agency without action
   */
  export type AgencyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Agency
     */
    select?: AgencySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInclude<ExtArgs> | null
  }


  /**
   * Model Client
   */

  export type AggregateClient = {
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  export type ClientAvgAggregateOutputType = {
    points: number | null
    maxFavorites: number | null
    currentFavorites: number | null
    dailyMessageLimit: number | null
    messagesUsedToday: number | null
    totalMessagesUsed: number | null
    dailyLoginStreak: number | null
    totalDailyPointsEarned: number | null
    totalPointsEarned: number | null
    totalPointsSpent: number | null
    totalPointsPurchased: number | null
    agePreferenceMin: number | null
    agePreferenceMax: number | null
  }

  export type ClientSumAggregateOutputType = {
    points: number | null
    maxFavorites: number | null
    currentFavorites: number | null
    dailyMessageLimit: number | null
    messagesUsedToday: number | null
    totalMessagesUsed: number | null
    dailyLoginStreak: number | null
    totalDailyPointsEarned: number | null
    totalPointsEarned: number | null
    totalPointsSpent: number | null
    totalPointsPurchased: number | null
    agePreferenceMin: number | null
    agePreferenceMax: number | null
  }

  export type ClientMinAggregateOutputType = {
    id: string | null
    userId: string | null
    points: number | null
    isPremium: boolean | null
    premiumUntil: Date | null
    premiumTier: $Enums.PremiumTier | null
    chatPriorityUntil: Date | null
    maxFavorites: number | null
    currentFavorites: number | null
    dailyMessageLimit: number | null
    messagesUsedToday: number | null
    canViewPhoneNumbers: boolean | null
    canSendImages: boolean | null
    canSendVoiceMessages: boolean | null
    prioritySupport: boolean | null
    canSeeOnlineStatus: boolean | null
    totalMessagesUsed: number | null
    lastMessageReset: Date | null
    canAccessPremiumProfiles: boolean | null
    lastDailyPointsClaim: Date | null
    dailyLoginStreak: number | null
    totalDailyPointsEarned: number | null
    totalPointsEarned: number | null
    totalPointsSpent: number | null
    pointsLastUpdated: Date | null
    totalPointsPurchased: number | null
    agePreferenceMin: number | null
    agePreferenceMax: number | null
    locationPreference: string | null
  }

  export type ClientMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    points: number | null
    isPremium: boolean | null
    premiumUntil: Date | null
    premiumTier: $Enums.PremiumTier | null
    chatPriorityUntil: Date | null
    maxFavorites: number | null
    currentFavorites: number | null
    dailyMessageLimit: number | null
    messagesUsedToday: number | null
    canViewPhoneNumbers: boolean | null
    canSendImages: boolean | null
    canSendVoiceMessages: boolean | null
    prioritySupport: boolean | null
    canSeeOnlineStatus: boolean | null
    totalMessagesUsed: number | null
    lastMessageReset: Date | null
    canAccessPremiumProfiles: boolean | null
    lastDailyPointsClaim: Date | null
    dailyLoginStreak: number | null
    totalDailyPointsEarned: number | null
    totalPointsEarned: number | null
    totalPointsSpent: number | null
    pointsLastUpdated: Date | null
    totalPointsPurchased: number | null
    agePreferenceMin: number | null
    agePreferenceMax: number | null
    locationPreference: string | null
  }

  export type ClientCountAggregateOutputType = {
    id: number
    userId: number
    points: number
    isPremium: number
    premiumUntil: number
    premiumTier: number
    chatPriorityUntil: number
    maxFavorites: number
    currentFavorites: number
    dailyMessageLimit: number
    messagesUsedToday: number
    canViewPhoneNumbers: number
    canSendImages: number
    canSendVoiceMessages: number
    prioritySupport: number
    canSeeOnlineStatus: number
    totalMessagesUsed: number
    lastMessageReset: number
    canAccessPremiumProfiles: number
    lastDailyPointsClaim: number
    dailyLoginStreak: number
    totalDailyPointsEarned: number
    totalPointsEarned: number
    totalPointsSpent: number
    pointsLastUpdated: number
    totalPointsPurchased: number
    agePreferenceMin: number
    agePreferenceMax: number
    locationPreference: number
    _all: number
  }


  export type ClientAvgAggregateInputType = {
    points?: true
    maxFavorites?: true
    currentFavorites?: true
    dailyMessageLimit?: true
    messagesUsedToday?: true
    totalMessagesUsed?: true
    dailyLoginStreak?: true
    totalDailyPointsEarned?: true
    totalPointsEarned?: true
    totalPointsSpent?: true
    totalPointsPurchased?: true
    agePreferenceMin?: true
    agePreferenceMax?: true
  }

  export type ClientSumAggregateInputType = {
    points?: true
    maxFavorites?: true
    currentFavorites?: true
    dailyMessageLimit?: true
    messagesUsedToday?: true
    totalMessagesUsed?: true
    dailyLoginStreak?: true
    totalDailyPointsEarned?: true
    totalPointsEarned?: true
    totalPointsSpent?: true
    totalPointsPurchased?: true
    agePreferenceMin?: true
    agePreferenceMax?: true
  }

  export type ClientMinAggregateInputType = {
    id?: true
    userId?: true
    points?: true
    isPremium?: true
    premiumUntil?: true
    premiumTier?: true
    chatPriorityUntil?: true
    maxFavorites?: true
    currentFavorites?: true
    dailyMessageLimit?: true
    messagesUsedToday?: true
    canViewPhoneNumbers?: true
    canSendImages?: true
    canSendVoiceMessages?: true
    prioritySupport?: true
    canSeeOnlineStatus?: true
    totalMessagesUsed?: true
    lastMessageReset?: true
    canAccessPremiumProfiles?: true
    lastDailyPointsClaim?: true
    dailyLoginStreak?: true
    totalDailyPointsEarned?: true
    totalPointsEarned?: true
    totalPointsSpent?: true
    pointsLastUpdated?: true
    totalPointsPurchased?: true
    agePreferenceMin?: true
    agePreferenceMax?: true
    locationPreference?: true
  }

  export type ClientMaxAggregateInputType = {
    id?: true
    userId?: true
    points?: true
    isPremium?: true
    premiumUntil?: true
    premiumTier?: true
    chatPriorityUntil?: true
    maxFavorites?: true
    currentFavorites?: true
    dailyMessageLimit?: true
    messagesUsedToday?: true
    canViewPhoneNumbers?: true
    canSendImages?: true
    canSendVoiceMessages?: true
    prioritySupport?: true
    canSeeOnlineStatus?: true
    totalMessagesUsed?: true
    lastMessageReset?: true
    canAccessPremiumProfiles?: true
    lastDailyPointsClaim?: true
    dailyLoginStreak?: true
    totalDailyPointsEarned?: true
    totalPointsEarned?: true
    totalPointsSpent?: true
    pointsLastUpdated?: true
    totalPointsPurchased?: true
    agePreferenceMin?: true
    agePreferenceMax?: true
    locationPreference?: true
  }

  export type ClientCountAggregateInputType = {
    id?: true
    userId?: true
    points?: true
    isPremium?: true
    premiumUntil?: true
    premiumTier?: true
    chatPriorityUntil?: true
    maxFavorites?: true
    currentFavorites?: true
    dailyMessageLimit?: true
    messagesUsedToday?: true
    canViewPhoneNumbers?: true
    canSendImages?: true
    canSendVoiceMessages?: true
    prioritySupport?: true
    canSeeOnlineStatus?: true
    totalMessagesUsed?: true
    lastMessageReset?: true
    canAccessPremiumProfiles?: true
    lastDailyPointsClaim?: true
    dailyLoginStreak?: true
    totalDailyPointsEarned?: true
    totalPointsEarned?: true
    totalPointsSpent?: true
    pointsLastUpdated?: true
    totalPointsPurchased?: true
    agePreferenceMin?: true
    agePreferenceMax?: true
    locationPreference?: true
    _all?: true
  }

  export type ClientAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Client to aggregate.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Clients
    **/
    _count?: true | ClientCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientMaxAggregateInputType
  }

  export type GetClientAggregateType<T extends ClientAggregateArgs> = {
        [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClient[P]>
      : GetScalarType<T[P], AggregateClient[P]>
  }




  export type ClientGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientWhereInput
    orderBy?: ClientOrderByWithAggregationInput | ClientOrderByWithAggregationInput[]
    by: ClientScalarFieldEnum[] | ClientScalarFieldEnum
    having?: ClientScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientCountAggregateInputType | true
    _avg?: ClientAvgAggregateInputType
    _sum?: ClientSumAggregateInputType
    _min?: ClientMinAggregateInputType
    _max?: ClientMaxAggregateInputType
  }

  export type ClientGroupByOutputType = {
    id: string
    userId: string
    points: number
    isPremium: boolean
    premiumUntil: Date | null
    premiumTier: $Enums.PremiumTier
    chatPriorityUntil: Date | null
    maxFavorites: number
    currentFavorites: number
    dailyMessageLimit: number
    messagesUsedToday: number
    canViewPhoneNumbers: boolean
    canSendImages: boolean
    canSendVoiceMessages: boolean
    prioritySupport: boolean
    canSeeOnlineStatus: boolean
    totalMessagesUsed: number
    lastMessageReset: Date
    canAccessPremiumProfiles: boolean
    lastDailyPointsClaim: Date | null
    dailyLoginStreak: number
    totalDailyPointsEarned: number
    totalPointsEarned: number
    totalPointsSpent: number
    pointsLastUpdated: Date
    totalPointsPurchased: number
    agePreferenceMin: number | null
    agePreferenceMax: number | null
    locationPreference: string | null
    _count: ClientCountAggregateOutputType | null
    _avg: ClientAvgAggregateOutputType | null
    _sum: ClientSumAggregateOutputType | null
    _min: ClientMinAggregateOutputType | null
    _max: ClientMaxAggregateOutputType | null
  }

  type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientGroupByOutputType[P]>
            : GetScalarType<T[P], ClientGroupByOutputType[P]>
        }
      >
    >


  export type ClientSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    points?: boolean
    isPremium?: boolean
    premiumUntil?: boolean
    premiumTier?: boolean
    chatPriorityUntil?: boolean
    maxFavorites?: boolean
    currentFavorites?: boolean
    dailyMessageLimit?: boolean
    messagesUsedToday?: boolean
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: boolean
    lastMessageReset?: boolean
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: boolean
    dailyLoginStreak?: boolean
    totalDailyPointsEarned?: boolean
    totalPointsEarned?: boolean
    totalPointsSpent?: boolean
    pointsLastUpdated?: boolean
    totalPointsPurchased?: boolean
    agePreferenceMin?: boolean
    agePreferenceMax?: boolean
    locationPreference?: boolean
    clientReviews?: boolean | Client$clientReviewsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    payments?: boolean | Client$paymentsArgs<ExtArgs>
    pointTransactions?: boolean | Client$pointTransactionsArgs<ExtArgs>
    pointsHistory?: boolean | Client$pointsHistoryArgs<ExtArgs>
    pointsPurchases?: boolean | Client$pointsPurchasesArgs<ExtArgs>
    premiumActivations?: boolean | Client$premiumActivationsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    points?: boolean
    isPremium?: boolean
    premiumUntil?: boolean
    premiumTier?: boolean
    chatPriorityUntil?: boolean
    maxFavorites?: boolean
    currentFavorites?: boolean
    dailyMessageLimit?: boolean
    messagesUsedToday?: boolean
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: boolean
    lastMessageReset?: boolean
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: boolean
    dailyLoginStreak?: boolean
    totalDailyPointsEarned?: boolean
    totalPointsEarned?: boolean
    totalPointsSpent?: boolean
    pointsLastUpdated?: boolean
    totalPointsPurchased?: boolean
    agePreferenceMin?: boolean
    agePreferenceMax?: boolean
    locationPreference?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["client"]>

  export type ClientSelectScalar = {
    id?: boolean
    userId?: boolean
    points?: boolean
    isPremium?: boolean
    premiumUntil?: boolean
    premiumTier?: boolean
    chatPriorityUntil?: boolean
    maxFavorites?: boolean
    currentFavorites?: boolean
    dailyMessageLimit?: boolean
    messagesUsedToday?: boolean
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: boolean
    lastMessageReset?: boolean
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: boolean
    dailyLoginStreak?: boolean
    totalDailyPointsEarned?: boolean
    totalPointsEarned?: boolean
    totalPointsSpent?: boolean
    pointsLastUpdated?: boolean
    totalPointsPurchased?: boolean
    agePreferenceMin?: boolean
    agePreferenceMax?: boolean
    locationPreference?: boolean
  }

  export type ClientInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clientReviews?: boolean | Client$clientReviewsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    payments?: boolean | Client$paymentsArgs<ExtArgs>
    pointTransactions?: boolean | Client$pointTransactionsArgs<ExtArgs>
    pointsHistory?: boolean | Client$pointsHistoryArgs<ExtArgs>
    pointsPurchases?: boolean | Client$pointsPurchasesArgs<ExtArgs>
    premiumActivations?: boolean | Client$premiumActivationsArgs<ExtArgs>
    _count?: boolean | ClientCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ClientIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ClientPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Client"
    objects: {
      clientReviews: Prisma.$ClientReviewPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
      payments: Prisma.$PaymentPayload<ExtArgs>[]
      pointTransactions: Prisma.$PointTransactionPayload<ExtArgs>[]
      pointsHistory: Prisma.$PointsHistoryPayload<ExtArgs>[]
      pointsPurchases: Prisma.$PointsPurchasePayload<ExtArgs>[]
      premiumActivations: Prisma.$PremiumActivationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      points: number
      isPremium: boolean
      premiumUntil: Date | null
      premiumTier: $Enums.PremiumTier
      chatPriorityUntil: Date | null
      maxFavorites: number
      currentFavorites: number
      dailyMessageLimit: number
      messagesUsedToday: number
      canViewPhoneNumbers: boolean
      canSendImages: boolean
      canSendVoiceMessages: boolean
      prioritySupport: boolean
      canSeeOnlineStatus: boolean
      totalMessagesUsed: number
      lastMessageReset: Date
      canAccessPremiumProfiles: boolean
      lastDailyPointsClaim: Date | null
      dailyLoginStreak: number
      totalDailyPointsEarned: number
      totalPointsEarned: number
      totalPointsSpent: number
      pointsLastUpdated: Date
      totalPointsPurchased: number
      agePreferenceMin: number | null
      agePreferenceMax: number | null
      locationPreference: string | null
    }, ExtArgs["result"]["client"]>
    composites: {}
  }

  type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = $Result.GetResult<Prisma.$ClientPayload, S>

  type ClientCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientCountAggregateInputType | true
    }

  export interface ClientDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
    /**
     * Find zero or one Client that matches the filter.
     * @param {ClientFindUniqueArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientFindUniqueArgs>(args: SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Client that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Client that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientFindFirstArgs>(args?: SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Client that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
     * @example
     * // Get one Client
     * const client = await prisma.client.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.client.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.client.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientFindManyArgs>(args?: SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Client.
     * @param {ClientCreateArgs} args - Arguments to create a Client.
     * @example
     * // Create one Client
     * const Client = await prisma.client.create({
     *   data: {
     *     // ... data to create a Client
     *   }
     * })
     * 
     */
    create<T extends ClientCreateArgs>(args: SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Clients.
     * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientCreateManyArgs>(args?: SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const client = await prisma.client.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientWithIdOnly = await prisma.client.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Client.
     * @param {ClientDeleteArgs} args - Arguments to delete one Client.
     * @example
     * // Delete one Client
     * const Client = await prisma.client.delete({
     *   where: {
     *     // ... filter to delete one Client
     *   }
     * })
     * 
     */
    delete<T extends ClientDeleteArgs>(args: SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Client.
     * @param {ClientUpdateArgs} args - Arguments to update one Client.
     * @example
     * // Update one Client
     * const client = await prisma.client.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientUpdateArgs>(args: SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Clients.
     * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.client.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientDeleteManyArgs>(args?: SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const client = await prisma.client.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientUpdateManyArgs>(args: SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Client.
     * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
     * @example
     * // Update or create a Client
     * const client = await prisma.client.upsert({
     *   create: {
     *     // ... data to create a Client
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Client we want to update
     *   }
     * })
     */
    upsert<T extends ClientUpsertArgs>(args: SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.client.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends ClientCountArgs>(
      args?: Subset<T, ClientCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientAggregateArgs>(args: Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

    /**
     * Group by Client.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientGroupByArgs['orderBy'] }
        : { orderBy?: ClientGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Client model
   */
  readonly fields: ClientFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Client.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clientReviews<T extends Client$clientReviewsArgs<ExtArgs> = {}>(args?: Subset<T, Client$clientReviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    payments<T extends Client$paymentsArgs<ExtArgs> = {}>(args?: Subset<T, Client$paymentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany"> | Null>
    pointTransactions<T extends Client$pointTransactionsArgs<ExtArgs> = {}>(args?: Subset<T, Client$pointTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    pointsHistory<T extends Client$pointsHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Client$pointsHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    pointsPurchases<T extends Client$pointsPurchasesArgs<ExtArgs> = {}>(args?: Subset<T, Client$pointsPurchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findMany"> | Null>
    premiumActivations<T extends Client$premiumActivationsArgs<ExtArgs> = {}>(args?: Subset<T, Client$premiumActivationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Client model
   */ 
  interface ClientFieldRefs {
    readonly id: FieldRef<"Client", 'String'>
    readonly userId: FieldRef<"Client", 'String'>
    readonly points: FieldRef<"Client", 'Int'>
    readonly isPremium: FieldRef<"Client", 'Boolean'>
    readonly premiumUntil: FieldRef<"Client", 'DateTime'>
    readonly premiumTier: FieldRef<"Client", 'PremiumTier'>
    readonly chatPriorityUntil: FieldRef<"Client", 'DateTime'>
    readonly maxFavorites: FieldRef<"Client", 'Int'>
    readonly currentFavorites: FieldRef<"Client", 'Int'>
    readonly dailyMessageLimit: FieldRef<"Client", 'Int'>
    readonly messagesUsedToday: FieldRef<"Client", 'Int'>
    readonly canViewPhoneNumbers: FieldRef<"Client", 'Boolean'>
    readonly canSendImages: FieldRef<"Client", 'Boolean'>
    readonly canSendVoiceMessages: FieldRef<"Client", 'Boolean'>
    readonly prioritySupport: FieldRef<"Client", 'Boolean'>
    readonly canSeeOnlineStatus: FieldRef<"Client", 'Boolean'>
    readonly totalMessagesUsed: FieldRef<"Client", 'Int'>
    readonly lastMessageReset: FieldRef<"Client", 'DateTime'>
    readonly canAccessPremiumProfiles: FieldRef<"Client", 'Boolean'>
    readonly lastDailyPointsClaim: FieldRef<"Client", 'DateTime'>
    readonly dailyLoginStreak: FieldRef<"Client", 'Int'>
    readonly totalDailyPointsEarned: FieldRef<"Client", 'Int'>
    readonly totalPointsEarned: FieldRef<"Client", 'Int'>
    readonly totalPointsSpent: FieldRef<"Client", 'Int'>
    readonly pointsLastUpdated: FieldRef<"Client", 'DateTime'>
    readonly totalPointsPurchased: FieldRef<"Client", 'Int'>
    readonly agePreferenceMin: FieldRef<"Client", 'Int'>
    readonly agePreferenceMax: FieldRef<"Client", 'Int'>
    readonly locationPreference: FieldRef<"Client", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Client findUnique
   */
  export type ClientFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findUniqueOrThrow
   */
  export type ClientFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client findFirst
   */
  export type ClientFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findFirstOrThrow
   */
  export type ClientFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Client to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Clients.
     */
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client findMany
   */
  export type ClientFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter, which Clients to fetch.
     */
    where?: ClientWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Clients to fetch.
     */
    orderBy?: ClientOrderByWithRelationInput | ClientOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Clients.
     */
    cursor?: ClientWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Clients.
     */
    skip?: number
    distinct?: ClientScalarFieldEnum | ClientScalarFieldEnum[]
  }

  /**
   * Client create
   */
  export type ClientCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to create a Client.
     */
    data: XOR<ClientCreateInput, ClientUncheckedCreateInput>
  }

  /**
   * Client createMany
   */
  export type ClientCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Client createManyAndReturn
   */
  export type ClientCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Clients.
     */
    data: ClientCreateManyInput | ClientCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Client update
   */
  export type ClientUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The data needed to update a Client.
     */
    data: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
    /**
     * Choose, which Client to update.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client updateMany
   */
  export type ClientUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Clients.
     */
    data: XOR<ClientUpdateManyMutationInput, ClientUncheckedUpdateManyInput>
    /**
     * Filter which Clients to update
     */
    where?: ClientWhereInput
  }

  /**
   * Client upsert
   */
  export type ClientUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * The filter to search for the Client to update in case it exists.
     */
    where: ClientWhereUniqueInput
    /**
     * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
     */
    create: XOR<ClientCreateInput, ClientUncheckedCreateInput>
    /**
     * In case the Client was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientUpdateInput, ClientUncheckedUpdateInput>
  }

  /**
   * Client delete
   */
  export type ClientDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    /**
     * Filter which Client to delete.
     */
    where: ClientWhereUniqueInput
  }

  /**
   * Client deleteMany
   */
  export type ClientDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Clients to delete
     */
    where?: ClientWhereInput
  }

  /**
   * Client.clientReviews
   */
  export type Client$clientReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    where?: ClientReviewWhereInput
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    cursor?: ClientReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientReviewScalarFieldEnum | ClientReviewScalarFieldEnum[]
  }

  /**
   * Client.payments
   */
  export type Client$paymentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    cursor?: PaymentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Client.pointTransactions
   */
  export type Client$pointTransactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    where?: PointTransactionWhereInput
    orderBy?: PointTransactionOrderByWithRelationInput | PointTransactionOrderByWithRelationInput[]
    cursor?: PointTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PointTransactionScalarFieldEnum | PointTransactionScalarFieldEnum[]
  }

  /**
   * Client.pointsHistory
   */
  export type Client$pointsHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    where?: PointsHistoryWhereInput
    orderBy?: PointsHistoryOrderByWithRelationInput | PointsHistoryOrderByWithRelationInput[]
    cursor?: PointsHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PointsHistoryScalarFieldEnum | PointsHistoryScalarFieldEnum[]
  }

  /**
   * Client.pointsPurchases
   */
  export type Client$pointsPurchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    where?: PointsPurchaseWhereInput
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    cursor?: PointsPurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PointsPurchaseScalarFieldEnum | PointsPurchaseScalarFieldEnum[]
  }

  /**
   * Client.premiumActivations
   */
  export type Client$premiumActivationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    where?: PremiumActivationWhereInput
    orderBy?: PremiumActivationOrderByWithRelationInput | PremiumActivationOrderByWithRelationInput[]
    cursor?: PremiumActivationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PremiumActivationScalarFieldEnum | PremiumActivationScalarFieldEnum[]
  }

  /**
   * Client without action
   */
  export type ClientDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
  }


  /**
   * Model PointsPackage
   */

  export type AggregatePointsPackage = {
    _count: PointsPackageCountAggregateOutputType | null
    _avg: PointsPackageAvgAggregateOutputType | null
    _sum: PointsPackageSumAggregateOutputType | null
    _min: PointsPackageMinAggregateOutputType | null
    _max: PointsPackageMaxAggregateOutputType | null
  }

  export type PointsPackageAvgAggregateOutputType = {
    points: number | null
    price: number | null
    bonus: number | null
  }

  export type PointsPackageSumAggregateOutputType = {
    points: number | null
    price: number | null
    bonus: number | null
  }

  export type PointsPackageMinAggregateOutputType = {
    id: string | null
    name: string | null
    points: number | null
    price: number | null
    bonus: number | null
    isActive: boolean | null
    isPopular: boolean | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PointsPackageMaxAggregateOutputType = {
    id: string | null
    name: string | null
    points: number | null
    price: number | null
    bonus: number | null
    isActive: boolean | null
    isPopular: boolean | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PointsPackageCountAggregateOutputType = {
    id: number
    name: number
    points: number
    price: number
    bonus: number
    isActive: number
    isPopular: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PointsPackageAvgAggregateInputType = {
    points?: true
    price?: true
    bonus?: true
  }

  export type PointsPackageSumAggregateInputType = {
    points?: true
    price?: true
    bonus?: true
  }

  export type PointsPackageMinAggregateInputType = {
    id?: true
    name?: true
    points?: true
    price?: true
    bonus?: true
    isActive?: true
    isPopular?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PointsPackageMaxAggregateInputType = {
    id?: true
    name?: true
    points?: true
    price?: true
    bonus?: true
    isActive?: true
    isPopular?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PointsPackageCountAggregateInputType = {
    id?: true
    name?: true
    points?: true
    price?: true
    bonus?: true
    isActive?: true
    isPopular?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PointsPackageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsPackage to aggregate.
     */
    where?: PointsPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPackages to fetch.
     */
    orderBy?: PointsPackageOrderByWithRelationInput | PointsPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PointsPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PointsPackages
    **/
    _count?: true | PointsPackageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PointsPackageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PointsPackageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PointsPackageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PointsPackageMaxAggregateInputType
  }

  export type GetPointsPackageAggregateType<T extends PointsPackageAggregateArgs> = {
        [P in keyof T & keyof AggregatePointsPackage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePointsPackage[P]>
      : GetScalarType<T[P], AggregatePointsPackage[P]>
  }




  export type PointsPackageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsPackageWhereInput
    orderBy?: PointsPackageOrderByWithAggregationInput | PointsPackageOrderByWithAggregationInput[]
    by: PointsPackageScalarFieldEnum[] | PointsPackageScalarFieldEnum
    having?: PointsPackageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PointsPackageCountAggregateInputType | true
    _avg?: PointsPackageAvgAggregateInputType
    _sum?: PointsPackageSumAggregateInputType
    _min?: PointsPackageMinAggregateInputType
    _max?: PointsPackageMaxAggregateInputType
  }

  export type PointsPackageGroupByOutputType = {
    id: string
    name: string
    points: number
    price: number
    bonus: number
    isActive: boolean
    isPopular: boolean
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: PointsPackageCountAggregateOutputType | null
    _avg: PointsPackageAvgAggregateOutputType | null
    _sum: PointsPackageSumAggregateOutputType | null
    _min: PointsPackageMinAggregateOutputType | null
    _max: PointsPackageMaxAggregateOutputType | null
  }

  type GetPointsPackageGroupByPayload<T extends PointsPackageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PointsPackageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PointsPackageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PointsPackageGroupByOutputType[P]>
            : GetScalarType<T[P], PointsPackageGroupByOutputType[P]>
        }
      >
    >


  export type PointsPackageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    points?: boolean
    price?: boolean
    bonus?: boolean
    isActive?: boolean
    isPopular?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    purchases?: boolean | PointsPackage$purchasesArgs<ExtArgs>
    _count?: boolean | PointsPackageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointsPackage"]>

  export type PointsPackageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    points?: boolean
    price?: boolean
    bonus?: boolean
    isActive?: boolean
    isPopular?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["pointsPackage"]>

  export type PointsPackageSelectScalar = {
    id?: boolean
    name?: boolean
    points?: boolean
    price?: boolean
    bonus?: boolean
    isActive?: boolean
    isPopular?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PointsPackageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    purchases?: boolean | PointsPackage$purchasesArgs<ExtArgs>
    _count?: boolean | PointsPackageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PointsPackageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PointsPackagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PointsPackage"
    objects: {
      purchases: Prisma.$PointsPurchasePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      points: number
      price: number
      bonus: number
      isActive: boolean
      isPopular: boolean
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["pointsPackage"]>
    composites: {}
  }

  type PointsPackageGetPayload<S extends boolean | null | undefined | PointsPackageDefaultArgs> = $Result.GetResult<Prisma.$PointsPackagePayload, S>

  type PointsPackageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PointsPackageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PointsPackageCountAggregateInputType | true
    }

  export interface PointsPackageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PointsPackage'], meta: { name: 'PointsPackage' } }
    /**
     * Find zero or one PointsPackage that matches the filter.
     * @param {PointsPackageFindUniqueArgs} args - Arguments to find a PointsPackage
     * @example
     * // Get one PointsPackage
     * const pointsPackage = await prisma.pointsPackage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PointsPackageFindUniqueArgs>(args: SelectSubset<T, PointsPackageFindUniqueArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PointsPackage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PointsPackageFindUniqueOrThrowArgs} args - Arguments to find a PointsPackage
     * @example
     * // Get one PointsPackage
     * const pointsPackage = await prisma.pointsPackage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PointsPackageFindUniqueOrThrowArgs>(args: SelectSubset<T, PointsPackageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PointsPackage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageFindFirstArgs} args - Arguments to find a PointsPackage
     * @example
     * // Get one PointsPackage
     * const pointsPackage = await prisma.pointsPackage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PointsPackageFindFirstArgs>(args?: SelectSubset<T, PointsPackageFindFirstArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PointsPackage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageFindFirstOrThrowArgs} args - Arguments to find a PointsPackage
     * @example
     * // Get one PointsPackage
     * const pointsPackage = await prisma.pointsPackage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PointsPackageFindFirstOrThrowArgs>(args?: SelectSubset<T, PointsPackageFindFirstOrThrowArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PointsPackages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PointsPackages
     * const pointsPackages = await prisma.pointsPackage.findMany()
     * 
     * // Get first 10 PointsPackages
     * const pointsPackages = await prisma.pointsPackage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pointsPackageWithIdOnly = await prisma.pointsPackage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PointsPackageFindManyArgs>(args?: SelectSubset<T, PointsPackageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PointsPackage.
     * @param {PointsPackageCreateArgs} args - Arguments to create a PointsPackage.
     * @example
     * // Create one PointsPackage
     * const PointsPackage = await prisma.pointsPackage.create({
     *   data: {
     *     // ... data to create a PointsPackage
     *   }
     * })
     * 
     */
    create<T extends PointsPackageCreateArgs>(args: SelectSubset<T, PointsPackageCreateArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PointsPackages.
     * @param {PointsPackageCreateManyArgs} args - Arguments to create many PointsPackages.
     * @example
     * // Create many PointsPackages
     * const pointsPackage = await prisma.pointsPackage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PointsPackageCreateManyArgs>(args?: SelectSubset<T, PointsPackageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PointsPackages and returns the data saved in the database.
     * @param {PointsPackageCreateManyAndReturnArgs} args - Arguments to create many PointsPackages.
     * @example
     * // Create many PointsPackages
     * const pointsPackage = await prisma.pointsPackage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PointsPackages and only return the `id`
     * const pointsPackageWithIdOnly = await prisma.pointsPackage.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PointsPackageCreateManyAndReturnArgs>(args?: SelectSubset<T, PointsPackageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PointsPackage.
     * @param {PointsPackageDeleteArgs} args - Arguments to delete one PointsPackage.
     * @example
     * // Delete one PointsPackage
     * const PointsPackage = await prisma.pointsPackage.delete({
     *   where: {
     *     // ... filter to delete one PointsPackage
     *   }
     * })
     * 
     */
    delete<T extends PointsPackageDeleteArgs>(args: SelectSubset<T, PointsPackageDeleteArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PointsPackage.
     * @param {PointsPackageUpdateArgs} args - Arguments to update one PointsPackage.
     * @example
     * // Update one PointsPackage
     * const pointsPackage = await prisma.pointsPackage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PointsPackageUpdateArgs>(args: SelectSubset<T, PointsPackageUpdateArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PointsPackages.
     * @param {PointsPackageDeleteManyArgs} args - Arguments to filter PointsPackages to delete.
     * @example
     * // Delete a few PointsPackages
     * const { count } = await prisma.pointsPackage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PointsPackageDeleteManyArgs>(args?: SelectSubset<T, PointsPackageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PointsPackages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PointsPackages
     * const pointsPackage = await prisma.pointsPackage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PointsPackageUpdateManyArgs>(args: SelectSubset<T, PointsPackageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PointsPackage.
     * @param {PointsPackageUpsertArgs} args - Arguments to update or create a PointsPackage.
     * @example
     * // Update or create a PointsPackage
     * const pointsPackage = await prisma.pointsPackage.upsert({
     *   create: {
     *     // ... data to create a PointsPackage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PointsPackage we want to update
     *   }
     * })
     */
    upsert<T extends PointsPackageUpsertArgs>(args: SelectSubset<T, PointsPackageUpsertArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PointsPackages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageCountArgs} args - Arguments to filter PointsPackages to count.
     * @example
     * // Count the number of PointsPackages
     * const count = await prisma.pointsPackage.count({
     *   where: {
     *     // ... the filter for the PointsPackages we want to count
     *   }
     * })
    **/
    count<T extends PointsPackageCountArgs>(
      args?: Subset<T, PointsPackageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PointsPackageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PointsPackage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PointsPackageAggregateArgs>(args: Subset<T, PointsPackageAggregateArgs>): Prisma.PrismaPromise<GetPointsPackageAggregateType<T>>

    /**
     * Group by PointsPackage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPackageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PointsPackageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PointsPackageGroupByArgs['orderBy'] }
        : { orderBy?: PointsPackageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PointsPackageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPointsPackageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PointsPackage model
   */
  readonly fields: PointsPackageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PointsPackage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PointsPackageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    purchases<T extends PointsPackage$purchasesArgs<ExtArgs> = {}>(args?: Subset<T, PointsPackage$purchasesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PointsPackage model
   */ 
  interface PointsPackageFieldRefs {
    readonly id: FieldRef<"PointsPackage", 'String'>
    readonly name: FieldRef<"PointsPackage", 'String'>
    readonly points: FieldRef<"PointsPackage", 'Int'>
    readonly price: FieldRef<"PointsPackage", 'Float'>
    readonly bonus: FieldRef<"PointsPackage", 'Int'>
    readonly isActive: FieldRef<"PointsPackage", 'Boolean'>
    readonly isPopular: FieldRef<"PointsPackage", 'Boolean'>
    readonly description: FieldRef<"PointsPackage", 'String'>
    readonly createdAt: FieldRef<"PointsPackage", 'DateTime'>
    readonly updatedAt: FieldRef<"PointsPackage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PointsPackage findUnique
   */
  export type PointsPackageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter, which PointsPackage to fetch.
     */
    where: PointsPackageWhereUniqueInput
  }

  /**
   * PointsPackage findUniqueOrThrow
   */
  export type PointsPackageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter, which PointsPackage to fetch.
     */
    where: PointsPackageWhereUniqueInput
  }

  /**
   * PointsPackage findFirst
   */
  export type PointsPackageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter, which PointsPackage to fetch.
     */
    where?: PointsPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPackages to fetch.
     */
    orderBy?: PointsPackageOrderByWithRelationInput | PointsPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsPackages.
     */
    cursor?: PointsPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsPackages.
     */
    distinct?: PointsPackageScalarFieldEnum | PointsPackageScalarFieldEnum[]
  }

  /**
   * PointsPackage findFirstOrThrow
   */
  export type PointsPackageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter, which PointsPackage to fetch.
     */
    where?: PointsPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPackages to fetch.
     */
    orderBy?: PointsPackageOrderByWithRelationInput | PointsPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsPackages.
     */
    cursor?: PointsPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPackages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsPackages.
     */
    distinct?: PointsPackageScalarFieldEnum | PointsPackageScalarFieldEnum[]
  }

  /**
   * PointsPackage findMany
   */
  export type PointsPackageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter, which PointsPackages to fetch.
     */
    where?: PointsPackageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPackages to fetch.
     */
    orderBy?: PointsPackageOrderByWithRelationInput | PointsPackageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PointsPackages.
     */
    cursor?: PointsPackageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPackages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPackages.
     */
    skip?: number
    distinct?: PointsPackageScalarFieldEnum | PointsPackageScalarFieldEnum[]
  }

  /**
   * PointsPackage create
   */
  export type PointsPackageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * The data needed to create a PointsPackage.
     */
    data: XOR<PointsPackageCreateInput, PointsPackageUncheckedCreateInput>
  }

  /**
   * PointsPackage createMany
   */
  export type PointsPackageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PointsPackages.
     */
    data: PointsPackageCreateManyInput | PointsPackageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PointsPackage createManyAndReturn
   */
  export type PointsPackageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PointsPackages.
     */
    data: PointsPackageCreateManyInput | PointsPackageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PointsPackage update
   */
  export type PointsPackageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * The data needed to update a PointsPackage.
     */
    data: XOR<PointsPackageUpdateInput, PointsPackageUncheckedUpdateInput>
    /**
     * Choose, which PointsPackage to update.
     */
    where: PointsPackageWhereUniqueInput
  }

  /**
   * PointsPackage updateMany
   */
  export type PointsPackageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PointsPackages.
     */
    data: XOR<PointsPackageUpdateManyMutationInput, PointsPackageUncheckedUpdateManyInput>
    /**
     * Filter which PointsPackages to update
     */
    where?: PointsPackageWhereInput
  }

  /**
   * PointsPackage upsert
   */
  export type PointsPackageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * The filter to search for the PointsPackage to update in case it exists.
     */
    where: PointsPackageWhereUniqueInput
    /**
     * In case the PointsPackage found by the `where` argument doesn't exist, create a new PointsPackage with this data.
     */
    create: XOR<PointsPackageCreateInput, PointsPackageUncheckedCreateInput>
    /**
     * In case the PointsPackage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PointsPackageUpdateInput, PointsPackageUncheckedUpdateInput>
  }

  /**
   * PointsPackage delete
   */
  export type PointsPackageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
    /**
     * Filter which PointsPackage to delete.
     */
    where: PointsPackageWhereUniqueInput
  }

  /**
   * PointsPackage deleteMany
   */
  export type PointsPackageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsPackages to delete
     */
    where?: PointsPackageWhereInput
  }

  /**
   * PointsPackage.purchases
   */
  export type PointsPackage$purchasesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    where?: PointsPurchaseWhereInput
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    cursor?: PointsPurchaseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PointsPurchaseScalarFieldEnum | PointsPurchaseScalarFieldEnum[]
  }

  /**
   * PointsPackage without action
   */
  export type PointsPackageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPackage
     */
    select?: PointsPackageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPackageInclude<ExtArgs> | null
  }


  /**
   * Model PointsPurchase
   */

  export type AggregatePointsPurchase = {
    _count: PointsPurchaseCountAggregateOutputType | null
    _avg: PointsPurchaseAvgAggregateOutputType | null
    _sum: PointsPurchaseSumAggregateOutputType | null
    _min: PointsPurchaseMinAggregateOutputType | null
    _max: PointsPurchaseMaxAggregateOutputType | null
  }

  export type PointsPurchaseAvgAggregateOutputType = {
    pointsPurchased: number | null
    bonusPoints: number | null
    totalPoints: number | null
    amountPaid: number | null
  }

  export type PointsPurchaseSumAggregateOutputType = {
    pointsPurchased: number | null
    bonusPoints: number | null
    totalPoints: number | null
    amountPaid: number | null
  }

  export type PointsPurchaseMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    packageId: string | null
    pointsPurchased: number | null
    bonusPoints: number | null
    totalPoints: number | null
    amountPaid: number | null
    status: $Enums.PaymentStatus | null
    stripePaymentId: string | null
    createdAt: Date | null
    completedAt: Date | null
  }

  export type PointsPurchaseMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    packageId: string | null
    pointsPurchased: number | null
    bonusPoints: number | null
    totalPoints: number | null
    amountPaid: number | null
    status: $Enums.PaymentStatus | null
    stripePaymentId: string | null
    createdAt: Date | null
    completedAt: Date | null
  }

  export type PointsPurchaseCountAggregateOutputType = {
    id: number
    clientId: number
    packageId: number
    pointsPurchased: number
    bonusPoints: number
    totalPoints: number
    amountPaid: number
    status: number
    stripePaymentId: number
    createdAt: number
    completedAt: number
    _all: number
  }


  export type PointsPurchaseAvgAggregateInputType = {
    pointsPurchased?: true
    bonusPoints?: true
    totalPoints?: true
    amountPaid?: true
  }

  export type PointsPurchaseSumAggregateInputType = {
    pointsPurchased?: true
    bonusPoints?: true
    totalPoints?: true
    amountPaid?: true
  }

  export type PointsPurchaseMinAggregateInputType = {
    id?: true
    clientId?: true
    packageId?: true
    pointsPurchased?: true
    bonusPoints?: true
    totalPoints?: true
    amountPaid?: true
    status?: true
    stripePaymentId?: true
    createdAt?: true
    completedAt?: true
  }

  export type PointsPurchaseMaxAggregateInputType = {
    id?: true
    clientId?: true
    packageId?: true
    pointsPurchased?: true
    bonusPoints?: true
    totalPoints?: true
    amountPaid?: true
    status?: true
    stripePaymentId?: true
    createdAt?: true
    completedAt?: true
  }

  export type PointsPurchaseCountAggregateInputType = {
    id?: true
    clientId?: true
    packageId?: true
    pointsPurchased?: true
    bonusPoints?: true
    totalPoints?: true
    amountPaid?: true
    status?: true
    stripePaymentId?: true
    createdAt?: true
    completedAt?: true
    _all?: true
  }

  export type PointsPurchaseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsPurchase to aggregate.
     */
    where?: PointsPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPurchases to fetch.
     */
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PointsPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PointsPurchases
    **/
    _count?: true | PointsPurchaseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PointsPurchaseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PointsPurchaseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PointsPurchaseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PointsPurchaseMaxAggregateInputType
  }

  export type GetPointsPurchaseAggregateType<T extends PointsPurchaseAggregateArgs> = {
        [P in keyof T & keyof AggregatePointsPurchase]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePointsPurchase[P]>
      : GetScalarType<T[P], AggregatePointsPurchase[P]>
  }




  export type PointsPurchaseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsPurchaseWhereInput
    orderBy?: PointsPurchaseOrderByWithAggregationInput | PointsPurchaseOrderByWithAggregationInput[]
    by: PointsPurchaseScalarFieldEnum[] | PointsPurchaseScalarFieldEnum
    having?: PointsPurchaseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PointsPurchaseCountAggregateInputType | true
    _avg?: PointsPurchaseAvgAggregateInputType
    _sum?: PointsPurchaseSumAggregateInputType
    _min?: PointsPurchaseMinAggregateInputType
    _max?: PointsPurchaseMaxAggregateInputType
  }

  export type PointsPurchaseGroupByOutputType = {
    id: string
    clientId: string
    packageId: string
    pointsPurchased: number
    bonusPoints: number
    totalPoints: number
    amountPaid: number
    status: $Enums.PaymentStatus
    stripePaymentId: string | null
    createdAt: Date
    completedAt: Date | null
    _count: PointsPurchaseCountAggregateOutputType | null
    _avg: PointsPurchaseAvgAggregateOutputType | null
    _sum: PointsPurchaseSumAggregateOutputType | null
    _min: PointsPurchaseMinAggregateOutputType | null
    _max: PointsPurchaseMaxAggregateOutputType | null
  }

  type GetPointsPurchaseGroupByPayload<T extends PointsPurchaseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PointsPurchaseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PointsPurchaseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PointsPurchaseGroupByOutputType[P]>
            : GetScalarType<T[P], PointsPurchaseGroupByOutputType[P]>
        }
      >
    >


  export type PointsPurchaseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    packageId?: boolean
    pointsPurchased?: boolean
    bonusPoints?: boolean
    totalPoints?: boolean
    amountPaid?: boolean
    status?: boolean
    stripePaymentId?: boolean
    createdAt?: boolean
    completedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    package?: boolean | PointsPackageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointsPurchase"]>

  export type PointsPurchaseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    packageId?: boolean
    pointsPurchased?: boolean
    bonusPoints?: boolean
    totalPoints?: boolean
    amountPaid?: boolean
    status?: boolean
    stripePaymentId?: boolean
    createdAt?: boolean
    completedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    package?: boolean | PointsPackageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointsPurchase"]>

  export type PointsPurchaseSelectScalar = {
    id?: boolean
    clientId?: boolean
    packageId?: boolean
    pointsPurchased?: boolean
    bonusPoints?: boolean
    totalPoints?: boolean
    amountPaid?: boolean
    status?: boolean
    stripePaymentId?: boolean
    createdAt?: boolean
    completedAt?: boolean
  }

  export type PointsPurchaseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    package?: boolean | PointsPackageDefaultArgs<ExtArgs>
  }
  export type PointsPurchaseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    package?: boolean | PointsPackageDefaultArgs<ExtArgs>
  }

  export type $PointsPurchasePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PointsPurchase"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      package: Prisma.$PointsPackagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      packageId: string
      pointsPurchased: number
      bonusPoints: number
      totalPoints: number
      amountPaid: number
      status: $Enums.PaymentStatus
      stripePaymentId: string | null
      createdAt: Date
      completedAt: Date | null
    }, ExtArgs["result"]["pointsPurchase"]>
    composites: {}
  }

  type PointsPurchaseGetPayload<S extends boolean | null | undefined | PointsPurchaseDefaultArgs> = $Result.GetResult<Prisma.$PointsPurchasePayload, S>

  type PointsPurchaseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PointsPurchaseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PointsPurchaseCountAggregateInputType | true
    }

  export interface PointsPurchaseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PointsPurchase'], meta: { name: 'PointsPurchase' } }
    /**
     * Find zero or one PointsPurchase that matches the filter.
     * @param {PointsPurchaseFindUniqueArgs} args - Arguments to find a PointsPurchase
     * @example
     * // Get one PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PointsPurchaseFindUniqueArgs>(args: SelectSubset<T, PointsPurchaseFindUniqueArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PointsPurchase that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PointsPurchaseFindUniqueOrThrowArgs} args - Arguments to find a PointsPurchase
     * @example
     * // Get one PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PointsPurchaseFindUniqueOrThrowArgs>(args: SelectSubset<T, PointsPurchaseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PointsPurchase that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseFindFirstArgs} args - Arguments to find a PointsPurchase
     * @example
     * // Get one PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PointsPurchaseFindFirstArgs>(args?: SelectSubset<T, PointsPurchaseFindFirstArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PointsPurchase that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseFindFirstOrThrowArgs} args - Arguments to find a PointsPurchase
     * @example
     * // Get one PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PointsPurchaseFindFirstOrThrowArgs>(args?: SelectSubset<T, PointsPurchaseFindFirstOrThrowArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PointsPurchases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PointsPurchases
     * const pointsPurchases = await prisma.pointsPurchase.findMany()
     * 
     * // Get first 10 PointsPurchases
     * const pointsPurchases = await prisma.pointsPurchase.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pointsPurchaseWithIdOnly = await prisma.pointsPurchase.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PointsPurchaseFindManyArgs>(args?: SelectSubset<T, PointsPurchaseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PointsPurchase.
     * @param {PointsPurchaseCreateArgs} args - Arguments to create a PointsPurchase.
     * @example
     * // Create one PointsPurchase
     * const PointsPurchase = await prisma.pointsPurchase.create({
     *   data: {
     *     // ... data to create a PointsPurchase
     *   }
     * })
     * 
     */
    create<T extends PointsPurchaseCreateArgs>(args: SelectSubset<T, PointsPurchaseCreateArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PointsPurchases.
     * @param {PointsPurchaseCreateManyArgs} args - Arguments to create many PointsPurchases.
     * @example
     * // Create many PointsPurchases
     * const pointsPurchase = await prisma.pointsPurchase.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PointsPurchaseCreateManyArgs>(args?: SelectSubset<T, PointsPurchaseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PointsPurchases and returns the data saved in the database.
     * @param {PointsPurchaseCreateManyAndReturnArgs} args - Arguments to create many PointsPurchases.
     * @example
     * // Create many PointsPurchases
     * const pointsPurchase = await prisma.pointsPurchase.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PointsPurchases and only return the `id`
     * const pointsPurchaseWithIdOnly = await prisma.pointsPurchase.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PointsPurchaseCreateManyAndReturnArgs>(args?: SelectSubset<T, PointsPurchaseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PointsPurchase.
     * @param {PointsPurchaseDeleteArgs} args - Arguments to delete one PointsPurchase.
     * @example
     * // Delete one PointsPurchase
     * const PointsPurchase = await prisma.pointsPurchase.delete({
     *   where: {
     *     // ... filter to delete one PointsPurchase
     *   }
     * })
     * 
     */
    delete<T extends PointsPurchaseDeleteArgs>(args: SelectSubset<T, PointsPurchaseDeleteArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PointsPurchase.
     * @param {PointsPurchaseUpdateArgs} args - Arguments to update one PointsPurchase.
     * @example
     * // Update one PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PointsPurchaseUpdateArgs>(args: SelectSubset<T, PointsPurchaseUpdateArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PointsPurchases.
     * @param {PointsPurchaseDeleteManyArgs} args - Arguments to filter PointsPurchases to delete.
     * @example
     * // Delete a few PointsPurchases
     * const { count } = await prisma.pointsPurchase.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PointsPurchaseDeleteManyArgs>(args?: SelectSubset<T, PointsPurchaseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PointsPurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PointsPurchases
     * const pointsPurchase = await prisma.pointsPurchase.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PointsPurchaseUpdateManyArgs>(args: SelectSubset<T, PointsPurchaseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PointsPurchase.
     * @param {PointsPurchaseUpsertArgs} args - Arguments to update or create a PointsPurchase.
     * @example
     * // Update or create a PointsPurchase
     * const pointsPurchase = await prisma.pointsPurchase.upsert({
     *   create: {
     *     // ... data to create a PointsPurchase
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PointsPurchase we want to update
     *   }
     * })
     */
    upsert<T extends PointsPurchaseUpsertArgs>(args: SelectSubset<T, PointsPurchaseUpsertArgs<ExtArgs>>): Prisma__PointsPurchaseClient<$Result.GetResult<Prisma.$PointsPurchasePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PointsPurchases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseCountArgs} args - Arguments to filter PointsPurchases to count.
     * @example
     * // Count the number of PointsPurchases
     * const count = await prisma.pointsPurchase.count({
     *   where: {
     *     // ... the filter for the PointsPurchases we want to count
     *   }
     * })
    **/
    count<T extends PointsPurchaseCountArgs>(
      args?: Subset<T, PointsPurchaseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PointsPurchaseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PointsPurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PointsPurchaseAggregateArgs>(args: Subset<T, PointsPurchaseAggregateArgs>): Prisma.PrismaPromise<GetPointsPurchaseAggregateType<T>>

    /**
     * Group by PointsPurchase.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsPurchaseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PointsPurchaseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PointsPurchaseGroupByArgs['orderBy'] }
        : { orderBy?: PointsPurchaseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PointsPurchaseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPointsPurchaseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PointsPurchase model
   */
  readonly fields: PointsPurchaseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PointsPurchase.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PointsPurchaseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    package<T extends PointsPackageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PointsPackageDefaultArgs<ExtArgs>>): Prisma__PointsPackageClient<$Result.GetResult<Prisma.$PointsPackagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PointsPurchase model
   */ 
  interface PointsPurchaseFieldRefs {
    readonly id: FieldRef<"PointsPurchase", 'String'>
    readonly clientId: FieldRef<"PointsPurchase", 'String'>
    readonly packageId: FieldRef<"PointsPurchase", 'String'>
    readonly pointsPurchased: FieldRef<"PointsPurchase", 'Int'>
    readonly bonusPoints: FieldRef<"PointsPurchase", 'Int'>
    readonly totalPoints: FieldRef<"PointsPurchase", 'Int'>
    readonly amountPaid: FieldRef<"PointsPurchase", 'Float'>
    readonly status: FieldRef<"PointsPurchase", 'PaymentStatus'>
    readonly stripePaymentId: FieldRef<"PointsPurchase", 'String'>
    readonly createdAt: FieldRef<"PointsPurchase", 'DateTime'>
    readonly completedAt: FieldRef<"PointsPurchase", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PointsPurchase findUnique
   */
  export type PointsPurchaseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PointsPurchase to fetch.
     */
    where: PointsPurchaseWhereUniqueInput
  }

  /**
   * PointsPurchase findUniqueOrThrow
   */
  export type PointsPurchaseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PointsPurchase to fetch.
     */
    where: PointsPurchaseWhereUniqueInput
  }

  /**
   * PointsPurchase findFirst
   */
  export type PointsPurchaseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PointsPurchase to fetch.
     */
    where?: PointsPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPurchases to fetch.
     */
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsPurchases.
     */
    cursor?: PointsPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsPurchases.
     */
    distinct?: PointsPurchaseScalarFieldEnum | PointsPurchaseScalarFieldEnum[]
  }

  /**
   * PointsPurchase findFirstOrThrow
   */
  export type PointsPurchaseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PointsPurchase to fetch.
     */
    where?: PointsPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPurchases to fetch.
     */
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsPurchases.
     */
    cursor?: PointsPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPurchases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsPurchases.
     */
    distinct?: PointsPurchaseScalarFieldEnum | PointsPurchaseScalarFieldEnum[]
  }

  /**
   * PointsPurchase findMany
   */
  export type PointsPurchaseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter, which PointsPurchases to fetch.
     */
    where?: PointsPurchaseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsPurchases to fetch.
     */
    orderBy?: PointsPurchaseOrderByWithRelationInput | PointsPurchaseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PointsPurchases.
     */
    cursor?: PointsPurchaseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsPurchases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsPurchases.
     */
    skip?: number
    distinct?: PointsPurchaseScalarFieldEnum | PointsPurchaseScalarFieldEnum[]
  }

  /**
   * PointsPurchase create
   */
  export type PointsPurchaseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * The data needed to create a PointsPurchase.
     */
    data: XOR<PointsPurchaseCreateInput, PointsPurchaseUncheckedCreateInput>
  }

  /**
   * PointsPurchase createMany
   */
  export type PointsPurchaseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PointsPurchases.
     */
    data: PointsPurchaseCreateManyInput | PointsPurchaseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PointsPurchase createManyAndReturn
   */
  export type PointsPurchaseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PointsPurchases.
     */
    data: PointsPurchaseCreateManyInput | PointsPurchaseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PointsPurchase update
   */
  export type PointsPurchaseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * The data needed to update a PointsPurchase.
     */
    data: XOR<PointsPurchaseUpdateInput, PointsPurchaseUncheckedUpdateInput>
    /**
     * Choose, which PointsPurchase to update.
     */
    where: PointsPurchaseWhereUniqueInput
  }

  /**
   * PointsPurchase updateMany
   */
  export type PointsPurchaseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PointsPurchases.
     */
    data: XOR<PointsPurchaseUpdateManyMutationInput, PointsPurchaseUncheckedUpdateManyInput>
    /**
     * Filter which PointsPurchases to update
     */
    where?: PointsPurchaseWhereInput
  }

  /**
   * PointsPurchase upsert
   */
  export type PointsPurchaseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * The filter to search for the PointsPurchase to update in case it exists.
     */
    where: PointsPurchaseWhereUniqueInput
    /**
     * In case the PointsPurchase found by the `where` argument doesn't exist, create a new PointsPurchase with this data.
     */
    create: XOR<PointsPurchaseCreateInput, PointsPurchaseUncheckedCreateInput>
    /**
     * In case the PointsPurchase was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PointsPurchaseUpdateInput, PointsPurchaseUncheckedUpdateInput>
  }

  /**
   * PointsPurchase delete
   */
  export type PointsPurchaseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
    /**
     * Filter which PointsPurchase to delete.
     */
    where: PointsPurchaseWhereUniqueInput
  }

  /**
   * PointsPurchase deleteMany
   */
  export type PointsPurchaseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsPurchases to delete
     */
    where?: PointsPurchaseWhereInput
  }

  /**
   * PointsPurchase without action
   */
  export type PointsPurchaseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsPurchase
     */
    select?: PointsPurchaseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsPurchaseInclude<ExtArgs> | null
  }


  /**
   * Model PointTransaction
   */

  export type AggregatePointTransaction = {
    _count: PointTransactionCountAggregateOutputType | null
    _avg: PointTransactionAvgAggregateOutputType | null
    _sum: PointTransactionSumAggregateOutputType | null
    _min: PointTransactionMinAggregateOutputType | null
    _max: PointTransactionMaxAggregateOutputType | null
  }

  export type PointTransactionAvgAggregateOutputType = {
    amount: number | null
    cost: number | null
    balanceBefore: number | null
    balanceAfter: number | null
  }

  export type PointTransactionSumAggregateOutputType = {
    amount: number | null
    cost: number | null
    balanceBefore: number | null
    balanceAfter: number | null
  }

  export type PointTransactionMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    amount: number | null
    type: $Enums.PointTransactionType | null
    description: string | null
    cost: number | null
    postId: string | null
    messageId: string | null
    paymentId: string | null
    purchaseId: string | null
    actionId: string | null
    balanceBefore: number | null
    balanceAfter: number | null
    source: string | null
    createdAt: Date | null
  }

  export type PointTransactionMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    amount: number | null
    type: $Enums.PointTransactionType | null
    description: string | null
    cost: number | null
    postId: string | null
    messageId: string | null
    paymentId: string | null
    purchaseId: string | null
    actionId: string | null
    balanceBefore: number | null
    balanceAfter: number | null
    source: string | null
    createdAt: Date | null
  }

  export type PointTransactionCountAggregateOutputType = {
    id: number
    clientId: number
    amount: number
    type: number
    description: number
    cost: number
    postId: number
    messageId: number
    paymentId: number
    purchaseId: number
    actionId: number
    balanceBefore: number
    balanceAfter: number
    metadata: number
    source: number
    createdAt: number
    _all: number
  }


  export type PointTransactionAvgAggregateInputType = {
    amount?: true
    cost?: true
    balanceBefore?: true
    balanceAfter?: true
  }

  export type PointTransactionSumAggregateInputType = {
    amount?: true
    cost?: true
    balanceBefore?: true
    balanceAfter?: true
  }

  export type PointTransactionMinAggregateInputType = {
    id?: true
    clientId?: true
    amount?: true
    type?: true
    description?: true
    cost?: true
    postId?: true
    messageId?: true
    paymentId?: true
    purchaseId?: true
    actionId?: true
    balanceBefore?: true
    balanceAfter?: true
    source?: true
    createdAt?: true
  }

  export type PointTransactionMaxAggregateInputType = {
    id?: true
    clientId?: true
    amount?: true
    type?: true
    description?: true
    cost?: true
    postId?: true
    messageId?: true
    paymentId?: true
    purchaseId?: true
    actionId?: true
    balanceBefore?: true
    balanceAfter?: true
    source?: true
    createdAt?: true
  }

  export type PointTransactionCountAggregateInputType = {
    id?: true
    clientId?: true
    amount?: true
    type?: true
    description?: true
    cost?: true
    postId?: true
    messageId?: true
    paymentId?: true
    purchaseId?: true
    actionId?: true
    balanceBefore?: true
    balanceAfter?: true
    metadata?: true
    source?: true
    createdAt?: true
    _all?: true
  }

  export type PointTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointTransaction to aggregate.
     */
    where?: PointTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointTransactions to fetch.
     */
    orderBy?: PointTransactionOrderByWithRelationInput | PointTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PointTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PointTransactions
    **/
    _count?: true | PointTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PointTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PointTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PointTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PointTransactionMaxAggregateInputType
  }

  export type GetPointTransactionAggregateType<T extends PointTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePointTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePointTransaction[P]>
      : GetScalarType<T[P], AggregatePointTransaction[P]>
  }




  export type PointTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointTransactionWhereInput
    orderBy?: PointTransactionOrderByWithAggregationInput | PointTransactionOrderByWithAggregationInput[]
    by: PointTransactionScalarFieldEnum[] | PointTransactionScalarFieldEnum
    having?: PointTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PointTransactionCountAggregateInputType | true
    _avg?: PointTransactionAvgAggregateInputType
    _sum?: PointTransactionSumAggregateInputType
    _min?: PointTransactionMinAggregateInputType
    _max?: PointTransactionMaxAggregateInputType
  }

  export type PointTransactionGroupByOutputType = {
    id: string
    clientId: string
    amount: number
    type: $Enums.PointTransactionType
    description: string | null
    cost: number | null
    postId: string | null
    messageId: string | null
    paymentId: string | null
    purchaseId: string | null
    actionId: string | null
    balanceBefore: number
    balanceAfter: number
    metadata: JsonValue | null
    source: string | null
    createdAt: Date
    _count: PointTransactionCountAggregateOutputType | null
    _avg: PointTransactionAvgAggregateOutputType | null
    _sum: PointTransactionSumAggregateOutputType | null
    _min: PointTransactionMinAggregateOutputType | null
    _max: PointTransactionMaxAggregateOutputType | null
  }

  type GetPointTransactionGroupByPayload<T extends PointTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PointTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PointTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PointTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], PointTransactionGroupByOutputType[P]>
        }
      >
    >


  export type PointTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    cost?: boolean
    postId?: boolean
    messageId?: boolean
    paymentId?: boolean
    purchaseId?: boolean
    actionId?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointTransaction"]>

  export type PointTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    cost?: boolean
    postId?: boolean
    messageId?: boolean
    paymentId?: boolean
    purchaseId?: boolean
    actionId?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointTransaction"]>

  export type PointTransactionSelectScalar = {
    id?: boolean
    clientId?: boolean
    amount?: boolean
    type?: boolean
    description?: boolean
    cost?: boolean
    postId?: boolean
    messageId?: boolean
    paymentId?: boolean
    purchaseId?: boolean
    actionId?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    createdAt?: boolean
  }

  export type PointTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type PointTransactionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $PointTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PointTransaction"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      amount: number
      type: $Enums.PointTransactionType
      description: string | null
      cost: number | null
      postId: string | null
      messageId: string | null
      paymentId: string | null
      purchaseId: string | null
      actionId: string | null
      balanceBefore: number
      balanceAfter: number
      metadata: Prisma.JsonValue | null
      source: string | null
      createdAt: Date
    }, ExtArgs["result"]["pointTransaction"]>
    composites: {}
  }

  type PointTransactionGetPayload<S extends boolean | null | undefined | PointTransactionDefaultArgs> = $Result.GetResult<Prisma.$PointTransactionPayload, S>

  type PointTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PointTransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PointTransactionCountAggregateInputType | true
    }

  export interface PointTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PointTransaction'], meta: { name: 'PointTransaction' } }
    /**
     * Find zero or one PointTransaction that matches the filter.
     * @param {PointTransactionFindUniqueArgs} args - Arguments to find a PointTransaction
     * @example
     * // Get one PointTransaction
     * const pointTransaction = await prisma.pointTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PointTransactionFindUniqueArgs>(args: SelectSubset<T, PointTransactionFindUniqueArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PointTransaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PointTransactionFindUniqueOrThrowArgs} args - Arguments to find a PointTransaction
     * @example
     * // Get one PointTransaction
     * const pointTransaction = await prisma.pointTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PointTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, PointTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PointTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionFindFirstArgs} args - Arguments to find a PointTransaction
     * @example
     * // Get one PointTransaction
     * const pointTransaction = await prisma.pointTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PointTransactionFindFirstArgs>(args?: SelectSubset<T, PointTransactionFindFirstArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PointTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionFindFirstOrThrowArgs} args - Arguments to find a PointTransaction
     * @example
     * // Get one PointTransaction
     * const pointTransaction = await prisma.pointTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PointTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, PointTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PointTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PointTransactions
     * const pointTransactions = await prisma.pointTransaction.findMany()
     * 
     * // Get first 10 PointTransactions
     * const pointTransactions = await prisma.pointTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pointTransactionWithIdOnly = await prisma.pointTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PointTransactionFindManyArgs>(args?: SelectSubset<T, PointTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PointTransaction.
     * @param {PointTransactionCreateArgs} args - Arguments to create a PointTransaction.
     * @example
     * // Create one PointTransaction
     * const PointTransaction = await prisma.pointTransaction.create({
     *   data: {
     *     // ... data to create a PointTransaction
     *   }
     * })
     * 
     */
    create<T extends PointTransactionCreateArgs>(args: SelectSubset<T, PointTransactionCreateArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PointTransactions.
     * @param {PointTransactionCreateManyArgs} args - Arguments to create many PointTransactions.
     * @example
     * // Create many PointTransactions
     * const pointTransaction = await prisma.pointTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PointTransactionCreateManyArgs>(args?: SelectSubset<T, PointTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PointTransactions and returns the data saved in the database.
     * @param {PointTransactionCreateManyAndReturnArgs} args - Arguments to create many PointTransactions.
     * @example
     * // Create many PointTransactions
     * const pointTransaction = await prisma.pointTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PointTransactions and only return the `id`
     * const pointTransactionWithIdOnly = await prisma.pointTransaction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PointTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, PointTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PointTransaction.
     * @param {PointTransactionDeleteArgs} args - Arguments to delete one PointTransaction.
     * @example
     * // Delete one PointTransaction
     * const PointTransaction = await prisma.pointTransaction.delete({
     *   where: {
     *     // ... filter to delete one PointTransaction
     *   }
     * })
     * 
     */
    delete<T extends PointTransactionDeleteArgs>(args: SelectSubset<T, PointTransactionDeleteArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PointTransaction.
     * @param {PointTransactionUpdateArgs} args - Arguments to update one PointTransaction.
     * @example
     * // Update one PointTransaction
     * const pointTransaction = await prisma.pointTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PointTransactionUpdateArgs>(args: SelectSubset<T, PointTransactionUpdateArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PointTransactions.
     * @param {PointTransactionDeleteManyArgs} args - Arguments to filter PointTransactions to delete.
     * @example
     * // Delete a few PointTransactions
     * const { count } = await prisma.pointTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PointTransactionDeleteManyArgs>(args?: SelectSubset<T, PointTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PointTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PointTransactions
     * const pointTransaction = await prisma.pointTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PointTransactionUpdateManyArgs>(args: SelectSubset<T, PointTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PointTransaction.
     * @param {PointTransactionUpsertArgs} args - Arguments to update or create a PointTransaction.
     * @example
     * // Update or create a PointTransaction
     * const pointTransaction = await prisma.pointTransaction.upsert({
     *   create: {
     *     // ... data to create a PointTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PointTransaction we want to update
     *   }
     * })
     */
    upsert<T extends PointTransactionUpsertArgs>(args: SelectSubset<T, PointTransactionUpsertArgs<ExtArgs>>): Prisma__PointTransactionClient<$Result.GetResult<Prisma.$PointTransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PointTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionCountArgs} args - Arguments to filter PointTransactions to count.
     * @example
     * // Count the number of PointTransactions
     * const count = await prisma.pointTransaction.count({
     *   where: {
     *     // ... the filter for the PointTransactions we want to count
     *   }
     * })
    **/
    count<T extends PointTransactionCountArgs>(
      args?: Subset<T, PointTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PointTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PointTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PointTransactionAggregateArgs>(args: Subset<T, PointTransactionAggregateArgs>): Prisma.PrismaPromise<GetPointTransactionAggregateType<T>>

    /**
     * Group by PointTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PointTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PointTransactionGroupByArgs['orderBy'] }
        : { orderBy?: PointTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PointTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPointTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PointTransaction model
   */
  readonly fields: PointTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PointTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PointTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PointTransaction model
   */ 
  interface PointTransactionFieldRefs {
    readonly id: FieldRef<"PointTransaction", 'String'>
    readonly clientId: FieldRef<"PointTransaction", 'String'>
    readonly amount: FieldRef<"PointTransaction", 'Int'>
    readonly type: FieldRef<"PointTransaction", 'PointTransactionType'>
    readonly description: FieldRef<"PointTransaction", 'String'>
    readonly cost: FieldRef<"PointTransaction", 'Float'>
    readonly postId: FieldRef<"PointTransaction", 'String'>
    readonly messageId: FieldRef<"PointTransaction", 'String'>
    readonly paymentId: FieldRef<"PointTransaction", 'String'>
    readonly purchaseId: FieldRef<"PointTransaction", 'String'>
    readonly actionId: FieldRef<"PointTransaction", 'String'>
    readonly balanceBefore: FieldRef<"PointTransaction", 'Int'>
    readonly balanceAfter: FieldRef<"PointTransaction", 'Int'>
    readonly metadata: FieldRef<"PointTransaction", 'Json'>
    readonly source: FieldRef<"PointTransaction", 'String'>
    readonly createdAt: FieldRef<"PointTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PointTransaction findUnique
   */
  export type PointTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PointTransaction to fetch.
     */
    where: PointTransactionWhereUniqueInput
  }

  /**
   * PointTransaction findUniqueOrThrow
   */
  export type PointTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PointTransaction to fetch.
     */
    where: PointTransactionWhereUniqueInput
  }

  /**
   * PointTransaction findFirst
   */
  export type PointTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PointTransaction to fetch.
     */
    where?: PointTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointTransactions to fetch.
     */
    orderBy?: PointTransactionOrderByWithRelationInput | PointTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointTransactions.
     */
    cursor?: PointTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointTransactions.
     */
    distinct?: PointTransactionScalarFieldEnum | PointTransactionScalarFieldEnum[]
  }

  /**
   * PointTransaction findFirstOrThrow
   */
  export type PointTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PointTransaction to fetch.
     */
    where?: PointTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointTransactions to fetch.
     */
    orderBy?: PointTransactionOrderByWithRelationInput | PointTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointTransactions.
     */
    cursor?: PointTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointTransactions.
     */
    distinct?: PointTransactionScalarFieldEnum | PointTransactionScalarFieldEnum[]
  }

  /**
   * PointTransaction findMany
   */
  export type PointTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PointTransactions to fetch.
     */
    where?: PointTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointTransactions to fetch.
     */
    orderBy?: PointTransactionOrderByWithRelationInput | PointTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PointTransactions.
     */
    cursor?: PointTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointTransactions.
     */
    skip?: number
    distinct?: PointTransactionScalarFieldEnum | PointTransactionScalarFieldEnum[]
  }

  /**
   * PointTransaction create
   */
  export type PointTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a PointTransaction.
     */
    data: XOR<PointTransactionCreateInput, PointTransactionUncheckedCreateInput>
  }

  /**
   * PointTransaction createMany
   */
  export type PointTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PointTransactions.
     */
    data: PointTransactionCreateManyInput | PointTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PointTransaction createManyAndReturn
   */
  export type PointTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PointTransactions.
     */
    data: PointTransactionCreateManyInput | PointTransactionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PointTransaction update
   */
  export type PointTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a PointTransaction.
     */
    data: XOR<PointTransactionUpdateInput, PointTransactionUncheckedUpdateInput>
    /**
     * Choose, which PointTransaction to update.
     */
    where: PointTransactionWhereUniqueInput
  }

  /**
   * PointTransaction updateMany
   */
  export type PointTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PointTransactions.
     */
    data: XOR<PointTransactionUpdateManyMutationInput, PointTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PointTransactions to update
     */
    where?: PointTransactionWhereInput
  }

  /**
   * PointTransaction upsert
   */
  export type PointTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the PointTransaction to update in case it exists.
     */
    where: PointTransactionWhereUniqueInput
    /**
     * In case the PointTransaction found by the `where` argument doesn't exist, create a new PointTransaction with this data.
     */
    create: XOR<PointTransactionCreateInput, PointTransactionUncheckedCreateInput>
    /**
     * In case the PointTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PointTransactionUpdateInput, PointTransactionUncheckedUpdateInput>
  }

  /**
   * PointTransaction delete
   */
  export type PointTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
    /**
     * Filter which PointTransaction to delete.
     */
    where: PointTransactionWhereUniqueInput
  }

  /**
   * PointTransaction deleteMany
   */
  export type PointTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointTransactions to delete
     */
    where?: PointTransactionWhereInput
  }

  /**
   * PointTransaction without action
   */
  export type PointTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointTransaction
     */
    select?: PointTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointTransactionInclude<ExtArgs> | null
  }


  /**
   * Model PointsHistory
   */

  export type AggregatePointsHistory = {
    _count: PointsHistoryCountAggregateOutputType | null
    _avg: PointsHistoryAvgAggregateOutputType | null
    _sum: PointsHistorySumAggregateOutputType | null
    _min: PointsHistoryMinAggregateOutputType | null
    _max: PointsHistoryMaxAggregateOutputType | null
  }

  export type PointsHistoryAvgAggregateOutputType = {
    amount: number | null
    balanceBefore: number | null
    balanceAfter: number | null
  }

  export type PointsHistorySumAggregateOutputType = {
    amount: number | null
    balanceBefore: number | null
    balanceAfter: number | null
  }

  export type PointsHistoryMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    type: $Enums.PointTransactionType | null
    amount: number | null
    description: string | null
    balanceBefore: number | null
    balanceAfter: number | null
    source: string | null
    purchaseId: string | null
    actionId: string | null
    createdAt: Date | null
  }

  export type PointsHistoryMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    type: $Enums.PointTransactionType | null
    amount: number | null
    description: string | null
    balanceBefore: number | null
    balanceAfter: number | null
    source: string | null
    purchaseId: string | null
    actionId: string | null
    createdAt: Date | null
  }

  export type PointsHistoryCountAggregateOutputType = {
    id: number
    clientId: number
    type: number
    amount: number
    description: number
    balanceBefore: number
    balanceAfter: number
    metadata: number
    source: number
    purchaseId: number
    actionId: number
    createdAt: number
    _all: number
  }


  export type PointsHistoryAvgAggregateInputType = {
    amount?: true
    balanceBefore?: true
    balanceAfter?: true
  }

  export type PointsHistorySumAggregateInputType = {
    amount?: true
    balanceBefore?: true
    balanceAfter?: true
  }

  export type PointsHistoryMinAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    amount?: true
    description?: true
    balanceBefore?: true
    balanceAfter?: true
    source?: true
    purchaseId?: true
    actionId?: true
    createdAt?: true
  }

  export type PointsHistoryMaxAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    amount?: true
    description?: true
    balanceBefore?: true
    balanceAfter?: true
    source?: true
    purchaseId?: true
    actionId?: true
    createdAt?: true
  }

  export type PointsHistoryCountAggregateInputType = {
    id?: true
    clientId?: true
    type?: true
    amount?: true
    description?: true
    balanceBefore?: true
    balanceAfter?: true
    metadata?: true
    source?: true
    purchaseId?: true
    actionId?: true
    createdAt?: true
    _all?: true
  }

  export type PointsHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsHistory to aggregate.
     */
    where?: PointsHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsHistories to fetch.
     */
    orderBy?: PointsHistoryOrderByWithRelationInput | PointsHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PointsHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PointsHistories
    **/
    _count?: true | PointsHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PointsHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PointsHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PointsHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PointsHistoryMaxAggregateInputType
  }

  export type GetPointsHistoryAggregateType<T extends PointsHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregatePointsHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePointsHistory[P]>
      : GetScalarType<T[P], AggregatePointsHistory[P]>
  }




  export type PointsHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PointsHistoryWhereInput
    orderBy?: PointsHistoryOrderByWithAggregationInput | PointsHistoryOrderByWithAggregationInput[]
    by: PointsHistoryScalarFieldEnum[] | PointsHistoryScalarFieldEnum
    having?: PointsHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PointsHistoryCountAggregateInputType | true
    _avg?: PointsHistoryAvgAggregateInputType
    _sum?: PointsHistorySumAggregateInputType
    _min?: PointsHistoryMinAggregateInputType
    _max?: PointsHistoryMaxAggregateInputType
  }

  export type PointsHistoryGroupByOutputType = {
    id: string
    clientId: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata: JsonValue | null
    source: string | null
    purchaseId: string | null
    actionId: string | null
    createdAt: Date
    _count: PointsHistoryCountAggregateOutputType | null
    _avg: PointsHistoryAvgAggregateOutputType | null
    _sum: PointsHistorySumAggregateOutputType | null
    _min: PointsHistoryMinAggregateOutputType | null
    _max: PointsHistoryMaxAggregateOutputType | null
  }

  type GetPointsHistoryGroupByPayload<T extends PointsHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PointsHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PointsHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PointsHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], PointsHistoryGroupByOutputType[P]>
        }
      >
    >


  export type PointsHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    purchaseId?: boolean
    actionId?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointsHistory"]>

  export type PointsHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    purchaseId?: boolean
    actionId?: boolean
    createdAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pointsHistory"]>

  export type PointsHistorySelectScalar = {
    id?: boolean
    clientId?: boolean
    type?: boolean
    amount?: boolean
    description?: boolean
    balanceBefore?: boolean
    balanceAfter?: boolean
    metadata?: boolean
    source?: boolean
    purchaseId?: boolean
    actionId?: boolean
    createdAt?: boolean
  }

  export type PointsHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type PointsHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $PointsHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PointsHistory"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      type: $Enums.PointTransactionType
      amount: number
      description: string
      balanceBefore: number
      balanceAfter: number
      metadata: Prisma.JsonValue | null
      source: string | null
      purchaseId: string | null
      actionId: string | null
      createdAt: Date
    }, ExtArgs["result"]["pointsHistory"]>
    composites: {}
  }

  type PointsHistoryGetPayload<S extends boolean | null | undefined | PointsHistoryDefaultArgs> = $Result.GetResult<Prisma.$PointsHistoryPayload, S>

  type PointsHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PointsHistoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PointsHistoryCountAggregateInputType | true
    }

  export interface PointsHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PointsHistory'], meta: { name: 'PointsHistory' } }
    /**
     * Find zero or one PointsHistory that matches the filter.
     * @param {PointsHistoryFindUniqueArgs} args - Arguments to find a PointsHistory
     * @example
     * // Get one PointsHistory
     * const pointsHistory = await prisma.pointsHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PointsHistoryFindUniqueArgs>(args: SelectSubset<T, PointsHistoryFindUniqueArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PointsHistory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PointsHistoryFindUniqueOrThrowArgs} args - Arguments to find a PointsHistory
     * @example
     * // Get one PointsHistory
     * const pointsHistory = await prisma.pointsHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PointsHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, PointsHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PointsHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryFindFirstArgs} args - Arguments to find a PointsHistory
     * @example
     * // Get one PointsHistory
     * const pointsHistory = await prisma.pointsHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PointsHistoryFindFirstArgs>(args?: SelectSubset<T, PointsHistoryFindFirstArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PointsHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryFindFirstOrThrowArgs} args - Arguments to find a PointsHistory
     * @example
     * // Get one PointsHistory
     * const pointsHistory = await prisma.pointsHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PointsHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, PointsHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PointsHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PointsHistories
     * const pointsHistories = await prisma.pointsHistory.findMany()
     * 
     * // Get first 10 PointsHistories
     * const pointsHistories = await prisma.pointsHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pointsHistoryWithIdOnly = await prisma.pointsHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PointsHistoryFindManyArgs>(args?: SelectSubset<T, PointsHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PointsHistory.
     * @param {PointsHistoryCreateArgs} args - Arguments to create a PointsHistory.
     * @example
     * // Create one PointsHistory
     * const PointsHistory = await prisma.pointsHistory.create({
     *   data: {
     *     // ... data to create a PointsHistory
     *   }
     * })
     * 
     */
    create<T extends PointsHistoryCreateArgs>(args: SelectSubset<T, PointsHistoryCreateArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PointsHistories.
     * @param {PointsHistoryCreateManyArgs} args - Arguments to create many PointsHistories.
     * @example
     * // Create many PointsHistories
     * const pointsHistory = await prisma.pointsHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PointsHistoryCreateManyArgs>(args?: SelectSubset<T, PointsHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PointsHistories and returns the data saved in the database.
     * @param {PointsHistoryCreateManyAndReturnArgs} args - Arguments to create many PointsHistories.
     * @example
     * // Create many PointsHistories
     * const pointsHistory = await prisma.pointsHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PointsHistories and only return the `id`
     * const pointsHistoryWithIdOnly = await prisma.pointsHistory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PointsHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, PointsHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PointsHistory.
     * @param {PointsHistoryDeleteArgs} args - Arguments to delete one PointsHistory.
     * @example
     * // Delete one PointsHistory
     * const PointsHistory = await prisma.pointsHistory.delete({
     *   where: {
     *     // ... filter to delete one PointsHistory
     *   }
     * })
     * 
     */
    delete<T extends PointsHistoryDeleteArgs>(args: SelectSubset<T, PointsHistoryDeleteArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PointsHistory.
     * @param {PointsHistoryUpdateArgs} args - Arguments to update one PointsHistory.
     * @example
     * // Update one PointsHistory
     * const pointsHistory = await prisma.pointsHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PointsHistoryUpdateArgs>(args: SelectSubset<T, PointsHistoryUpdateArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PointsHistories.
     * @param {PointsHistoryDeleteManyArgs} args - Arguments to filter PointsHistories to delete.
     * @example
     * // Delete a few PointsHistories
     * const { count } = await prisma.pointsHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PointsHistoryDeleteManyArgs>(args?: SelectSubset<T, PointsHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PointsHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PointsHistories
     * const pointsHistory = await prisma.pointsHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PointsHistoryUpdateManyArgs>(args: SelectSubset<T, PointsHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PointsHistory.
     * @param {PointsHistoryUpsertArgs} args - Arguments to update or create a PointsHistory.
     * @example
     * // Update or create a PointsHistory
     * const pointsHistory = await prisma.pointsHistory.upsert({
     *   create: {
     *     // ... data to create a PointsHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PointsHistory we want to update
     *   }
     * })
     */
    upsert<T extends PointsHistoryUpsertArgs>(args: SelectSubset<T, PointsHistoryUpsertArgs<ExtArgs>>): Prisma__PointsHistoryClient<$Result.GetResult<Prisma.$PointsHistoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PointsHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryCountArgs} args - Arguments to filter PointsHistories to count.
     * @example
     * // Count the number of PointsHistories
     * const count = await prisma.pointsHistory.count({
     *   where: {
     *     // ... the filter for the PointsHistories we want to count
     *   }
     * })
    **/
    count<T extends PointsHistoryCountArgs>(
      args?: Subset<T, PointsHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PointsHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PointsHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PointsHistoryAggregateArgs>(args: Subset<T, PointsHistoryAggregateArgs>): Prisma.PrismaPromise<GetPointsHistoryAggregateType<T>>

    /**
     * Group by PointsHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PointsHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PointsHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PointsHistoryGroupByArgs['orderBy'] }
        : { orderBy?: PointsHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PointsHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPointsHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PointsHistory model
   */
  readonly fields: PointsHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PointsHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PointsHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PointsHistory model
   */ 
  interface PointsHistoryFieldRefs {
    readonly id: FieldRef<"PointsHistory", 'String'>
    readonly clientId: FieldRef<"PointsHistory", 'String'>
    readonly type: FieldRef<"PointsHistory", 'PointTransactionType'>
    readonly amount: FieldRef<"PointsHistory", 'Int'>
    readonly description: FieldRef<"PointsHistory", 'String'>
    readonly balanceBefore: FieldRef<"PointsHistory", 'Int'>
    readonly balanceAfter: FieldRef<"PointsHistory", 'Int'>
    readonly metadata: FieldRef<"PointsHistory", 'Json'>
    readonly source: FieldRef<"PointsHistory", 'String'>
    readonly purchaseId: FieldRef<"PointsHistory", 'String'>
    readonly actionId: FieldRef<"PointsHistory", 'String'>
    readonly createdAt: FieldRef<"PointsHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PointsHistory findUnique
   */
  export type PointsHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PointsHistory to fetch.
     */
    where: PointsHistoryWhereUniqueInput
  }

  /**
   * PointsHistory findUniqueOrThrow
   */
  export type PointsHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PointsHistory to fetch.
     */
    where: PointsHistoryWhereUniqueInput
  }

  /**
   * PointsHistory findFirst
   */
  export type PointsHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PointsHistory to fetch.
     */
    where?: PointsHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsHistories to fetch.
     */
    orderBy?: PointsHistoryOrderByWithRelationInput | PointsHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsHistories.
     */
    cursor?: PointsHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsHistories.
     */
    distinct?: PointsHistoryScalarFieldEnum | PointsHistoryScalarFieldEnum[]
  }

  /**
   * PointsHistory findFirstOrThrow
   */
  export type PointsHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PointsHistory to fetch.
     */
    where?: PointsHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsHistories to fetch.
     */
    orderBy?: PointsHistoryOrderByWithRelationInput | PointsHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PointsHistories.
     */
    cursor?: PointsHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PointsHistories.
     */
    distinct?: PointsHistoryScalarFieldEnum | PointsHistoryScalarFieldEnum[]
  }

  /**
   * PointsHistory findMany
   */
  export type PointsHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PointsHistories to fetch.
     */
    where?: PointsHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PointsHistories to fetch.
     */
    orderBy?: PointsHistoryOrderByWithRelationInput | PointsHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PointsHistories.
     */
    cursor?: PointsHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PointsHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PointsHistories.
     */
    skip?: number
    distinct?: PointsHistoryScalarFieldEnum | PointsHistoryScalarFieldEnum[]
  }

  /**
   * PointsHistory create
   */
  export type PointsHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a PointsHistory.
     */
    data: XOR<PointsHistoryCreateInput, PointsHistoryUncheckedCreateInput>
  }

  /**
   * PointsHistory createMany
   */
  export type PointsHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PointsHistories.
     */
    data: PointsHistoryCreateManyInput | PointsHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PointsHistory createManyAndReturn
   */
  export type PointsHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PointsHistories.
     */
    data: PointsHistoryCreateManyInput | PointsHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PointsHistory update
   */
  export type PointsHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a PointsHistory.
     */
    data: XOR<PointsHistoryUpdateInput, PointsHistoryUncheckedUpdateInput>
    /**
     * Choose, which PointsHistory to update.
     */
    where: PointsHistoryWhereUniqueInput
  }

  /**
   * PointsHistory updateMany
   */
  export type PointsHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PointsHistories.
     */
    data: XOR<PointsHistoryUpdateManyMutationInput, PointsHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PointsHistories to update
     */
    where?: PointsHistoryWhereInput
  }

  /**
   * PointsHistory upsert
   */
  export type PointsHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the PointsHistory to update in case it exists.
     */
    where: PointsHistoryWhereUniqueInput
    /**
     * In case the PointsHistory found by the `where` argument doesn't exist, create a new PointsHistory with this data.
     */
    create: XOR<PointsHistoryCreateInput, PointsHistoryUncheckedCreateInput>
    /**
     * In case the PointsHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PointsHistoryUpdateInput, PointsHistoryUncheckedUpdateInput>
  }

  /**
   * PointsHistory delete
   */
  export type PointsHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
    /**
     * Filter which PointsHistory to delete.
     */
    where: PointsHistoryWhereUniqueInput
  }

  /**
   * PointsHistory deleteMany
   */
  export type PointsHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PointsHistories to delete
     */
    where?: PointsHistoryWhereInput
  }

  /**
   * PointsHistory without action
   */
  export type PointsHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PointsHistory
     */
    select?: PointsHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PointsHistoryInclude<ExtArgs> | null
  }


  /**
   * Model PremiumActivation
   */

  export type AggregatePremiumActivation = {
    _count: PremiumActivationCountAggregateOutputType | null
    _avg: PremiumActivationAvgAggregateOutputType | null
    _sum: PremiumActivationSumAggregateOutputType | null
    _min: PremiumActivationMinAggregateOutputType | null
    _max: PremiumActivationMaxAggregateOutputType | null
  }

  export type PremiumActivationAvgAggregateOutputType = {
    duration: number | null
    pointsCost: number | null
  }

  export type PremiumActivationSumAggregateOutputType = {
    duration: number | null
    pointsCost: number | null
  }

  export type PremiumActivationMinAggregateOutputType = {
    id: string | null
    clientId: string | null
    tier: $Enums.PremiumTier | null
    duration: number | null
    pointsCost: number | null
    activatedAt: Date | null
    expiresAt: Date | null
    isActive: boolean | null
    activatedBy: string | null
  }

  export type PremiumActivationMaxAggregateOutputType = {
    id: string | null
    clientId: string | null
    tier: $Enums.PremiumTier | null
    duration: number | null
    pointsCost: number | null
    activatedAt: Date | null
    expiresAt: Date | null
    isActive: boolean | null
    activatedBy: string | null
  }

  export type PremiumActivationCountAggregateOutputType = {
    id: number
    clientId: number
    tier: number
    duration: number
    pointsCost: number
    activatedAt: number
    expiresAt: number
    isActive: number
    activatedBy: number
    _all: number
  }


  export type PremiumActivationAvgAggregateInputType = {
    duration?: true
    pointsCost?: true
  }

  export type PremiumActivationSumAggregateInputType = {
    duration?: true
    pointsCost?: true
  }

  export type PremiumActivationMinAggregateInputType = {
    id?: true
    clientId?: true
    tier?: true
    duration?: true
    pointsCost?: true
    activatedAt?: true
    expiresAt?: true
    isActive?: true
    activatedBy?: true
  }

  export type PremiumActivationMaxAggregateInputType = {
    id?: true
    clientId?: true
    tier?: true
    duration?: true
    pointsCost?: true
    activatedAt?: true
    expiresAt?: true
    isActive?: true
    activatedBy?: true
  }

  export type PremiumActivationCountAggregateInputType = {
    id?: true
    clientId?: true
    tier?: true
    duration?: true
    pointsCost?: true
    activatedAt?: true
    expiresAt?: true
    isActive?: true
    activatedBy?: true
    _all?: true
  }

  export type PremiumActivationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PremiumActivation to aggregate.
     */
    where?: PremiumActivationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PremiumActivations to fetch.
     */
    orderBy?: PremiumActivationOrderByWithRelationInput | PremiumActivationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PremiumActivationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PremiumActivations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PremiumActivations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PremiumActivations
    **/
    _count?: true | PremiumActivationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PremiumActivationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PremiumActivationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PremiumActivationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PremiumActivationMaxAggregateInputType
  }

  export type GetPremiumActivationAggregateType<T extends PremiumActivationAggregateArgs> = {
        [P in keyof T & keyof AggregatePremiumActivation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePremiumActivation[P]>
      : GetScalarType<T[P], AggregatePremiumActivation[P]>
  }




  export type PremiumActivationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PremiumActivationWhereInput
    orderBy?: PremiumActivationOrderByWithAggregationInput | PremiumActivationOrderByWithAggregationInput[]
    by: PremiumActivationScalarFieldEnum[] | PremiumActivationScalarFieldEnum
    having?: PremiumActivationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PremiumActivationCountAggregateInputType | true
    _avg?: PremiumActivationAvgAggregateInputType
    _sum?: PremiumActivationSumAggregateInputType
    _min?: PremiumActivationMinAggregateInputType
    _max?: PremiumActivationMaxAggregateInputType
  }

  export type PremiumActivationGroupByOutputType = {
    id: string
    clientId: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt: Date
    expiresAt: Date
    isActive: boolean
    activatedBy: string
    _count: PremiumActivationCountAggregateOutputType | null
    _avg: PremiumActivationAvgAggregateOutputType | null
    _sum: PremiumActivationSumAggregateOutputType | null
    _min: PremiumActivationMinAggregateOutputType | null
    _max: PremiumActivationMaxAggregateOutputType | null
  }

  type GetPremiumActivationGroupByPayload<T extends PremiumActivationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PremiumActivationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PremiumActivationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PremiumActivationGroupByOutputType[P]>
            : GetScalarType<T[P], PremiumActivationGroupByOutputType[P]>
        }
      >
    >


  export type PremiumActivationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    tier?: boolean
    duration?: boolean
    pointsCost?: boolean
    activatedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    activatedBy?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["premiumActivation"]>

  export type PremiumActivationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clientId?: boolean
    tier?: boolean
    duration?: boolean
    pointsCost?: boolean
    activatedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    activatedBy?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["premiumActivation"]>

  export type PremiumActivationSelectScalar = {
    id?: boolean
    clientId?: boolean
    tier?: boolean
    duration?: boolean
    pointsCost?: boolean
    activatedAt?: boolean
    expiresAt?: boolean
    isActive?: boolean
    activatedBy?: boolean
  }

  export type PremiumActivationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }
  export type PremiumActivationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
  }

  export type $PremiumActivationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PremiumActivation"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      clientId: string
      tier: $Enums.PremiumTier
      duration: number
      pointsCost: number
      activatedAt: Date
      expiresAt: Date
      isActive: boolean
      activatedBy: string
    }, ExtArgs["result"]["premiumActivation"]>
    composites: {}
  }

  type PremiumActivationGetPayload<S extends boolean | null | undefined | PremiumActivationDefaultArgs> = $Result.GetResult<Prisma.$PremiumActivationPayload, S>

  type PremiumActivationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PremiumActivationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PremiumActivationCountAggregateInputType | true
    }

  export interface PremiumActivationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PremiumActivation'], meta: { name: 'PremiumActivation' } }
    /**
     * Find zero or one PremiumActivation that matches the filter.
     * @param {PremiumActivationFindUniqueArgs} args - Arguments to find a PremiumActivation
     * @example
     * // Get one PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PremiumActivationFindUniqueArgs>(args: SelectSubset<T, PremiumActivationFindUniqueArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PremiumActivation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PremiumActivationFindUniqueOrThrowArgs} args - Arguments to find a PremiumActivation
     * @example
     * // Get one PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PremiumActivationFindUniqueOrThrowArgs>(args: SelectSubset<T, PremiumActivationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PremiumActivation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationFindFirstArgs} args - Arguments to find a PremiumActivation
     * @example
     * // Get one PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PremiumActivationFindFirstArgs>(args?: SelectSubset<T, PremiumActivationFindFirstArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PremiumActivation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationFindFirstOrThrowArgs} args - Arguments to find a PremiumActivation
     * @example
     * // Get one PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PremiumActivationFindFirstOrThrowArgs>(args?: SelectSubset<T, PremiumActivationFindFirstOrThrowArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PremiumActivations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PremiumActivations
     * const premiumActivations = await prisma.premiumActivation.findMany()
     * 
     * // Get first 10 PremiumActivations
     * const premiumActivations = await prisma.premiumActivation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const premiumActivationWithIdOnly = await prisma.premiumActivation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PremiumActivationFindManyArgs>(args?: SelectSubset<T, PremiumActivationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PremiumActivation.
     * @param {PremiumActivationCreateArgs} args - Arguments to create a PremiumActivation.
     * @example
     * // Create one PremiumActivation
     * const PremiumActivation = await prisma.premiumActivation.create({
     *   data: {
     *     // ... data to create a PremiumActivation
     *   }
     * })
     * 
     */
    create<T extends PremiumActivationCreateArgs>(args: SelectSubset<T, PremiumActivationCreateArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PremiumActivations.
     * @param {PremiumActivationCreateManyArgs} args - Arguments to create many PremiumActivations.
     * @example
     * // Create many PremiumActivations
     * const premiumActivation = await prisma.premiumActivation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PremiumActivationCreateManyArgs>(args?: SelectSubset<T, PremiumActivationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PremiumActivations and returns the data saved in the database.
     * @param {PremiumActivationCreateManyAndReturnArgs} args - Arguments to create many PremiumActivations.
     * @example
     * // Create many PremiumActivations
     * const premiumActivation = await prisma.premiumActivation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PremiumActivations and only return the `id`
     * const premiumActivationWithIdOnly = await prisma.premiumActivation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PremiumActivationCreateManyAndReturnArgs>(args?: SelectSubset<T, PremiumActivationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PremiumActivation.
     * @param {PremiumActivationDeleteArgs} args - Arguments to delete one PremiumActivation.
     * @example
     * // Delete one PremiumActivation
     * const PremiumActivation = await prisma.premiumActivation.delete({
     *   where: {
     *     // ... filter to delete one PremiumActivation
     *   }
     * })
     * 
     */
    delete<T extends PremiumActivationDeleteArgs>(args: SelectSubset<T, PremiumActivationDeleteArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PremiumActivation.
     * @param {PremiumActivationUpdateArgs} args - Arguments to update one PremiumActivation.
     * @example
     * // Update one PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PremiumActivationUpdateArgs>(args: SelectSubset<T, PremiumActivationUpdateArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PremiumActivations.
     * @param {PremiumActivationDeleteManyArgs} args - Arguments to filter PremiumActivations to delete.
     * @example
     * // Delete a few PremiumActivations
     * const { count } = await prisma.premiumActivation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PremiumActivationDeleteManyArgs>(args?: SelectSubset<T, PremiumActivationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PremiumActivations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PremiumActivations
     * const premiumActivation = await prisma.premiumActivation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PremiumActivationUpdateManyArgs>(args: SelectSubset<T, PremiumActivationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PremiumActivation.
     * @param {PremiumActivationUpsertArgs} args - Arguments to update or create a PremiumActivation.
     * @example
     * // Update or create a PremiumActivation
     * const premiumActivation = await prisma.premiumActivation.upsert({
     *   create: {
     *     // ... data to create a PremiumActivation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PremiumActivation we want to update
     *   }
     * })
     */
    upsert<T extends PremiumActivationUpsertArgs>(args: SelectSubset<T, PremiumActivationUpsertArgs<ExtArgs>>): Prisma__PremiumActivationClient<$Result.GetResult<Prisma.$PremiumActivationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PremiumActivations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationCountArgs} args - Arguments to filter PremiumActivations to count.
     * @example
     * // Count the number of PremiumActivations
     * const count = await prisma.premiumActivation.count({
     *   where: {
     *     // ... the filter for the PremiumActivations we want to count
     *   }
     * })
    **/
    count<T extends PremiumActivationCountArgs>(
      args?: Subset<T, PremiumActivationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PremiumActivationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PremiumActivation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PremiumActivationAggregateArgs>(args: Subset<T, PremiumActivationAggregateArgs>): Prisma.PrismaPromise<GetPremiumActivationAggregateType<T>>

    /**
     * Group by PremiumActivation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PremiumActivationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PremiumActivationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PremiumActivationGroupByArgs['orderBy'] }
        : { orderBy?: PremiumActivationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PremiumActivationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPremiumActivationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PremiumActivation model
   */
  readonly fields: PremiumActivationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PremiumActivation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PremiumActivationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PremiumActivation model
   */ 
  interface PremiumActivationFieldRefs {
    readonly id: FieldRef<"PremiumActivation", 'String'>
    readonly clientId: FieldRef<"PremiumActivation", 'String'>
    readonly tier: FieldRef<"PremiumActivation", 'PremiumTier'>
    readonly duration: FieldRef<"PremiumActivation", 'Int'>
    readonly pointsCost: FieldRef<"PremiumActivation", 'Int'>
    readonly activatedAt: FieldRef<"PremiumActivation", 'DateTime'>
    readonly expiresAt: FieldRef<"PremiumActivation", 'DateTime'>
    readonly isActive: FieldRef<"PremiumActivation", 'Boolean'>
    readonly activatedBy: FieldRef<"PremiumActivation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PremiumActivation findUnique
   */
  export type PremiumActivationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter, which PremiumActivation to fetch.
     */
    where: PremiumActivationWhereUniqueInput
  }

  /**
   * PremiumActivation findUniqueOrThrow
   */
  export type PremiumActivationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter, which PremiumActivation to fetch.
     */
    where: PremiumActivationWhereUniqueInput
  }

  /**
   * PremiumActivation findFirst
   */
  export type PremiumActivationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter, which PremiumActivation to fetch.
     */
    where?: PremiumActivationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PremiumActivations to fetch.
     */
    orderBy?: PremiumActivationOrderByWithRelationInput | PremiumActivationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PremiumActivations.
     */
    cursor?: PremiumActivationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PremiumActivations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PremiumActivations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PremiumActivations.
     */
    distinct?: PremiumActivationScalarFieldEnum | PremiumActivationScalarFieldEnum[]
  }

  /**
   * PremiumActivation findFirstOrThrow
   */
  export type PremiumActivationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter, which PremiumActivation to fetch.
     */
    where?: PremiumActivationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PremiumActivations to fetch.
     */
    orderBy?: PremiumActivationOrderByWithRelationInput | PremiumActivationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PremiumActivations.
     */
    cursor?: PremiumActivationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PremiumActivations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PremiumActivations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PremiumActivations.
     */
    distinct?: PremiumActivationScalarFieldEnum | PremiumActivationScalarFieldEnum[]
  }

  /**
   * PremiumActivation findMany
   */
  export type PremiumActivationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter, which PremiumActivations to fetch.
     */
    where?: PremiumActivationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PremiumActivations to fetch.
     */
    orderBy?: PremiumActivationOrderByWithRelationInput | PremiumActivationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PremiumActivations.
     */
    cursor?: PremiumActivationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PremiumActivations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PremiumActivations.
     */
    skip?: number
    distinct?: PremiumActivationScalarFieldEnum | PremiumActivationScalarFieldEnum[]
  }

  /**
   * PremiumActivation create
   */
  export type PremiumActivationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * The data needed to create a PremiumActivation.
     */
    data: XOR<PremiumActivationCreateInput, PremiumActivationUncheckedCreateInput>
  }

  /**
   * PremiumActivation createMany
   */
  export type PremiumActivationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PremiumActivations.
     */
    data: PremiumActivationCreateManyInput | PremiumActivationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PremiumActivation createManyAndReturn
   */
  export type PremiumActivationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PremiumActivations.
     */
    data: PremiumActivationCreateManyInput | PremiumActivationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PremiumActivation update
   */
  export type PremiumActivationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * The data needed to update a PremiumActivation.
     */
    data: XOR<PremiumActivationUpdateInput, PremiumActivationUncheckedUpdateInput>
    /**
     * Choose, which PremiumActivation to update.
     */
    where: PremiumActivationWhereUniqueInput
  }

  /**
   * PremiumActivation updateMany
   */
  export type PremiumActivationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PremiumActivations.
     */
    data: XOR<PremiumActivationUpdateManyMutationInput, PremiumActivationUncheckedUpdateManyInput>
    /**
     * Filter which PremiumActivations to update
     */
    where?: PremiumActivationWhereInput
  }

  /**
   * PremiumActivation upsert
   */
  export type PremiumActivationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * The filter to search for the PremiumActivation to update in case it exists.
     */
    where: PremiumActivationWhereUniqueInput
    /**
     * In case the PremiumActivation found by the `where` argument doesn't exist, create a new PremiumActivation with this data.
     */
    create: XOR<PremiumActivationCreateInput, PremiumActivationUncheckedCreateInput>
    /**
     * In case the PremiumActivation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PremiumActivationUpdateInput, PremiumActivationUncheckedUpdateInput>
  }

  /**
   * PremiumActivation delete
   */
  export type PremiumActivationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
    /**
     * Filter which PremiumActivation to delete.
     */
    where: PremiumActivationWhereUniqueInput
  }

  /**
   * PremiumActivation deleteMany
   */
  export type PremiumActivationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PremiumActivations to delete
     */
    where?: PremiumActivationWhereInput
  }

  /**
   * PremiumActivation without action
   */
  export type PremiumActivationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PremiumActivation
     */
    select?: PremiumActivationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PremiumActivationInclude<ExtArgs> | null
  }


  /**
   * Model ClientReview
   */

  export type AggregateClientReview = {
    _count: ClientReviewCountAggregateOutputType | null
    _avg: ClientReviewAvgAggregateOutputType | null
    _sum: ClientReviewSumAggregateOutputType | null
    _min: ClientReviewMinAggregateOutputType | null
    _max: ClientReviewMaxAggregateOutputType | null
  }

  export type ClientReviewAvgAggregateOutputType = {
    rating: number | null
    communication: number | null
    punctuality: number | null
    appearance: number | null
    overall: number | null
    service: number | null
    value: number | null
  }

  export type ClientReviewSumAggregateOutputType = {
    rating: number | null
    communication: number | null
    punctuality: number | null
    appearance: number | null
    overall: number | null
    service: number | null
    value: number | null
  }

  export type ClientReviewMinAggregateOutputType = {
    id: string | null
    rating: number | null
    comment: string | null
    communication: number | null
    punctuality: number | null
    appearance: number | null
    overall: number | null
    service: number | null
    value: number | null
    isAnonymous: boolean | null
    isVerified: boolean | null
    clientId: string | null
    escortId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ClientReviewMaxAggregateOutputType = {
    id: string | null
    rating: number | null
    comment: string | null
    communication: number | null
    punctuality: number | null
    appearance: number | null
    overall: number | null
    service: number | null
    value: number | null
    isAnonymous: boolean | null
    isVerified: boolean | null
    clientId: string | null
    escortId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ClientReviewCountAggregateOutputType = {
    id: number
    rating: number
    comment: number
    communication: number
    punctuality: number
    appearance: number
    overall: number
    service: number
    value: number
    isAnonymous: number
    isVerified: number
    clientId: number
    escortId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ClientReviewAvgAggregateInputType = {
    rating?: true
    communication?: true
    punctuality?: true
    appearance?: true
    overall?: true
    service?: true
    value?: true
  }

  export type ClientReviewSumAggregateInputType = {
    rating?: true
    communication?: true
    punctuality?: true
    appearance?: true
    overall?: true
    service?: true
    value?: true
  }

  export type ClientReviewMinAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    communication?: true
    punctuality?: true
    appearance?: true
    overall?: true
    service?: true
    value?: true
    isAnonymous?: true
    isVerified?: true
    clientId?: true
    escortId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ClientReviewMaxAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    communication?: true
    punctuality?: true
    appearance?: true
    overall?: true
    service?: true
    value?: true
    isAnonymous?: true
    isVerified?: true
    clientId?: true
    escortId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ClientReviewCountAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    communication?: true
    punctuality?: true
    appearance?: true
    overall?: true
    service?: true
    value?: true
    isAnonymous?: true
    isVerified?: true
    clientId?: true
    escortId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ClientReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientReview to aggregate.
     */
    where?: ClientReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientReviews to fetch.
     */
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClientReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClientReviews
    **/
    _count?: true | ClientReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientReviewMaxAggregateInputType
  }

  export type GetClientReviewAggregateType<T extends ClientReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateClientReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClientReview[P]>
      : GetScalarType<T[P], AggregateClientReview[P]>
  }




  export type ClientReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClientReviewWhereInput
    orderBy?: ClientReviewOrderByWithAggregationInput | ClientReviewOrderByWithAggregationInput[]
    by: ClientReviewScalarFieldEnum[] | ClientReviewScalarFieldEnum
    having?: ClientReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientReviewCountAggregateInputType | true
    _avg?: ClientReviewAvgAggregateInputType
    _sum?: ClientReviewSumAggregateInputType
    _min?: ClientReviewMinAggregateInputType
    _max?: ClientReviewMaxAggregateInputType
  }

  export type ClientReviewGroupByOutputType = {
    id: string
    rating: number
    comment: string | null
    communication: number | null
    punctuality: number | null
    appearance: number | null
    overall: number | null
    service: number | null
    value: number | null
    isAnonymous: boolean
    isVerified: boolean
    clientId: string
    escortId: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ClientReviewCountAggregateOutputType | null
    _avg: ClientReviewAvgAggregateOutputType | null
    _sum: ClientReviewSumAggregateOutputType | null
    _min: ClientReviewMinAggregateOutputType | null
    _max: ClientReviewMaxAggregateOutputType | null
  }

  type GetClientReviewGroupByPayload<T extends ClientReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ClientReviewGroupByOutputType[P]>
        }
      >
    >


  export type ClientReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    comment?: boolean
    communication?: boolean
    punctuality?: boolean
    appearance?: boolean
    overall?: boolean
    service?: boolean
    value?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    clientId?: boolean
    escortId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientReview"]>

  export type ClientReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    comment?: boolean
    communication?: boolean
    punctuality?: boolean
    appearance?: boolean
    overall?: boolean
    service?: boolean
    value?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    clientId?: boolean
    escortId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    client?: boolean | ClientDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clientReview"]>

  export type ClientReviewSelectScalar = {
    id?: boolean
    rating?: boolean
    comment?: boolean
    communication?: boolean
    punctuality?: boolean
    appearance?: boolean
    overall?: boolean
    service?: boolean
    value?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    clientId?: boolean
    escortId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ClientReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }
  export type ClientReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | ClientDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }

  export type $ClientReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClientReview"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs>
      escort: Prisma.$EscortPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rating: number
      comment: string | null
      communication: number | null
      punctuality: number | null
      appearance: number | null
      overall: number | null
      service: number | null
      value: number | null
      isAnonymous: boolean
      isVerified: boolean
      clientId: string
      escortId: string
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["clientReview"]>
    composites: {}
  }

  type ClientReviewGetPayload<S extends boolean | null | undefined | ClientReviewDefaultArgs> = $Result.GetResult<Prisma.$ClientReviewPayload, S>

  type ClientReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ClientReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientReviewCountAggregateInputType | true
    }

  export interface ClientReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClientReview'], meta: { name: 'ClientReview' } }
    /**
     * Find zero or one ClientReview that matches the filter.
     * @param {ClientReviewFindUniqueArgs} args - Arguments to find a ClientReview
     * @example
     * // Get one ClientReview
     * const clientReview = await prisma.clientReview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClientReviewFindUniqueArgs>(args: SelectSubset<T, ClientReviewFindUniqueArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ClientReview that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ClientReviewFindUniqueOrThrowArgs} args - Arguments to find a ClientReview
     * @example
     * // Get one ClientReview
     * const clientReview = await prisma.clientReview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClientReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ClientReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ClientReview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewFindFirstArgs} args - Arguments to find a ClientReview
     * @example
     * // Get one ClientReview
     * const clientReview = await prisma.clientReview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClientReviewFindFirstArgs>(args?: SelectSubset<T, ClientReviewFindFirstArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ClientReview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewFindFirstOrThrowArgs} args - Arguments to find a ClientReview
     * @example
     * // Get one ClientReview
     * const clientReview = await prisma.clientReview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClientReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ClientReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ClientReviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClientReviews
     * const clientReviews = await prisma.clientReview.findMany()
     * 
     * // Get first 10 ClientReviews
     * const clientReviews = await prisma.clientReview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientReviewWithIdOnly = await prisma.clientReview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClientReviewFindManyArgs>(args?: SelectSubset<T, ClientReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ClientReview.
     * @param {ClientReviewCreateArgs} args - Arguments to create a ClientReview.
     * @example
     * // Create one ClientReview
     * const ClientReview = await prisma.clientReview.create({
     *   data: {
     *     // ... data to create a ClientReview
     *   }
     * })
     * 
     */
    create<T extends ClientReviewCreateArgs>(args: SelectSubset<T, ClientReviewCreateArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ClientReviews.
     * @param {ClientReviewCreateManyArgs} args - Arguments to create many ClientReviews.
     * @example
     * // Create many ClientReviews
     * const clientReview = await prisma.clientReview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClientReviewCreateManyArgs>(args?: SelectSubset<T, ClientReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClientReviews and returns the data saved in the database.
     * @param {ClientReviewCreateManyAndReturnArgs} args - Arguments to create many ClientReviews.
     * @example
     * // Create many ClientReviews
     * const clientReview = await prisma.clientReview.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClientReviews and only return the `id`
     * const clientReviewWithIdOnly = await prisma.clientReview.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClientReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ClientReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ClientReview.
     * @param {ClientReviewDeleteArgs} args - Arguments to delete one ClientReview.
     * @example
     * // Delete one ClientReview
     * const ClientReview = await prisma.clientReview.delete({
     *   where: {
     *     // ... filter to delete one ClientReview
     *   }
     * })
     * 
     */
    delete<T extends ClientReviewDeleteArgs>(args: SelectSubset<T, ClientReviewDeleteArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ClientReview.
     * @param {ClientReviewUpdateArgs} args - Arguments to update one ClientReview.
     * @example
     * // Update one ClientReview
     * const clientReview = await prisma.clientReview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClientReviewUpdateArgs>(args: SelectSubset<T, ClientReviewUpdateArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ClientReviews.
     * @param {ClientReviewDeleteManyArgs} args - Arguments to filter ClientReviews to delete.
     * @example
     * // Delete a few ClientReviews
     * const { count } = await prisma.clientReview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClientReviewDeleteManyArgs>(args?: SelectSubset<T, ClientReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClientReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClientReviews
     * const clientReview = await prisma.clientReview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClientReviewUpdateManyArgs>(args: SelectSubset<T, ClientReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ClientReview.
     * @param {ClientReviewUpsertArgs} args - Arguments to update or create a ClientReview.
     * @example
     * // Update or create a ClientReview
     * const clientReview = await prisma.clientReview.upsert({
     *   create: {
     *     // ... data to create a ClientReview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClientReview we want to update
     *   }
     * })
     */
    upsert<T extends ClientReviewUpsertArgs>(args: SelectSubset<T, ClientReviewUpsertArgs<ExtArgs>>): Prisma__ClientReviewClient<$Result.GetResult<Prisma.$ClientReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ClientReviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewCountArgs} args - Arguments to filter ClientReviews to count.
     * @example
     * // Count the number of ClientReviews
     * const count = await prisma.clientReview.count({
     *   where: {
     *     // ... the filter for the ClientReviews we want to count
     *   }
     * })
    **/
    count<T extends ClientReviewCountArgs>(
      args?: Subset<T, ClientReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClientReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientReviewAggregateArgs>(args: Subset<T, ClientReviewAggregateArgs>): Prisma.PrismaPromise<GetClientReviewAggregateType<T>>

    /**
     * Group by ClientReview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClientReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClientReviewGroupByArgs['orderBy'] }
        : { orderBy?: ClientReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClientReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClientReview model
   */
  readonly fields: ClientReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClientReview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClientReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends ClientDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ClientDefaultArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    escort<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClientReview model
   */ 
  interface ClientReviewFieldRefs {
    readonly id: FieldRef<"ClientReview", 'String'>
    readonly rating: FieldRef<"ClientReview", 'Int'>
    readonly comment: FieldRef<"ClientReview", 'String'>
    readonly communication: FieldRef<"ClientReview", 'Int'>
    readonly punctuality: FieldRef<"ClientReview", 'Int'>
    readonly appearance: FieldRef<"ClientReview", 'Int'>
    readonly overall: FieldRef<"ClientReview", 'Int'>
    readonly service: FieldRef<"ClientReview", 'Int'>
    readonly value: FieldRef<"ClientReview", 'Int'>
    readonly isAnonymous: FieldRef<"ClientReview", 'Boolean'>
    readonly isVerified: FieldRef<"ClientReview", 'Boolean'>
    readonly clientId: FieldRef<"ClientReview", 'String'>
    readonly escortId: FieldRef<"ClientReview", 'String'>
    readonly createdAt: FieldRef<"ClientReview", 'DateTime'>
    readonly updatedAt: FieldRef<"ClientReview", 'DateTime'>
    readonly deletedAt: FieldRef<"ClientReview", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClientReview findUnique
   */
  export type ClientReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter, which ClientReview to fetch.
     */
    where: ClientReviewWhereUniqueInput
  }

  /**
   * ClientReview findUniqueOrThrow
   */
  export type ClientReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter, which ClientReview to fetch.
     */
    where: ClientReviewWhereUniqueInput
  }

  /**
   * ClientReview findFirst
   */
  export type ClientReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter, which ClientReview to fetch.
     */
    where?: ClientReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientReviews to fetch.
     */
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientReviews.
     */
    cursor?: ClientReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientReviews.
     */
    distinct?: ClientReviewScalarFieldEnum | ClientReviewScalarFieldEnum[]
  }

  /**
   * ClientReview findFirstOrThrow
   */
  export type ClientReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter, which ClientReview to fetch.
     */
    where?: ClientReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientReviews to fetch.
     */
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClientReviews.
     */
    cursor?: ClientReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientReviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClientReviews.
     */
    distinct?: ClientReviewScalarFieldEnum | ClientReviewScalarFieldEnum[]
  }

  /**
   * ClientReview findMany
   */
  export type ClientReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter, which ClientReviews to fetch.
     */
    where?: ClientReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClientReviews to fetch.
     */
    orderBy?: ClientReviewOrderByWithRelationInput | ClientReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClientReviews.
     */
    cursor?: ClientReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClientReviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClientReviews.
     */
    skip?: number
    distinct?: ClientReviewScalarFieldEnum | ClientReviewScalarFieldEnum[]
  }

  /**
   * ClientReview create
   */
  export type ClientReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a ClientReview.
     */
    data: XOR<ClientReviewCreateInput, ClientReviewUncheckedCreateInput>
  }

  /**
   * ClientReview createMany
   */
  export type ClientReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClientReviews.
     */
    data: ClientReviewCreateManyInput | ClientReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClientReview createManyAndReturn
   */
  export type ClientReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ClientReviews.
     */
    data: ClientReviewCreateManyInput | ClientReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ClientReview update
   */
  export type ClientReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a ClientReview.
     */
    data: XOR<ClientReviewUpdateInput, ClientReviewUncheckedUpdateInput>
    /**
     * Choose, which ClientReview to update.
     */
    where: ClientReviewWhereUniqueInput
  }

  /**
   * ClientReview updateMany
   */
  export type ClientReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClientReviews.
     */
    data: XOR<ClientReviewUpdateManyMutationInput, ClientReviewUncheckedUpdateManyInput>
    /**
     * Filter which ClientReviews to update
     */
    where?: ClientReviewWhereInput
  }

  /**
   * ClientReview upsert
   */
  export type ClientReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the ClientReview to update in case it exists.
     */
    where: ClientReviewWhereUniqueInput
    /**
     * In case the ClientReview found by the `where` argument doesn't exist, create a new ClientReview with this data.
     */
    create: XOR<ClientReviewCreateInput, ClientReviewUncheckedCreateInput>
    /**
     * In case the ClientReview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClientReviewUpdateInput, ClientReviewUncheckedUpdateInput>
  }

  /**
   * ClientReview delete
   */
  export type ClientReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
    /**
     * Filter which ClientReview to delete.
     */
    where: ClientReviewWhereUniqueInput
  }

  /**
   * ClientReview deleteMany
   */
  export type ClientReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClientReviews to delete
     */
    where?: ClientReviewWhereInput
  }

  /**
   * ClientReview without action
   */
  export type ClientReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientReview
     */
    select?: ClientReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientReviewInclude<ExtArgs> | null
  }


  /**
   * Model Ban
   */

  export type AggregateBan = {
    _count: BanCountAggregateOutputType | null
    _min: BanMinAggregateOutputType | null
    _max: BanMaxAggregateOutputType | null
  }

  export type BanMinAggregateOutputType = {
    id: string | null
    userId: string | null
    reason: string | null
    bannedBy: string | null
    adminId: string | null
    isActive: boolean | null
    expiresAt: Date | null
    severity: $Enums.BanSeverity | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BanMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    reason: string | null
    bannedBy: string | null
    adminId: string | null
    isActive: boolean | null
    expiresAt: Date | null
    severity: $Enums.BanSeverity | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BanCountAggregateOutputType = {
    id: number
    userId: number
    reason: number
    bannedBy: number
    adminId: number
    isActive: number
    expiresAt: number
    severity: number
    evidence: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BanMinAggregateInputType = {
    id?: true
    userId?: true
    reason?: true
    bannedBy?: true
    adminId?: true
    isActive?: true
    expiresAt?: true
    severity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BanMaxAggregateInputType = {
    id?: true
    userId?: true
    reason?: true
    bannedBy?: true
    adminId?: true
    isActive?: true
    expiresAt?: true
    severity?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BanCountAggregateInputType = {
    id?: true
    userId?: true
    reason?: true
    bannedBy?: true
    adminId?: true
    isActive?: true
    expiresAt?: true
    severity?: true
    evidence?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ban to aggregate.
     */
    where?: BanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bans to fetch.
     */
    orderBy?: BanOrderByWithRelationInput | BanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bans
    **/
    _count?: true | BanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BanMaxAggregateInputType
  }

  export type GetBanAggregateType<T extends BanAggregateArgs> = {
        [P in keyof T & keyof AggregateBan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBan[P]>
      : GetScalarType<T[P], AggregateBan[P]>
  }




  export type BanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BanWhereInput
    orderBy?: BanOrderByWithAggregationInput | BanOrderByWithAggregationInput[]
    by: BanScalarFieldEnum[] | BanScalarFieldEnum
    having?: BanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BanCountAggregateInputType | true
    _min?: BanMinAggregateInputType
    _max?: BanMaxAggregateInputType
  }

  export type BanGroupByOutputType = {
    id: string
    userId: string
    reason: string
    bannedBy: string
    adminId: string | null
    isActive: boolean
    expiresAt: Date | null
    severity: $Enums.BanSeverity
    evidence: JsonValue | null
    createdAt: Date
    updatedAt: Date
    _count: BanCountAggregateOutputType | null
    _min: BanMinAggregateOutputType | null
    _max: BanMaxAggregateOutputType | null
  }

  type GetBanGroupByPayload<T extends BanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BanGroupByOutputType[P]>
            : GetScalarType<T[P], BanGroupByOutputType[P]>
        }
      >
    >


  export type BanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    reason?: boolean
    bannedBy?: boolean
    adminId?: boolean
    isActive?: boolean
    expiresAt?: boolean
    severity?: boolean
    evidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    appeals?: boolean | Ban$appealsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | BanCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ban"]>

  export type BanSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    reason?: boolean
    bannedBy?: boolean
    adminId?: boolean
    isActive?: boolean
    expiresAt?: boolean
    severity?: boolean
    evidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ban"]>

  export type BanSelectScalar = {
    id?: boolean
    userId?: boolean
    reason?: boolean
    bannedBy?: boolean
    adminId?: boolean
    isActive?: boolean
    expiresAt?: boolean
    severity?: boolean
    evidence?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BanInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    appeals?: boolean | Ban$appealsArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | BanCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BanIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ban"
    objects: {
      appeals: Prisma.$BanAppealPayload<ExtArgs>[]
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      reason: string
      bannedBy: string
      adminId: string | null
      isActive: boolean
      expiresAt: Date | null
      severity: $Enums.BanSeverity
      evidence: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["ban"]>
    composites: {}
  }

  type BanGetPayload<S extends boolean | null | undefined | BanDefaultArgs> = $Result.GetResult<Prisma.$BanPayload, S>

  type BanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BanCountAggregateInputType | true
    }

  export interface BanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ban'], meta: { name: 'Ban' } }
    /**
     * Find zero or one Ban that matches the filter.
     * @param {BanFindUniqueArgs} args - Arguments to find a Ban
     * @example
     * // Get one Ban
     * const ban = await prisma.ban.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BanFindUniqueArgs>(args: SelectSubset<T, BanFindUniqueArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Ban that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BanFindUniqueOrThrowArgs} args - Arguments to find a Ban
     * @example
     * // Get one Ban
     * const ban = await prisma.ban.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BanFindUniqueOrThrowArgs>(args: SelectSubset<T, BanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Ban that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanFindFirstArgs} args - Arguments to find a Ban
     * @example
     * // Get one Ban
     * const ban = await prisma.ban.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BanFindFirstArgs>(args?: SelectSubset<T, BanFindFirstArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Ban that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanFindFirstOrThrowArgs} args - Arguments to find a Ban
     * @example
     * // Get one Ban
     * const ban = await prisma.ban.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BanFindFirstOrThrowArgs>(args?: SelectSubset<T, BanFindFirstOrThrowArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Bans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bans
     * const bans = await prisma.ban.findMany()
     * 
     * // Get first 10 Bans
     * const bans = await prisma.ban.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const banWithIdOnly = await prisma.ban.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BanFindManyArgs>(args?: SelectSubset<T, BanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Ban.
     * @param {BanCreateArgs} args - Arguments to create a Ban.
     * @example
     * // Create one Ban
     * const Ban = await prisma.ban.create({
     *   data: {
     *     // ... data to create a Ban
     *   }
     * })
     * 
     */
    create<T extends BanCreateArgs>(args: SelectSubset<T, BanCreateArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Bans.
     * @param {BanCreateManyArgs} args - Arguments to create many Bans.
     * @example
     * // Create many Bans
     * const ban = await prisma.ban.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BanCreateManyArgs>(args?: SelectSubset<T, BanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bans and returns the data saved in the database.
     * @param {BanCreateManyAndReturnArgs} args - Arguments to create many Bans.
     * @example
     * // Create many Bans
     * const ban = await prisma.ban.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bans and only return the `id`
     * const banWithIdOnly = await prisma.ban.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BanCreateManyAndReturnArgs>(args?: SelectSubset<T, BanCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Ban.
     * @param {BanDeleteArgs} args - Arguments to delete one Ban.
     * @example
     * // Delete one Ban
     * const Ban = await prisma.ban.delete({
     *   where: {
     *     // ... filter to delete one Ban
     *   }
     * })
     * 
     */
    delete<T extends BanDeleteArgs>(args: SelectSubset<T, BanDeleteArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Ban.
     * @param {BanUpdateArgs} args - Arguments to update one Ban.
     * @example
     * // Update one Ban
     * const ban = await prisma.ban.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BanUpdateArgs>(args: SelectSubset<T, BanUpdateArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Bans.
     * @param {BanDeleteManyArgs} args - Arguments to filter Bans to delete.
     * @example
     * // Delete a few Bans
     * const { count } = await prisma.ban.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BanDeleteManyArgs>(args?: SelectSubset<T, BanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bans
     * const ban = await prisma.ban.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BanUpdateManyArgs>(args: SelectSubset<T, BanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ban.
     * @param {BanUpsertArgs} args - Arguments to update or create a Ban.
     * @example
     * // Update or create a Ban
     * const ban = await prisma.ban.upsert({
     *   create: {
     *     // ... data to create a Ban
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ban we want to update
     *   }
     * })
     */
    upsert<T extends BanUpsertArgs>(args: SelectSubset<T, BanUpsertArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Bans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanCountArgs} args - Arguments to filter Bans to count.
     * @example
     * // Count the number of Bans
     * const count = await prisma.ban.count({
     *   where: {
     *     // ... the filter for the Bans we want to count
     *   }
     * })
    **/
    count<T extends BanCountArgs>(
      args?: Subset<T, BanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ban.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BanAggregateArgs>(args: Subset<T, BanAggregateArgs>): Prisma.PrismaPromise<GetBanAggregateType<T>>

    /**
     * Group by Ban.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BanGroupByArgs['orderBy'] }
        : { orderBy?: BanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ban model
   */
  readonly fields: BanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ban.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    appeals<T extends Ban$appealsArgs<ExtArgs> = {}>(args?: Subset<T, Ban$appealsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findMany"> | Null>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ban model
   */ 
  interface BanFieldRefs {
    readonly id: FieldRef<"Ban", 'String'>
    readonly userId: FieldRef<"Ban", 'String'>
    readonly reason: FieldRef<"Ban", 'String'>
    readonly bannedBy: FieldRef<"Ban", 'String'>
    readonly adminId: FieldRef<"Ban", 'String'>
    readonly isActive: FieldRef<"Ban", 'Boolean'>
    readonly expiresAt: FieldRef<"Ban", 'DateTime'>
    readonly severity: FieldRef<"Ban", 'BanSeverity'>
    readonly evidence: FieldRef<"Ban", 'Json'>
    readonly createdAt: FieldRef<"Ban", 'DateTime'>
    readonly updatedAt: FieldRef<"Ban", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Ban findUnique
   */
  export type BanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter, which Ban to fetch.
     */
    where: BanWhereUniqueInput
  }

  /**
   * Ban findUniqueOrThrow
   */
  export type BanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter, which Ban to fetch.
     */
    where: BanWhereUniqueInput
  }

  /**
   * Ban findFirst
   */
  export type BanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter, which Ban to fetch.
     */
    where?: BanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bans to fetch.
     */
    orderBy?: BanOrderByWithRelationInput | BanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bans.
     */
    cursor?: BanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bans.
     */
    distinct?: BanScalarFieldEnum | BanScalarFieldEnum[]
  }

  /**
   * Ban findFirstOrThrow
   */
  export type BanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter, which Ban to fetch.
     */
    where?: BanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bans to fetch.
     */
    orderBy?: BanOrderByWithRelationInput | BanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bans.
     */
    cursor?: BanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bans.
     */
    distinct?: BanScalarFieldEnum | BanScalarFieldEnum[]
  }

  /**
   * Ban findMany
   */
  export type BanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter, which Bans to fetch.
     */
    where?: BanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bans to fetch.
     */
    orderBy?: BanOrderByWithRelationInput | BanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bans.
     */
    cursor?: BanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bans.
     */
    skip?: number
    distinct?: BanScalarFieldEnum | BanScalarFieldEnum[]
  }

  /**
   * Ban create
   */
  export type BanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * The data needed to create a Ban.
     */
    data: XOR<BanCreateInput, BanUncheckedCreateInput>
  }

  /**
   * Ban createMany
   */
  export type BanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bans.
     */
    data: BanCreateManyInput | BanCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ban createManyAndReturn
   */
  export type BanCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Bans.
     */
    data: BanCreateManyInput | BanCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Ban update
   */
  export type BanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * The data needed to update a Ban.
     */
    data: XOR<BanUpdateInput, BanUncheckedUpdateInput>
    /**
     * Choose, which Ban to update.
     */
    where: BanWhereUniqueInput
  }

  /**
   * Ban updateMany
   */
  export type BanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bans.
     */
    data: XOR<BanUpdateManyMutationInput, BanUncheckedUpdateManyInput>
    /**
     * Filter which Bans to update
     */
    where?: BanWhereInput
  }

  /**
   * Ban upsert
   */
  export type BanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * The filter to search for the Ban to update in case it exists.
     */
    where: BanWhereUniqueInput
    /**
     * In case the Ban found by the `where` argument doesn't exist, create a new Ban with this data.
     */
    create: XOR<BanCreateInput, BanUncheckedCreateInput>
    /**
     * In case the Ban was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BanUpdateInput, BanUncheckedUpdateInput>
  }

  /**
   * Ban delete
   */
  export type BanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
    /**
     * Filter which Ban to delete.
     */
    where: BanWhereUniqueInput
  }

  /**
   * Ban deleteMany
   */
  export type BanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bans to delete
     */
    where?: BanWhereInput
  }

  /**
   * Ban.appeals
   */
  export type Ban$appealsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    where?: BanAppealWhereInput
    orderBy?: BanAppealOrderByWithRelationInput | BanAppealOrderByWithRelationInput[]
    cursor?: BanAppealWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BanAppealScalarFieldEnum | BanAppealScalarFieldEnum[]
  }

  /**
   * Ban without action
   */
  export type BanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ban
     */
    select?: BanSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanInclude<ExtArgs> | null
  }


  /**
   * Model BanAppeal
   */

  export type AggregateBanAppeal = {
    _count: BanAppealCountAggregateOutputType | null
    _min: BanAppealMinAggregateOutputType | null
    _max: BanAppealMaxAggregateOutputType | null
  }

  export type BanAppealMinAggregateOutputType = {
    id: string | null
    banId: string | null
    reason: string | null
    status: $Enums.AppealStatus | null
    reviewedBy: string | null
    reviewNotes: string | null
    createdAt: Date | null
    reviewedAt: Date | null
  }

  export type BanAppealMaxAggregateOutputType = {
    id: string | null
    banId: string | null
    reason: string | null
    status: $Enums.AppealStatus | null
    reviewedBy: string | null
    reviewNotes: string | null
    createdAt: Date | null
    reviewedAt: Date | null
  }

  export type BanAppealCountAggregateOutputType = {
    id: number
    banId: number
    reason: number
    evidence: number
    status: number
    reviewedBy: number
    reviewNotes: number
    createdAt: number
    reviewedAt: number
    _all: number
  }


  export type BanAppealMinAggregateInputType = {
    id?: true
    banId?: true
    reason?: true
    status?: true
    reviewedBy?: true
    reviewNotes?: true
    createdAt?: true
    reviewedAt?: true
  }

  export type BanAppealMaxAggregateInputType = {
    id?: true
    banId?: true
    reason?: true
    status?: true
    reviewedBy?: true
    reviewNotes?: true
    createdAt?: true
    reviewedAt?: true
  }

  export type BanAppealCountAggregateInputType = {
    id?: true
    banId?: true
    reason?: true
    evidence?: true
    status?: true
    reviewedBy?: true
    reviewNotes?: true
    createdAt?: true
    reviewedAt?: true
    _all?: true
  }

  export type BanAppealAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BanAppeal to aggregate.
     */
    where?: BanAppealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BanAppeals to fetch.
     */
    orderBy?: BanAppealOrderByWithRelationInput | BanAppealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BanAppealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BanAppeals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BanAppeals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BanAppeals
    **/
    _count?: true | BanAppealCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BanAppealMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BanAppealMaxAggregateInputType
  }

  export type GetBanAppealAggregateType<T extends BanAppealAggregateArgs> = {
        [P in keyof T & keyof AggregateBanAppeal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBanAppeal[P]>
      : GetScalarType<T[P], AggregateBanAppeal[P]>
  }




  export type BanAppealGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BanAppealWhereInput
    orderBy?: BanAppealOrderByWithAggregationInput | BanAppealOrderByWithAggregationInput[]
    by: BanAppealScalarFieldEnum[] | BanAppealScalarFieldEnum
    having?: BanAppealScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BanAppealCountAggregateInputType | true
    _min?: BanAppealMinAggregateInputType
    _max?: BanAppealMaxAggregateInputType
  }

  export type BanAppealGroupByOutputType = {
    id: string
    banId: string
    reason: string
    evidence: JsonValue | null
    status: $Enums.AppealStatus
    reviewedBy: string | null
    reviewNotes: string | null
    createdAt: Date
    reviewedAt: Date | null
    _count: BanAppealCountAggregateOutputType | null
    _min: BanAppealMinAggregateOutputType | null
    _max: BanAppealMaxAggregateOutputType | null
  }

  type GetBanAppealGroupByPayload<T extends BanAppealGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BanAppealGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BanAppealGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BanAppealGroupByOutputType[P]>
            : GetScalarType<T[P], BanAppealGroupByOutputType[P]>
        }
      >
    >


  export type BanAppealSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    banId?: boolean
    reason?: boolean
    evidence?: boolean
    status?: boolean
    reviewedBy?: boolean
    reviewNotes?: boolean
    createdAt?: boolean
    reviewedAt?: boolean
    ban?: boolean | BanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["banAppeal"]>

  export type BanAppealSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    banId?: boolean
    reason?: boolean
    evidence?: boolean
    status?: boolean
    reviewedBy?: boolean
    reviewNotes?: boolean
    createdAt?: boolean
    reviewedAt?: boolean
    ban?: boolean | BanDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["banAppeal"]>

  export type BanAppealSelectScalar = {
    id?: boolean
    banId?: boolean
    reason?: boolean
    evidence?: boolean
    status?: boolean
    reviewedBy?: boolean
    reviewNotes?: boolean
    createdAt?: boolean
    reviewedAt?: boolean
  }

  export type BanAppealInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ban?: boolean | BanDefaultArgs<ExtArgs>
  }
  export type BanAppealIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ban?: boolean | BanDefaultArgs<ExtArgs>
  }

  export type $BanAppealPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BanAppeal"
    objects: {
      ban: Prisma.$BanPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      banId: string
      reason: string
      evidence: Prisma.JsonValue | null
      status: $Enums.AppealStatus
      reviewedBy: string | null
      reviewNotes: string | null
      createdAt: Date
      reviewedAt: Date | null
    }, ExtArgs["result"]["banAppeal"]>
    composites: {}
  }

  type BanAppealGetPayload<S extends boolean | null | undefined | BanAppealDefaultArgs> = $Result.GetResult<Prisma.$BanAppealPayload, S>

  type BanAppealCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BanAppealFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BanAppealCountAggregateInputType | true
    }

  export interface BanAppealDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BanAppeal'], meta: { name: 'BanAppeal' } }
    /**
     * Find zero or one BanAppeal that matches the filter.
     * @param {BanAppealFindUniqueArgs} args - Arguments to find a BanAppeal
     * @example
     * // Get one BanAppeal
     * const banAppeal = await prisma.banAppeal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BanAppealFindUniqueArgs>(args: SelectSubset<T, BanAppealFindUniqueArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BanAppeal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BanAppealFindUniqueOrThrowArgs} args - Arguments to find a BanAppeal
     * @example
     * // Get one BanAppeal
     * const banAppeal = await prisma.banAppeal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BanAppealFindUniqueOrThrowArgs>(args: SelectSubset<T, BanAppealFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BanAppeal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealFindFirstArgs} args - Arguments to find a BanAppeal
     * @example
     * // Get one BanAppeal
     * const banAppeal = await prisma.banAppeal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BanAppealFindFirstArgs>(args?: SelectSubset<T, BanAppealFindFirstArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BanAppeal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealFindFirstOrThrowArgs} args - Arguments to find a BanAppeal
     * @example
     * // Get one BanAppeal
     * const banAppeal = await prisma.banAppeal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BanAppealFindFirstOrThrowArgs>(args?: SelectSubset<T, BanAppealFindFirstOrThrowArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BanAppeals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BanAppeals
     * const banAppeals = await prisma.banAppeal.findMany()
     * 
     * // Get first 10 BanAppeals
     * const banAppeals = await prisma.banAppeal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const banAppealWithIdOnly = await prisma.banAppeal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BanAppealFindManyArgs>(args?: SelectSubset<T, BanAppealFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BanAppeal.
     * @param {BanAppealCreateArgs} args - Arguments to create a BanAppeal.
     * @example
     * // Create one BanAppeal
     * const BanAppeal = await prisma.banAppeal.create({
     *   data: {
     *     // ... data to create a BanAppeal
     *   }
     * })
     * 
     */
    create<T extends BanAppealCreateArgs>(args: SelectSubset<T, BanAppealCreateArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BanAppeals.
     * @param {BanAppealCreateManyArgs} args - Arguments to create many BanAppeals.
     * @example
     * // Create many BanAppeals
     * const banAppeal = await prisma.banAppeal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BanAppealCreateManyArgs>(args?: SelectSubset<T, BanAppealCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BanAppeals and returns the data saved in the database.
     * @param {BanAppealCreateManyAndReturnArgs} args - Arguments to create many BanAppeals.
     * @example
     * // Create many BanAppeals
     * const banAppeal = await prisma.banAppeal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BanAppeals and only return the `id`
     * const banAppealWithIdOnly = await prisma.banAppeal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BanAppealCreateManyAndReturnArgs>(args?: SelectSubset<T, BanAppealCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BanAppeal.
     * @param {BanAppealDeleteArgs} args - Arguments to delete one BanAppeal.
     * @example
     * // Delete one BanAppeal
     * const BanAppeal = await prisma.banAppeal.delete({
     *   where: {
     *     // ... filter to delete one BanAppeal
     *   }
     * })
     * 
     */
    delete<T extends BanAppealDeleteArgs>(args: SelectSubset<T, BanAppealDeleteArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BanAppeal.
     * @param {BanAppealUpdateArgs} args - Arguments to update one BanAppeal.
     * @example
     * // Update one BanAppeal
     * const banAppeal = await prisma.banAppeal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BanAppealUpdateArgs>(args: SelectSubset<T, BanAppealUpdateArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BanAppeals.
     * @param {BanAppealDeleteManyArgs} args - Arguments to filter BanAppeals to delete.
     * @example
     * // Delete a few BanAppeals
     * const { count } = await prisma.banAppeal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BanAppealDeleteManyArgs>(args?: SelectSubset<T, BanAppealDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BanAppeals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BanAppeals
     * const banAppeal = await prisma.banAppeal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BanAppealUpdateManyArgs>(args: SelectSubset<T, BanAppealUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BanAppeal.
     * @param {BanAppealUpsertArgs} args - Arguments to update or create a BanAppeal.
     * @example
     * // Update or create a BanAppeal
     * const banAppeal = await prisma.banAppeal.upsert({
     *   create: {
     *     // ... data to create a BanAppeal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BanAppeal we want to update
     *   }
     * })
     */
    upsert<T extends BanAppealUpsertArgs>(args: SelectSubset<T, BanAppealUpsertArgs<ExtArgs>>): Prisma__BanAppealClient<$Result.GetResult<Prisma.$BanAppealPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BanAppeals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealCountArgs} args - Arguments to filter BanAppeals to count.
     * @example
     * // Count the number of BanAppeals
     * const count = await prisma.banAppeal.count({
     *   where: {
     *     // ... the filter for the BanAppeals we want to count
     *   }
     * })
    **/
    count<T extends BanAppealCountArgs>(
      args?: Subset<T, BanAppealCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BanAppealCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BanAppeal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BanAppealAggregateArgs>(args: Subset<T, BanAppealAggregateArgs>): Prisma.PrismaPromise<GetBanAppealAggregateType<T>>

    /**
     * Group by BanAppeal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BanAppealGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BanAppealGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BanAppealGroupByArgs['orderBy'] }
        : { orderBy?: BanAppealGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BanAppealGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBanAppealGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BanAppeal model
   */
  readonly fields: BanAppealFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BanAppeal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BanAppealClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ban<T extends BanDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BanDefaultArgs<ExtArgs>>): Prisma__BanClient<$Result.GetResult<Prisma.$BanPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BanAppeal model
   */ 
  interface BanAppealFieldRefs {
    readonly id: FieldRef<"BanAppeal", 'String'>
    readonly banId: FieldRef<"BanAppeal", 'String'>
    readonly reason: FieldRef<"BanAppeal", 'String'>
    readonly evidence: FieldRef<"BanAppeal", 'Json'>
    readonly status: FieldRef<"BanAppeal", 'AppealStatus'>
    readonly reviewedBy: FieldRef<"BanAppeal", 'String'>
    readonly reviewNotes: FieldRef<"BanAppeal", 'String'>
    readonly createdAt: FieldRef<"BanAppeal", 'DateTime'>
    readonly reviewedAt: FieldRef<"BanAppeal", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BanAppeal findUnique
   */
  export type BanAppealFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter, which BanAppeal to fetch.
     */
    where: BanAppealWhereUniqueInput
  }

  /**
   * BanAppeal findUniqueOrThrow
   */
  export type BanAppealFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter, which BanAppeal to fetch.
     */
    where: BanAppealWhereUniqueInput
  }

  /**
   * BanAppeal findFirst
   */
  export type BanAppealFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter, which BanAppeal to fetch.
     */
    where?: BanAppealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BanAppeals to fetch.
     */
    orderBy?: BanAppealOrderByWithRelationInput | BanAppealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BanAppeals.
     */
    cursor?: BanAppealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BanAppeals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BanAppeals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BanAppeals.
     */
    distinct?: BanAppealScalarFieldEnum | BanAppealScalarFieldEnum[]
  }

  /**
   * BanAppeal findFirstOrThrow
   */
  export type BanAppealFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter, which BanAppeal to fetch.
     */
    where?: BanAppealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BanAppeals to fetch.
     */
    orderBy?: BanAppealOrderByWithRelationInput | BanAppealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BanAppeals.
     */
    cursor?: BanAppealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BanAppeals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BanAppeals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BanAppeals.
     */
    distinct?: BanAppealScalarFieldEnum | BanAppealScalarFieldEnum[]
  }

  /**
   * BanAppeal findMany
   */
  export type BanAppealFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter, which BanAppeals to fetch.
     */
    where?: BanAppealWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BanAppeals to fetch.
     */
    orderBy?: BanAppealOrderByWithRelationInput | BanAppealOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BanAppeals.
     */
    cursor?: BanAppealWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BanAppeals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BanAppeals.
     */
    skip?: number
    distinct?: BanAppealScalarFieldEnum | BanAppealScalarFieldEnum[]
  }

  /**
   * BanAppeal create
   */
  export type BanAppealCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * The data needed to create a BanAppeal.
     */
    data: XOR<BanAppealCreateInput, BanAppealUncheckedCreateInput>
  }

  /**
   * BanAppeal createMany
   */
  export type BanAppealCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BanAppeals.
     */
    data: BanAppealCreateManyInput | BanAppealCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BanAppeal createManyAndReturn
   */
  export type BanAppealCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BanAppeals.
     */
    data: BanAppealCreateManyInput | BanAppealCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BanAppeal update
   */
  export type BanAppealUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * The data needed to update a BanAppeal.
     */
    data: XOR<BanAppealUpdateInput, BanAppealUncheckedUpdateInput>
    /**
     * Choose, which BanAppeal to update.
     */
    where: BanAppealWhereUniqueInput
  }

  /**
   * BanAppeal updateMany
   */
  export type BanAppealUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BanAppeals.
     */
    data: XOR<BanAppealUpdateManyMutationInput, BanAppealUncheckedUpdateManyInput>
    /**
     * Filter which BanAppeals to update
     */
    where?: BanAppealWhereInput
  }

  /**
   * BanAppeal upsert
   */
  export type BanAppealUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * The filter to search for the BanAppeal to update in case it exists.
     */
    where: BanAppealWhereUniqueInput
    /**
     * In case the BanAppeal found by the `where` argument doesn't exist, create a new BanAppeal with this data.
     */
    create: XOR<BanAppealCreateInput, BanAppealUncheckedCreateInput>
    /**
     * In case the BanAppeal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BanAppealUpdateInput, BanAppealUncheckedUpdateInput>
  }

  /**
   * BanAppeal delete
   */
  export type BanAppealDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
    /**
     * Filter which BanAppeal to delete.
     */
    where: BanAppealWhereUniqueInput
  }

  /**
   * BanAppeal deleteMany
   */
  export type BanAppealDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BanAppeals to delete
     */
    where?: BanAppealWhereInput
  }

  /**
   * BanAppeal without action
   */
  export type BanAppealDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BanAppeal
     */
    select?: BanAppealSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BanAppealInclude<ExtArgs> | null
  }


  /**
   * Model UserInteraction
   */

  export type AggregateUserInteraction = {
    _count: UserInteractionCountAggregateOutputType | null
    _avg: UserInteractionAvgAggregateOutputType | null
    _sum: UserInteractionSumAggregateOutputType | null
    _min: UserInteractionMinAggregateOutputType | null
    _max: UserInteractionMaxAggregateOutputType | null
  }

  export type UserInteractionAvgAggregateOutputType = {
    weight: number | null
    duration: number | null
  }

  export type UserInteractionSumAggregateOutputType = {
    weight: number | null
    duration: number | null
  }

  export type UserInteractionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    targetUserId: string | null
    postId: string | null
    type: $Enums.InteractionType | null
    weight: number | null
    duration: number | null
    whatsappOpened: boolean | null
    deviceType: string | null
    source: string | null
    location: string | null
    sessionId: string | null
    userAgent: string | null
    metadata: string | null
    createdAt: Date | null
  }

  export type UserInteractionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    targetUserId: string | null
    postId: string | null
    type: $Enums.InteractionType | null
    weight: number | null
    duration: number | null
    whatsappOpened: boolean | null
    deviceType: string | null
    source: string | null
    location: string | null
    sessionId: string | null
    userAgent: string | null
    metadata: string | null
    createdAt: Date | null
  }

  export type UserInteractionCountAggregateOutputType = {
    id: number
    userId: number
    targetUserId: number
    postId: number
    type: number
    weight: number
    duration: number
    whatsappOpened: number
    deviceType: number
    source: number
    location: number
    sessionId: number
    userAgent: number
    metadata: number
    createdAt: number
    _all: number
  }


  export type UserInteractionAvgAggregateInputType = {
    weight?: true
    duration?: true
  }

  export type UserInteractionSumAggregateInputType = {
    weight?: true
    duration?: true
  }

  export type UserInteractionMinAggregateInputType = {
    id?: true
    userId?: true
    targetUserId?: true
    postId?: true
    type?: true
    weight?: true
    duration?: true
    whatsappOpened?: true
    deviceType?: true
    source?: true
    location?: true
    sessionId?: true
    userAgent?: true
    metadata?: true
    createdAt?: true
  }

  export type UserInteractionMaxAggregateInputType = {
    id?: true
    userId?: true
    targetUserId?: true
    postId?: true
    type?: true
    weight?: true
    duration?: true
    whatsappOpened?: true
    deviceType?: true
    source?: true
    location?: true
    sessionId?: true
    userAgent?: true
    metadata?: true
    createdAt?: true
  }

  export type UserInteractionCountAggregateInputType = {
    id?: true
    userId?: true
    targetUserId?: true
    postId?: true
    type?: true
    weight?: true
    duration?: true
    whatsappOpened?: true
    deviceType?: true
    source?: true
    location?: true
    sessionId?: true
    userAgent?: true
    metadata?: true
    createdAt?: true
    _all?: true
  }

  export type UserInteractionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserInteraction to aggregate.
     */
    where?: UserInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInteractions to fetch.
     */
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserInteractions
    **/
    _count?: true | UserInteractionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserInteractionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserInteractionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserInteractionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserInteractionMaxAggregateInputType
  }

  export type GetUserInteractionAggregateType<T extends UserInteractionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserInteraction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserInteraction[P]>
      : GetScalarType<T[P], AggregateUserInteraction[P]>
  }




  export type UserInteractionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserInteractionWhereInput
    orderBy?: UserInteractionOrderByWithAggregationInput | UserInteractionOrderByWithAggregationInput[]
    by: UserInteractionScalarFieldEnum[] | UserInteractionScalarFieldEnum
    having?: UserInteractionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserInteractionCountAggregateInputType | true
    _avg?: UserInteractionAvgAggregateInputType
    _sum?: UserInteractionSumAggregateInputType
    _min?: UserInteractionMinAggregateInputType
    _max?: UserInteractionMaxAggregateInputType
  }

  export type UserInteractionGroupByOutputType = {
    id: string
    userId: string
    targetUserId: string | null
    postId: string | null
    type: $Enums.InteractionType
    weight: number
    duration: number | null
    whatsappOpened: boolean
    deviceType: string | null
    source: string | null
    location: string | null
    sessionId: string | null
    userAgent: string | null
    metadata: string | null
    createdAt: Date
    _count: UserInteractionCountAggregateOutputType | null
    _avg: UserInteractionAvgAggregateOutputType | null
    _sum: UserInteractionSumAggregateOutputType | null
    _min: UserInteractionMinAggregateOutputType | null
    _max: UserInteractionMaxAggregateOutputType | null
  }

  type GetUserInteractionGroupByPayload<T extends UserInteractionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserInteractionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserInteractionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserInteractionGroupByOutputType[P]>
            : GetScalarType<T[P], UserInteractionGroupByOutputType[P]>
        }
      >
    >


  export type UserInteractionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    targetUserId?: boolean
    postId?: boolean
    type?: boolean
    weight?: boolean
    duration?: boolean
    whatsappOpened?: boolean
    deviceType?: boolean
    source?: boolean
    location?: boolean
    sessionId?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
    post?: boolean | UserInteraction$postArgs<ExtArgs>
    targetUser?: boolean | UserInteraction$targetUserArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userInteraction"]>

  export type UserInteractionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    targetUserId?: boolean
    postId?: boolean
    type?: boolean
    weight?: boolean
    duration?: boolean
    whatsappOpened?: boolean
    deviceType?: boolean
    source?: boolean
    location?: boolean
    sessionId?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
    post?: boolean | UserInteraction$postArgs<ExtArgs>
    targetUser?: boolean | UserInteraction$targetUserArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userInteraction"]>

  export type UserInteractionSelectScalar = {
    id?: boolean
    userId?: boolean
    targetUserId?: boolean
    postId?: boolean
    type?: boolean
    weight?: boolean
    duration?: boolean
    whatsappOpened?: boolean
    deviceType?: boolean
    source?: boolean
    location?: boolean
    sessionId?: boolean
    userAgent?: boolean
    metadata?: boolean
    createdAt?: boolean
  }

  export type UserInteractionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | UserInteraction$postArgs<ExtArgs>
    targetUser?: boolean | UserInteraction$targetUserArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserInteractionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | UserInteraction$postArgs<ExtArgs>
    targetUser?: boolean | UserInteraction$targetUserArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserInteractionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserInteraction"
    objects: {
      post: Prisma.$PostPayload<ExtArgs> | null
      targetUser: Prisma.$UserPayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      targetUserId: string | null
      postId: string | null
      type: $Enums.InteractionType
      weight: number
      duration: number | null
      whatsappOpened: boolean
      deviceType: string | null
      source: string | null
      location: string | null
      sessionId: string | null
      userAgent: string | null
      metadata: string | null
      createdAt: Date
    }, ExtArgs["result"]["userInteraction"]>
    composites: {}
  }

  type UserInteractionGetPayload<S extends boolean | null | undefined | UserInteractionDefaultArgs> = $Result.GetResult<Prisma.$UserInteractionPayload, S>

  type UserInteractionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserInteractionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserInteractionCountAggregateInputType | true
    }

  export interface UserInteractionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserInteraction'], meta: { name: 'UserInteraction' } }
    /**
     * Find zero or one UserInteraction that matches the filter.
     * @param {UserInteractionFindUniqueArgs} args - Arguments to find a UserInteraction
     * @example
     * // Get one UserInteraction
     * const userInteraction = await prisma.userInteraction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserInteractionFindUniqueArgs>(args: SelectSubset<T, UserInteractionFindUniqueArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserInteraction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserInteractionFindUniqueOrThrowArgs} args - Arguments to find a UserInteraction
     * @example
     * // Get one UserInteraction
     * const userInteraction = await prisma.userInteraction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserInteractionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserInteractionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserInteraction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionFindFirstArgs} args - Arguments to find a UserInteraction
     * @example
     * // Get one UserInteraction
     * const userInteraction = await prisma.userInteraction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserInteractionFindFirstArgs>(args?: SelectSubset<T, UserInteractionFindFirstArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserInteraction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionFindFirstOrThrowArgs} args - Arguments to find a UserInteraction
     * @example
     * // Get one UserInteraction
     * const userInteraction = await prisma.userInteraction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserInteractionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserInteractionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserInteractions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserInteractions
     * const userInteractions = await prisma.userInteraction.findMany()
     * 
     * // Get first 10 UserInteractions
     * const userInteractions = await prisma.userInteraction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userInteractionWithIdOnly = await prisma.userInteraction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserInteractionFindManyArgs>(args?: SelectSubset<T, UserInteractionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserInteraction.
     * @param {UserInteractionCreateArgs} args - Arguments to create a UserInteraction.
     * @example
     * // Create one UserInteraction
     * const UserInteraction = await prisma.userInteraction.create({
     *   data: {
     *     // ... data to create a UserInteraction
     *   }
     * })
     * 
     */
    create<T extends UserInteractionCreateArgs>(args: SelectSubset<T, UserInteractionCreateArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserInteractions.
     * @param {UserInteractionCreateManyArgs} args - Arguments to create many UserInteractions.
     * @example
     * // Create many UserInteractions
     * const userInteraction = await prisma.userInteraction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserInteractionCreateManyArgs>(args?: SelectSubset<T, UserInteractionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserInteractions and returns the data saved in the database.
     * @param {UserInteractionCreateManyAndReturnArgs} args - Arguments to create many UserInteractions.
     * @example
     * // Create many UserInteractions
     * const userInteraction = await prisma.userInteraction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserInteractions and only return the `id`
     * const userInteractionWithIdOnly = await prisma.userInteraction.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserInteractionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserInteractionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserInteraction.
     * @param {UserInteractionDeleteArgs} args - Arguments to delete one UserInteraction.
     * @example
     * // Delete one UserInteraction
     * const UserInteraction = await prisma.userInteraction.delete({
     *   where: {
     *     // ... filter to delete one UserInteraction
     *   }
     * })
     * 
     */
    delete<T extends UserInteractionDeleteArgs>(args: SelectSubset<T, UserInteractionDeleteArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserInteraction.
     * @param {UserInteractionUpdateArgs} args - Arguments to update one UserInteraction.
     * @example
     * // Update one UserInteraction
     * const userInteraction = await prisma.userInteraction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserInteractionUpdateArgs>(args: SelectSubset<T, UserInteractionUpdateArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserInteractions.
     * @param {UserInteractionDeleteManyArgs} args - Arguments to filter UserInteractions to delete.
     * @example
     * // Delete a few UserInteractions
     * const { count } = await prisma.userInteraction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserInteractionDeleteManyArgs>(args?: SelectSubset<T, UserInteractionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserInteractions
     * const userInteraction = await prisma.userInteraction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserInteractionUpdateManyArgs>(args: SelectSubset<T, UserInteractionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserInteraction.
     * @param {UserInteractionUpsertArgs} args - Arguments to update or create a UserInteraction.
     * @example
     * // Update or create a UserInteraction
     * const userInteraction = await prisma.userInteraction.upsert({
     *   create: {
     *     // ... data to create a UserInteraction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserInteraction we want to update
     *   }
     * })
     */
    upsert<T extends UserInteractionUpsertArgs>(args: SelectSubset<T, UserInteractionUpsertArgs<ExtArgs>>): Prisma__UserInteractionClient<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserInteractions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionCountArgs} args - Arguments to filter UserInteractions to count.
     * @example
     * // Count the number of UserInteractions
     * const count = await prisma.userInteraction.count({
     *   where: {
     *     // ... the filter for the UserInteractions we want to count
     *   }
     * })
    **/
    count<T extends UserInteractionCountArgs>(
      args?: Subset<T, UserInteractionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserInteractionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserInteractionAggregateArgs>(args: Subset<T, UserInteractionAggregateArgs>): Prisma.PrismaPromise<GetUserInteractionAggregateType<T>>

    /**
     * Group by UserInteraction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserInteractionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserInteractionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserInteractionGroupByArgs['orderBy'] }
        : { orderBy?: UserInteractionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserInteractionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserInteractionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserInteraction model
   */
  readonly fields: UserInteractionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserInteraction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserInteractionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends UserInteraction$postArgs<ExtArgs> = {}>(args?: Subset<T, UserInteraction$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    targetUser<T extends UserInteraction$targetUserArgs<ExtArgs> = {}>(args?: Subset<T, UserInteraction$targetUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserInteraction model
   */ 
  interface UserInteractionFieldRefs {
    readonly id: FieldRef<"UserInteraction", 'String'>
    readonly userId: FieldRef<"UserInteraction", 'String'>
    readonly targetUserId: FieldRef<"UserInteraction", 'String'>
    readonly postId: FieldRef<"UserInteraction", 'String'>
    readonly type: FieldRef<"UserInteraction", 'InteractionType'>
    readonly weight: FieldRef<"UserInteraction", 'Float'>
    readonly duration: FieldRef<"UserInteraction", 'Int'>
    readonly whatsappOpened: FieldRef<"UserInteraction", 'Boolean'>
    readonly deviceType: FieldRef<"UserInteraction", 'String'>
    readonly source: FieldRef<"UserInteraction", 'String'>
    readonly location: FieldRef<"UserInteraction", 'String'>
    readonly sessionId: FieldRef<"UserInteraction", 'String'>
    readonly userAgent: FieldRef<"UserInteraction", 'String'>
    readonly metadata: FieldRef<"UserInteraction", 'String'>
    readonly createdAt: FieldRef<"UserInteraction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserInteraction findUnique
   */
  export type UserInteractionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter, which UserInteraction to fetch.
     */
    where: UserInteractionWhereUniqueInput
  }

  /**
   * UserInteraction findUniqueOrThrow
   */
  export type UserInteractionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter, which UserInteraction to fetch.
     */
    where: UserInteractionWhereUniqueInput
  }

  /**
   * UserInteraction findFirst
   */
  export type UserInteractionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter, which UserInteraction to fetch.
     */
    where?: UserInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInteractions to fetch.
     */
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserInteractions.
     */
    cursor?: UserInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserInteractions.
     */
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * UserInteraction findFirstOrThrow
   */
  export type UserInteractionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter, which UserInteraction to fetch.
     */
    where?: UserInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInteractions to fetch.
     */
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserInteractions.
     */
    cursor?: UserInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInteractions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserInteractions.
     */
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * UserInteraction findMany
   */
  export type UserInteractionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter, which UserInteractions to fetch.
     */
    where?: UserInteractionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserInteractions to fetch.
     */
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserInteractions.
     */
    cursor?: UserInteractionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserInteractions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserInteractions.
     */
    skip?: number
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * UserInteraction create
   */
  export type UserInteractionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserInteraction.
     */
    data: XOR<UserInteractionCreateInput, UserInteractionUncheckedCreateInput>
  }

  /**
   * UserInteraction createMany
   */
  export type UserInteractionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserInteractions.
     */
    data: UserInteractionCreateManyInput | UserInteractionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserInteraction createManyAndReturn
   */
  export type UserInteractionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserInteractions.
     */
    data: UserInteractionCreateManyInput | UserInteractionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserInteraction update
   */
  export type UserInteractionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserInteraction.
     */
    data: XOR<UserInteractionUpdateInput, UserInteractionUncheckedUpdateInput>
    /**
     * Choose, which UserInteraction to update.
     */
    where: UserInteractionWhereUniqueInput
  }

  /**
   * UserInteraction updateMany
   */
  export type UserInteractionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserInteractions.
     */
    data: XOR<UserInteractionUpdateManyMutationInput, UserInteractionUncheckedUpdateManyInput>
    /**
     * Filter which UserInteractions to update
     */
    where?: UserInteractionWhereInput
  }

  /**
   * UserInteraction upsert
   */
  export type UserInteractionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserInteraction to update in case it exists.
     */
    where: UserInteractionWhereUniqueInput
    /**
     * In case the UserInteraction found by the `where` argument doesn't exist, create a new UserInteraction with this data.
     */
    create: XOR<UserInteractionCreateInput, UserInteractionUncheckedCreateInput>
    /**
     * In case the UserInteraction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserInteractionUpdateInput, UserInteractionUncheckedUpdateInput>
  }

  /**
   * UserInteraction delete
   */
  export type UserInteractionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    /**
     * Filter which UserInteraction to delete.
     */
    where: UserInteractionWhereUniqueInput
  }

  /**
   * UserInteraction deleteMany
   */
  export type UserInteractionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserInteractions to delete
     */
    where?: UserInteractionWhereInput
  }

  /**
   * UserInteraction.post
   */
  export type UserInteraction$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * UserInteraction.targetUser
   */
  export type UserInteraction$targetUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserInteraction without action
   */
  export type UserInteractionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
  }


  /**
   * Model ChatRateLimit
   */

  export type AggregateChatRateLimit = {
    _count: ChatRateLimitCountAggregateOutputType | null
    _avg: ChatRateLimitAvgAggregateOutputType | null
    _sum: ChatRateLimitSumAggregateOutputType | null
    _min: ChatRateLimitMinAggregateOutputType | null
    _max: ChatRateLimitMaxAggregateOutputType | null
  }

  export type ChatRateLimitAvgAggregateOutputType = {
    count: number | null
  }

  export type ChatRateLimitSumAggregateOutputType = {
    count: number | null
  }

  export type ChatRateLimitMinAggregateOutputType = {
    id: string | null
    userId: string | null
    count: number | null
    windowStart: Date | null
    limitType: $Enums.RateLimitType | null
  }

  export type ChatRateLimitMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    count: number | null
    windowStart: Date | null
    limitType: $Enums.RateLimitType | null
  }

  export type ChatRateLimitCountAggregateOutputType = {
    id: number
    userId: number
    count: number
    windowStart: number
    limitType: number
    _all: number
  }


  export type ChatRateLimitAvgAggregateInputType = {
    count?: true
  }

  export type ChatRateLimitSumAggregateInputType = {
    count?: true
  }

  export type ChatRateLimitMinAggregateInputType = {
    id?: true
    userId?: true
    count?: true
    windowStart?: true
    limitType?: true
  }

  export type ChatRateLimitMaxAggregateInputType = {
    id?: true
    userId?: true
    count?: true
    windowStart?: true
    limitType?: true
  }

  export type ChatRateLimitCountAggregateInputType = {
    id?: true
    userId?: true
    count?: true
    windowStart?: true
    limitType?: true
    _all?: true
  }

  export type ChatRateLimitAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatRateLimit to aggregate.
     */
    where?: ChatRateLimitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatRateLimits to fetch.
     */
    orderBy?: ChatRateLimitOrderByWithRelationInput | ChatRateLimitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatRateLimitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatRateLimits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatRateLimits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChatRateLimits
    **/
    _count?: true | ChatRateLimitCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatRateLimitAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatRateLimitSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatRateLimitMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatRateLimitMaxAggregateInputType
  }

  export type GetChatRateLimitAggregateType<T extends ChatRateLimitAggregateArgs> = {
        [P in keyof T & keyof AggregateChatRateLimit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatRateLimit[P]>
      : GetScalarType<T[P], AggregateChatRateLimit[P]>
  }




  export type ChatRateLimitGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatRateLimitWhereInput
    orderBy?: ChatRateLimitOrderByWithAggregationInput | ChatRateLimitOrderByWithAggregationInput[]
    by: ChatRateLimitScalarFieldEnum[] | ChatRateLimitScalarFieldEnum
    having?: ChatRateLimitScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatRateLimitCountAggregateInputType | true
    _avg?: ChatRateLimitAvgAggregateInputType
    _sum?: ChatRateLimitSumAggregateInputType
    _min?: ChatRateLimitMinAggregateInputType
    _max?: ChatRateLimitMaxAggregateInputType
  }

  export type ChatRateLimitGroupByOutputType = {
    id: string
    userId: string
    count: number
    windowStart: Date
    limitType: $Enums.RateLimitType
    _count: ChatRateLimitCountAggregateOutputType | null
    _avg: ChatRateLimitAvgAggregateOutputType | null
    _sum: ChatRateLimitSumAggregateOutputType | null
    _min: ChatRateLimitMinAggregateOutputType | null
    _max: ChatRateLimitMaxAggregateOutputType | null
  }

  type GetChatRateLimitGroupByPayload<T extends ChatRateLimitGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatRateLimitGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatRateLimitGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatRateLimitGroupByOutputType[P]>
            : GetScalarType<T[P], ChatRateLimitGroupByOutputType[P]>
        }
      >
    >


  export type ChatRateLimitSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    count?: boolean
    windowStart?: boolean
    limitType?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatRateLimit"]>

  export type ChatRateLimitSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    count?: boolean
    windowStart?: boolean
    limitType?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatRateLimit"]>

  export type ChatRateLimitSelectScalar = {
    id?: boolean
    userId?: boolean
    count?: boolean
    windowStart?: boolean
    limitType?: boolean
  }

  export type ChatRateLimitInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ChatRateLimitIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ChatRateLimitPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChatRateLimit"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      count: number
      windowStart: Date
      limitType: $Enums.RateLimitType
    }, ExtArgs["result"]["chatRateLimit"]>
    composites: {}
  }

  type ChatRateLimitGetPayload<S extends boolean | null | undefined | ChatRateLimitDefaultArgs> = $Result.GetResult<Prisma.$ChatRateLimitPayload, S>

  type ChatRateLimitCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ChatRateLimitFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ChatRateLimitCountAggregateInputType | true
    }

  export interface ChatRateLimitDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChatRateLimit'], meta: { name: 'ChatRateLimit' } }
    /**
     * Find zero or one ChatRateLimit that matches the filter.
     * @param {ChatRateLimitFindUniqueArgs} args - Arguments to find a ChatRateLimit
     * @example
     * // Get one ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatRateLimitFindUniqueArgs>(args: SelectSubset<T, ChatRateLimitFindUniqueArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ChatRateLimit that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ChatRateLimitFindUniqueOrThrowArgs} args - Arguments to find a ChatRateLimit
     * @example
     * // Get one ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatRateLimitFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatRateLimitFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ChatRateLimit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitFindFirstArgs} args - Arguments to find a ChatRateLimit
     * @example
     * // Get one ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatRateLimitFindFirstArgs>(args?: SelectSubset<T, ChatRateLimitFindFirstArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ChatRateLimit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitFindFirstOrThrowArgs} args - Arguments to find a ChatRateLimit
     * @example
     * // Get one ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatRateLimitFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatRateLimitFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ChatRateLimits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatRateLimits
     * const chatRateLimits = await prisma.chatRateLimit.findMany()
     * 
     * // Get first 10 ChatRateLimits
     * const chatRateLimits = await prisma.chatRateLimit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatRateLimitWithIdOnly = await prisma.chatRateLimit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatRateLimitFindManyArgs>(args?: SelectSubset<T, ChatRateLimitFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ChatRateLimit.
     * @param {ChatRateLimitCreateArgs} args - Arguments to create a ChatRateLimit.
     * @example
     * // Create one ChatRateLimit
     * const ChatRateLimit = await prisma.chatRateLimit.create({
     *   data: {
     *     // ... data to create a ChatRateLimit
     *   }
     * })
     * 
     */
    create<T extends ChatRateLimitCreateArgs>(args: SelectSubset<T, ChatRateLimitCreateArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ChatRateLimits.
     * @param {ChatRateLimitCreateManyArgs} args - Arguments to create many ChatRateLimits.
     * @example
     * // Create many ChatRateLimits
     * const chatRateLimit = await prisma.chatRateLimit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatRateLimitCreateManyArgs>(args?: SelectSubset<T, ChatRateLimitCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChatRateLimits and returns the data saved in the database.
     * @param {ChatRateLimitCreateManyAndReturnArgs} args - Arguments to create many ChatRateLimits.
     * @example
     * // Create many ChatRateLimits
     * const chatRateLimit = await prisma.chatRateLimit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChatRateLimits and only return the `id`
     * const chatRateLimitWithIdOnly = await prisma.chatRateLimit.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChatRateLimitCreateManyAndReturnArgs>(args?: SelectSubset<T, ChatRateLimitCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ChatRateLimit.
     * @param {ChatRateLimitDeleteArgs} args - Arguments to delete one ChatRateLimit.
     * @example
     * // Delete one ChatRateLimit
     * const ChatRateLimit = await prisma.chatRateLimit.delete({
     *   where: {
     *     // ... filter to delete one ChatRateLimit
     *   }
     * })
     * 
     */
    delete<T extends ChatRateLimitDeleteArgs>(args: SelectSubset<T, ChatRateLimitDeleteArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ChatRateLimit.
     * @param {ChatRateLimitUpdateArgs} args - Arguments to update one ChatRateLimit.
     * @example
     * // Update one ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatRateLimitUpdateArgs>(args: SelectSubset<T, ChatRateLimitUpdateArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ChatRateLimits.
     * @param {ChatRateLimitDeleteManyArgs} args - Arguments to filter ChatRateLimits to delete.
     * @example
     * // Delete a few ChatRateLimits
     * const { count } = await prisma.chatRateLimit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatRateLimitDeleteManyArgs>(args?: SelectSubset<T, ChatRateLimitDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatRateLimits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatRateLimits
     * const chatRateLimit = await prisma.chatRateLimit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatRateLimitUpdateManyArgs>(args: SelectSubset<T, ChatRateLimitUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChatRateLimit.
     * @param {ChatRateLimitUpsertArgs} args - Arguments to update or create a ChatRateLimit.
     * @example
     * // Update or create a ChatRateLimit
     * const chatRateLimit = await prisma.chatRateLimit.upsert({
     *   create: {
     *     // ... data to create a ChatRateLimit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatRateLimit we want to update
     *   }
     * })
     */
    upsert<T extends ChatRateLimitUpsertArgs>(args: SelectSubset<T, ChatRateLimitUpsertArgs<ExtArgs>>): Prisma__ChatRateLimitClient<$Result.GetResult<Prisma.$ChatRateLimitPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ChatRateLimits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitCountArgs} args - Arguments to filter ChatRateLimits to count.
     * @example
     * // Count the number of ChatRateLimits
     * const count = await prisma.chatRateLimit.count({
     *   where: {
     *     // ... the filter for the ChatRateLimits we want to count
     *   }
     * })
    **/
    count<T extends ChatRateLimitCountArgs>(
      args?: Subset<T, ChatRateLimitCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatRateLimitCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatRateLimit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatRateLimitAggregateArgs>(args: Subset<T, ChatRateLimitAggregateArgs>): Prisma.PrismaPromise<GetChatRateLimitAggregateType<T>>

    /**
     * Group by ChatRateLimit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatRateLimitGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatRateLimitGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatRateLimitGroupByArgs['orderBy'] }
        : { orderBy?: ChatRateLimitGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatRateLimitGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatRateLimitGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChatRateLimit model
   */
  readonly fields: ChatRateLimitFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChatRateLimit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatRateLimitClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChatRateLimit model
   */ 
  interface ChatRateLimitFieldRefs {
    readonly id: FieldRef<"ChatRateLimit", 'String'>
    readonly userId: FieldRef<"ChatRateLimit", 'String'>
    readonly count: FieldRef<"ChatRateLimit", 'Int'>
    readonly windowStart: FieldRef<"ChatRateLimit", 'DateTime'>
    readonly limitType: FieldRef<"ChatRateLimit", 'RateLimitType'>
  }
    

  // Custom InputTypes
  /**
   * ChatRateLimit findUnique
   */
  export type ChatRateLimitFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter, which ChatRateLimit to fetch.
     */
    where: ChatRateLimitWhereUniqueInput
  }

  /**
   * ChatRateLimit findUniqueOrThrow
   */
  export type ChatRateLimitFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter, which ChatRateLimit to fetch.
     */
    where: ChatRateLimitWhereUniqueInput
  }

  /**
   * ChatRateLimit findFirst
   */
  export type ChatRateLimitFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter, which ChatRateLimit to fetch.
     */
    where?: ChatRateLimitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatRateLimits to fetch.
     */
    orderBy?: ChatRateLimitOrderByWithRelationInput | ChatRateLimitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatRateLimits.
     */
    cursor?: ChatRateLimitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatRateLimits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatRateLimits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatRateLimits.
     */
    distinct?: ChatRateLimitScalarFieldEnum | ChatRateLimitScalarFieldEnum[]
  }

  /**
   * ChatRateLimit findFirstOrThrow
   */
  export type ChatRateLimitFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter, which ChatRateLimit to fetch.
     */
    where?: ChatRateLimitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatRateLimits to fetch.
     */
    orderBy?: ChatRateLimitOrderByWithRelationInput | ChatRateLimitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatRateLimits.
     */
    cursor?: ChatRateLimitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatRateLimits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatRateLimits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatRateLimits.
     */
    distinct?: ChatRateLimitScalarFieldEnum | ChatRateLimitScalarFieldEnum[]
  }

  /**
   * ChatRateLimit findMany
   */
  export type ChatRateLimitFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter, which ChatRateLimits to fetch.
     */
    where?: ChatRateLimitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatRateLimits to fetch.
     */
    orderBy?: ChatRateLimitOrderByWithRelationInput | ChatRateLimitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChatRateLimits.
     */
    cursor?: ChatRateLimitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatRateLimits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatRateLimits.
     */
    skip?: number
    distinct?: ChatRateLimitScalarFieldEnum | ChatRateLimitScalarFieldEnum[]
  }

  /**
   * ChatRateLimit create
   */
  export type ChatRateLimitCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * The data needed to create a ChatRateLimit.
     */
    data: XOR<ChatRateLimitCreateInput, ChatRateLimitUncheckedCreateInput>
  }

  /**
   * ChatRateLimit createMany
   */
  export type ChatRateLimitCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChatRateLimits.
     */
    data: ChatRateLimitCreateManyInput | ChatRateLimitCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChatRateLimit createManyAndReturn
   */
  export type ChatRateLimitCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ChatRateLimits.
     */
    data: ChatRateLimitCreateManyInput | ChatRateLimitCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChatRateLimit update
   */
  export type ChatRateLimitUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * The data needed to update a ChatRateLimit.
     */
    data: XOR<ChatRateLimitUpdateInput, ChatRateLimitUncheckedUpdateInput>
    /**
     * Choose, which ChatRateLimit to update.
     */
    where: ChatRateLimitWhereUniqueInput
  }

  /**
   * ChatRateLimit updateMany
   */
  export type ChatRateLimitUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChatRateLimits.
     */
    data: XOR<ChatRateLimitUpdateManyMutationInput, ChatRateLimitUncheckedUpdateManyInput>
    /**
     * Filter which ChatRateLimits to update
     */
    where?: ChatRateLimitWhereInput
  }

  /**
   * ChatRateLimit upsert
   */
  export type ChatRateLimitUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * The filter to search for the ChatRateLimit to update in case it exists.
     */
    where: ChatRateLimitWhereUniqueInput
    /**
     * In case the ChatRateLimit found by the `where` argument doesn't exist, create a new ChatRateLimit with this data.
     */
    create: XOR<ChatRateLimitCreateInput, ChatRateLimitUncheckedCreateInput>
    /**
     * In case the ChatRateLimit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatRateLimitUpdateInput, ChatRateLimitUncheckedUpdateInput>
  }

  /**
   * ChatRateLimit delete
   */
  export type ChatRateLimitDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
    /**
     * Filter which ChatRateLimit to delete.
     */
    where: ChatRateLimitWhereUniqueInput
  }

  /**
   * ChatRateLimit deleteMany
   */
  export type ChatRateLimitDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatRateLimits to delete
     */
    where?: ChatRateLimitWhereInput
  }

  /**
   * ChatRateLimit without action
   */
  export type ChatRateLimitDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatRateLimit
     */
    select?: ChatRateLimitSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatRateLimitInclude<ExtArgs> | null
  }


  /**
   * Model AgencyMembership
   */

  export type AggregateAgencyMembership = {
    _count: AgencyMembershipCountAggregateOutputType | null
    _avg: AgencyMembershipAvgAggregateOutputType | null
    _sum: AgencyMembershipSumAggregateOutputType | null
    _min: AgencyMembershipMinAggregateOutputType | null
    _max: AgencyMembershipMaxAggregateOutputType | null
  }

  export type AgencyMembershipAvgAggregateOutputType = {
    commissionRate: number | null
  }

  export type AgencyMembershipSumAggregateOutputType = {
    commissionRate: number | null
  }

  export type AgencyMembershipMinAggregateOutputType = {
    id: string | null
    escortId: string | null
    agencyId: string | null
    status: $Enums.MembershipStatus | null
    role: $Enums.AgencyRole | null
    commissionRate: number | null
    canPostForAgency: boolean | null
    canManageEscorts: boolean | null
    canAccessFinances: boolean | null
    approvedBy: string | null
    approvedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type AgencyMembershipMaxAggregateOutputType = {
    id: string | null
    escortId: string | null
    agencyId: string | null
    status: $Enums.MembershipStatus | null
    role: $Enums.AgencyRole | null
    commissionRate: number | null
    canPostForAgency: boolean | null
    canManageEscorts: boolean | null
    canAccessFinances: boolean | null
    approvedBy: string | null
    approvedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type AgencyMembershipCountAggregateOutputType = {
    id: number
    escortId: number
    agencyId: number
    status: number
    role: number
    commissionRate: number
    canPostForAgency: number
    canManageEscorts: number
    canAccessFinances: number
    approvedBy: number
    approvedAt: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type AgencyMembershipAvgAggregateInputType = {
    commissionRate?: true
  }

  export type AgencyMembershipSumAggregateInputType = {
    commissionRate?: true
  }

  export type AgencyMembershipMinAggregateInputType = {
    id?: true
    escortId?: true
    agencyId?: true
    status?: true
    role?: true
    commissionRate?: true
    canPostForAgency?: true
    canManageEscorts?: true
    canAccessFinances?: true
    approvedBy?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type AgencyMembershipMaxAggregateInputType = {
    id?: true
    escortId?: true
    agencyId?: true
    status?: true
    role?: true
    commissionRate?: true
    canPostForAgency?: true
    canManageEscorts?: true
    canAccessFinances?: true
    approvedBy?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type AgencyMembershipCountAggregateInputType = {
    id?: true
    escortId?: true
    agencyId?: true
    status?: true
    role?: true
    commissionRate?: true
    canPostForAgency?: true
    canManageEscorts?: true
    canAccessFinances?: true
    approvedBy?: true
    approvedAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type AgencyMembershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyMembership to aggregate.
     */
    where?: AgencyMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMemberships to fetch.
     */
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyMemberships
    **/
    _count?: true | AgencyMembershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyMembershipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencyMembershipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyMembershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyMembershipMaxAggregateInputType
  }

  export type GetAgencyMembershipAggregateType<T extends AgencyMembershipAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyMembership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyMembership[P]>
      : GetScalarType<T[P], AggregateAgencyMembership[P]>
  }




  export type AgencyMembershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyMembershipWhereInput
    orderBy?: AgencyMembershipOrderByWithAggregationInput | AgencyMembershipOrderByWithAggregationInput[]
    by: AgencyMembershipScalarFieldEnum[] | AgencyMembershipScalarFieldEnum
    having?: AgencyMembershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyMembershipCountAggregateInputType | true
    _avg?: AgencyMembershipAvgAggregateInputType
    _sum?: AgencyMembershipSumAggregateInputType
    _min?: AgencyMembershipMinAggregateInputType
    _max?: AgencyMembershipMaxAggregateInputType
  }

  export type AgencyMembershipGroupByOutputType = {
    id: string
    escortId: string
    agencyId: string
    status: $Enums.MembershipStatus
    role: $Enums.AgencyRole
    commissionRate: number | null
    canPostForAgency: boolean
    canManageEscorts: boolean
    canAccessFinances: boolean
    approvedBy: string | null
    approvedAt: Date | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: AgencyMembershipCountAggregateOutputType | null
    _avg: AgencyMembershipAvgAggregateOutputType | null
    _sum: AgencyMembershipSumAggregateOutputType | null
    _min: AgencyMembershipMinAggregateOutputType | null
    _max: AgencyMembershipMaxAggregateOutputType | null
  }

  type GetAgencyMembershipGroupByPayload<T extends AgencyMembershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyMembershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyMembershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyMembershipGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyMembershipGroupByOutputType[P]>
        }
      >
    >


  export type AgencyMembershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    escortId?: boolean
    agencyId?: boolean
    status?: boolean
    role?: boolean
    commissionRate?: boolean
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyMembership"]>

  export type AgencyMembershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    escortId?: boolean
    agencyId?: boolean
    status?: boolean
    role?: boolean
    commissionRate?: boolean
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyMembership"]>

  export type AgencyMembershipSelectScalar = {
    id?: boolean
    escortId?: boolean
    agencyId?: boolean
    status?: boolean
    role?: boolean
    commissionRate?: boolean
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: boolean
    approvedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type AgencyMembershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }
  export type AgencyMembershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }

  export type $AgencyMembershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyMembership"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      escort: Prisma.$EscortPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      escortId: string
      agencyId: string
      status: $Enums.MembershipStatus
      role: $Enums.AgencyRole
      commissionRate: number | null
      canPostForAgency: boolean
      canManageEscorts: boolean
      canAccessFinances: boolean
      approvedBy: string | null
      approvedAt: Date | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["agencyMembership"]>
    composites: {}
  }

  type AgencyMembershipGetPayload<S extends boolean | null | undefined | AgencyMembershipDefaultArgs> = $Result.GetResult<Prisma.$AgencyMembershipPayload, S>

  type AgencyMembershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgencyMembershipFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgencyMembershipCountAggregateInputType | true
    }

  export interface AgencyMembershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyMembership'], meta: { name: 'AgencyMembership' } }
    /**
     * Find zero or one AgencyMembership that matches the filter.
     * @param {AgencyMembershipFindUniqueArgs} args - Arguments to find a AgencyMembership
     * @example
     * // Get one AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyMembershipFindUniqueArgs>(args: SelectSubset<T, AgencyMembershipFindUniqueArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgencyMembership that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgencyMembershipFindUniqueOrThrowArgs} args - Arguments to find a AgencyMembership
     * @example
     * // Get one AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyMembershipFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyMembershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgencyMembership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipFindFirstArgs} args - Arguments to find a AgencyMembership
     * @example
     * // Get one AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyMembershipFindFirstArgs>(args?: SelectSubset<T, AgencyMembershipFindFirstArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgencyMembership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipFindFirstOrThrowArgs} args - Arguments to find a AgencyMembership
     * @example
     * // Get one AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyMembershipFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyMembershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgencyMemberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyMemberships
     * const agencyMemberships = await prisma.agencyMembership.findMany()
     * 
     * // Get first 10 AgencyMemberships
     * const agencyMemberships = await prisma.agencyMembership.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyMembershipWithIdOnly = await prisma.agencyMembership.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyMembershipFindManyArgs>(args?: SelectSubset<T, AgencyMembershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgencyMembership.
     * @param {AgencyMembershipCreateArgs} args - Arguments to create a AgencyMembership.
     * @example
     * // Create one AgencyMembership
     * const AgencyMembership = await prisma.agencyMembership.create({
     *   data: {
     *     // ... data to create a AgencyMembership
     *   }
     * })
     * 
     */
    create<T extends AgencyMembershipCreateArgs>(args: SelectSubset<T, AgencyMembershipCreateArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgencyMemberships.
     * @param {AgencyMembershipCreateManyArgs} args - Arguments to create many AgencyMemberships.
     * @example
     * // Create many AgencyMemberships
     * const agencyMembership = await prisma.agencyMembership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyMembershipCreateManyArgs>(args?: SelectSubset<T, AgencyMembershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyMemberships and returns the data saved in the database.
     * @param {AgencyMembershipCreateManyAndReturnArgs} args - Arguments to create many AgencyMemberships.
     * @example
     * // Create many AgencyMemberships
     * const agencyMembership = await prisma.agencyMembership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyMemberships and only return the `id`
     * const agencyMembershipWithIdOnly = await prisma.agencyMembership.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyMembershipCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyMembershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgencyMembership.
     * @param {AgencyMembershipDeleteArgs} args - Arguments to delete one AgencyMembership.
     * @example
     * // Delete one AgencyMembership
     * const AgencyMembership = await prisma.agencyMembership.delete({
     *   where: {
     *     // ... filter to delete one AgencyMembership
     *   }
     * })
     * 
     */
    delete<T extends AgencyMembershipDeleteArgs>(args: SelectSubset<T, AgencyMembershipDeleteArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgencyMembership.
     * @param {AgencyMembershipUpdateArgs} args - Arguments to update one AgencyMembership.
     * @example
     * // Update one AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyMembershipUpdateArgs>(args: SelectSubset<T, AgencyMembershipUpdateArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgencyMemberships.
     * @param {AgencyMembershipDeleteManyArgs} args - Arguments to filter AgencyMemberships to delete.
     * @example
     * // Delete a few AgencyMemberships
     * const { count } = await prisma.agencyMembership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyMembershipDeleteManyArgs>(args?: SelectSubset<T, AgencyMembershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyMemberships
     * const agencyMembership = await prisma.agencyMembership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyMembershipUpdateManyArgs>(args: SelectSubset<T, AgencyMembershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgencyMembership.
     * @param {AgencyMembershipUpsertArgs} args - Arguments to update or create a AgencyMembership.
     * @example
     * // Update or create a AgencyMembership
     * const agencyMembership = await prisma.agencyMembership.upsert({
     *   create: {
     *     // ... data to create a AgencyMembership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyMembership we want to update
     *   }
     * })
     */
    upsert<T extends AgencyMembershipUpsertArgs>(args: SelectSubset<T, AgencyMembershipUpsertArgs<ExtArgs>>): Prisma__AgencyMembershipClient<$Result.GetResult<Prisma.$AgencyMembershipPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgencyMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipCountArgs} args - Arguments to filter AgencyMemberships to count.
     * @example
     * // Count the number of AgencyMemberships
     * const count = await prisma.agencyMembership.count({
     *   where: {
     *     // ... the filter for the AgencyMemberships we want to count
     *   }
     * })
    **/
    count<T extends AgencyMembershipCountArgs>(
      args?: Subset<T, AgencyMembershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyMembershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyMembershipAggregateArgs>(args: Subset<T, AgencyMembershipAggregateArgs>): Prisma.PrismaPromise<GetAgencyMembershipAggregateType<T>>

    /**
     * Group by AgencyMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyMembershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyMembershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyMembershipGroupByArgs['orderBy'] }
        : { orderBy?: AgencyMembershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyMembershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyMembershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyMembership model
   */
  readonly fields: AgencyMembershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyMembership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyMembershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    escort<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyMembership model
   */ 
  interface AgencyMembershipFieldRefs {
    readonly id: FieldRef<"AgencyMembership", 'String'>
    readonly escortId: FieldRef<"AgencyMembership", 'String'>
    readonly agencyId: FieldRef<"AgencyMembership", 'String'>
    readonly status: FieldRef<"AgencyMembership", 'MembershipStatus'>
    readonly role: FieldRef<"AgencyMembership", 'AgencyRole'>
    readonly commissionRate: FieldRef<"AgencyMembership", 'Float'>
    readonly canPostForAgency: FieldRef<"AgencyMembership", 'Boolean'>
    readonly canManageEscorts: FieldRef<"AgencyMembership", 'Boolean'>
    readonly canAccessFinances: FieldRef<"AgencyMembership", 'Boolean'>
    readonly approvedBy: FieldRef<"AgencyMembership", 'String'>
    readonly approvedAt: FieldRef<"AgencyMembership", 'DateTime'>
    readonly createdAt: FieldRef<"AgencyMembership", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyMembership", 'DateTime'>
    readonly deletedAt: FieldRef<"AgencyMembership", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgencyMembership findUnique
   */
  export type AgencyMembershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMembership to fetch.
     */
    where: AgencyMembershipWhereUniqueInput
  }

  /**
   * AgencyMembership findUniqueOrThrow
   */
  export type AgencyMembershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMembership to fetch.
     */
    where: AgencyMembershipWhereUniqueInput
  }

  /**
   * AgencyMembership findFirst
   */
  export type AgencyMembershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMembership to fetch.
     */
    where?: AgencyMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMemberships to fetch.
     */
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyMemberships.
     */
    cursor?: AgencyMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyMemberships.
     */
    distinct?: AgencyMembershipScalarFieldEnum | AgencyMembershipScalarFieldEnum[]
  }

  /**
   * AgencyMembership findFirstOrThrow
   */
  export type AgencyMembershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMembership to fetch.
     */
    where?: AgencyMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMemberships to fetch.
     */
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyMemberships.
     */
    cursor?: AgencyMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyMemberships.
     */
    distinct?: AgencyMembershipScalarFieldEnum | AgencyMembershipScalarFieldEnum[]
  }

  /**
   * AgencyMembership findMany
   */
  export type AgencyMembershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter, which AgencyMemberships to fetch.
     */
    where?: AgencyMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyMemberships to fetch.
     */
    orderBy?: AgencyMembershipOrderByWithRelationInput | AgencyMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyMemberships.
     */
    cursor?: AgencyMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyMemberships.
     */
    skip?: number
    distinct?: AgencyMembershipScalarFieldEnum | AgencyMembershipScalarFieldEnum[]
  }

  /**
   * AgencyMembership create
   */
  export type AgencyMembershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyMembership.
     */
    data: XOR<AgencyMembershipCreateInput, AgencyMembershipUncheckedCreateInput>
  }

  /**
   * AgencyMembership createMany
   */
  export type AgencyMembershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyMemberships.
     */
    data: AgencyMembershipCreateManyInput | AgencyMembershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyMembership createManyAndReturn
   */
  export type AgencyMembershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgencyMemberships.
     */
    data: AgencyMembershipCreateManyInput | AgencyMembershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyMembership update
   */
  export type AgencyMembershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyMembership.
     */
    data: XOR<AgencyMembershipUpdateInput, AgencyMembershipUncheckedUpdateInput>
    /**
     * Choose, which AgencyMembership to update.
     */
    where: AgencyMembershipWhereUniqueInput
  }

  /**
   * AgencyMembership updateMany
   */
  export type AgencyMembershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyMemberships.
     */
    data: XOR<AgencyMembershipUpdateManyMutationInput, AgencyMembershipUncheckedUpdateManyInput>
    /**
     * Filter which AgencyMemberships to update
     */
    where?: AgencyMembershipWhereInput
  }

  /**
   * AgencyMembership upsert
   */
  export type AgencyMembershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyMembership to update in case it exists.
     */
    where: AgencyMembershipWhereUniqueInput
    /**
     * In case the AgencyMembership found by the `where` argument doesn't exist, create a new AgencyMembership with this data.
     */
    create: XOR<AgencyMembershipCreateInput, AgencyMembershipUncheckedCreateInput>
    /**
     * In case the AgencyMembership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyMembershipUpdateInput, AgencyMembershipUncheckedUpdateInput>
  }

  /**
   * AgencyMembership delete
   */
  export type AgencyMembershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
    /**
     * Filter which AgencyMembership to delete.
     */
    where: AgencyMembershipWhereUniqueInput
  }

  /**
   * AgencyMembership deleteMany
   */
  export type AgencyMembershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyMemberships to delete
     */
    where?: AgencyMembershipWhereInput
  }

  /**
   * AgencyMembership without action
   */
  export type AgencyMembershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyMembership
     */
    select?: AgencyMembershipSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyMembershipInclude<ExtArgs> | null
  }


  /**
   * Model AgencyInvitation
   */

  export type AggregateAgencyInvitation = {
    _count: AgencyInvitationCountAggregateOutputType | null
    _avg: AgencyInvitationAvgAggregateOutputType | null
    _sum: AgencyInvitationSumAggregateOutputType | null
    _min: AgencyInvitationMinAggregateOutputType | null
    _max: AgencyInvitationMaxAggregateOutputType | null
  }

  export type AgencyInvitationAvgAggregateOutputType = {
    proposedCommission: number | null
  }

  export type AgencyInvitationSumAggregateOutputType = {
    proposedCommission: number | null
  }

  export type AgencyInvitationMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    escortId: string | null
    status: $Enums.InvitationStatus | null
    message: string | null
    proposedCommission: number | null
    proposedRole: $Enums.AgencyRole | null
    invitedBy: string | null
    respondedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type AgencyInvitationMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    escortId: string | null
    status: $Enums.InvitationStatus | null
    message: string | null
    proposedCommission: number | null
    proposedRole: $Enums.AgencyRole | null
    invitedBy: string | null
    respondedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type AgencyInvitationCountAggregateOutputType = {
    id: number
    agencyId: number
    escortId: number
    status: number
    message: number
    proposedCommission: number
    proposedRole: number
    proposedBenefits: number
    invitedBy: number
    respondedAt: number
    createdAt: number
    updatedAt: number
    expiresAt: number
    deletedAt: number
    _all: number
  }


  export type AgencyInvitationAvgAggregateInputType = {
    proposedCommission?: true
  }

  export type AgencyInvitationSumAggregateInputType = {
    proposedCommission?: true
  }

  export type AgencyInvitationMinAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    status?: true
    message?: true
    proposedCommission?: true
    proposedRole?: true
    invitedBy?: true
    respondedAt?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type AgencyInvitationMaxAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    status?: true
    message?: true
    proposedCommission?: true
    proposedRole?: true
    invitedBy?: true
    respondedAt?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type AgencyInvitationCountAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    status?: true
    message?: true
    proposedCommission?: true
    proposedRole?: true
    proposedBenefits?: true
    invitedBy?: true
    respondedAt?: true
    createdAt?: true
    updatedAt?: true
    expiresAt?: true
    deletedAt?: true
    _all?: true
  }

  export type AgencyInvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyInvitation to aggregate.
     */
    where?: AgencyInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInvitations to fetch.
     */
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AgencyInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AgencyInvitations
    **/
    _count?: true | AgencyInvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AgencyInvitationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AgencyInvitationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AgencyInvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AgencyInvitationMaxAggregateInputType
  }

  export type GetAgencyInvitationAggregateType<T extends AgencyInvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateAgencyInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAgencyInvitation[P]>
      : GetScalarType<T[P], AggregateAgencyInvitation[P]>
  }




  export type AgencyInvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AgencyInvitationWhereInput
    orderBy?: AgencyInvitationOrderByWithAggregationInput | AgencyInvitationOrderByWithAggregationInput[]
    by: AgencyInvitationScalarFieldEnum[] | AgencyInvitationScalarFieldEnum
    having?: AgencyInvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AgencyInvitationCountAggregateInputType | true
    _avg?: AgencyInvitationAvgAggregateInputType
    _sum?: AgencyInvitationSumAggregateInputType
    _min?: AgencyInvitationMinAggregateInputType
    _max?: AgencyInvitationMaxAggregateInputType
  }

  export type AgencyInvitationGroupByOutputType = {
    id: string
    agencyId: string
    escortId: string
    status: $Enums.InvitationStatus
    message: string | null
    proposedCommission: number | null
    proposedRole: $Enums.AgencyRole
    proposedBenefits: JsonValue | null
    invitedBy: string
    respondedAt: Date | null
    createdAt: Date
    updatedAt: Date
    expiresAt: Date
    deletedAt: Date | null
    _count: AgencyInvitationCountAggregateOutputType | null
    _avg: AgencyInvitationAvgAggregateOutputType | null
    _sum: AgencyInvitationSumAggregateOutputType | null
    _min: AgencyInvitationMinAggregateOutputType | null
    _max: AgencyInvitationMaxAggregateOutputType | null
  }

  type GetAgencyInvitationGroupByPayload<T extends AgencyInvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AgencyInvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AgencyInvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AgencyInvitationGroupByOutputType[P]>
            : GetScalarType<T[P], AgencyInvitationGroupByOutputType[P]>
        }
      >
    >


  export type AgencyInvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    status?: boolean
    message?: boolean
    proposedCommission?: boolean
    proposedRole?: boolean
    proposedBenefits?: boolean
    invitedBy?: boolean
    respondedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyInvitation"]>

  export type AgencyInvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    status?: boolean
    message?: boolean
    proposedCommission?: boolean
    proposedRole?: boolean
    proposedBenefits?: boolean
    invitedBy?: boolean
    respondedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["agencyInvitation"]>

  export type AgencyInvitationSelectScalar = {
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    status?: boolean
    message?: boolean
    proposedCommission?: boolean
    proposedRole?: boolean
    proposedBenefits?: boolean
    invitedBy?: boolean
    respondedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
  }

  export type AgencyInvitationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }
  export type AgencyInvitationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
  }

  export type $AgencyInvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AgencyInvitation"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      escort: Prisma.$EscortPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      escortId: string
      status: $Enums.InvitationStatus
      message: string | null
      proposedCommission: number | null
      proposedRole: $Enums.AgencyRole
      proposedBenefits: Prisma.JsonValue | null
      invitedBy: string
      respondedAt: Date | null
      createdAt: Date
      updatedAt: Date
      expiresAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["agencyInvitation"]>
    composites: {}
  }

  type AgencyInvitationGetPayload<S extends boolean | null | undefined | AgencyInvitationDefaultArgs> = $Result.GetResult<Prisma.$AgencyInvitationPayload, S>

  type AgencyInvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AgencyInvitationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AgencyInvitationCountAggregateInputType | true
    }

  export interface AgencyInvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AgencyInvitation'], meta: { name: 'AgencyInvitation' } }
    /**
     * Find zero or one AgencyInvitation that matches the filter.
     * @param {AgencyInvitationFindUniqueArgs} args - Arguments to find a AgencyInvitation
     * @example
     * // Get one AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AgencyInvitationFindUniqueArgs>(args: SelectSubset<T, AgencyInvitationFindUniqueArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AgencyInvitation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AgencyInvitationFindUniqueOrThrowArgs} args - Arguments to find a AgencyInvitation
     * @example
     * // Get one AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AgencyInvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, AgencyInvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AgencyInvitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationFindFirstArgs} args - Arguments to find a AgencyInvitation
     * @example
     * // Get one AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AgencyInvitationFindFirstArgs>(args?: SelectSubset<T, AgencyInvitationFindFirstArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AgencyInvitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationFindFirstOrThrowArgs} args - Arguments to find a AgencyInvitation
     * @example
     * // Get one AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AgencyInvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, AgencyInvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AgencyInvitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AgencyInvitations
     * const agencyInvitations = await prisma.agencyInvitation.findMany()
     * 
     * // Get first 10 AgencyInvitations
     * const agencyInvitations = await prisma.agencyInvitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const agencyInvitationWithIdOnly = await prisma.agencyInvitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AgencyInvitationFindManyArgs>(args?: SelectSubset<T, AgencyInvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AgencyInvitation.
     * @param {AgencyInvitationCreateArgs} args - Arguments to create a AgencyInvitation.
     * @example
     * // Create one AgencyInvitation
     * const AgencyInvitation = await prisma.agencyInvitation.create({
     *   data: {
     *     // ... data to create a AgencyInvitation
     *   }
     * })
     * 
     */
    create<T extends AgencyInvitationCreateArgs>(args: SelectSubset<T, AgencyInvitationCreateArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AgencyInvitations.
     * @param {AgencyInvitationCreateManyArgs} args - Arguments to create many AgencyInvitations.
     * @example
     * // Create many AgencyInvitations
     * const agencyInvitation = await prisma.agencyInvitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AgencyInvitationCreateManyArgs>(args?: SelectSubset<T, AgencyInvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AgencyInvitations and returns the data saved in the database.
     * @param {AgencyInvitationCreateManyAndReturnArgs} args - Arguments to create many AgencyInvitations.
     * @example
     * // Create many AgencyInvitations
     * const agencyInvitation = await prisma.agencyInvitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AgencyInvitations and only return the `id`
     * const agencyInvitationWithIdOnly = await prisma.agencyInvitation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AgencyInvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, AgencyInvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AgencyInvitation.
     * @param {AgencyInvitationDeleteArgs} args - Arguments to delete one AgencyInvitation.
     * @example
     * // Delete one AgencyInvitation
     * const AgencyInvitation = await prisma.agencyInvitation.delete({
     *   where: {
     *     // ... filter to delete one AgencyInvitation
     *   }
     * })
     * 
     */
    delete<T extends AgencyInvitationDeleteArgs>(args: SelectSubset<T, AgencyInvitationDeleteArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AgencyInvitation.
     * @param {AgencyInvitationUpdateArgs} args - Arguments to update one AgencyInvitation.
     * @example
     * // Update one AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AgencyInvitationUpdateArgs>(args: SelectSubset<T, AgencyInvitationUpdateArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AgencyInvitations.
     * @param {AgencyInvitationDeleteManyArgs} args - Arguments to filter AgencyInvitations to delete.
     * @example
     * // Delete a few AgencyInvitations
     * const { count } = await prisma.agencyInvitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AgencyInvitationDeleteManyArgs>(args?: SelectSubset<T, AgencyInvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AgencyInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AgencyInvitations
     * const agencyInvitation = await prisma.agencyInvitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AgencyInvitationUpdateManyArgs>(args: SelectSubset<T, AgencyInvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AgencyInvitation.
     * @param {AgencyInvitationUpsertArgs} args - Arguments to update or create a AgencyInvitation.
     * @example
     * // Update or create a AgencyInvitation
     * const agencyInvitation = await prisma.agencyInvitation.upsert({
     *   create: {
     *     // ... data to create a AgencyInvitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AgencyInvitation we want to update
     *   }
     * })
     */
    upsert<T extends AgencyInvitationUpsertArgs>(args: SelectSubset<T, AgencyInvitationUpsertArgs<ExtArgs>>): Prisma__AgencyInvitationClient<$Result.GetResult<Prisma.$AgencyInvitationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AgencyInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationCountArgs} args - Arguments to filter AgencyInvitations to count.
     * @example
     * // Count the number of AgencyInvitations
     * const count = await prisma.agencyInvitation.count({
     *   where: {
     *     // ... the filter for the AgencyInvitations we want to count
     *   }
     * })
    **/
    count<T extends AgencyInvitationCountArgs>(
      args?: Subset<T, AgencyInvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AgencyInvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AgencyInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AgencyInvitationAggregateArgs>(args: Subset<T, AgencyInvitationAggregateArgs>): Prisma.PrismaPromise<GetAgencyInvitationAggregateType<T>>

    /**
     * Group by AgencyInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AgencyInvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AgencyInvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AgencyInvitationGroupByArgs['orderBy'] }
        : { orderBy?: AgencyInvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AgencyInvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAgencyInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AgencyInvitation model
   */
  readonly fields: AgencyInvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AgencyInvitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AgencyInvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    escort<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AgencyInvitation model
   */ 
  interface AgencyInvitationFieldRefs {
    readonly id: FieldRef<"AgencyInvitation", 'String'>
    readonly agencyId: FieldRef<"AgencyInvitation", 'String'>
    readonly escortId: FieldRef<"AgencyInvitation", 'String'>
    readonly status: FieldRef<"AgencyInvitation", 'InvitationStatus'>
    readonly message: FieldRef<"AgencyInvitation", 'String'>
    readonly proposedCommission: FieldRef<"AgencyInvitation", 'Float'>
    readonly proposedRole: FieldRef<"AgencyInvitation", 'AgencyRole'>
    readonly proposedBenefits: FieldRef<"AgencyInvitation", 'Json'>
    readonly invitedBy: FieldRef<"AgencyInvitation", 'String'>
    readonly respondedAt: FieldRef<"AgencyInvitation", 'DateTime'>
    readonly createdAt: FieldRef<"AgencyInvitation", 'DateTime'>
    readonly updatedAt: FieldRef<"AgencyInvitation", 'DateTime'>
    readonly expiresAt: FieldRef<"AgencyInvitation", 'DateTime'>
    readonly deletedAt: FieldRef<"AgencyInvitation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AgencyInvitation findUnique
   */
  export type AgencyInvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInvitation to fetch.
     */
    where: AgencyInvitationWhereUniqueInput
  }

  /**
   * AgencyInvitation findUniqueOrThrow
   */
  export type AgencyInvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInvitation to fetch.
     */
    where: AgencyInvitationWhereUniqueInput
  }

  /**
   * AgencyInvitation findFirst
   */
  export type AgencyInvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInvitation to fetch.
     */
    where?: AgencyInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInvitations to fetch.
     */
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyInvitations.
     */
    cursor?: AgencyInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyInvitations.
     */
    distinct?: AgencyInvitationScalarFieldEnum | AgencyInvitationScalarFieldEnum[]
  }

  /**
   * AgencyInvitation findFirstOrThrow
   */
  export type AgencyInvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInvitation to fetch.
     */
    where?: AgencyInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInvitations to fetch.
     */
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AgencyInvitations.
     */
    cursor?: AgencyInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AgencyInvitations.
     */
    distinct?: AgencyInvitationScalarFieldEnum | AgencyInvitationScalarFieldEnum[]
  }

  /**
   * AgencyInvitation findMany
   */
  export type AgencyInvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter, which AgencyInvitations to fetch.
     */
    where?: AgencyInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AgencyInvitations to fetch.
     */
    orderBy?: AgencyInvitationOrderByWithRelationInput | AgencyInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AgencyInvitations.
     */
    cursor?: AgencyInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AgencyInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AgencyInvitations.
     */
    skip?: number
    distinct?: AgencyInvitationScalarFieldEnum | AgencyInvitationScalarFieldEnum[]
  }

  /**
   * AgencyInvitation create
   */
  export type AgencyInvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * The data needed to create a AgencyInvitation.
     */
    data: XOR<AgencyInvitationCreateInput, AgencyInvitationUncheckedCreateInput>
  }

  /**
   * AgencyInvitation createMany
   */
  export type AgencyInvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AgencyInvitations.
     */
    data: AgencyInvitationCreateManyInput | AgencyInvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AgencyInvitation createManyAndReturn
   */
  export type AgencyInvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AgencyInvitations.
     */
    data: AgencyInvitationCreateManyInput | AgencyInvitationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AgencyInvitation update
   */
  export type AgencyInvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * The data needed to update a AgencyInvitation.
     */
    data: XOR<AgencyInvitationUpdateInput, AgencyInvitationUncheckedUpdateInput>
    /**
     * Choose, which AgencyInvitation to update.
     */
    where: AgencyInvitationWhereUniqueInput
  }

  /**
   * AgencyInvitation updateMany
   */
  export type AgencyInvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AgencyInvitations.
     */
    data: XOR<AgencyInvitationUpdateManyMutationInput, AgencyInvitationUncheckedUpdateManyInput>
    /**
     * Filter which AgencyInvitations to update
     */
    where?: AgencyInvitationWhereInput
  }

  /**
   * AgencyInvitation upsert
   */
  export type AgencyInvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * The filter to search for the AgencyInvitation to update in case it exists.
     */
    where: AgencyInvitationWhereUniqueInput
    /**
     * In case the AgencyInvitation found by the `where` argument doesn't exist, create a new AgencyInvitation with this data.
     */
    create: XOR<AgencyInvitationCreateInput, AgencyInvitationUncheckedCreateInput>
    /**
     * In case the AgencyInvitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AgencyInvitationUpdateInput, AgencyInvitationUncheckedUpdateInput>
  }

  /**
   * AgencyInvitation delete
   */
  export type AgencyInvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
    /**
     * Filter which AgencyInvitation to delete.
     */
    where: AgencyInvitationWhereUniqueInput
  }

  /**
   * AgencyInvitation deleteMany
   */
  export type AgencyInvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AgencyInvitations to delete
     */
    where?: AgencyInvitationWhereInput
  }

  /**
   * AgencyInvitation without action
   */
  export type AgencyInvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AgencyInvitation
     */
    select?: AgencyInvitationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AgencyInvitationInclude<ExtArgs> | null
  }


  /**
   * Model EscortVerification
   */

  export type AggregateEscortVerification = {
    _count: EscortVerificationCountAggregateOutputType | null
    _min: EscortVerificationMinAggregateOutputType | null
    _max: EscortVerificationMaxAggregateOutputType | null
  }

  export type EscortVerificationMinAggregateOutputType = {
    id: string | null
    agencyId: string | null
    escortId: string | null
    pricingId: string | null
    status: $Enums.VerificationStatus | null
    membershipId: string | null
    startsAt: Date | null
    expiresAt: Date | null
    isAutoRenewal: boolean | null
    reminderSent: boolean | null
    verificationNotes: string | null
    rejectionReason: string | null
    verifiedBy: string | null
    createdAt: Date | null
    completedAt: Date | null
    deletedAt: Date | null
  }

  export type EscortVerificationMaxAggregateOutputType = {
    id: string | null
    agencyId: string | null
    escortId: string | null
    pricingId: string | null
    status: $Enums.VerificationStatus | null
    membershipId: string | null
    startsAt: Date | null
    expiresAt: Date | null
    isAutoRenewal: boolean | null
    reminderSent: boolean | null
    verificationNotes: string | null
    rejectionReason: string | null
    verifiedBy: string | null
    createdAt: Date | null
    completedAt: Date | null
    deletedAt: Date | null
  }

  export type EscortVerificationCountAggregateOutputType = {
    id: number
    agencyId: number
    escortId: number
    pricingId: number
    status: number
    membershipId: number
    startsAt: number
    expiresAt: number
    isAutoRenewal: number
    reminderSent: number
    documentsSubmitted: number
    verificationNotes: number
    rejectionReason: number
    verificationSteps: number
    verifiedBy: number
    createdAt: number
    completedAt: number
    deletedAt: number
    _all: number
  }


  export type EscortVerificationMinAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    pricingId?: true
    status?: true
    membershipId?: true
    startsAt?: true
    expiresAt?: true
    isAutoRenewal?: true
    reminderSent?: true
    verificationNotes?: true
    rejectionReason?: true
    verifiedBy?: true
    createdAt?: true
    completedAt?: true
    deletedAt?: true
  }

  export type EscortVerificationMaxAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    pricingId?: true
    status?: true
    membershipId?: true
    startsAt?: true
    expiresAt?: true
    isAutoRenewal?: true
    reminderSent?: true
    verificationNotes?: true
    rejectionReason?: true
    verifiedBy?: true
    createdAt?: true
    completedAt?: true
    deletedAt?: true
  }

  export type EscortVerificationCountAggregateInputType = {
    id?: true
    agencyId?: true
    escortId?: true
    pricingId?: true
    status?: true
    membershipId?: true
    startsAt?: true
    expiresAt?: true
    isAutoRenewal?: true
    reminderSent?: true
    documentsSubmitted?: true
    verificationNotes?: true
    rejectionReason?: true
    verificationSteps?: true
    verifiedBy?: true
    createdAt?: true
    completedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type EscortVerificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EscortVerification to aggregate.
     */
    where?: EscortVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscortVerifications to fetch.
     */
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EscortVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscortVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscortVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EscortVerifications
    **/
    _count?: true | EscortVerificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EscortVerificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EscortVerificationMaxAggregateInputType
  }

  export type GetEscortVerificationAggregateType<T extends EscortVerificationAggregateArgs> = {
        [P in keyof T & keyof AggregateEscortVerification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEscortVerification[P]>
      : GetScalarType<T[P], AggregateEscortVerification[P]>
  }




  export type EscortVerificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscortVerificationWhereInput
    orderBy?: EscortVerificationOrderByWithAggregationInput | EscortVerificationOrderByWithAggregationInput[]
    by: EscortVerificationScalarFieldEnum[] | EscortVerificationScalarFieldEnum
    having?: EscortVerificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EscortVerificationCountAggregateInputType | true
    _min?: EscortVerificationMinAggregateInputType
    _max?: EscortVerificationMaxAggregateInputType
  }

  export type EscortVerificationGroupByOutputType = {
    id: string
    agencyId: string
    escortId: string
    pricingId: string
    status: $Enums.VerificationStatus
    membershipId: string | null
    startsAt: Date
    expiresAt: Date
    isAutoRenewal: boolean
    reminderSent: boolean
    documentsSubmitted: JsonValue | null
    verificationNotes: string | null
    rejectionReason: string | null
    verificationSteps: JsonValue | null
    verifiedBy: string | null
    createdAt: Date
    completedAt: Date | null
    deletedAt: Date | null
    _count: EscortVerificationCountAggregateOutputType | null
    _min: EscortVerificationMinAggregateOutputType | null
    _max: EscortVerificationMaxAggregateOutputType | null
  }

  type GetEscortVerificationGroupByPayload<T extends EscortVerificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EscortVerificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EscortVerificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EscortVerificationGroupByOutputType[P]>
            : GetScalarType<T[P], EscortVerificationGroupByOutputType[P]>
        }
      >
    >


  export type EscortVerificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    pricingId?: boolean
    status?: boolean
    membershipId?: boolean
    startsAt?: boolean
    expiresAt?: boolean
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: boolean
    verificationNotes?: boolean
    rejectionReason?: boolean
    verificationSteps?: boolean
    verifiedBy?: boolean
    createdAt?: boolean
    completedAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
    pricing?: boolean | VerificationPricingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escortVerification"]>

  export type EscortVerificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    pricingId?: boolean
    status?: boolean
    membershipId?: boolean
    startsAt?: boolean
    expiresAt?: boolean
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: boolean
    verificationNotes?: boolean
    rejectionReason?: boolean
    verificationSteps?: boolean
    verifiedBy?: boolean
    createdAt?: boolean
    completedAt?: boolean
    deletedAt?: boolean
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
    pricing?: boolean | VerificationPricingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escortVerification"]>

  export type EscortVerificationSelectScalar = {
    id?: boolean
    agencyId?: boolean
    escortId?: boolean
    pricingId?: boolean
    status?: boolean
    membershipId?: boolean
    startsAt?: boolean
    expiresAt?: boolean
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: boolean
    verificationNotes?: boolean
    rejectionReason?: boolean
    verificationSteps?: boolean
    verifiedBy?: boolean
    createdAt?: boolean
    completedAt?: boolean
    deletedAt?: boolean
  }

  export type EscortVerificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
    pricing?: boolean | VerificationPricingDefaultArgs<ExtArgs>
  }
  export type EscortVerificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    agency?: boolean | AgencyDefaultArgs<ExtArgs>
    escort?: boolean | EscortDefaultArgs<ExtArgs>
    pricing?: boolean | VerificationPricingDefaultArgs<ExtArgs>
  }

  export type $EscortVerificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EscortVerification"
    objects: {
      agency: Prisma.$AgencyPayload<ExtArgs>
      escort: Prisma.$EscortPayload<ExtArgs>
      pricing: Prisma.$VerificationPricingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      agencyId: string
      escortId: string
      pricingId: string
      status: $Enums.VerificationStatus
      membershipId: string | null
      startsAt: Date
      expiresAt: Date
      isAutoRenewal: boolean
      reminderSent: boolean
      documentsSubmitted: Prisma.JsonValue | null
      verificationNotes: string | null
      rejectionReason: string | null
      verificationSteps: Prisma.JsonValue | null
      verifiedBy: string | null
      createdAt: Date
      completedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["escortVerification"]>
    composites: {}
  }

  type EscortVerificationGetPayload<S extends boolean | null | undefined | EscortVerificationDefaultArgs> = $Result.GetResult<Prisma.$EscortVerificationPayload, S>

  type EscortVerificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EscortVerificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EscortVerificationCountAggregateInputType | true
    }

  export interface EscortVerificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EscortVerification'], meta: { name: 'EscortVerification' } }
    /**
     * Find zero or one EscortVerification that matches the filter.
     * @param {EscortVerificationFindUniqueArgs} args - Arguments to find a EscortVerification
     * @example
     * // Get one EscortVerification
     * const escortVerification = await prisma.escortVerification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EscortVerificationFindUniqueArgs>(args: SelectSubset<T, EscortVerificationFindUniqueArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EscortVerification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EscortVerificationFindUniqueOrThrowArgs} args - Arguments to find a EscortVerification
     * @example
     * // Get one EscortVerification
     * const escortVerification = await prisma.escortVerification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EscortVerificationFindUniqueOrThrowArgs>(args: SelectSubset<T, EscortVerificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EscortVerification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationFindFirstArgs} args - Arguments to find a EscortVerification
     * @example
     * // Get one EscortVerification
     * const escortVerification = await prisma.escortVerification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EscortVerificationFindFirstArgs>(args?: SelectSubset<T, EscortVerificationFindFirstArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EscortVerification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationFindFirstOrThrowArgs} args - Arguments to find a EscortVerification
     * @example
     * // Get one EscortVerification
     * const escortVerification = await prisma.escortVerification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EscortVerificationFindFirstOrThrowArgs>(args?: SelectSubset<T, EscortVerificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EscortVerifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EscortVerifications
     * const escortVerifications = await prisma.escortVerification.findMany()
     * 
     * // Get first 10 EscortVerifications
     * const escortVerifications = await prisma.escortVerification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const escortVerificationWithIdOnly = await prisma.escortVerification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EscortVerificationFindManyArgs>(args?: SelectSubset<T, EscortVerificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EscortVerification.
     * @param {EscortVerificationCreateArgs} args - Arguments to create a EscortVerification.
     * @example
     * // Create one EscortVerification
     * const EscortVerification = await prisma.escortVerification.create({
     *   data: {
     *     // ... data to create a EscortVerification
     *   }
     * })
     * 
     */
    create<T extends EscortVerificationCreateArgs>(args: SelectSubset<T, EscortVerificationCreateArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EscortVerifications.
     * @param {EscortVerificationCreateManyArgs} args - Arguments to create many EscortVerifications.
     * @example
     * // Create many EscortVerifications
     * const escortVerification = await prisma.escortVerification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EscortVerificationCreateManyArgs>(args?: SelectSubset<T, EscortVerificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EscortVerifications and returns the data saved in the database.
     * @param {EscortVerificationCreateManyAndReturnArgs} args - Arguments to create many EscortVerifications.
     * @example
     * // Create many EscortVerifications
     * const escortVerification = await prisma.escortVerification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EscortVerifications and only return the `id`
     * const escortVerificationWithIdOnly = await prisma.escortVerification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EscortVerificationCreateManyAndReturnArgs>(args?: SelectSubset<T, EscortVerificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a EscortVerification.
     * @param {EscortVerificationDeleteArgs} args - Arguments to delete one EscortVerification.
     * @example
     * // Delete one EscortVerification
     * const EscortVerification = await prisma.escortVerification.delete({
     *   where: {
     *     // ... filter to delete one EscortVerification
     *   }
     * })
     * 
     */
    delete<T extends EscortVerificationDeleteArgs>(args: SelectSubset<T, EscortVerificationDeleteArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EscortVerification.
     * @param {EscortVerificationUpdateArgs} args - Arguments to update one EscortVerification.
     * @example
     * // Update one EscortVerification
     * const escortVerification = await prisma.escortVerification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EscortVerificationUpdateArgs>(args: SelectSubset<T, EscortVerificationUpdateArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EscortVerifications.
     * @param {EscortVerificationDeleteManyArgs} args - Arguments to filter EscortVerifications to delete.
     * @example
     * // Delete a few EscortVerifications
     * const { count } = await prisma.escortVerification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EscortVerificationDeleteManyArgs>(args?: SelectSubset<T, EscortVerificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EscortVerifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EscortVerifications
     * const escortVerification = await prisma.escortVerification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EscortVerificationUpdateManyArgs>(args: SelectSubset<T, EscortVerificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EscortVerification.
     * @param {EscortVerificationUpsertArgs} args - Arguments to update or create a EscortVerification.
     * @example
     * // Update or create a EscortVerification
     * const escortVerification = await prisma.escortVerification.upsert({
     *   create: {
     *     // ... data to create a EscortVerification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EscortVerification we want to update
     *   }
     * })
     */
    upsert<T extends EscortVerificationUpsertArgs>(args: SelectSubset<T, EscortVerificationUpsertArgs<ExtArgs>>): Prisma__EscortVerificationClient<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EscortVerifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationCountArgs} args - Arguments to filter EscortVerifications to count.
     * @example
     * // Count the number of EscortVerifications
     * const count = await prisma.escortVerification.count({
     *   where: {
     *     // ... the filter for the EscortVerifications we want to count
     *   }
     * })
    **/
    count<T extends EscortVerificationCountArgs>(
      args?: Subset<T, EscortVerificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EscortVerificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EscortVerification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EscortVerificationAggregateArgs>(args: Subset<T, EscortVerificationAggregateArgs>): Prisma.PrismaPromise<GetEscortVerificationAggregateType<T>>

    /**
     * Group by EscortVerification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscortVerificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EscortVerificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EscortVerificationGroupByArgs['orderBy'] }
        : { orderBy?: EscortVerificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EscortVerificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEscortVerificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EscortVerification model
   */
  readonly fields: EscortVerificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EscortVerification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EscortVerificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    agency<T extends AgencyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AgencyDefaultArgs<ExtArgs>>): Prisma__AgencyClient<$Result.GetResult<Prisma.$AgencyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    escort<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    pricing<T extends VerificationPricingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VerificationPricingDefaultArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EscortVerification model
   */ 
  interface EscortVerificationFieldRefs {
    readonly id: FieldRef<"EscortVerification", 'String'>
    readonly agencyId: FieldRef<"EscortVerification", 'String'>
    readonly escortId: FieldRef<"EscortVerification", 'String'>
    readonly pricingId: FieldRef<"EscortVerification", 'String'>
    readonly status: FieldRef<"EscortVerification", 'VerificationStatus'>
    readonly membershipId: FieldRef<"EscortVerification", 'String'>
    readonly startsAt: FieldRef<"EscortVerification", 'DateTime'>
    readonly expiresAt: FieldRef<"EscortVerification", 'DateTime'>
    readonly isAutoRenewal: FieldRef<"EscortVerification", 'Boolean'>
    readonly reminderSent: FieldRef<"EscortVerification", 'Boolean'>
    readonly documentsSubmitted: FieldRef<"EscortVerification", 'Json'>
    readonly verificationNotes: FieldRef<"EscortVerification", 'String'>
    readonly rejectionReason: FieldRef<"EscortVerification", 'String'>
    readonly verificationSteps: FieldRef<"EscortVerification", 'Json'>
    readonly verifiedBy: FieldRef<"EscortVerification", 'String'>
    readonly createdAt: FieldRef<"EscortVerification", 'DateTime'>
    readonly completedAt: FieldRef<"EscortVerification", 'DateTime'>
    readonly deletedAt: FieldRef<"EscortVerification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EscortVerification findUnique
   */
  export type EscortVerificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter, which EscortVerification to fetch.
     */
    where: EscortVerificationWhereUniqueInput
  }

  /**
   * EscortVerification findUniqueOrThrow
   */
  export type EscortVerificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter, which EscortVerification to fetch.
     */
    where: EscortVerificationWhereUniqueInput
  }

  /**
   * EscortVerification findFirst
   */
  export type EscortVerificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter, which EscortVerification to fetch.
     */
    where?: EscortVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscortVerifications to fetch.
     */
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EscortVerifications.
     */
    cursor?: EscortVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscortVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscortVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EscortVerifications.
     */
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * EscortVerification findFirstOrThrow
   */
  export type EscortVerificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter, which EscortVerification to fetch.
     */
    where?: EscortVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscortVerifications to fetch.
     */
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EscortVerifications.
     */
    cursor?: EscortVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscortVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscortVerifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EscortVerifications.
     */
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * EscortVerification findMany
   */
  export type EscortVerificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter, which EscortVerifications to fetch.
     */
    where?: EscortVerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EscortVerifications to fetch.
     */
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EscortVerifications.
     */
    cursor?: EscortVerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EscortVerifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EscortVerifications.
     */
    skip?: number
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * EscortVerification create
   */
  export type EscortVerificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * The data needed to create a EscortVerification.
     */
    data: XOR<EscortVerificationCreateInput, EscortVerificationUncheckedCreateInput>
  }

  /**
   * EscortVerification createMany
   */
  export type EscortVerificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EscortVerifications.
     */
    data: EscortVerificationCreateManyInput | EscortVerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EscortVerification createManyAndReturn
   */
  export type EscortVerificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many EscortVerifications.
     */
    data: EscortVerificationCreateManyInput | EscortVerificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EscortVerification update
   */
  export type EscortVerificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * The data needed to update a EscortVerification.
     */
    data: XOR<EscortVerificationUpdateInput, EscortVerificationUncheckedUpdateInput>
    /**
     * Choose, which EscortVerification to update.
     */
    where: EscortVerificationWhereUniqueInput
  }

  /**
   * EscortVerification updateMany
   */
  export type EscortVerificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EscortVerifications.
     */
    data: XOR<EscortVerificationUpdateManyMutationInput, EscortVerificationUncheckedUpdateManyInput>
    /**
     * Filter which EscortVerifications to update
     */
    where?: EscortVerificationWhereInput
  }

  /**
   * EscortVerification upsert
   */
  export type EscortVerificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * The filter to search for the EscortVerification to update in case it exists.
     */
    where: EscortVerificationWhereUniqueInput
    /**
     * In case the EscortVerification found by the `where` argument doesn't exist, create a new EscortVerification with this data.
     */
    create: XOR<EscortVerificationCreateInput, EscortVerificationUncheckedCreateInput>
    /**
     * In case the EscortVerification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EscortVerificationUpdateInput, EscortVerificationUncheckedUpdateInput>
  }

  /**
   * EscortVerification delete
   */
  export type EscortVerificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    /**
     * Filter which EscortVerification to delete.
     */
    where: EscortVerificationWhereUniqueInput
  }

  /**
   * EscortVerification deleteMany
   */
  export type EscortVerificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EscortVerifications to delete
     */
    where?: EscortVerificationWhereInput
  }

  /**
   * EscortVerification without action
   */
  export type EscortVerificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
  }


  /**
   * Model VerificationPricing
   */

  export type AggregateVerificationPricing = {
    _count: VerificationPricingCountAggregateOutputType | null
    _avg: VerificationPricingAvgAggregateOutputType | null
    _sum: VerificationPricingSumAggregateOutputType | null
    _min: VerificationPricingMinAggregateOutputType | null
    _max: VerificationPricingMaxAggregateOutputType | null
  }

  export type VerificationPricingAvgAggregateOutputType = {
    cost: number | null
    duration: number | null
  }

  export type VerificationPricingSumAggregateOutputType = {
    cost: number | null
    duration: number | null
  }

  export type VerificationPricingMinAggregateOutputType = {
    id: string | null
    name: string | null
    cost: number | null
    description: string | null
    isActive: boolean | null
    duration: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationPricingMaxAggregateOutputType = {
    id: string | null
    name: string | null
    cost: number | null
    description: string | null
    isActive: boolean | null
    duration: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationPricingCountAggregateOutputType = {
    id: number
    name: number
    cost: number
    description: number
    isActive: number
    features: number
    duration: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VerificationPricingAvgAggregateInputType = {
    cost?: true
    duration?: true
  }

  export type VerificationPricingSumAggregateInputType = {
    cost?: true
    duration?: true
  }

  export type VerificationPricingMinAggregateInputType = {
    id?: true
    name?: true
    cost?: true
    description?: true
    isActive?: true
    duration?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationPricingMaxAggregateInputType = {
    id?: true
    name?: true
    cost?: true
    description?: true
    isActive?: true
    duration?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationPricingCountAggregateInputType = {
    id?: true
    name?: true
    cost?: true
    description?: true
    isActive?: true
    features?: true
    duration?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VerificationPricingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationPricing to aggregate.
     */
    where?: VerificationPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationPricings to fetch.
     */
    orderBy?: VerificationPricingOrderByWithRelationInput | VerificationPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationPricings
    **/
    _count?: true | VerificationPricingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VerificationPricingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VerificationPricingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationPricingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationPricingMaxAggregateInputType
  }

  export type GetVerificationPricingAggregateType<T extends VerificationPricingAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationPricing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationPricing[P]>
      : GetScalarType<T[P], AggregateVerificationPricing[P]>
  }




  export type VerificationPricingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationPricingWhereInput
    orderBy?: VerificationPricingOrderByWithAggregationInput | VerificationPricingOrderByWithAggregationInput[]
    by: VerificationPricingScalarFieldEnum[] | VerificationPricingScalarFieldEnum
    having?: VerificationPricingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationPricingCountAggregateInputType | true
    _avg?: VerificationPricingAvgAggregateInputType
    _sum?: VerificationPricingSumAggregateInputType
    _min?: VerificationPricingMinAggregateInputType
    _max?: VerificationPricingMaxAggregateInputType
  }

  export type VerificationPricingGroupByOutputType = {
    id: string
    name: string
    cost: number
    description: string
    isActive: boolean
    features: JsonValue | null
    duration: number
    createdAt: Date
    updatedAt: Date
    _count: VerificationPricingCountAggregateOutputType | null
    _avg: VerificationPricingAvgAggregateOutputType | null
    _sum: VerificationPricingSumAggregateOutputType | null
    _min: VerificationPricingMinAggregateOutputType | null
    _max: VerificationPricingMaxAggregateOutputType | null
  }

  type GetVerificationPricingGroupByPayload<T extends VerificationPricingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationPricingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationPricingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationPricingGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationPricingGroupByOutputType[P]>
        }
      >
    >


  export type VerificationPricingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cost?: boolean
    description?: boolean
    isActive?: boolean
    features?: boolean
    duration?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    verifications?: boolean | VerificationPricing$verificationsArgs<ExtArgs>
    _count?: boolean | VerificationPricingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["verificationPricing"]>

  export type VerificationPricingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    cost?: boolean
    description?: boolean
    isActive?: boolean
    features?: boolean
    duration?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verificationPricing"]>

  export type VerificationPricingSelectScalar = {
    id?: boolean
    name?: boolean
    cost?: boolean
    description?: boolean
    isActive?: boolean
    features?: boolean
    duration?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VerificationPricingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    verifications?: boolean | VerificationPricing$verificationsArgs<ExtArgs>
    _count?: boolean | VerificationPricingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VerificationPricingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $VerificationPricingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationPricing"
    objects: {
      verifications: Prisma.$EscortVerificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      cost: number
      description: string
      isActive: boolean
      features: Prisma.JsonValue | null
      duration: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["verificationPricing"]>
    composites: {}
  }

  type VerificationPricingGetPayload<S extends boolean | null | undefined | VerificationPricingDefaultArgs> = $Result.GetResult<Prisma.$VerificationPricingPayload, S>

  type VerificationPricingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<VerificationPricingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VerificationPricingCountAggregateInputType | true
    }

  export interface VerificationPricingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationPricing'], meta: { name: 'VerificationPricing' } }
    /**
     * Find zero or one VerificationPricing that matches the filter.
     * @param {VerificationPricingFindUniqueArgs} args - Arguments to find a VerificationPricing
     * @example
     * // Get one VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationPricingFindUniqueArgs>(args: SelectSubset<T, VerificationPricingFindUniqueArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one VerificationPricing that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {VerificationPricingFindUniqueOrThrowArgs} args - Arguments to find a VerificationPricing
     * @example
     * // Get one VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationPricingFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationPricingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first VerificationPricing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingFindFirstArgs} args - Arguments to find a VerificationPricing
     * @example
     * // Get one VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationPricingFindFirstArgs>(args?: SelectSubset<T, VerificationPricingFindFirstArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first VerificationPricing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingFindFirstOrThrowArgs} args - Arguments to find a VerificationPricing
     * @example
     * // Get one VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationPricingFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationPricingFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more VerificationPricings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationPricings
     * const verificationPricings = await prisma.verificationPricing.findMany()
     * 
     * // Get first 10 VerificationPricings
     * const verificationPricings = await prisma.verificationPricing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationPricingWithIdOnly = await prisma.verificationPricing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationPricingFindManyArgs>(args?: SelectSubset<T, VerificationPricingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a VerificationPricing.
     * @param {VerificationPricingCreateArgs} args - Arguments to create a VerificationPricing.
     * @example
     * // Create one VerificationPricing
     * const VerificationPricing = await prisma.verificationPricing.create({
     *   data: {
     *     // ... data to create a VerificationPricing
     *   }
     * })
     * 
     */
    create<T extends VerificationPricingCreateArgs>(args: SelectSubset<T, VerificationPricingCreateArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many VerificationPricings.
     * @param {VerificationPricingCreateManyArgs} args - Arguments to create many VerificationPricings.
     * @example
     * // Create many VerificationPricings
     * const verificationPricing = await prisma.verificationPricing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationPricingCreateManyArgs>(args?: SelectSubset<T, VerificationPricingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationPricings and returns the data saved in the database.
     * @param {VerificationPricingCreateManyAndReturnArgs} args - Arguments to create many VerificationPricings.
     * @example
     * // Create many VerificationPricings
     * const verificationPricing = await prisma.verificationPricing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationPricings and only return the `id`
     * const verificationPricingWithIdOnly = await prisma.verificationPricing.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationPricingCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationPricingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a VerificationPricing.
     * @param {VerificationPricingDeleteArgs} args - Arguments to delete one VerificationPricing.
     * @example
     * // Delete one VerificationPricing
     * const VerificationPricing = await prisma.verificationPricing.delete({
     *   where: {
     *     // ... filter to delete one VerificationPricing
     *   }
     * })
     * 
     */
    delete<T extends VerificationPricingDeleteArgs>(args: SelectSubset<T, VerificationPricingDeleteArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one VerificationPricing.
     * @param {VerificationPricingUpdateArgs} args - Arguments to update one VerificationPricing.
     * @example
     * // Update one VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationPricingUpdateArgs>(args: SelectSubset<T, VerificationPricingUpdateArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more VerificationPricings.
     * @param {VerificationPricingDeleteManyArgs} args - Arguments to filter VerificationPricings to delete.
     * @example
     * // Delete a few VerificationPricings
     * const { count } = await prisma.verificationPricing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationPricingDeleteManyArgs>(args?: SelectSubset<T, VerificationPricingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationPricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationPricings
     * const verificationPricing = await prisma.verificationPricing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationPricingUpdateManyArgs>(args: SelectSubset<T, VerificationPricingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one VerificationPricing.
     * @param {VerificationPricingUpsertArgs} args - Arguments to update or create a VerificationPricing.
     * @example
     * // Update or create a VerificationPricing
     * const verificationPricing = await prisma.verificationPricing.upsert({
     *   create: {
     *     // ... data to create a VerificationPricing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationPricing we want to update
     *   }
     * })
     */
    upsert<T extends VerificationPricingUpsertArgs>(args: SelectSubset<T, VerificationPricingUpsertArgs<ExtArgs>>): Prisma__VerificationPricingClient<$Result.GetResult<Prisma.$VerificationPricingPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of VerificationPricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingCountArgs} args - Arguments to filter VerificationPricings to count.
     * @example
     * // Count the number of VerificationPricings
     * const count = await prisma.verificationPricing.count({
     *   where: {
     *     // ... the filter for the VerificationPricings we want to count
     *   }
     * })
    **/
    count<T extends VerificationPricingCountArgs>(
      args?: Subset<T, VerificationPricingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationPricingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationPricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationPricingAggregateArgs>(args: Subset<T, VerificationPricingAggregateArgs>): Prisma.PrismaPromise<GetVerificationPricingAggregateType<T>>

    /**
     * Group by VerificationPricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationPricingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationPricingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationPricingGroupByArgs['orderBy'] }
        : { orderBy?: VerificationPricingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationPricingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationPricingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationPricing model
   */
  readonly fields: VerificationPricingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationPricing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationPricingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    verifications<T extends VerificationPricing$verificationsArgs<ExtArgs> = {}>(args?: Subset<T, VerificationPricing$verificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscortVerificationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationPricing model
   */ 
  interface VerificationPricingFieldRefs {
    readonly id: FieldRef<"VerificationPricing", 'String'>
    readonly name: FieldRef<"VerificationPricing", 'String'>
    readonly cost: FieldRef<"VerificationPricing", 'Float'>
    readonly description: FieldRef<"VerificationPricing", 'String'>
    readonly isActive: FieldRef<"VerificationPricing", 'Boolean'>
    readonly features: FieldRef<"VerificationPricing", 'Json'>
    readonly duration: FieldRef<"VerificationPricing", 'Int'>
    readonly createdAt: FieldRef<"VerificationPricing", 'DateTime'>
    readonly updatedAt: FieldRef<"VerificationPricing", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationPricing findUnique
   */
  export type VerificationPricingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter, which VerificationPricing to fetch.
     */
    where: VerificationPricingWhereUniqueInput
  }

  /**
   * VerificationPricing findUniqueOrThrow
   */
  export type VerificationPricingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter, which VerificationPricing to fetch.
     */
    where: VerificationPricingWhereUniqueInput
  }

  /**
   * VerificationPricing findFirst
   */
  export type VerificationPricingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter, which VerificationPricing to fetch.
     */
    where?: VerificationPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationPricings to fetch.
     */
    orderBy?: VerificationPricingOrderByWithRelationInput | VerificationPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationPricings.
     */
    cursor?: VerificationPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationPricings.
     */
    distinct?: VerificationPricingScalarFieldEnum | VerificationPricingScalarFieldEnum[]
  }

  /**
   * VerificationPricing findFirstOrThrow
   */
  export type VerificationPricingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter, which VerificationPricing to fetch.
     */
    where?: VerificationPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationPricings to fetch.
     */
    orderBy?: VerificationPricingOrderByWithRelationInput | VerificationPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationPricings.
     */
    cursor?: VerificationPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationPricings.
     */
    distinct?: VerificationPricingScalarFieldEnum | VerificationPricingScalarFieldEnum[]
  }

  /**
   * VerificationPricing findMany
   */
  export type VerificationPricingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter, which VerificationPricings to fetch.
     */
    where?: VerificationPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationPricings to fetch.
     */
    orderBy?: VerificationPricingOrderByWithRelationInput | VerificationPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationPricings.
     */
    cursor?: VerificationPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationPricings.
     */
    skip?: number
    distinct?: VerificationPricingScalarFieldEnum | VerificationPricingScalarFieldEnum[]
  }

  /**
   * VerificationPricing create
   */
  export type VerificationPricingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * The data needed to create a VerificationPricing.
     */
    data: XOR<VerificationPricingCreateInput, VerificationPricingUncheckedCreateInput>
  }

  /**
   * VerificationPricing createMany
   */
  export type VerificationPricingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationPricings.
     */
    data: VerificationPricingCreateManyInput | VerificationPricingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationPricing createManyAndReturn
   */
  export type VerificationPricingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many VerificationPricings.
     */
    data: VerificationPricingCreateManyInput | VerificationPricingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationPricing update
   */
  export type VerificationPricingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * The data needed to update a VerificationPricing.
     */
    data: XOR<VerificationPricingUpdateInput, VerificationPricingUncheckedUpdateInput>
    /**
     * Choose, which VerificationPricing to update.
     */
    where: VerificationPricingWhereUniqueInput
  }

  /**
   * VerificationPricing updateMany
   */
  export type VerificationPricingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationPricings.
     */
    data: XOR<VerificationPricingUpdateManyMutationInput, VerificationPricingUncheckedUpdateManyInput>
    /**
     * Filter which VerificationPricings to update
     */
    where?: VerificationPricingWhereInput
  }

  /**
   * VerificationPricing upsert
   */
  export type VerificationPricingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * The filter to search for the VerificationPricing to update in case it exists.
     */
    where: VerificationPricingWhereUniqueInput
    /**
     * In case the VerificationPricing found by the `where` argument doesn't exist, create a new VerificationPricing with this data.
     */
    create: XOR<VerificationPricingCreateInput, VerificationPricingUncheckedCreateInput>
    /**
     * In case the VerificationPricing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationPricingUpdateInput, VerificationPricingUncheckedUpdateInput>
  }

  /**
   * VerificationPricing delete
   */
  export type VerificationPricingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
    /**
     * Filter which VerificationPricing to delete.
     */
    where: VerificationPricingWhereUniqueInput
  }

  /**
   * VerificationPricing deleteMany
   */
  export type VerificationPricingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationPricings to delete
     */
    where?: VerificationPricingWhereInput
  }

  /**
   * VerificationPricing.verifications
   */
  export type VerificationPricing$verificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscortVerification
     */
    select?: EscortVerificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscortVerificationInclude<ExtArgs> | null
    where?: EscortVerificationWhereInput
    orderBy?: EscortVerificationOrderByWithRelationInput | EscortVerificationOrderByWithRelationInput[]
    cursor?: EscortVerificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscortVerificationScalarFieldEnum | EscortVerificationScalarFieldEnum[]
  }

  /**
   * VerificationPricing without action
   */
  export type VerificationPricingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationPricing
     */
    select?: VerificationPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationPricingInclude<ExtArgs> | null
  }


  /**
   * Model BoostPricing
   */

  export type AggregateBoostPricing = {
    _count: BoostPricingCountAggregateOutputType | null
    _avg: BoostPricingAvgAggregateOutputType | null
    _sum: BoostPricingSumAggregateOutputType | null
    _min: BoostPricingMinAggregateOutputType | null
    _max: BoostPricingMaxAggregateOutputType | null
  }

  export type BoostPricingAvgAggregateOutputType = {
    duration: number | null
    price: number | null
    multiplier: number | null
    maxBoosts: number | null
  }

  export type BoostPricingSumAggregateOutputType = {
    duration: number | null
    price: number | null
    multiplier: number | null
    maxBoosts: number | null
  }

  export type BoostPricingMinAggregateOutputType = {
    id: string | null
    type: $Enums.BoostType | null
    duration: number | null
    price: number | null
    isActive: boolean | null
    multiplier: number | null
    maxBoosts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BoostPricingMaxAggregateOutputType = {
    id: string | null
    type: $Enums.BoostType | null
    duration: number | null
    price: number | null
    isActive: boolean | null
    multiplier: number | null
    maxBoosts: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BoostPricingCountAggregateOutputType = {
    id: number
    type: number
    duration: number
    price: number
    isActive: number
    multiplier: number
    features: number
    maxBoosts: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BoostPricingAvgAggregateInputType = {
    duration?: true
    price?: true
    multiplier?: true
    maxBoosts?: true
  }

  export type BoostPricingSumAggregateInputType = {
    duration?: true
    price?: true
    multiplier?: true
    maxBoosts?: true
  }

  export type BoostPricingMinAggregateInputType = {
    id?: true
    type?: true
    duration?: true
    price?: true
    isActive?: true
    multiplier?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BoostPricingMaxAggregateInputType = {
    id?: true
    type?: true
    duration?: true
    price?: true
    isActive?: true
    multiplier?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BoostPricingCountAggregateInputType = {
    id?: true
    type?: true
    duration?: true
    price?: true
    isActive?: true
    multiplier?: true
    features?: true
    maxBoosts?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BoostPricingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BoostPricing to aggregate.
     */
    where?: BoostPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BoostPricings to fetch.
     */
    orderBy?: BoostPricingOrderByWithRelationInput | BoostPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BoostPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BoostPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BoostPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BoostPricings
    **/
    _count?: true | BoostPricingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BoostPricingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BoostPricingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BoostPricingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BoostPricingMaxAggregateInputType
  }

  export type GetBoostPricingAggregateType<T extends BoostPricingAggregateArgs> = {
        [P in keyof T & keyof AggregateBoostPricing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBoostPricing[P]>
      : GetScalarType<T[P], AggregateBoostPricing[P]>
  }




  export type BoostPricingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BoostPricingWhereInput
    orderBy?: BoostPricingOrderByWithAggregationInput | BoostPricingOrderByWithAggregationInput[]
    by: BoostPricingScalarFieldEnum[] | BoostPricingScalarFieldEnum
    having?: BoostPricingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BoostPricingCountAggregateInputType | true
    _avg?: BoostPricingAvgAggregateInputType
    _sum?: BoostPricingSumAggregateInputType
    _min?: BoostPricingMinAggregateInputType
    _max?: BoostPricingMaxAggregateInputType
  }

  export type BoostPricingGroupByOutputType = {
    id: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive: boolean
    multiplier: number
    features: JsonValue | null
    maxBoosts: number | null
    createdAt: Date
    updatedAt: Date
    _count: BoostPricingCountAggregateOutputType | null
    _avg: BoostPricingAvgAggregateOutputType | null
    _sum: BoostPricingSumAggregateOutputType | null
    _min: BoostPricingMinAggregateOutputType | null
    _max: BoostPricingMaxAggregateOutputType | null
  }

  type GetBoostPricingGroupByPayload<T extends BoostPricingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BoostPricingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BoostPricingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BoostPricingGroupByOutputType[P]>
            : GetScalarType<T[P], BoostPricingGroupByOutputType[P]>
        }
      >
    >


  export type BoostPricingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    duration?: boolean
    price?: boolean
    isActive?: boolean
    multiplier?: boolean
    features?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    boosts?: boolean | BoostPricing$boostsArgs<ExtArgs>
    _count?: boolean | BoostPricingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["boostPricing"]>

  export type BoostPricingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    duration?: boolean
    price?: boolean
    isActive?: boolean
    multiplier?: boolean
    features?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["boostPricing"]>

  export type BoostPricingSelectScalar = {
    id?: boolean
    type?: boolean
    duration?: boolean
    price?: boolean
    isActive?: boolean
    multiplier?: boolean
    features?: boolean
    maxBoosts?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BoostPricingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boosts?: boolean | BoostPricing$boostsArgs<ExtArgs>
    _count?: boolean | BoostPricingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BoostPricingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BoostPricingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BoostPricing"
    objects: {
      boosts: Prisma.$BoostPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      type: $Enums.BoostType
      duration: number
      price: number
      isActive: boolean
      multiplier: number
      features: Prisma.JsonValue | null
      maxBoosts: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["boostPricing"]>
    composites: {}
  }

  type BoostPricingGetPayload<S extends boolean | null | undefined | BoostPricingDefaultArgs> = $Result.GetResult<Prisma.$BoostPricingPayload, S>

  type BoostPricingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BoostPricingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BoostPricingCountAggregateInputType | true
    }

  export interface BoostPricingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BoostPricing'], meta: { name: 'BoostPricing' } }
    /**
     * Find zero or one BoostPricing that matches the filter.
     * @param {BoostPricingFindUniqueArgs} args - Arguments to find a BoostPricing
     * @example
     * // Get one BoostPricing
     * const boostPricing = await prisma.boostPricing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BoostPricingFindUniqueArgs>(args: SelectSubset<T, BoostPricingFindUniqueArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BoostPricing that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BoostPricingFindUniqueOrThrowArgs} args - Arguments to find a BoostPricing
     * @example
     * // Get one BoostPricing
     * const boostPricing = await prisma.boostPricing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BoostPricingFindUniqueOrThrowArgs>(args: SelectSubset<T, BoostPricingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BoostPricing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingFindFirstArgs} args - Arguments to find a BoostPricing
     * @example
     * // Get one BoostPricing
     * const boostPricing = await prisma.boostPricing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BoostPricingFindFirstArgs>(args?: SelectSubset<T, BoostPricingFindFirstArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BoostPricing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingFindFirstOrThrowArgs} args - Arguments to find a BoostPricing
     * @example
     * // Get one BoostPricing
     * const boostPricing = await prisma.boostPricing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BoostPricingFindFirstOrThrowArgs>(args?: SelectSubset<T, BoostPricingFindFirstOrThrowArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BoostPricings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BoostPricings
     * const boostPricings = await prisma.boostPricing.findMany()
     * 
     * // Get first 10 BoostPricings
     * const boostPricings = await prisma.boostPricing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const boostPricingWithIdOnly = await prisma.boostPricing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BoostPricingFindManyArgs>(args?: SelectSubset<T, BoostPricingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BoostPricing.
     * @param {BoostPricingCreateArgs} args - Arguments to create a BoostPricing.
     * @example
     * // Create one BoostPricing
     * const BoostPricing = await prisma.boostPricing.create({
     *   data: {
     *     // ... data to create a BoostPricing
     *   }
     * })
     * 
     */
    create<T extends BoostPricingCreateArgs>(args: SelectSubset<T, BoostPricingCreateArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BoostPricings.
     * @param {BoostPricingCreateManyArgs} args - Arguments to create many BoostPricings.
     * @example
     * // Create many BoostPricings
     * const boostPricing = await prisma.boostPricing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BoostPricingCreateManyArgs>(args?: SelectSubset<T, BoostPricingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BoostPricings and returns the data saved in the database.
     * @param {BoostPricingCreateManyAndReturnArgs} args - Arguments to create many BoostPricings.
     * @example
     * // Create many BoostPricings
     * const boostPricing = await prisma.boostPricing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BoostPricings and only return the `id`
     * const boostPricingWithIdOnly = await prisma.boostPricing.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BoostPricingCreateManyAndReturnArgs>(args?: SelectSubset<T, BoostPricingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BoostPricing.
     * @param {BoostPricingDeleteArgs} args - Arguments to delete one BoostPricing.
     * @example
     * // Delete one BoostPricing
     * const BoostPricing = await prisma.boostPricing.delete({
     *   where: {
     *     // ... filter to delete one BoostPricing
     *   }
     * })
     * 
     */
    delete<T extends BoostPricingDeleteArgs>(args: SelectSubset<T, BoostPricingDeleteArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BoostPricing.
     * @param {BoostPricingUpdateArgs} args - Arguments to update one BoostPricing.
     * @example
     * // Update one BoostPricing
     * const boostPricing = await prisma.boostPricing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BoostPricingUpdateArgs>(args: SelectSubset<T, BoostPricingUpdateArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BoostPricings.
     * @param {BoostPricingDeleteManyArgs} args - Arguments to filter BoostPricings to delete.
     * @example
     * // Delete a few BoostPricings
     * const { count } = await prisma.boostPricing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BoostPricingDeleteManyArgs>(args?: SelectSubset<T, BoostPricingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BoostPricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BoostPricings
     * const boostPricing = await prisma.boostPricing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BoostPricingUpdateManyArgs>(args: SelectSubset<T, BoostPricingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BoostPricing.
     * @param {BoostPricingUpsertArgs} args - Arguments to update or create a BoostPricing.
     * @example
     * // Update or create a BoostPricing
     * const boostPricing = await prisma.boostPricing.upsert({
     *   create: {
     *     // ... data to create a BoostPricing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BoostPricing we want to update
     *   }
     * })
     */
    upsert<T extends BoostPricingUpsertArgs>(args: SelectSubset<T, BoostPricingUpsertArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BoostPricings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingCountArgs} args - Arguments to filter BoostPricings to count.
     * @example
     * // Count the number of BoostPricings
     * const count = await prisma.boostPricing.count({
     *   where: {
     *     // ... the filter for the BoostPricings we want to count
     *   }
     * })
    **/
    count<T extends BoostPricingCountArgs>(
      args?: Subset<T, BoostPricingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BoostPricingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BoostPricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BoostPricingAggregateArgs>(args: Subset<T, BoostPricingAggregateArgs>): Prisma.PrismaPromise<GetBoostPricingAggregateType<T>>

    /**
     * Group by BoostPricing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostPricingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BoostPricingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BoostPricingGroupByArgs['orderBy'] }
        : { orderBy?: BoostPricingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BoostPricingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBoostPricingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BoostPricing model
   */
  readonly fields: BoostPricingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BoostPricing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BoostPricingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    boosts<T extends BoostPricing$boostsArgs<ExtArgs> = {}>(args?: Subset<T, BoostPricing$boostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BoostPricing model
   */ 
  interface BoostPricingFieldRefs {
    readonly id: FieldRef<"BoostPricing", 'String'>
    readonly type: FieldRef<"BoostPricing", 'BoostType'>
    readonly duration: FieldRef<"BoostPricing", 'Int'>
    readonly price: FieldRef<"BoostPricing", 'Float'>
    readonly isActive: FieldRef<"BoostPricing", 'Boolean'>
    readonly multiplier: FieldRef<"BoostPricing", 'Float'>
    readonly features: FieldRef<"BoostPricing", 'Json'>
    readonly maxBoosts: FieldRef<"BoostPricing", 'Int'>
    readonly createdAt: FieldRef<"BoostPricing", 'DateTime'>
    readonly updatedAt: FieldRef<"BoostPricing", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BoostPricing findUnique
   */
  export type BoostPricingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter, which BoostPricing to fetch.
     */
    where: BoostPricingWhereUniqueInput
  }

  /**
   * BoostPricing findUniqueOrThrow
   */
  export type BoostPricingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter, which BoostPricing to fetch.
     */
    where: BoostPricingWhereUniqueInput
  }

  /**
   * BoostPricing findFirst
   */
  export type BoostPricingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter, which BoostPricing to fetch.
     */
    where?: BoostPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BoostPricings to fetch.
     */
    orderBy?: BoostPricingOrderByWithRelationInput | BoostPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BoostPricings.
     */
    cursor?: BoostPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BoostPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BoostPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BoostPricings.
     */
    distinct?: BoostPricingScalarFieldEnum | BoostPricingScalarFieldEnum[]
  }

  /**
   * BoostPricing findFirstOrThrow
   */
  export type BoostPricingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter, which BoostPricing to fetch.
     */
    where?: BoostPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BoostPricings to fetch.
     */
    orderBy?: BoostPricingOrderByWithRelationInput | BoostPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BoostPricings.
     */
    cursor?: BoostPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BoostPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BoostPricings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BoostPricings.
     */
    distinct?: BoostPricingScalarFieldEnum | BoostPricingScalarFieldEnum[]
  }

  /**
   * BoostPricing findMany
   */
  export type BoostPricingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter, which BoostPricings to fetch.
     */
    where?: BoostPricingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BoostPricings to fetch.
     */
    orderBy?: BoostPricingOrderByWithRelationInput | BoostPricingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BoostPricings.
     */
    cursor?: BoostPricingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BoostPricings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BoostPricings.
     */
    skip?: number
    distinct?: BoostPricingScalarFieldEnum | BoostPricingScalarFieldEnum[]
  }

  /**
   * BoostPricing create
   */
  export type BoostPricingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * The data needed to create a BoostPricing.
     */
    data: XOR<BoostPricingCreateInput, BoostPricingUncheckedCreateInput>
  }

  /**
   * BoostPricing createMany
   */
  export type BoostPricingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BoostPricings.
     */
    data: BoostPricingCreateManyInput | BoostPricingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BoostPricing createManyAndReturn
   */
  export type BoostPricingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BoostPricings.
     */
    data: BoostPricingCreateManyInput | BoostPricingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BoostPricing update
   */
  export type BoostPricingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * The data needed to update a BoostPricing.
     */
    data: XOR<BoostPricingUpdateInput, BoostPricingUncheckedUpdateInput>
    /**
     * Choose, which BoostPricing to update.
     */
    where: BoostPricingWhereUniqueInput
  }

  /**
   * BoostPricing updateMany
   */
  export type BoostPricingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BoostPricings.
     */
    data: XOR<BoostPricingUpdateManyMutationInput, BoostPricingUncheckedUpdateManyInput>
    /**
     * Filter which BoostPricings to update
     */
    where?: BoostPricingWhereInput
  }

  /**
   * BoostPricing upsert
   */
  export type BoostPricingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * The filter to search for the BoostPricing to update in case it exists.
     */
    where: BoostPricingWhereUniqueInput
    /**
     * In case the BoostPricing found by the `where` argument doesn't exist, create a new BoostPricing with this data.
     */
    create: XOR<BoostPricingCreateInput, BoostPricingUncheckedCreateInput>
    /**
     * In case the BoostPricing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BoostPricingUpdateInput, BoostPricingUncheckedUpdateInput>
  }

  /**
   * BoostPricing delete
   */
  export type BoostPricingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
    /**
     * Filter which BoostPricing to delete.
     */
    where: BoostPricingWhereUniqueInput
  }

  /**
   * BoostPricing deleteMany
   */
  export type BoostPricingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BoostPricings to delete
     */
    where?: BoostPricingWhereInput
  }

  /**
   * BoostPricing.boosts
   */
  export type BoostPricing$boostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    where?: BoostWhereInput
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    cursor?: BoostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * BoostPricing without action
   */
  export type BoostPricingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BoostPricing
     */
    select?: BoostPricingSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostPricingInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    views: number | null
    viewsToday: number | null
    clicks: number | null
    clicksToday: number | null
    score: number | null
    engagementRate: number | null
    trendingScore: number | null
    discoveryScore: number | null
    qualityScore: number | null
    uniqueViews: number | null
    totalTime: number | null
    bounceRate: number | null
    whatsappClicks: number | null
    age: number | null
  }

  export type PostSumAggregateOutputType = {
    views: number | null
    viewsToday: number | null
    clicks: number | null
    clicksToday: number | null
    score: number | null
    engagementRate: number | null
    trendingScore: number | null
    discoveryScore: number | null
    qualityScore: number | null
    uniqueViews: number | null
    totalTime: number | null
    bounceRate: number | null
    whatsappClicks: number | null
    age: number | null
  }

  export type PostMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    phone: string | null
    isActive: boolean | null
    views: number | null
    viewsToday: number | null
    clicks: number | null
    clicksToday: number | null
    score: number | null
    engagementRate: number | null
    lastBoosted: Date | null
    locationId: string | null
    trendingScore: number | null
    isTrending: boolean | null
    isFeatured: boolean | null
    discoveryScore: number | null
    qualityScore: number | null
    lastScoreUpdate: Date | null
    isPrivate: boolean | null
    premiumOnly: boolean | null
    uniqueViews: number | null
    totalTime: number | null
    bounceRate: number | null
    whatsappClicks: number | null
    hasActiveBoost: boolean | null
    boostEndsAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    expiresAt: Date | null
    authorId: string | null
    age: number | null
    location: string | null
    sexo: string | null
  }

  export type PostMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    phone: string | null
    isActive: boolean | null
    views: number | null
    viewsToday: number | null
    clicks: number | null
    clicksToday: number | null
    score: number | null
    engagementRate: number | null
    lastBoosted: Date | null
    locationId: string | null
    trendingScore: number | null
    isTrending: boolean | null
    isFeatured: boolean | null
    discoveryScore: number | null
    qualityScore: number | null
    lastScoreUpdate: Date | null
    isPrivate: boolean | null
    premiumOnly: boolean | null
    uniqueViews: number | null
    totalTime: number | null
    bounceRate: number | null
    whatsappClicks: number | null
    hasActiveBoost: boolean | null
    boostEndsAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    expiresAt: Date | null
    authorId: string | null
    age: number | null
    location: string | null
    sexo: string | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    title: number
    description: number
    images: number
    phone: number
    isActive: number
    views: number
    viewsToday: number
    clicks: number
    clicksToday: number
    score: number
    engagementRate: number
    lastBoosted: number
    locationId: number
    rates: number
    availability: number
    trendingScore: number
    isTrending: number
    isFeatured: number
    discoveryScore: number
    qualityScore: number
    lastScoreUpdate: number
    isPrivate: number
    premiumOnly: number
    uniqueViews: number
    totalTime: number
    bounceRate: number
    whatsappClicks: number
    hasActiveBoost: number
    boostEndsAt: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    expiresAt: number
    authorId: number
    age: number
    location: number
    services: number
    sexo: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    views?: true
    viewsToday?: true
    clicks?: true
    clicksToday?: true
    score?: true
    engagementRate?: true
    trendingScore?: true
    discoveryScore?: true
    qualityScore?: true
    uniqueViews?: true
    totalTime?: true
    bounceRate?: true
    whatsappClicks?: true
    age?: true
  }

  export type PostSumAggregateInputType = {
    views?: true
    viewsToday?: true
    clicks?: true
    clicksToday?: true
    score?: true
    engagementRate?: true
    trendingScore?: true
    discoveryScore?: true
    qualityScore?: true
    uniqueViews?: true
    totalTime?: true
    bounceRate?: true
    whatsappClicks?: true
    age?: true
  }

  export type PostMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    phone?: true
    isActive?: true
    views?: true
    viewsToday?: true
    clicks?: true
    clicksToday?: true
    score?: true
    engagementRate?: true
    lastBoosted?: true
    locationId?: true
    trendingScore?: true
    isTrending?: true
    isFeatured?: true
    discoveryScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    isPrivate?: true
    premiumOnly?: true
    uniqueViews?: true
    totalTime?: true
    bounceRate?: true
    whatsappClicks?: true
    hasActiveBoost?: true
    boostEndsAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    expiresAt?: true
    authorId?: true
    age?: true
    location?: true
    sexo?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    phone?: true
    isActive?: true
    views?: true
    viewsToday?: true
    clicks?: true
    clicksToday?: true
    score?: true
    engagementRate?: true
    lastBoosted?: true
    locationId?: true
    trendingScore?: true
    isTrending?: true
    isFeatured?: true
    discoveryScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    isPrivate?: true
    premiumOnly?: true
    uniqueViews?: true
    totalTime?: true
    bounceRate?: true
    whatsappClicks?: true
    hasActiveBoost?: true
    boostEndsAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    expiresAt?: true
    authorId?: true
    age?: true
    location?: true
    sexo?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    images?: true
    phone?: true
    isActive?: true
    views?: true
    viewsToday?: true
    clicks?: true
    clicksToday?: true
    score?: true
    engagementRate?: true
    lastBoosted?: true
    locationId?: true
    rates?: true
    availability?: true
    trendingScore?: true
    isTrending?: true
    isFeatured?: true
    discoveryScore?: true
    qualityScore?: true
    lastScoreUpdate?: true
    isPrivate?: true
    premiumOnly?: true
    uniqueViews?: true
    totalTime?: true
    bounceRate?: true
    whatsappClicks?: true
    hasActiveBoost?: true
    boostEndsAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    expiresAt?: true
    authorId?: true
    age?: true
    location?: true
    services?: true
    sexo?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: string
    title: string
    description: string
    images: string[]
    phone: string
    isActive: boolean
    views: number
    viewsToday: number
    clicks: number
    clicksToday: number
    score: number
    engagementRate: number
    lastBoosted: Date | null
    locationId: string | null
    rates: JsonValue | null
    availability: JsonValue | null
    trendingScore: number
    isTrending: boolean
    isFeatured: boolean
    discoveryScore: number
    qualityScore: number
    lastScoreUpdate: Date
    isPrivate: boolean
    premiumOnly: boolean
    uniqueViews: number
    totalTime: number
    bounceRate: number
    whatsappClicks: number
    hasActiveBoost: boolean
    boostEndsAt: Date | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    expiresAt: Date | null
    authorId: string
    age: number | null
    location: string | null
    services: string[]
    sexo: string | null
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    images?: boolean
    phone?: boolean
    isActive?: boolean
    views?: boolean
    viewsToday?: boolean
    clicks?: boolean
    clicksToday?: boolean
    score?: boolean
    engagementRate?: boolean
    lastBoosted?: boolean
    locationId?: boolean
    rates?: boolean
    availability?: boolean
    trendingScore?: boolean
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: boolean
    totalTime?: boolean
    bounceRate?: boolean
    whatsappClicks?: boolean
    hasActiveBoost?: boolean
    boostEndsAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    expiresAt?: boolean
    authorId?: boolean
    age?: boolean
    location?: boolean
    services?: boolean
    sexo?: boolean
    boosts?: boolean | Post$boostsArgs<ExtArgs>
    favorites?: boolean | Post$favoritesArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    tags?: boolean | Post$tagsArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    locationRef?: boolean | Post$locationRefArgs<ExtArgs>
    reports?: boolean | Post$reportsArgs<ExtArgs>
    trendingHistory?: boolean | Post$trendingHistoryArgs<ExtArgs>
    interactions?: boolean | Post$interactionsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    images?: boolean
    phone?: boolean
    isActive?: boolean
    views?: boolean
    viewsToday?: boolean
    clicks?: boolean
    clicksToday?: boolean
    score?: boolean
    engagementRate?: boolean
    lastBoosted?: boolean
    locationId?: boolean
    rates?: boolean
    availability?: boolean
    trendingScore?: boolean
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: boolean
    totalTime?: boolean
    bounceRate?: boolean
    whatsappClicks?: boolean
    hasActiveBoost?: boolean
    boostEndsAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    expiresAt?: boolean
    authorId?: boolean
    age?: boolean
    location?: boolean
    services?: boolean
    sexo?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    locationRef?: boolean | Post$locationRefArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    images?: boolean
    phone?: boolean
    isActive?: boolean
    views?: boolean
    viewsToday?: boolean
    clicks?: boolean
    clicksToday?: boolean
    score?: boolean
    engagementRate?: boolean
    lastBoosted?: boolean
    locationId?: boolean
    rates?: boolean
    availability?: boolean
    trendingScore?: boolean
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: boolean
    qualityScore?: boolean
    lastScoreUpdate?: boolean
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: boolean
    totalTime?: boolean
    bounceRate?: boolean
    whatsappClicks?: boolean
    hasActiveBoost?: boolean
    boostEndsAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    expiresAt?: boolean
    authorId?: boolean
    age?: boolean
    location?: boolean
    services?: boolean
    sexo?: boolean
  }

  export type PostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    boosts?: boolean | Post$boostsArgs<ExtArgs>
    favorites?: boolean | Post$favoritesArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    tags?: boolean | Post$tagsArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    locationRef?: boolean | Post$locationRefArgs<ExtArgs>
    reports?: boolean | Post$reportsArgs<ExtArgs>
    trendingHistory?: boolean | Post$trendingHistoryArgs<ExtArgs>
    interactions?: boolean | Post$interactionsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    locationRef?: boolean | Post$locationRefArgs<ExtArgs>
  }

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {
      boosts: Prisma.$BoostPayload<ExtArgs>[]
      favorites: Prisma.$FavoritePayload<ExtArgs>[]
      likes: Prisma.$LikePayload<ExtArgs>[]
      tags: Prisma.$PostTagPayload<ExtArgs>[]
      author: Prisma.$UserPayload<ExtArgs>
      locationRef: Prisma.$LocationPayload<ExtArgs> | null
      reports: Prisma.$ReportPayload<ExtArgs>[]
      trendingHistory: Prisma.$TrendingHistoryPayload<ExtArgs>[]
      interactions: Prisma.$UserInteractionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string
      images: string[]
      phone: string
      isActive: boolean
      views: number
      viewsToday: number
      clicks: number
      clicksToday: number
      score: number
      engagementRate: number
      lastBoosted: Date | null
      locationId: string | null
      rates: Prisma.JsonValue | null
      availability: Prisma.JsonValue | null
      trendingScore: number
      isTrending: boolean
      isFeatured: boolean
      discoveryScore: number
      qualityScore: number
      lastScoreUpdate: Date
      isPrivate: boolean
      premiumOnly: boolean
      uniqueViews: number
      totalTime: number
      bounceRate: number
      whatsappClicks: number
      hasActiveBoost: boolean
      boostEndsAt: Date | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      expiresAt: Date | null
      authorId: string
      age: number | null
      location: string | null
      services: string[]
      sexo: string | null
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {PostCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `id`
     * const postWithIdOnly = await prisma.post.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostCreateManyAndReturnArgs>(args?: SelectSubset<T, PostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    boosts<T extends Post$boostsArgs<ExtArgs> = {}>(args?: Subset<T, Post$boostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findMany"> | Null>
    favorites<T extends Post$favoritesArgs<ExtArgs> = {}>(args?: Subset<T, Post$favoritesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany"> | Null>
    likes<T extends Post$likesArgs<ExtArgs> = {}>(args?: Subset<T, Post$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany"> | Null>
    tags<T extends Post$tagsArgs<ExtArgs> = {}>(args?: Subset<T, Post$tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostTagPayload<ExtArgs>, T, "findMany"> | Null>
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    locationRef<T extends Post$locationRefArgs<ExtArgs> = {}>(args?: Subset<T, Post$locationRefArgs<ExtArgs>>): Prisma__LocationClient<$Result.GetResult<Prisma.$LocationPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    reports<T extends Post$reportsArgs<ExtArgs> = {}>(args?: Subset<T, Post$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany"> | Null>
    trendingHistory<T extends Post$trendingHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Post$trendingHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    interactions<T extends Post$interactionsArgs<ExtArgs> = {}>(args?: Subset<T, Post$interactionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserInteractionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */ 
  interface PostFieldRefs {
    readonly id: FieldRef<"Post", 'String'>
    readonly title: FieldRef<"Post", 'String'>
    readonly description: FieldRef<"Post", 'String'>
    readonly images: FieldRef<"Post", 'String[]'>
    readonly phone: FieldRef<"Post", 'String'>
    readonly isActive: FieldRef<"Post", 'Boolean'>
    readonly views: FieldRef<"Post", 'Int'>
    readonly viewsToday: FieldRef<"Post", 'Int'>
    readonly clicks: FieldRef<"Post", 'Int'>
    readonly clicksToday: FieldRef<"Post", 'Int'>
    readonly score: FieldRef<"Post", 'Float'>
    readonly engagementRate: FieldRef<"Post", 'Float'>
    readonly lastBoosted: FieldRef<"Post", 'DateTime'>
    readonly locationId: FieldRef<"Post", 'String'>
    readonly rates: FieldRef<"Post", 'Json'>
    readonly availability: FieldRef<"Post", 'Json'>
    readonly trendingScore: FieldRef<"Post", 'Float'>
    readonly isTrending: FieldRef<"Post", 'Boolean'>
    readonly isFeatured: FieldRef<"Post", 'Boolean'>
    readonly discoveryScore: FieldRef<"Post", 'Float'>
    readonly qualityScore: FieldRef<"Post", 'Float'>
    readonly lastScoreUpdate: FieldRef<"Post", 'DateTime'>
    readonly isPrivate: FieldRef<"Post", 'Boolean'>
    readonly premiumOnly: FieldRef<"Post", 'Boolean'>
    readonly uniqueViews: FieldRef<"Post", 'Int'>
    readonly totalTime: FieldRef<"Post", 'Int'>
    readonly bounceRate: FieldRef<"Post", 'Float'>
    readonly whatsappClicks: FieldRef<"Post", 'Int'>
    readonly hasActiveBoost: FieldRef<"Post", 'Boolean'>
    readonly boostEndsAt: FieldRef<"Post", 'DateTime'>
    readonly createdAt: FieldRef<"Post", 'DateTime'>
    readonly updatedAt: FieldRef<"Post", 'DateTime'>
    readonly deletedAt: FieldRef<"Post", 'DateTime'>
    readonly expiresAt: FieldRef<"Post", 'DateTime'>
    readonly authorId: FieldRef<"Post", 'String'>
    readonly age: FieldRef<"Post", 'Int'>
    readonly location: FieldRef<"Post", 'String'>
    readonly services: FieldRef<"Post", 'String[]'>
    readonly sexo: FieldRef<"Post", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post createManyAndReturn
   */
  export type PostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
  }

  /**
   * Post.boosts
   */
  export type Post$boostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    where?: BoostWhereInput
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    cursor?: BoostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * Post.favorites
   */
  export type Post$favoritesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    cursor?: FavoriteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Post.likes
   */
  export type Post$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    cursor?: LikeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Post.tags
   */
  export type Post$tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostTag
     */
    select?: PostTagSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostTagInclude<ExtArgs> | null
    where?: PostTagWhereInput
    orderBy?: PostTagOrderByWithRelationInput | PostTagOrderByWithRelationInput[]
    cursor?: PostTagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostTagScalarFieldEnum | PostTagScalarFieldEnum[]
  }

  /**
   * Post.locationRef
   */
  export type Post$locationRefArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Location
     */
    select?: LocationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LocationInclude<ExtArgs> | null
    where?: LocationWhereInput
  }

  /**
   * Post.reports
   */
  export type Post$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    cursor?: ReportWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Post.trendingHistory
   */
  export type Post$trendingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    where?: TrendingHistoryWhereInput
    orderBy?: TrendingHistoryOrderByWithRelationInput | TrendingHistoryOrderByWithRelationInput[]
    cursor?: TrendingHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrendingHistoryScalarFieldEnum | TrendingHistoryScalarFieldEnum[]
  }

  /**
   * Post.interactions
   */
  export type Post$interactionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserInteraction
     */
    select?: UserInteractionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInteractionInclude<ExtArgs> | null
    where?: UserInteractionWhereInput
    orderBy?: UserInteractionOrderByWithRelationInput | UserInteractionOrderByWithRelationInput[]
    cursor?: UserInteractionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserInteractionScalarFieldEnum | UserInteractionScalarFieldEnum[]
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
  }


  /**
   * Model TrendingHistory
   */

  export type AggregateTrendingHistory = {
    _count: TrendingHistoryCountAggregateOutputType | null
    _avg: TrendingHistoryAvgAggregateOutputType | null
    _sum: TrendingHistorySumAggregateOutputType | null
    _min: TrendingHistoryMinAggregateOutputType | null
    _max: TrendingHistoryMaxAggregateOutputType | null
  }

  export type TrendingHistoryAvgAggregateOutputType = {
    position: number | null
    score: number | null
  }

  export type TrendingHistorySumAggregateOutputType = {
    position: number | null
    score: number | null
  }

  export type TrendingHistoryMinAggregateOutputType = {
    id: string | null
    postId: string | null
    position: number | null
    score: number | null
    category: string | null
    date: Date | null
  }

  export type TrendingHistoryMaxAggregateOutputType = {
    id: string | null
    postId: string | null
    position: number | null
    score: number | null
    category: string | null
    date: Date | null
  }

  export type TrendingHistoryCountAggregateOutputType = {
    id: number
    postId: number
    position: number
    score: number
    category: number
    date: number
    _all: number
  }


  export type TrendingHistoryAvgAggregateInputType = {
    position?: true
    score?: true
  }

  export type TrendingHistorySumAggregateInputType = {
    position?: true
    score?: true
  }

  export type TrendingHistoryMinAggregateInputType = {
    id?: true
    postId?: true
    position?: true
    score?: true
    category?: true
    date?: true
  }

  export type TrendingHistoryMaxAggregateInputType = {
    id?: true
    postId?: true
    position?: true
    score?: true
    category?: true
    date?: true
  }

  export type TrendingHistoryCountAggregateInputType = {
    id?: true
    postId?: true
    position?: true
    score?: true
    category?: true
    date?: true
    _all?: true
  }

  export type TrendingHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrendingHistory to aggregate.
     */
    where?: TrendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrendingHistories to fetch.
     */
    orderBy?: TrendingHistoryOrderByWithRelationInput | TrendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TrendingHistories
    **/
    _count?: true | TrendingHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrendingHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrendingHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrendingHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrendingHistoryMaxAggregateInputType
  }

  export type GetTrendingHistoryAggregateType<T extends TrendingHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateTrendingHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrendingHistory[P]>
      : GetScalarType<T[P], AggregateTrendingHistory[P]>
  }




  export type TrendingHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrendingHistoryWhereInput
    orderBy?: TrendingHistoryOrderByWithAggregationInput | TrendingHistoryOrderByWithAggregationInput[]
    by: TrendingHistoryScalarFieldEnum[] | TrendingHistoryScalarFieldEnum
    having?: TrendingHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrendingHistoryCountAggregateInputType | true
    _avg?: TrendingHistoryAvgAggregateInputType
    _sum?: TrendingHistorySumAggregateInputType
    _min?: TrendingHistoryMinAggregateInputType
    _max?: TrendingHistoryMaxAggregateInputType
  }

  export type TrendingHistoryGroupByOutputType = {
    id: string
    postId: string
    position: number
    score: number
    category: string | null
    date: Date
    _count: TrendingHistoryCountAggregateOutputType | null
    _avg: TrendingHistoryAvgAggregateOutputType | null
    _sum: TrendingHistorySumAggregateOutputType | null
    _min: TrendingHistoryMinAggregateOutputType | null
    _max: TrendingHistoryMaxAggregateOutputType | null
  }

  type GetTrendingHistoryGroupByPayload<T extends TrendingHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrendingHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrendingHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrendingHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], TrendingHistoryGroupByOutputType[P]>
        }
      >
    >


  export type TrendingHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    position?: boolean
    score?: boolean
    category?: boolean
    date?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trendingHistory"]>

  export type TrendingHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    postId?: boolean
    position?: boolean
    score?: boolean
    category?: boolean
    date?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trendingHistory"]>

  export type TrendingHistorySelectScalar = {
    id?: boolean
    postId?: boolean
    position?: boolean
    score?: boolean
    category?: boolean
    date?: boolean
  }

  export type TrendingHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
  }
  export type TrendingHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
  }

  export type $TrendingHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TrendingHistory"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      postId: string
      position: number
      score: number
      category: string | null
      date: Date
    }, ExtArgs["result"]["trendingHistory"]>
    composites: {}
  }

  type TrendingHistoryGetPayload<S extends boolean | null | undefined | TrendingHistoryDefaultArgs> = $Result.GetResult<Prisma.$TrendingHistoryPayload, S>

  type TrendingHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TrendingHistoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TrendingHistoryCountAggregateInputType | true
    }

  export interface TrendingHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TrendingHistory'], meta: { name: 'TrendingHistory' } }
    /**
     * Find zero or one TrendingHistory that matches the filter.
     * @param {TrendingHistoryFindUniqueArgs} args - Arguments to find a TrendingHistory
     * @example
     * // Get one TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TrendingHistoryFindUniqueArgs>(args: SelectSubset<T, TrendingHistoryFindUniqueArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one TrendingHistory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TrendingHistoryFindUniqueOrThrowArgs} args - Arguments to find a TrendingHistory
     * @example
     * // Get one TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TrendingHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, TrendingHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first TrendingHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryFindFirstArgs} args - Arguments to find a TrendingHistory
     * @example
     * // Get one TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TrendingHistoryFindFirstArgs>(args?: SelectSubset<T, TrendingHistoryFindFirstArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first TrendingHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryFindFirstOrThrowArgs} args - Arguments to find a TrendingHistory
     * @example
     * // Get one TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TrendingHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, TrendingHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more TrendingHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TrendingHistories
     * const trendingHistories = await prisma.trendingHistory.findMany()
     * 
     * // Get first 10 TrendingHistories
     * const trendingHistories = await prisma.trendingHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trendingHistoryWithIdOnly = await prisma.trendingHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TrendingHistoryFindManyArgs>(args?: SelectSubset<T, TrendingHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a TrendingHistory.
     * @param {TrendingHistoryCreateArgs} args - Arguments to create a TrendingHistory.
     * @example
     * // Create one TrendingHistory
     * const TrendingHistory = await prisma.trendingHistory.create({
     *   data: {
     *     // ... data to create a TrendingHistory
     *   }
     * })
     * 
     */
    create<T extends TrendingHistoryCreateArgs>(args: SelectSubset<T, TrendingHistoryCreateArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many TrendingHistories.
     * @param {TrendingHistoryCreateManyArgs} args - Arguments to create many TrendingHistories.
     * @example
     * // Create many TrendingHistories
     * const trendingHistory = await prisma.trendingHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TrendingHistoryCreateManyArgs>(args?: SelectSubset<T, TrendingHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TrendingHistories and returns the data saved in the database.
     * @param {TrendingHistoryCreateManyAndReturnArgs} args - Arguments to create many TrendingHistories.
     * @example
     * // Create many TrendingHistories
     * const trendingHistory = await prisma.trendingHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TrendingHistories and only return the `id`
     * const trendingHistoryWithIdOnly = await prisma.trendingHistory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TrendingHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, TrendingHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a TrendingHistory.
     * @param {TrendingHistoryDeleteArgs} args - Arguments to delete one TrendingHistory.
     * @example
     * // Delete one TrendingHistory
     * const TrendingHistory = await prisma.trendingHistory.delete({
     *   where: {
     *     // ... filter to delete one TrendingHistory
     *   }
     * })
     * 
     */
    delete<T extends TrendingHistoryDeleteArgs>(args: SelectSubset<T, TrendingHistoryDeleteArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one TrendingHistory.
     * @param {TrendingHistoryUpdateArgs} args - Arguments to update one TrendingHistory.
     * @example
     * // Update one TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TrendingHistoryUpdateArgs>(args: SelectSubset<T, TrendingHistoryUpdateArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more TrendingHistories.
     * @param {TrendingHistoryDeleteManyArgs} args - Arguments to filter TrendingHistories to delete.
     * @example
     * // Delete a few TrendingHistories
     * const { count } = await prisma.trendingHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TrendingHistoryDeleteManyArgs>(args?: SelectSubset<T, TrendingHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TrendingHistories
     * const trendingHistory = await prisma.trendingHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TrendingHistoryUpdateManyArgs>(args: SelectSubset<T, TrendingHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TrendingHistory.
     * @param {TrendingHistoryUpsertArgs} args - Arguments to update or create a TrendingHistory.
     * @example
     * // Update or create a TrendingHistory
     * const trendingHistory = await prisma.trendingHistory.upsert({
     *   create: {
     *     // ... data to create a TrendingHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TrendingHistory we want to update
     *   }
     * })
     */
    upsert<T extends TrendingHistoryUpsertArgs>(args: SelectSubset<T, TrendingHistoryUpsertArgs<ExtArgs>>): Prisma__TrendingHistoryClient<$Result.GetResult<Prisma.$TrendingHistoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of TrendingHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryCountArgs} args - Arguments to filter TrendingHistories to count.
     * @example
     * // Count the number of TrendingHistories
     * const count = await prisma.trendingHistory.count({
     *   where: {
     *     // ... the filter for the TrendingHistories we want to count
     *   }
     * })
    **/
    count<T extends TrendingHistoryCountArgs>(
      args?: Subset<T, TrendingHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrendingHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TrendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrendingHistoryAggregateArgs>(args: Subset<T, TrendingHistoryAggregateArgs>): Prisma.PrismaPromise<GetTrendingHistoryAggregateType<T>>

    /**
     * Group by TrendingHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrendingHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrendingHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrendingHistoryGroupByArgs['orderBy'] }
        : { orderBy?: TrendingHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrendingHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrendingHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TrendingHistory model
   */
  readonly fields: TrendingHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TrendingHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrendingHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TrendingHistory model
   */ 
  interface TrendingHistoryFieldRefs {
    readonly id: FieldRef<"TrendingHistory", 'String'>
    readonly postId: FieldRef<"TrendingHistory", 'String'>
    readonly position: FieldRef<"TrendingHistory", 'Int'>
    readonly score: FieldRef<"TrendingHistory", 'Float'>
    readonly category: FieldRef<"TrendingHistory", 'String'>
    readonly date: FieldRef<"TrendingHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TrendingHistory findUnique
   */
  export type TrendingHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which TrendingHistory to fetch.
     */
    where: TrendingHistoryWhereUniqueInput
  }

  /**
   * TrendingHistory findUniqueOrThrow
   */
  export type TrendingHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which TrendingHistory to fetch.
     */
    where: TrendingHistoryWhereUniqueInput
  }

  /**
   * TrendingHistory findFirst
   */
  export type TrendingHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which TrendingHistory to fetch.
     */
    where?: TrendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrendingHistories to fetch.
     */
    orderBy?: TrendingHistoryOrderByWithRelationInput | TrendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrendingHistories.
     */
    cursor?: TrendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrendingHistories.
     */
    distinct?: TrendingHistoryScalarFieldEnum | TrendingHistoryScalarFieldEnum[]
  }

  /**
   * TrendingHistory findFirstOrThrow
   */
  export type TrendingHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which TrendingHistory to fetch.
     */
    where?: TrendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrendingHistories to fetch.
     */
    orderBy?: TrendingHistoryOrderByWithRelationInput | TrendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrendingHistories.
     */
    cursor?: TrendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrendingHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrendingHistories.
     */
    distinct?: TrendingHistoryScalarFieldEnum | TrendingHistoryScalarFieldEnum[]
  }

  /**
   * TrendingHistory findMany
   */
  export type TrendingHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter, which TrendingHistories to fetch.
     */
    where?: TrendingHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrendingHistories to fetch.
     */
    orderBy?: TrendingHistoryOrderByWithRelationInput | TrendingHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TrendingHistories.
     */
    cursor?: TrendingHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrendingHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrendingHistories.
     */
    skip?: number
    distinct?: TrendingHistoryScalarFieldEnum | TrendingHistoryScalarFieldEnum[]
  }

  /**
   * TrendingHistory create
   */
  export type TrendingHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a TrendingHistory.
     */
    data: XOR<TrendingHistoryCreateInput, TrendingHistoryUncheckedCreateInput>
  }

  /**
   * TrendingHistory createMany
   */
  export type TrendingHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TrendingHistories.
     */
    data: TrendingHistoryCreateManyInput | TrendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TrendingHistory createManyAndReturn
   */
  export type TrendingHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TrendingHistories.
     */
    data: TrendingHistoryCreateManyInput | TrendingHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrendingHistory update
   */
  export type TrendingHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a TrendingHistory.
     */
    data: XOR<TrendingHistoryUpdateInput, TrendingHistoryUncheckedUpdateInput>
    /**
     * Choose, which TrendingHistory to update.
     */
    where: TrendingHistoryWhereUniqueInput
  }

  /**
   * TrendingHistory updateMany
   */
  export type TrendingHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TrendingHistories.
     */
    data: XOR<TrendingHistoryUpdateManyMutationInput, TrendingHistoryUncheckedUpdateManyInput>
    /**
     * Filter which TrendingHistories to update
     */
    where?: TrendingHistoryWhereInput
  }

  /**
   * TrendingHistory upsert
   */
  export type TrendingHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the TrendingHistory to update in case it exists.
     */
    where: TrendingHistoryWhereUniqueInput
    /**
     * In case the TrendingHistory found by the `where` argument doesn't exist, create a new TrendingHistory with this data.
     */
    create: XOR<TrendingHistoryCreateInput, TrendingHistoryUncheckedCreateInput>
    /**
     * In case the TrendingHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrendingHistoryUpdateInput, TrendingHistoryUncheckedUpdateInput>
  }

  /**
   * TrendingHistory delete
   */
  export type TrendingHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
    /**
     * Filter which TrendingHistory to delete.
     */
    where: TrendingHistoryWhereUniqueInput
  }

  /**
   * TrendingHistory deleteMany
   */
  export type TrendingHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrendingHistories to delete
     */
    where?: TrendingHistoryWhereInput
  }

  /**
   * TrendingHistory without action
   */
  export type TrendingHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrendingHistory
     */
    select?: TrendingHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrendingHistoryInclude<ExtArgs> | null
  }


  /**
   * Model Chat
   */

  export type AggregateChat = {
    _count: ChatCountAggregateOutputType | null
    _avg: ChatAvgAggregateOutputType | null
    _sum: ChatSumAggregateOutputType | null
    _min: ChatMinAggregateOutputType | null
    _max: ChatMaxAggregateOutputType | null
  }

  export type ChatAvgAggregateOutputType = {
    maxMembers: number | null
  }

  export type ChatSumAggregateOutputType = {
    maxMembers: number | null
  }

  export type ChatMinAggregateOutputType = {
    id: string | null
    isGroup: boolean | null
    name: string | null
    description: string | null
    avatar: string | null
    isDisputeChat: boolean | null
    disputeStatus: $Enums.DisputeStatus | null
    disputeReason: string | null
    isArchived: boolean | null
    mutedUntil: Date | null
    maxMembers: number | null
    isPrivate: boolean | null
    requireApproval: boolean | null
    allowFiles: boolean | null
    allowImages: boolean | null
    allowVoice: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    lastActivity: Date | null
  }

  export type ChatMaxAggregateOutputType = {
    id: string | null
    isGroup: boolean | null
    name: string | null
    description: string | null
    avatar: string | null
    isDisputeChat: boolean | null
    disputeStatus: $Enums.DisputeStatus | null
    disputeReason: string | null
    isArchived: boolean | null
    mutedUntil: Date | null
    maxMembers: number | null
    isPrivate: boolean | null
    requireApproval: boolean | null
    allowFiles: boolean | null
    allowImages: boolean | null
    allowVoice: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    lastActivity: Date | null
  }

  export type ChatCountAggregateOutputType = {
    id: number
    isGroup: number
    name: number
    description: number
    avatar: number
    isDisputeChat: number
    disputeStatus: number
    disputeReason: number
    isArchived: number
    mutedUntil: number
    maxMembers: number
    isPrivate: number
    requireApproval: number
    allowFiles: number
    allowImages: number
    allowVoice: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    lastActivity: number
    _all: number
  }


  export type ChatAvgAggregateInputType = {
    maxMembers?: true
  }

  export type ChatSumAggregateInputType = {
    maxMembers?: true
  }

  export type ChatMinAggregateInputType = {
    id?: true
    isGroup?: true
    name?: true
    description?: true
    avatar?: true
    isDisputeChat?: true
    disputeStatus?: true
    disputeReason?: true
    isArchived?: true
    mutedUntil?: true
    maxMembers?: true
    isPrivate?: true
    requireApproval?: true
    allowFiles?: true
    allowImages?: true
    allowVoice?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    lastActivity?: true
  }

  export type ChatMaxAggregateInputType = {
    id?: true
    isGroup?: true
    name?: true
    description?: true
    avatar?: true
    isDisputeChat?: true
    disputeStatus?: true
    disputeReason?: true
    isArchived?: true
    mutedUntil?: true
    maxMembers?: true
    isPrivate?: true
    requireApproval?: true
    allowFiles?: true
    allowImages?: true
    allowVoice?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    lastActivity?: true
  }

  export type ChatCountAggregateInputType = {
    id?: true
    isGroup?: true
    name?: true
    description?: true
    avatar?: true
    isDisputeChat?: true
    disputeStatus?: true
    disputeReason?: true
    isArchived?: true
    mutedUntil?: true
    maxMembers?: true
    isPrivate?: true
    requireApproval?: true
    allowFiles?: true
    allowImages?: true
    allowVoice?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    lastActivity?: true
    _all?: true
  }

  export type ChatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Chat to aggregate.
     */
    where?: ChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatOrderByWithRelationInput | ChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Chats
    **/
    _count?: true | ChatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatMaxAggregateInputType
  }

  export type GetChatAggregateType<T extends ChatAggregateArgs> = {
        [P in keyof T & keyof AggregateChat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat[P]>
      : GetScalarType<T[P], AggregateChat[P]>
  }




  export type ChatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatWhereInput
    orderBy?: ChatOrderByWithAggregationInput | ChatOrderByWithAggregationInput[]
    by: ChatScalarFieldEnum[] | ChatScalarFieldEnum
    having?: ChatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatCountAggregateInputType | true
    _avg?: ChatAvgAggregateInputType
    _sum?: ChatSumAggregateInputType
    _min?: ChatMinAggregateInputType
    _max?: ChatMaxAggregateInputType
  }

  export type ChatGroupByOutputType = {
    id: string
    isGroup: boolean
    name: string | null
    description: string | null
    avatar: string | null
    isDisputeChat: boolean
    disputeStatus: $Enums.DisputeStatus
    disputeReason: string | null
    isArchived: boolean
    mutedUntil: Date | null
    maxMembers: number | null
    isPrivate: boolean
    requireApproval: boolean
    allowFiles: boolean
    allowImages: boolean
    allowVoice: boolean
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    lastActivity: Date
    _count: ChatCountAggregateOutputType | null
    _avg: ChatAvgAggregateOutputType | null
    _sum: ChatSumAggregateOutputType | null
    _min: ChatMinAggregateOutputType | null
    _max: ChatMaxAggregateOutputType | null
  }

  type GetChatGroupByPayload<T extends ChatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatGroupByOutputType[P]>
            : GetScalarType<T[P], ChatGroupByOutputType[P]>
        }
      >
    >


  export type ChatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    isGroup?: boolean
    name?: boolean
    description?: boolean
    avatar?: boolean
    isDisputeChat?: boolean
    disputeStatus?: boolean
    disputeReason?: boolean
    isArchived?: boolean
    mutedUntil?: boolean
    maxMembers?: boolean
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    lastActivity?: boolean
    members?: boolean | Chat$membersArgs<ExtArgs>
    messages?: boolean | Chat$messagesArgs<ExtArgs>
    _count?: boolean | ChatCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat"]>

  export type ChatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    isGroup?: boolean
    name?: boolean
    description?: boolean
    avatar?: boolean
    isDisputeChat?: boolean
    disputeStatus?: boolean
    disputeReason?: boolean
    isArchived?: boolean
    mutedUntil?: boolean
    maxMembers?: boolean
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    lastActivity?: boolean
  }, ExtArgs["result"]["chat"]>

  export type ChatSelectScalar = {
    id?: boolean
    isGroup?: boolean
    name?: boolean
    description?: boolean
    avatar?: boolean
    isDisputeChat?: boolean
    disputeStatus?: boolean
    disputeReason?: boolean
    isArchived?: boolean
    mutedUntil?: boolean
    maxMembers?: boolean
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    lastActivity?: boolean
  }

  export type ChatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    members?: boolean | Chat$membersArgs<ExtArgs>
    messages?: boolean | Chat$messagesArgs<ExtArgs>
    _count?: boolean | ChatCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ChatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ChatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Chat"
    objects: {
      members: Prisma.$ChatMemberPayload<ExtArgs>[]
      messages: Prisma.$MessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      isGroup: boolean
      name: string | null
      description: string | null
      avatar: string | null
      isDisputeChat: boolean
      disputeStatus: $Enums.DisputeStatus
      disputeReason: string | null
      isArchived: boolean
      mutedUntil: Date | null
      maxMembers: number | null
      isPrivate: boolean
      requireApproval: boolean
      allowFiles: boolean
      allowImages: boolean
      allowVoice: boolean
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      lastActivity: Date
    }, ExtArgs["result"]["chat"]>
    composites: {}
  }

  type ChatGetPayload<S extends boolean | null | undefined | ChatDefaultArgs> = $Result.GetResult<Prisma.$ChatPayload, S>

  type ChatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ChatFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ChatCountAggregateInputType | true
    }

  export interface ChatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Chat'], meta: { name: 'Chat' } }
    /**
     * Find zero or one Chat that matches the filter.
     * @param {ChatFindUniqueArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatFindUniqueArgs>(args: SelectSubset<T, ChatFindUniqueArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Chat that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ChatFindUniqueOrThrowArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Chat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatFindFirstArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatFindFirstArgs>(args?: SelectSubset<T, ChatFindFirstArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Chat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatFindFirstOrThrowArgs} args - Arguments to find a Chat
     * @example
     * // Get one Chat
     * const chat = await prisma.chat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Chats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chats
     * const chats = await prisma.chat.findMany()
     * 
     * // Get first 10 Chats
     * const chats = await prisma.chat.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatWithIdOnly = await prisma.chat.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatFindManyArgs>(args?: SelectSubset<T, ChatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Chat.
     * @param {ChatCreateArgs} args - Arguments to create a Chat.
     * @example
     * // Create one Chat
     * const Chat = await prisma.chat.create({
     *   data: {
     *     // ... data to create a Chat
     *   }
     * })
     * 
     */
    create<T extends ChatCreateArgs>(args: SelectSubset<T, ChatCreateArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Chats.
     * @param {ChatCreateManyArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chat = await prisma.chat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatCreateManyArgs>(args?: SelectSubset<T, ChatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chats and returns the data saved in the database.
     * @param {ChatCreateManyAndReturnArgs} args - Arguments to create many Chats.
     * @example
     * // Create many Chats
     * const chat = await prisma.chat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chats and only return the `id`
     * const chatWithIdOnly = await prisma.chat.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChatCreateManyAndReturnArgs>(args?: SelectSubset<T, ChatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Chat.
     * @param {ChatDeleteArgs} args - Arguments to delete one Chat.
     * @example
     * // Delete one Chat
     * const Chat = await prisma.chat.delete({
     *   where: {
     *     // ... filter to delete one Chat
     *   }
     * })
     * 
     */
    delete<T extends ChatDeleteArgs>(args: SelectSubset<T, ChatDeleteArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Chat.
     * @param {ChatUpdateArgs} args - Arguments to update one Chat.
     * @example
     * // Update one Chat
     * const chat = await prisma.chat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatUpdateArgs>(args: SelectSubset<T, ChatUpdateArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Chats.
     * @param {ChatDeleteManyArgs} args - Arguments to filter Chats to delete.
     * @example
     * // Delete a few Chats
     * const { count } = await prisma.chat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatDeleteManyArgs>(args?: SelectSubset<T, ChatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chats
     * const chat = await prisma.chat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatUpdateManyArgs>(args: SelectSubset<T, ChatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Chat.
     * @param {ChatUpsertArgs} args - Arguments to update or create a Chat.
     * @example
     * // Update or create a Chat
     * const chat = await prisma.chat.upsert({
     *   create: {
     *     // ... data to create a Chat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat we want to update
     *   }
     * })
     */
    upsert<T extends ChatUpsertArgs>(args: SelectSubset<T, ChatUpsertArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Chats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatCountArgs} args - Arguments to filter Chats to count.
     * @example
     * // Count the number of Chats
     * const count = await prisma.chat.count({
     *   where: {
     *     // ... the filter for the Chats we want to count
     *   }
     * })
    **/
    count<T extends ChatCountArgs>(
      args?: Subset<T, ChatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatAggregateArgs>(args: Subset<T, ChatAggregateArgs>): Prisma.PrismaPromise<GetChatAggregateType<T>>

    /**
     * Group by Chat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatGroupByArgs['orderBy'] }
        : { orderBy?: ChatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Chat model
   */
  readonly fields: ChatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Chat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    members<T extends Chat$membersArgs<ExtArgs> = {}>(args?: Subset<T, Chat$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findMany"> | Null>
    messages<T extends Chat$messagesArgs<ExtArgs> = {}>(args?: Subset<T, Chat$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Chat model
   */ 
  interface ChatFieldRefs {
    readonly id: FieldRef<"Chat", 'String'>
    readonly isGroup: FieldRef<"Chat", 'Boolean'>
    readonly name: FieldRef<"Chat", 'String'>
    readonly description: FieldRef<"Chat", 'String'>
    readonly avatar: FieldRef<"Chat", 'String'>
    readonly isDisputeChat: FieldRef<"Chat", 'Boolean'>
    readonly disputeStatus: FieldRef<"Chat", 'DisputeStatus'>
    readonly disputeReason: FieldRef<"Chat", 'String'>
    readonly isArchived: FieldRef<"Chat", 'Boolean'>
    readonly mutedUntil: FieldRef<"Chat", 'DateTime'>
    readonly maxMembers: FieldRef<"Chat", 'Int'>
    readonly isPrivate: FieldRef<"Chat", 'Boolean'>
    readonly requireApproval: FieldRef<"Chat", 'Boolean'>
    readonly allowFiles: FieldRef<"Chat", 'Boolean'>
    readonly allowImages: FieldRef<"Chat", 'Boolean'>
    readonly allowVoice: FieldRef<"Chat", 'Boolean'>
    readonly createdAt: FieldRef<"Chat", 'DateTime'>
    readonly updatedAt: FieldRef<"Chat", 'DateTime'>
    readonly deletedAt: FieldRef<"Chat", 'DateTime'>
    readonly lastActivity: FieldRef<"Chat", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Chat findUnique
   */
  export type ChatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter, which Chat to fetch.
     */
    where: ChatWhereUniqueInput
  }

  /**
   * Chat findUniqueOrThrow
   */
  export type ChatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter, which Chat to fetch.
     */
    where: ChatWhereUniqueInput
  }

  /**
   * Chat findFirst
   */
  export type ChatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter, which Chat to fetch.
     */
    where?: ChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatOrderByWithRelationInput | ChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Chats.
     */
    cursor?: ChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Chats.
     */
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * Chat findFirstOrThrow
   */
  export type ChatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter, which Chat to fetch.
     */
    where?: ChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatOrderByWithRelationInput | ChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Chats.
     */
    cursor?: ChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Chats.
     */
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * Chat findMany
   */
  export type ChatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter, which Chats to fetch.
     */
    where?: ChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Chats to fetch.
     */
    orderBy?: ChatOrderByWithRelationInput | ChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Chats.
     */
    cursor?: ChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Chats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Chats.
     */
    skip?: number
    distinct?: ChatScalarFieldEnum | ChatScalarFieldEnum[]
  }

  /**
   * Chat create
   */
  export type ChatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * The data needed to create a Chat.
     */
    data: XOR<ChatCreateInput, ChatUncheckedCreateInput>
  }

  /**
   * Chat createMany
   */
  export type ChatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Chats.
     */
    data: ChatCreateManyInput | ChatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Chat createManyAndReturn
   */
  export type ChatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Chats.
     */
    data: ChatCreateManyInput | ChatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Chat update
   */
  export type ChatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * The data needed to update a Chat.
     */
    data: XOR<ChatUpdateInput, ChatUncheckedUpdateInput>
    /**
     * Choose, which Chat to update.
     */
    where: ChatWhereUniqueInput
  }

  /**
   * Chat updateMany
   */
  export type ChatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Chats.
     */
    data: XOR<ChatUpdateManyMutationInput, ChatUncheckedUpdateManyInput>
    /**
     * Filter which Chats to update
     */
    where?: ChatWhereInput
  }

  /**
   * Chat upsert
   */
  export type ChatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * The filter to search for the Chat to update in case it exists.
     */
    where: ChatWhereUniqueInput
    /**
     * In case the Chat found by the `where` argument doesn't exist, create a new Chat with this data.
     */
    create: XOR<ChatCreateInput, ChatUncheckedCreateInput>
    /**
     * In case the Chat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatUpdateInput, ChatUncheckedUpdateInput>
  }

  /**
   * Chat delete
   */
  export type ChatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
    /**
     * Filter which Chat to delete.
     */
    where: ChatWhereUniqueInput
  }

  /**
   * Chat deleteMany
   */
  export type ChatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Chats to delete
     */
    where?: ChatWhereInput
  }

  /**
   * Chat.members
   */
  export type Chat$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    where?: ChatMemberWhereInput
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    cursor?: ChatMemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatMemberScalarFieldEnum | ChatMemberScalarFieldEnum[]
  }

  /**
   * Chat.messages
   */
  export type Chat$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Chat without action
   */
  export type ChatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat
     */
    select?: ChatSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatInclude<ExtArgs> | null
  }


  /**
   * Model ChatMember
   */

  export type AggregateChatMember = {
    _count: ChatMemberCountAggregateOutputType | null
    _avg: ChatMemberAvgAggregateOutputType | null
    _sum: ChatMemberSumAggregateOutputType | null
    _min: ChatMemberMinAggregateOutputType | null
    _max: ChatMemberMaxAggregateOutputType | null
  }

  export type ChatMemberAvgAggregateOutputType = {
    messageCount: number | null
    maxMessages: number | null
    messagesCount: number | null
  }

  export type ChatMemberSumAggregateOutputType = {
    messageCount: number | null
    maxMessages: number | null
    messagesCount: number | null
  }

  export type ChatMemberMinAggregateOutputType = {
    id: string | null
    userId: string | null
    chatId: string | null
    joinedAt: Date | null
    lastRead: Date | null
    isMuted: boolean | null
    role: $Enums.ChatRole | null
    messageCount: number | null
    maxMessages: number | null
    canAddMembers: boolean | null
    canDeleteMessages: boolean | null
    canManageChat: boolean | null
    messagesCount: number | null
  }

  export type ChatMemberMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    chatId: string | null
    joinedAt: Date | null
    lastRead: Date | null
    isMuted: boolean | null
    role: $Enums.ChatRole | null
    messageCount: number | null
    maxMessages: number | null
    canAddMembers: boolean | null
    canDeleteMessages: boolean | null
    canManageChat: boolean | null
    messagesCount: number | null
  }

  export type ChatMemberCountAggregateOutputType = {
    id: number
    userId: number
    chatId: number
    joinedAt: number
    lastRead: number
    isMuted: number
    role: number
    messageCount: number
    maxMessages: number
    canAddMembers: number
    canDeleteMessages: number
    canManageChat: number
    messagesCount: number
    _all: number
  }


  export type ChatMemberAvgAggregateInputType = {
    messageCount?: true
    maxMessages?: true
    messagesCount?: true
  }

  export type ChatMemberSumAggregateInputType = {
    messageCount?: true
    maxMessages?: true
    messagesCount?: true
  }

  export type ChatMemberMinAggregateInputType = {
    id?: true
    userId?: true
    chatId?: true
    joinedAt?: true
    lastRead?: true
    isMuted?: true
    role?: true
    messageCount?: true
    maxMessages?: true
    canAddMembers?: true
    canDeleteMessages?: true
    canManageChat?: true
    messagesCount?: true
  }

  export type ChatMemberMaxAggregateInputType = {
    id?: true
    userId?: true
    chatId?: true
    joinedAt?: true
    lastRead?: true
    isMuted?: true
    role?: true
    messageCount?: true
    maxMessages?: true
    canAddMembers?: true
    canDeleteMessages?: true
    canManageChat?: true
    messagesCount?: true
  }

  export type ChatMemberCountAggregateInputType = {
    id?: true
    userId?: true
    chatId?: true
    joinedAt?: true
    lastRead?: true
    isMuted?: true
    role?: true
    messageCount?: true
    maxMessages?: true
    canAddMembers?: true
    canDeleteMessages?: true
    canManageChat?: true
    messagesCount?: true
    _all?: true
  }

  export type ChatMemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMember to aggregate.
     */
    where?: ChatMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMembers to fetch.
     */
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChatMembers
    **/
    _count?: true | ChatMemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatMemberAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatMemberSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatMemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatMemberMaxAggregateInputType
  }

  export type GetChatMemberAggregateType<T extends ChatMemberAggregateArgs> = {
        [P in keyof T & keyof AggregateChatMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatMember[P]>
      : GetScalarType<T[P], AggregateChatMember[P]>
  }




  export type ChatMemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMemberWhereInput
    orderBy?: ChatMemberOrderByWithAggregationInput | ChatMemberOrderByWithAggregationInput[]
    by: ChatMemberScalarFieldEnum[] | ChatMemberScalarFieldEnum
    having?: ChatMemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatMemberCountAggregateInputType | true
    _avg?: ChatMemberAvgAggregateInputType
    _sum?: ChatMemberSumAggregateInputType
    _min?: ChatMemberMinAggregateInputType
    _max?: ChatMemberMaxAggregateInputType
  }

  export type ChatMemberGroupByOutputType = {
    id: string
    userId: string
    chatId: string
    joinedAt: Date
    lastRead: Date
    isMuted: boolean
    role: $Enums.ChatRole
    messageCount: number
    maxMessages: number
    canAddMembers: boolean
    canDeleteMessages: boolean
    canManageChat: boolean
    messagesCount: number
    _count: ChatMemberCountAggregateOutputType | null
    _avg: ChatMemberAvgAggregateOutputType | null
    _sum: ChatMemberSumAggregateOutputType | null
    _min: ChatMemberMinAggregateOutputType | null
    _max: ChatMemberMaxAggregateOutputType | null
  }

  type GetChatMemberGroupByPayload<T extends ChatMemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatMemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatMemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatMemberGroupByOutputType[P]>
            : GetScalarType<T[P], ChatMemberGroupByOutputType[P]>
        }
      >
    >


  export type ChatMemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    chatId?: boolean
    joinedAt?: boolean
    lastRead?: boolean
    isMuted?: boolean
    role?: boolean
    messageCount?: boolean
    maxMessages?: boolean
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: boolean
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMember"]>

  export type ChatMemberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    chatId?: boolean
    joinedAt?: boolean
    lastRead?: boolean
    isMuted?: boolean
    role?: boolean
    messageCount?: boolean
    maxMessages?: boolean
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: boolean
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMember"]>

  export type ChatMemberSelectScalar = {
    id?: boolean
    userId?: boolean
    chatId?: boolean
    joinedAt?: boolean
    lastRead?: boolean
    isMuted?: boolean
    role?: boolean
    messageCount?: boolean
    maxMessages?: boolean
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: boolean
  }

  export type ChatMemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ChatMemberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ChatMemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChatMember"
    objects: {
      chat: Prisma.$ChatPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      chatId: string
      joinedAt: Date
      lastRead: Date
      isMuted: boolean
      role: $Enums.ChatRole
      messageCount: number
      maxMessages: number
      canAddMembers: boolean
      canDeleteMessages: boolean
      canManageChat: boolean
      messagesCount: number
    }, ExtArgs["result"]["chatMember"]>
    composites: {}
  }

  type ChatMemberGetPayload<S extends boolean | null | undefined | ChatMemberDefaultArgs> = $Result.GetResult<Prisma.$ChatMemberPayload, S>

  type ChatMemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ChatMemberFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ChatMemberCountAggregateInputType | true
    }

  export interface ChatMemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChatMember'], meta: { name: 'ChatMember' } }
    /**
     * Find zero or one ChatMember that matches the filter.
     * @param {ChatMemberFindUniqueArgs} args - Arguments to find a ChatMember
     * @example
     * // Get one ChatMember
     * const chatMember = await prisma.chatMember.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatMemberFindUniqueArgs>(args: SelectSubset<T, ChatMemberFindUniqueArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ChatMember that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ChatMemberFindUniqueOrThrowArgs} args - Arguments to find a ChatMember
     * @example
     * // Get one ChatMember
     * const chatMember = await prisma.chatMember.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatMemberFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatMemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ChatMember that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberFindFirstArgs} args - Arguments to find a ChatMember
     * @example
     * // Get one ChatMember
     * const chatMember = await prisma.chatMember.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatMemberFindFirstArgs>(args?: SelectSubset<T, ChatMemberFindFirstArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ChatMember that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberFindFirstOrThrowArgs} args - Arguments to find a ChatMember
     * @example
     * // Get one ChatMember
     * const chatMember = await prisma.chatMember.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatMemberFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatMemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ChatMembers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatMembers
     * const chatMembers = await prisma.chatMember.findMany()
     * 
     * // Get first 10 ChatMembers
     * const chatMembers = await prisma.chatMember.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatMemberWithIdOnly = await prisma.chatMember.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatMemberFindManyArgs>(args?: SelectSubset<T, ChatMemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ChatMember.
     * @param {ChatMemberCreateArgs} args - Arguments to create a ChatMember.
     * @example
     * // Create one ChatMember
     * const ChatMember = await prisma.chatMember.create({
     *   data: {
     *     // ... data to create a ChatMember
     *   }
     * })
     * 
     */
    create<T extends ChatMemberCreateArgs>(args: SelectSubset<T, ChatMemberCreateArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ChatMembers.
     * @param {ChatMemberCreateManyArgs} args - Arguments to create many ChatMembers.
     * @example
     * // Create many ChatMembers
     * const chatMember = await prisma.chatMember.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatMemberCreateManyArgs>(args?: SelectSubset<T, ChatMemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ChatMembers and returns the data saved in the database.
     * @param {ChatMemberCreateManyAndReturnArgs} args - Arguments to create many ChatMembers.
     * @example
     * // Create many ChatMembers
     * const chatMember = await prisma.chatMember.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ChatMembers and only return the `id`
     * const chatMemberWithIdOnly = await prisma.chatMember.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ChatMemberCreateManyAndReturnArgs>(args?: SelectSubset<T, ChatMemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ChatMember.
     * @param {ChatMemberDeleteArgs} args - Arguments to delete one ChatMember.
     * @example
     * // Delete one ChatMember
     * const ChatMember = await prisma.chatMember.delete({
     *   where: {
     *     // ... filter to delete one ChatMember
     *   }
     * })
     * 
     */
    delete<T extends ChatMemberDeleteArgs>(args: SelectSubset<T, ChatMemberDeleteArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ChatMember.
     * @param {ChatMemberUpdateArgs} args - Arguments to update one ChatMember.
     * @example
     * // Update one ChatMember
     * const chatMember = await prisma.chatMember.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatMemberUpdateArgs>(args: SelectSubset<T, ChatMemberUpdateArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ChatMembers.
     * @param {ChatMemberDeleteManyArgs} args - Arguments to filter ChatMembers to delete.
     * @example
     * // Delete a few ChatMembers
     * const { count } = await prisma.chatMember.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatMemberDeleteManyArgs>(args?: SelectSubset<T, ChatMemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatMembers
     * const chatMember = await prisma.chatMember.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatMemberUpdateManyArgs>(args: SelectSubset<T, ChatMemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChatMember.
     * @param {ChatMemberUpsertArgs} args - Arguments to update or create a ChatMember.
     * @example
     * // Update or create a ChatMember
     * const chatMember = await prisma.chatMember.upsert({
     *   create: {
     *     // ... data to create a ChatMember
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatMember we want to update
     *   }
     * })
     */
    upsert<T extends ChatMemberUpsertArgs>(args: SelectSubset<T, ChatMemberUpsertArgs<ExtArgs>>): Prisma__ChatMemberClient<$Result.GetResult<Prisma.$ChatMemberPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ChatMembers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberCountArgs} args - Arguments to filter ChatMembers to count.
     * @example
     * // Count the number of ChatMembers
     * const count = await prisma.chatMember.count({
     *   where: {
     *     // ... the filter for the ChatMembers we want to count
     *   }
     * })
    **/
    count<T extends ChatMemberCountArgs>(
      args?: Subset<T, ChatMemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatMemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatMemberAggregateArgs>(args: Subset<T, ChatMemberAggregateArgs>): Prisma.PrismaPromise<GetChatMemberAggregateType<T>>

    /**
     * Group by ChatMember.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatMemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatMemberGroupByArgs['orderBy'] }
        : { orderBy?: ChatMemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatMemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChatMember model
   */
  readonly fields: ChatMemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChatMember.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatMemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat<T extends ChatDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChatDefaultArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChatMember model
   */ 
  interface ChatMemberFieldRefs {
    readonly id: FieldRef<"ChatMember", 'String'>
    readonly userId: FieldRef<"ChatMember", 'String'>
    readonly chatId: FieldRef<"ChatMember", 'String'>
    readonly joinedAt: FieldRef<"ChatMember", 'DateTime'>
    readonly lastRead: FieldRef<"ChatMember", 'DateTime'>
    readonly isMuted: FieldRef<"ChatMember", 'Boolean'>
    readonly role: FieldRef<"ChatMember", 'ChatRole'>
    readonly messageCount: FieldRef<"ChatMember", 'Int'>
    readonly maxMessages: FieldRef<"ChatMember", 'Int'>
    readonly canAddMembers: FieldRef<"ChatMember", 'Boolean'>
    readonly canDeleteMessages: FieldRef<"ChatMember", 'Boolean'>
    readonly canManageChat: FieldRef<"ChatMember", 'Boolean'>
    readonly messagesCount: FieldRef<"ChatMember", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ChatMember findUnique
   */
  export type ChatMemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter, which ChatMember to fetch.
     */
    where: ChatMemberWhereUniqueInput
  }

  /**
   * ChatMember findUniqueOrThrow
   */
  export type ChatMemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter, which ChatMember to fetch.
     */
    where: ChatMemberWhereUniqueInput
  }

  /**
   * ChatMember findFirst
   */
  export type ChatMemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter, which ChatMember to fetch.
     */
    where?: ChatMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMembers to fetch.
     */
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMembers.
     */
    cursor?: ChatMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMembers.
     */
    distinct?: ChatMemberScalarFieldEnum | ChatMemberScalarFieldEnum[]
  }

  /**
   * ChatMember findFirstOrThrow
   */
  export type ChatMemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter, which ChatMember to fetch.
     */
    where?: ChatMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMembers to fetch.
     */
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMembers.
     */
    cursor?: ChatMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMembers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMembers.
     */
    distinct?: ChatMemberScalarFieldEnum | ChatMemberScalarFieldEnum[]
  }

  /**
   * ChatMember findMany
   */
  export type ChatMemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter, which ChatMembers to fetch.
     */
    where?: ChatMemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMembers to fetch.
     */
    orderBy?: ChatMemberOrderByWithRelationInput | ChatMemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChatMembers.
     */
    cursor?: ChatMemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMembers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMembers.
     */
    skip?: number
    distinct?: ChatMemberScalarFieldEnum | ChatMemberScalarFieldEnum[]
  }

  /**
   * ChatMember create
   */
  export type ChatMemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * The data needed to create a ChatMember.
     */
    data: XOR<ChatMemberCreateInput, ChatMemberUncheckedCreateInput>
  }

  /**
   * ChatMember createMany
   */
  export type ChatMemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChatMembers.
     */
    data: ChatMemberCreateManyInput | ChatMemberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChatMember createManyAndReturn
   */
  export type ChatMemberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ChatMembers.
     */
    data: ChatMemberCreateManyInput | ChatMemberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ChatMember update
   */
  export type ChatMemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * The data needed to update a ChatMember.
     */
    data: XOR<ChatMemberUpdateInput, ChatMemberUncheckedUpdateInput>
    /**
     * Choose, which ChatMember to update.
     */
    where: ChatMemberWhereUniqueInput
  }

  /**
   * ChatMember updateMany
   */
  export type ChatMemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChatMembers.
     */
    data: XOR<ChatMemberUpdateManyMutationInput, ChatMemberUncheckedUpdateManyInput>
    /**
     * Filter which ChatMembers to update
     */
    where?: ChatMemberWhereInput
  }

  /**
   * ChatMember upsert
   */
  export type ChatMemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * The filter to search for the ChatMember to update in case it exists.
     */
    where: ChatMemberWhereUniqueInput
    /**
     * In case the ChatMember found by the `where` argument doesn't exist, create a new ChatMember with this data.
     */
    create: XOR<ChatMemberCreateInput, ChatMemberUncheckedCreateInput>
    /**
     * In case the ChatMember was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatMemberUpdateInput, ChatMemberUncheckedUpdateInput>
  }

  /**
   * ChatMember delete
   */
  export type ChatMemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
    /**
     * Filter which ChatMember to delete.
     */
    where: ChatMemberWhereUniqueInput
  }

  /**
   * ChatMember deleteMany
   */
  export type ChatMemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMembers to delete
     */
    where?: ChatMemberWhereInput
  }

  /**
   * ChatMember without action
   */
  export type ChatMemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMember
     */
    select?: ChatMemberSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMemberInclude<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageAvgAggregateOutputType = {
    fileSize: number | null
    costPoints: number | null
  }

  export type MessageSumAggregateOutputType = {
    fileSize: number | null
    costPoints: number | null
  }

  export type MessageMinAggregateOutputType = {
    id: string | null
    content: string | null
    messageType: $Enums.MessageType | null
    fileUrl: string | null
    fileName: string | null
    fileSize: number | null
    mimeType: string | null
    isRead: boolean | null
    costPoints: number | null
    isPremiumMessage: boolean | null
    isEdited: boolean | null
    editedAt: Date | null
    isForwarded: boolean | null
    replyToId: string | null
    isEncrypted: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    readAt: Date | null
    senderId: string | null
    receiverId: string | null
    chatId: string | null
  }

  export type MessageMaxAggregateOutputType = {
    id: string | null
    content: string | null
    messageType: $Enums.MessageType | null
    fileUrl: string | null
    fileName: string | null
    fileSize: number | null
    mimeType: string | null
    isRead: boolean | null
    costPoints: number | null
    isPremiumMessage: boolean | null
    isEdited: boolean | null
    editedAt: Date | null
    isForwarded: boolean | null
    replyToId: string | null
    isEncrypted: boolean | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    readAt: Date | null
    senderId: string | null
    receiverId: string | null
    chatId: string | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    content: number
    messageType: number
    fileUrl: number
    fileName: number
    fileSize: number
    mimeType: number
    isRead: number
    costPoints: number
    isPremiumMessage: number
    isEdited: number
    editedAt: number
    isForwarded: number
    replyToId: number
    isEncrypted: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    readAt: number
    senderId: number
    receiverId: number
    chatId: number
    _all: number
  }


  export type MessageAvgAggregateInputType = {
    fileSize?: true
    costPoints?: true
  }

  export type MessageSumAggregateInputType = {
    fileSize?: true
    costPoints?: true
  }

  export type MessageMinAggregateInputType = {
    id?: true
    content?: true
    messageType?: true
    fileUrl?: true
    fileName?: true
    fileSize?: true
    mimeType?: true
    isRead?: true
    costPoints?: true
    isPremiumMessage?: true
    isEdited?: true
    editedAt?: true
    isForwarded?: true
    replyToId?: true
    isEncrypted?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    readAt?: true
    senderId?: true
    receiverId?: true
    chatId?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    content?: true
    messageType?: true
    fileUrl?: true
    fileName?: true
    fileSize?: true
    mimeType?: true
    isRead?: true
    costPoints?: true
    isPremiumMessage?: true
    isEdited?: true
    editedAt?: true
    isForwarded?: true
    replyToId?: true
    isEncrypted?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    readAt?: true
    senderId?: true
    receiverId?: true
    chatId?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    content?: true
    messageType?: true
    fileUrl?: true
    fileName?: true
    fileSize?: true
    mimeType?: true
    isRead?: true
    costPoints?: true
    isPremiumMessage?: true
    isEdited?: true
    editedAt?: true
    isForwarded?: true
    replyToId?: true
    isEncrypted?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    readAt?: true
    senderId?: true
    receiverId?: true
    chatId?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _avg?: MessageAvgAggregateInputType
    _sum?: MessageSumAggregateInputType
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: string
    content: string | null
    messageType: $Enums.MessageType
    fileUrl: string | null
    fileName: string | null
    fileSize: number | null
    mimeType: string | null
    isRead: boolean
    costPoints: number | null
    isPremiumMessage: boolean
    isEdited: boolean
    editedAt: Date | null
    isForwarded: boolean
    replyToId: string | null
    isEncrypted: boolean
    expiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    readAt: Date | null
    senderId: string
    receiverId: string | null
    chatId: string
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    messageType?: boolean
    fileUrl?: boolean
    fileName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRead?: boolean
    costPoints?: boolean
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: boolean
    isForwarded?: boolean
    replyToId?: boolean
    isEncrypted?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    readAt?: boolean
    senderId?: boolean
    receiverId?: boolean
    chatId?: boolean
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    messageType?: boolean
    fileUrl?: boolean
    fileName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRead?: boolean
    costPoints?: boolean
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: boolean
    isForwarded?: boolean
    replyToId?: boolean
    isEncrypted?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    readAt?: boolean
    senderId?: boolean
    receiverId?: boolean
    chatId?: boolean
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    content?: boolean
    messageType?: boolean
    fileUrl?: boolean
    fileName?: boolean
    fileSize?: boolean
    mimeType?: boolean
    isRead?: boolean
    costPoints?: boolean
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: boolean
    isForwarded?: boolean
    replyToId?: boolean
    isEncrypted?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    readAt?: boolean
    senderId?: boolean
    receiverId?: boolean
    chatId?: boolean
  }

  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat?: boolean | ChatDefaultArgs<ExtArgs>
    receiver?: boolean | Message$receiverArgs<ExtArgs>
    sender?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      chat: Prisma.$ChatPayload<ExtArgs>
      receiver: Prisma.$UserPayload<ExtArgs> | null
      sender: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string | null
      messageType: $Enums.MessageType
      fileUrl: string | null
      fileName: string | null
      fileSize: number | null
      mimeType: string | null
      isRead: boolean
      costPoints: number | null
      isPremiumMessage: boolean
      isEdited: boolean
      editedAt: Date | null
      isForwarded: boolean
      replyToId: string | null
      isEncrypted: boolean
      expiresAt: Date | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      readAt: Date | null
      senderId: string
      receiverId: string | null
      chatId: string
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat<T extends ChatDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChatDefaultArgs<ExtArgs>>): Prisma__ChatClient<$Result.GetResult<Prisma.$ChatPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    receiver<T extends Message$receiverArgs<ExtArgs> = {}>(args?: Subset<T, Message$receiverArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    sender<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */ 
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'String'>
    readonly content: FieldRef<"Message", 'String'>
    readonly messageType: FieldRef<"Message", 'MessageType'>
    readonly fileUrl: FieldRef<"Message", 'String'>
    readonly fileName: FieldRef<"Message", 'String'>
    readonly fileSize: FieldRef<"Message", 'Int'>
    readonly mimeType: FieldRef<"Message", 'String'>
    readonly isRead: FieldRef<"Message", 'Boolean'>
    readonly costPoints: FieldRef<"Message", 'Int'>
    readonly isPremiumMessage: FieldRef<"Message", 'Boolean'>
    readonly isEdited: FieldRef<"Message", 'Boolean'>
    readonly editedAt: FieldRef<"Message", 'DateTime'>
    readonly isForwarded: FieldRef<"Message", 'Boolean'>
    readonly replyToId: FieldRef<"Message", 'String'>
    readonly isEncrypted: FieldRef<"Message", 'Boolean'>
    readonly expiresAt: FieldRef<"Message", 'DateTime'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
    readonly updatedAt: FieldRef<"Message", 'DateTime'>
    readonly deletedAt: FieldRef<"Message", 'DateTime'>
    readonly readAt: FieldRef<"Message", 'DateTime'>
    readonly senderId: FieldRef<"Message", 'String'>
    readonly receiverId: FieldRef<"Message", 'String'>
    readonly chatId: FieldRef<"Message", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
  }

  /**
   * Message.receiver
   */
  export type Message$receiverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Model Favorite
   */

  export type AggregateFavorite = {
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  export type FavoriteMinAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    isNotified: boolean | null
    createdAt: Date | null
  }

  export type FavoriteMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    isNotified: boolean | null
    createdAt: Date | null
  }

  export type FavoriteCountAggregateOutputType = {
    id: number
    userId: number
    postId: number
    isNotified: number
    createdAt: number
    _all: number
  }


  export type FavoriteMinAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    isNotified?: true
    createdAt?: true
  }

  export type FavoriteMaxAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    isNotified?: true
    createdAt?: true
  }

  export type FavoriteCountAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    isNotified?: true
    createdAt?: true
    _all?: true
  }

  export type FavoriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorite to aggregate.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favorites
    **/
    _count?: true | FavoriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteMaxAggregateInputType
  }

  export type GetFavoriteAggregateType<T extends FavoriteAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorite[P]>
      : GetScalarType<T[P], AggregateFavorite[P]>
  }




  export type FavoriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithAggregationInput | FavoriteOrderByWithAggregationInput[]
    by: FavoriteScalarFieldEnum[] | FavoriteScalarFieldEnum
    having?: FavoriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCountAggregateInputType | true
    _min?: FavoriteMinAggregateInputType
    _max?: FavoriteMaxAggregateInputType
  }

  export type FavoriteGroupByOutputType = {
    id: string
    userId: string
    postId: string
    isNotified: boolean
    createdAt: Date
    _count: FavoriteCountAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  type GetFavoriteGroupByPayload<T extends FavoriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    isNotified?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    isNotified?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectScalar = {
    id?: boolean
    userId?: boolean
    postId?: boolean
    isNotified?: boolean
    createdAt?: boolean
  }

  export type FavoriteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type FavoriteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $FavoritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorite"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      postId: string
      isNotified: boolean
      createdAt: Date
    }, ExtArgs["result"]["favorite"]>
    composites: {}
  }

  type FavoriteGetPayload<S extends boolean | null | undefined | FavoriteDefaultArgs> = $Result.GetResult<Prisma.$FavoritePayload, S>

  type FavoriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FavoriteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoriteCountAggregateInputType | true
    }

  export interface FavoriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorite'], meta: { name: 'Favorite' } }
    /**
     * Find zero or one Favorite that matches the filter.
     * @param {FavoriteFindUniqueArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FavoriteFindUniqueArgs>(args: SelectSubset<T, FavoriteFindUniqueArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Favorite that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FavoriteFindUniqueOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FavoriteFindUniqueOrThrowArgs>(args: SelectSubset<T, FavoriteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Favorite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FavoriteFindFirstArgs>(args?: SelectSubset<T, FavoriteFindFirstArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Favorite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FavoriteFindFirstOrThrowArgs>(args?: SelectSubset<T, FavoriteFindFirstOrThrowArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorite.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteWithIdOnly = await prisma.favorite.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FavoriteFindManyArgs>(args?: SelectSubset<T, FavoriteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Favorite.
     * @param {FavoriteCreateArgs} args - Arguments to create a Favorite.
     * @example
     * // Create one Favorite
     * const Favorite = await prisma.favorite.create({
     *   data: {
     *     // ... data to create a Favorite
     *   }
     * })
     * 
     */
    create<T extends FavoriteCreateArgs>(args: SelectSubset<T, FavoriteCreateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Favorites.
     * @param {FavoriteCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FavoriteCreateManyArgs>(args?: SelectSubset<T, FavoriteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {FavoriteCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FavoriteCreateManyAndReturnArgs>(args?: SelectSubset<T, FavoriteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Favorite.
     * @param {FavoriteDeleteArgs} args - Arguments to delete one Favorite.
     * @example
     * // Delete one Favorite
     * const Favorite = await prisma.favorite.delete({
     *   where: {
     *     // ... filter to delete one Favorite
     *   }
     * })
     * 
     */
    delete<T extends FavoriteDeleteArgs>(args: SelectSubset<T, FavoriteDeleteArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Favorite.
     * @param {FavoriteUpdateArgs} args - Arguments to update one Favorite.
     * @example
     * // Update one Favorite
     * const favorite = await prisma.favorite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FavoriteUpdateArgs>(args: SelectSubset<T, FavoriteUpdateArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Favorites.
     * @param {FavoriteDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FavoriteDeleteManyArgs>(args?: SelectSubset<T, FavoriteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FavoriteUpdateManyArgs>(args: SelectSubset<T, FavoriteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favorite.
     * @param {FavoriteUpsertArgs} args - Arguments to update or create a Favorite.
     * @example
     * // Update or create a Favorite
     * const favorite = await prisma.favorite.upsert({
     *   create: {
     *     // ... data to create a Favorite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorite we want to update
     *   }
     * })
     */
    upsert<T extends FavoriteUpsertArgs>(args: SelectSubset<T, FavoriteUpsertArgs<ExtArgs>>): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorite.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCountArgs>(
      args?: Subset<T, FavoriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteAggregateArgs>(args: Subset<T, FavoriteAggregateArgs>): Prisma.PrismaPromise<GetFavoriteAggregateType<T>>

    /**
     * Group by Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorite model
   */
  readonly fields: FavoriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Favorite model
   */ 
  interface FavoriteFieldRefs {
    readonly id: FieldRef<"Favorite", 'String'>
    readonly userId: FieldRef<"Favorite", 'String'>
    readonly postId: FieldRef<"Favorite", 'String'>
    readonly isNotified: FieldRef<"Favorite", 'Boolean'>
    readonly createdAt: FieldRef<"Favorite", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Favorite findUnique
   */
  export type FavoriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findUniqueOrThrow
   */
  export type FavoriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findFirst
   */
  export type FavoriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findFirstOrThrow
   */
  export type FavoriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findMany
   */
  export type FavoriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter, which Favorites to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite create
   */
  export type FavoriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to create a Favorite.
     */
    data: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
  }

  /**
   * Favorite createMany
   */
  export type FavoriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite createManyAndReturn
   */
  export type FavoriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favorite update
   */
  export type FavoriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The data needed to update a Favorite.
     */
    data: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
    /**
     * Choose, which Favorite to update.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite updateMany
   */
  export type FavoriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
  }

  /**
   * Favorite upsert
   */
  export type FavoriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * The filter to search for the Favorite to update in case it exists.
     */
    where: FavoriteWhereUniqueInput
    /**
     * In case the Favorite found by the `where` argument doesn't exist, create a new Favorite with this data.
     */
    create: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
    /**
     * In case the Favorite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
  }

  /**
   * Favorite delete
   */
  export type FavoriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
    /**
     * Filter which Favorite to delete.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite deleteMany
   */
  export type FavoriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorites to delete
     */
    where?: FavoriteWhereInput
  }

  /**
   * Favorite without action
   */
  export type FavoriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoriteInclude<ExtArgs> | null
  }


  /**
   * Model Like
   */

  export type AggregateLike = {
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  export type LikeMinAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    createdAt: Date | null
  }

  export type LikeMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    postId: string | null
    createdAt: Date | null
  }

  export type LikeCountAggregateOutputType = {
    id: number
    userId: number
    postId: number
    createdAt: number
    _all: number
  }


  export type LikeMinAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    createdAt?: true
  }

  export type LikeMaxAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    createdAt?: true
  }

  export type LikeCountAggregateInputType = {
    id?: true
    userId?: true
    postId?: true
    createdAt?: true
    _all?: true
  }

  export type LikeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Like to aggregate.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Likes
    **/
    _count?: true | LikeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikeMaxAggregateInputType
  }

  export type GetLikeAggregateType<T extends LikeAggregateArgs> = {
        [P in keyof T & keyof AggregateLike]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLike[P]>
      : GetScalarType<T[P], AggregateLike[P]>
  }




  export type LikeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LikeWhereInput
    orderBy?: LikeOrderByWithAggregationInput | LikeOrderByWithAggregationInput[]
    by: LikeScalarFieldEnum[] | LikeScalarFieldEnum
    having?: LikeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikeCountAggregateInputType | true
    _min?: LikeMinAggregateInputType
    _max?: LikeMaxAggregateInputType
  }

  export type LikeGroupByOutputType = {
    id: string
    userId: string
    postId: string
    createdAt: Date
    _count: LikeCountAggregateOutputType | null
    _min: LikeMinAggregateOutputType | null
    _max: LikeMaxAggregateOutputType | null
  }

  type GetLikeGroupByPayload<T extends LikeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikeGroupByOutputType[P]>
            : GetScalarType<T[P], LikeGroupByOutputType[P]>
        }
      >
    >


  export type LikeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    postId?: boolean
    createdAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["like"]>

  export type LikeSelectScalar = {
    id?: boolean
    userId?: boolean
    postId?: boolean
    createdAt?: boolean
  }

  export type LikeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type LikeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $LikePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Like"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      postId: string
      createdAt: Date
    }, ExtArgs["result"]["like"]>
    composites: {}
  }

  type LikeGetPayload<S extends boolean | null | undefined | LikeDefaultArgs> = $Result.GetResult<Prisma.$LikePayload, S>

  type LikeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LikeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LikeCountAggregateInputType | true
    }

  export interface LikeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Like'], meta: { name: 'Like' } }
    /**
     * Find zero or one Like that matches the filter.
     * @param {LikeFindUniqueArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LikeFindUniqueArgs>(args: SelectSubset<T, LikeFindUniqueArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Like that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LikeFindUniqueOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LikeFindUniqueOrThrowArgs>(args: SelectSubset<T, LikeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Like that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LikeFindFirstArgs>(args?: SelectSubset<T, LikeFindFirstArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Like that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindFirstOrThrowArgs} args - Arguments to find a Like
     * @example
     * // Get one Like
     * const like = await prisma.like.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LikeFindFirstOrThrowArgs>(args?: SelectSubset<T, LikeFindFirstOrThrowArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.like.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.like.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const likeWithIdOnly = await prisma.like.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LikeFindManyArgs>(args?: SelectSubset<T, LikeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Like.
     * @param {LikeCreateArgs} args - Arguments to create a Like.
     * @example
     * // Create one Like
     * const Like = await prisma.like.create({
     *   data: {
     *     // ... data to create a Like
     *   }
     * })
     * 
     */
    create<T extends LikeCreateArgs>(args: SelectSubset<T, LikeCreateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Likes.
     * @param {LikeCreateManyArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LikeCreateManyArgs>(args?: SelectSubset<T, LikeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Likes and returns the data saved in the database.
     * @param {LikeCreateManyAndReturnArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const like = await prisma.like.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Likes and only return the `id`
     * const likeWithIdOnly = await prisma.like.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LikeCreateManyAndReturnArgs>(args?: SelectSubset<T, LikeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Like.
     * @param {LikeDeleteArgs} args - Arguments to delete one Like.
     * @example
     * // Delete one Like
     * const Like = await prisma.like.delete({
     *   where: {
     *     // ... filter to delete one Like
     *   }
     * })
     * 
     */
    delete<T extends LikeDeleteArgs>(args: SelectSubset<T, LikeDeleteArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Like.
     * @param {LikeUpdateArgs} args - Arguments to update one Like.
     * @example
     * // Update one Like
     * const like = await prisma.like.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LikeUpdateArgs>(args: SelectSubset<T, LikeUpdateArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Likes.
     * @param {LikeDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.like.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LikeDeleteManyArgs>(args?: SelectSubset<T, LikeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const like = await prisma.like.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LikeUpdateManyArgs>(args: SelectSubset<T, LikeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Like.
     * @param {LikeUpsertArgs} args - Arguments to update or create a Like.
     * @example
     * // Update or create a Like
     * const like = await prisma.like.upsert({
     *   create: {
     *     // ... data to create a Like
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Like we want to update
     *   }
     * })
     */
    upsert<T extends LikeUpsertArgs>(args: SelectSubset<T, LikeUpsertArgs<ExtArgs>>): Prisma__LikeClient<$Result.GetResult<Prisma.$LikePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.like.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends LikeCountArgs>(
      args?: Subset<T, LikeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikeAggregateArgs>(args: Subset<T, LikeAggregateArgs>): Prisma.PrismaPromise<GetLikeAggregateType<T>>

    /**
     * Group by Like.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LikeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LikeGroupByArgs['orderBy'] }
        : { orderBy?: LikeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LikeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Like model
   */
  readonly fields: LikeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Like.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LikeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Like model
   */ 
  interface LikeFieldRefs {
    readonly id: FieldRef<"Like", 'String'>
    readonly userId: FieldRef<"Like", 'String'>
    readonly postId: FieldRef<"Like", 'String'>
    readonly createdAt: FieldRef<"Like", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Like findUnique
   */
  export type LikeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findUniqueOrThrow
   */
  export type LikeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like findFirst
   */
  export type LikeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findFirstOrThrow
   */
  export type LikeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Like to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Likes.
     */
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like findMany
   */
  export type LikeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter, which Likes to fetch.
     */
    where?: LikeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Likes to fetch.
     */
    orderBy?: LikeOrderByWithRelationInput | LikeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Likes.
     */
    cursor?: LikeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Likes.
     */
    skip?: number
    distinct?: LikeScalarFieldEnum | LikeScalarFieldEnum[]
  }

  /**
   * Like create
   */
  export type LikeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to create a Like.
     */
    data: XOR<LikeCreateInput, LikeUncheckedCreateInput>
  }

  /**
   * Like createMany
   */
  export type LikeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Like createManyAndReturn
   */
  export type LikeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Likes.
     */
    data: LikeCreateManyInput | LikeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Like update
   */
  export type LikeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The data needed to update a Like.
     */
    data: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
    /**
     * Choose, which Like to update.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like updateMany
   */
  export type LikeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Likes.
     */
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyInput>
    /**
     * Filter which Likes to update
     */
    where?: LikeWhereInput
  }

  /**
   * Like upsert
   */
  export type LikeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * The filter to search for the Like to update in case it exists.
     */
    where: LikeWhereUniqueInput
    /**
     * In case the Like found by the `where` argument doesn't exist, create a new Like with this data.
     */
    create: XOR<LikeCreateInput, LikeUncheckedCreateInput>
    /**
     * In case the Like was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LikeUpdateInput, LikeUncheckedUpdateInput>
  }

  /**
   * Like delete
   */
  export type LikeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
    /**
     * Filter which Like to delete.
     */
    where: LikeWhereUniqueInput
  }

  /**
   * Like deleteMany
   */
  export type LikeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Likes to delete
     */
    where?: LikeWhereInput
  }

  /**
   * Like without action
   */
  export type LikeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Like
     */
    select?: LikeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LikeInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    rating: number | null
    professionalism: number | null
    communication: number | null
    reliability: number | null
    appearance: number | null
    service: number | null
    helpfulVotes: number | null
  }

  export type ReviewSumAggregateOutputType = {
    rating: number | null
    professionalism: number | null
    communication: number | null
    reliability: number | null
    appearance: number | null
    service: number | null
    helpfulVotes: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: string | null
    rating: number | null
    comment: string | null
    professionalism: number | null
    communication: number | null
    reliability: number | null
    appearance: number | null
    service: number | null
    isAnonymous: boolean | null
    isVerified: boolean | null
    helpfulVotes: number | null
    authorId: string | null
    targetId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: string | null
    rating: number | null
    comment: string | null
    professionalism: number | null
    communication: number | null
    reliability: number | null
    appearance: number | null
    service: number | null
    isAnonymous: boolean | null
    isVerified: boolean | null
    helpfulVotes: number | null
    authorId: string | null
    targetId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    rating: number
    comment: number
    professionalism: number
    communication: number
    reliability: number
    appearance: number
    service: number
    isAnonymous: number
    isVerified: number
    helpfulVotes: number
    authorId: number
    targetId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    rating?: true
    professionalism?: true
    communication?: true
    reliability?: true
    appearance?: true
    service?: true
    helpfulVotes?: true
  }

  export type ReviewSumAggregateInputType = {
    rating?: true
    professionalism?: true
    communication?: true
    reliability?: true
    appearance?: true
    service?: true
    helpfulVotes?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    professionalism?: true
    communication?: true
    reliability?: true
    appearance?: true
    service?: true
    isAnonymous?: true
    isVerified?: true
    helpfulVotes?: true
    authorId?: true
    targetId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    professionalism?: true
    communication?: true
    reliability?: true
    appearance?: true
    service?: true
    isAnonymous?: true
    isVerified?: true
    helpfulVotes?: true
    authorId?: true
    targetId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    rating?: true
    comment?: true
    professionalism?: true
    communication?: true
    reliability?: true
    appearance?: true
    service?: true
    isAnonymous?: true
    isVerified?: true
    helpfulVotes?: true
    authorId?: true
    targetId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: string
    rating: number
    comment: string | null
    professionalism: number | null
    communication: number | null
    reliability: number | null
    appearance: number | null
    service: number | null
    isAnonymous: boolean
    isVerified: boolean
    helpfulVotes: number
    authorId: string
    targetId: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    comment?: boolean
    professionalism?: boolean
    communication?: boolean
    reliability?: boolean
    appearance?: boolean
    service?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: boolean
    authorId?: boolean
    targetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    author?: boolean | EscortDefaultArgs<ExtArgs>
    target?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating?: boolean
    comment?: boolean
    professionalism?: boolean
    communication?: boolean
    reliability?: boolean
    appearance?: boolean
    service?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: boolean
    authorId?: boolean
    targetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    author?: boolean | EscortDefaultArgs<ExtArgs>
    target?: boolean | EscortDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    rating?: boolean
    comment?: boolean
    professionalism?: boolean
    communication?: boolean
    reliability?: boolean
    appearance?: boolean
    service?: boolean
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: boolean
    authorId?: boolean
    targetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | EscortDefaultArgs<ExtArgs>
    target?: boolean | EscortDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | EscortDefaultArgs<ExtArgs>
    target?: boolean | EscortDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      author: Prisma.$EscortPayload<ExtArgs>
      target: Prisma.$EscortPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      rating: number
      comment: string | null
      professionalism: number | null
      communication: number | null
      reliability: number | null
      appearance: number | null
      service: number | null
      isAnonymous: boolean
      isVerified: boolean
      helpfulVotes: number
      authorId: string
      targetId: string
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    target<T extends EscortDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EscortDefaultArgs<ExtArgs>>): Prisma__EscortClient<$Result.GetResult<Prisma.$EscortPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly professionalism: FieldRef<"Review", 'Int'>
    readonly communication: FieldRef<"Review", 'Int'>
    readonly reliability: FieldRef<"Review", 'Int'>
    readonly appearance: FieldRef<"Review", 'Int'>
    readonly service: FieldRef<"Review", 'Int'>
    readonly isAnonymous: FieldRef<"Review", 'Boolean'>
    readonly isVerified: FieldRef<"Review", 'Boolean'>
    readonly helpfulVotes: FieldRef<"Review", 'Int'>
    readonly authorId: FieldRef<"Review", 'String'>
    readonly targetId: FieldRef<"Review", 'String'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
    readonly deletedAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Report
   */

  export type AggregateReport = {
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  export type ReportMinAggregateOutputType = {
    id: string | null
    reason: $Enums.ReportReason | null
    description: string | null
    status: $Enums.ReportStatus | null
    category: string | null
    severity: $Enums.ReportSeverity | null
    resolution: string | null
    resolvedBy: string | null
    resolvedAt: Date | null
    actionTaken: string | null
    authorId: string | null
    targetUserId: string | null
    postId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ReportMaxAggregateOutputType = {
    id: string | null
    reason: $Enums.ReportReason | null
    description: string | null
    status: $Enums.ReportStatus | null
    category: string | null
    severity: $Enums.ReportSeverity | null
    resolution: string | null
    resolvedBy: string | null
    resolvedAt: Date | null
    actionTaken: string | null
    authorId: string | null
    targetUserId: string | null
    postId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ReportCountAggregateOutputType = {
    id: number
    reason: number
    description: number
    status: number
    evidence: number
    category: number
    severity: number
    resolution: number
    resolvedBy: number
    resolvedAt: number
    actionTaken: number
    authorId: number
    targetUserId: number
    postId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ReportMinAggregateInputType = {
    id?: true
    reason?: true
    description?: true
    status?: true
    category?: true
    severity?: true
    resolution?: true
    resolvedBy?: true
    resolvedAt?: true
    actionTaken?: true
    authorId?: true
    targetUserId?: true
    postId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ReportMaxAggregateInputType = {
    id?: true
    reason?: true
    description?: true
    status?: true
    category?: true
    severity?: true
    resolution?: true
    resolvedBy?: true
    resolvedAt?: true
    actionTaken?: true
    authorId?: true
    targetUserId?: true
    postId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ReportCountAggregateInputType = {
    id?: true
    reason?: true
    description?: true
    status?: true
    evidence?: true
    category?: true
    severity?: true
    resolution?: true
    resolvedBy?: true
    resolvedAt?: true
    actionTaken?: true
    authorId?: true
    targetUserId?: true
    postId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ReportAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Report to aggregate.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reports
    **/
    _count?: true | ReportCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportMaxAggregateInputType
  }

  export type GetReportAggregateType<T extends ReportAggregateArgs> = {
        [P in keyof T & keyof AggregateReport]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport[P]>
      : GetScalarType<T[P], AggregateReport[P]>
  }




  export type ReportGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReportWhereInput
    orderBy?: ReportOrderByWithAggregationInput | ReportOrderByWithAggregationInput[]
    by: ReportScalarFieldEnum[] | ReportScalarFieldEnum
    having?: ReportScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportCountAggregateInputType | true
    _min?: ReportMinAggregateInputType
    _max?: ReportMaxAggregateInputType
  }

  export type ReportGroupByOutputType = {
    id: string
    reason: $Enums.ReportReason
    description: string | null
    status: $Enums.ReportStatus
    evidence: JsonValue | null
    category: string | null
    severity: $Enums.ReportSeverity
    resolution: string | null
    resolvedBy: string | null
    resolvedAt: Date | null
    actionTaken: string | null
    authorId: string
    targetUserId: string | null
    postId: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ReportCountAggregateOutputType | null
    _min: ReportMinAggregateOutputType | null
    _max: ReportMaxAggregateOutputType | null
  }

  type GetReportGroupByPayload<T extends ReportGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportGroupByOutputType[P]>
            : GetScalarType<T[P], ReportGroupByOutputType[P]>
        }
      >
    >


  export type ReportSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reason?: boolean
    description?: boolean
    status?: boolean
    evidence?: boolean
    category?: boolean
    severity?: boolean
    resolution?: boolean
    resolvedBy?: boolean
    resolvedAt?: boolean
    actionTaken?: boolean
    authorId?: boolean
    targetUserId?: boolean
    postId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Report$postArgs<ExtArgs>
    targetUser?: boolean | Report$targetUserArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reason?: boolean
    description?: boolean
    status?: boolean
    evidence?: boolean
    category?: boolean
    severity?: boolean
    resolution?: boolean
    resolvedBy?: boolean
    resolvedAt?: boolean
    actionTaken?: boolean
    authorId?: boolean
    targetUserId?: boolean
    postId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Report$postArgs<ExtArgs>
    targetUser?: boolean | Report$targetUserArgs<ExtArgs>
  }, ExtArgs["result"]["report"]>

  export type ReportSelectScalar = {
    id?: boolean
    reason?: boolean
    description?: boolean
    status?: boolean
    evidence?: boolean
    category?: boolean
    severity?: boolean
    resolution?: boolean
    resolvedBy?: boolean
    resolvedAt?: boolean
    actionTaken?: boolean
    authorId?: boolean
    targetUserId?: boolean
    postId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ReportInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Report$postArgs<ExtArgs>
    targetUser?: boolean | Report$targetUserArgs<ExtArgs>
  }
  export type ReportIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Report$postArgs<ExtArgs>
    targetUser?: boolean | Report$targetUserArgs<ExtArgs>
  }

  export type $ReportPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Report"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      post: Prisma.$PostPayload<ExtArgs> | null
      targetUser: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reason: $Enums.ReportReason
      description: string | null
      status: $Enums.ReportStatus
      evidence: Prisma.JsonValue | null
      category: string | null
      severity: $Enums.ReportSeverity
      resolution: string | null
      resolvedBy: string | null
      resolvedAt: Date | null
      actionTaken: string | null
      authorId: string
      targetUserId: string | null
      postId: string | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["report"]>
    composites: {}
  }

  type ReportGetPayload<S extends boolean | null | undefined | ReportDefaultArgs> = $Result.GetResult<Prisma.$ReportPayload, S>

  type ReportCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReportFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReportCountAggregateInputType | true
    }

  export interface ReportDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Report'], meta: { name: 'Report' } }
    /**
     * Find zero or one Report that matches the filter.
     * @param {ReportFindUniqueArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReportFindUniqueArgs>(args: SelectSubset<T, ReportFindUniqueArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Report that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReportFindUniqueOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReportFindUniqueOrThrowArgs>(args: SelectSubset<T, ReportFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Report that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReportFindFirstArgs>(args?: SelectSubset<T, ReportFindFirstArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Report that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindFirstOrThrowArgs} args - Arguments to find a Report
     * @example
     * // Get one Report
     * const report = await prisma.report.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReportFindFirstOrThrowArgs>(args?: SelectSubset<T, ReportFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.report.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.report.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportWithIdOnly = await prisma.report.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReportFindManyArgs>(args?: SelectSubset<T, ReportFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Report.
     * @param {ReportCreateArgs} args - Arguments to create a Report.
     * @example
     * // Create one Report
     * const Report = await prisma.report.create({
     *   data: {
     *     // ... data to create a Report
     *   }
     * })
     * 
     */
    create<T extends ReportCreateArgs>(args: SelectSubset<T, ReportCreateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reports.
     * @param {ReportCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReportCreateManyArgs>(args?: SelectSubset<T, ReportCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {ReportCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const report = await prisma.report.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `id`
     * const reportWithIdOnly = await prisma.report.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReportCreateManyAndReturnArgs>(args?: SelectSubset<T, ReportCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Report.
     * @param {ReportDeleteArgs} args - Arguments to delete one Report.
     * @example
     * // Delete one Report
     * const Report = await prisma.report.delete({
     *   where: {
     *     // ... filter to delete one Report
     *   }
     * })
     * 
     */
    delete<T extends ReportDeleteArgs>(args: SelectSubset<T, ReportDeleteArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Report.
     * @param {ReportUpdateArgs} args - Arguments to update one Report.
     * @example
     * // Update one Report
     * const report = await prisma.report.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReportUpdateArgs>(args: SelectSubset<T, ReportUpdateArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reports.
     * @param {ReportDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.report.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReportDeleteManyArgs>(args?: SelectSubset<T, ReportDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const report = await prisma.report.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReportUpdateManyArgs>(args: SelectSubset<T, ReportUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Report.
     * @param {ReportUpsertArgs} args - Arguments to update or create a Report.
     * @example
     * // Update or create a Report
     * const report = await prisma.report.upsert({
     *   create: {
     *     // ... data to create a Report
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report we want to update
     *   }
     * })
     */
    upsert<T extends ReportUpsertArgs>(args: SelectSubset<T, ReportUpsertArgs<ExtArgs>>): Prisma__ReportClient<$Result.GetResult<Prisma.$ReportPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.report.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends ReportCountArgs>(
      args?: Subset<T, ReportCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportAggregateArgs>(args: Subset<T, ReportAggregateArgs>): Prisma.PrismaPromise<GetReportAggregateType<T>>

    /**
     * Group by Report.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReportGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReportGroupByArgs['orderBy'] }
        : { orderBy?: ReportGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReportGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Report model
   */
  readonly fields: ReportFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Report.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReportClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    post<T extends Report$postArgs<ExtArgs> = {}>(args?: Subset<T, Report$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    targetUser<T extends Report$targetUserArgs<ExtArgs> = {}>(args?: Subset<T, Report$targetUserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Report model
   */ 
  interface ReportFieldRefs {
    readonly id: FieldRef<"Report", 'String'>
    readonly reason: FieldRef<"Report", 'ReportReason'>
    readonly description: FieldRef<"Report", 'String'>
    readonly status: FieldRef<"Report", 'ReportStatus'>
    readonly evidence: FieldRef<"Report", 'Json'>
    readonly category: FieldRef<"Report", 'String'>
    readonly severity: FieldRef<"Report", 'ReportSeverity'>
    readonly resolution: FieldRef<"Report", 'String'>
    readonly resolvedBy: FieldRef<"Report", 'String'>
    readonly resolvedAt: FieldRef<"Report", 'DateTime'>
    readonly actionTaken: FieldRef<"Report", 'String'>
    readonly authorId: FieldRef<"Report", 'String'>
    readonly targetUserId: FieldRef<"Report", 'String'>
    readonly postId: FieldRef<"Report", 'String'>
    readonly createdAt: FieldRef<"Report", 'DateTime'>
    readonly updatedAt: FieldRef<"Report", 'DateTime'>
    readonly deletedAt: FieldRef<"Report", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Report findUnique
   */
  export type ReportFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findUniqueOrThrow
   */
  export type ReportFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report findFirst
   */
  export type ReportFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findFirstOrThrow
   */
  export type ReportFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Report to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reports.
     */
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report findMany
   */
  export type ReportFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter, which Reports to fetch.
     */
    where?: ReportWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reports to fetch.
     */
    orderBy?: ReportOrderByWithRelationInput | ReportOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reports.
     */
    cursor?: ReportWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reports.
     */
    skip?: number
    distinct?: ReportScalarFieldEnum | ReportScalarFieldEnum[]
  }

  /**
   * Report create
   */
  export type ReportCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to create a Report.
     */
    data: XOR<ReportCreateInput, ReportUncheckedCreateInput>
  }

  /**
   * Report createMany
   */
  export type ReportCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Report createManyAndReturn
   */
  export type ReportCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reports.
     */
    data: ReportCreateManyInput | ReportCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Report update
   */
  export type ReportUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The data needed to update a Report.
     */
    data: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
    /**
     * Choose, which Report to update.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report updateMany
   */
  export type ReportUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reports.
     */
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyInput>
    /**
     * Filter which Reports to update
     */
    where?: ReportWhereInput
  }

  /**
   * Report upsert
   */
  export type ReportUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * The filter to search for the Report to update in case it exists.
     */
    where: ReportWhereUniqueInput
    /**
     * In case the Report found by the `where` argument doesn't exist, create a new Report with this data.
     */
    create: XOR<ReportCreateInput, ReportUncheckedCreateInput>
    /**
     * In case the Report was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReportUpdateInput, ReportUncheckedUpdateInput>
  }

  /**
   * Report delete
   */
  export type ReportDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
    /**
     * Filter which Report to delete.
     */
    where: ReportWhereUniqueInput
  }

  /**
   * Report deleteMany
   */
  export type ReportDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reports to delete
     */
    where?: ReportWhereInput
  }

  /**
   * Report.post
   */
  export type Report$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * Report.targetUser
   */
  export type Report$targetUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Report without action
   */
  export type ReportDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Report
     */
    select?: ReportSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReportInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    title: string | null
    message: string | null
    type: $Enums.NotificationType | null
    isRead: boolean | null
    priority: $Enums.NotificationPriority | null
    expiresAt: Date | null
    isSent: boolean | null
    sentAt: Date | null
    isEmailSent: boolean | null
    emailSentAt: Date | null
    actionUrl: string | null
    actionText: string | null
    userId: string | null
    createdAt: Date | null
    deletedAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    title: string | null
    message: string | null
    type: $Enums.NotificationType | null
    isRead: boolean | null
    priority: $Enums.NotificationPriority | null
    expiresAt: Date | null
    isSent: boolean | null
    sentAt: Date | null
    isEmailSent: boolean | null
    emailSentAt: Date | null
    actionUrl: string | null
    actionText: string | null
    userId: string | null
    createdAt: Date | null
    deletedAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    title: number
    message: number
    type: number
    isRead: number
    data: number
    priority: number
    expiresAt: number
    isSent: number
    sentAt: number
    deliveryMethod: number
    isEmailSent: number
    emailSentAt: number
    actionUrl: number
    actionText: number
    userId: number
    createdAt: number
    deletedAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    priority?: true
    expiresAt?: true
    isSent?: true
    sentAt?: true
    isEmailSent?: true
    emailSentAt?: true
    actionUrl?: true
    actionText?: true
    userId?: true
    createdAt?: true
    deletedAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    priority?: true
    expiresAt?: true
    isSent?: true
    sentAt?: true
    isEmailSent?: true
    emailSentAt?: true
    actionUrl?: true
    actionText?: true
    userId?: true
    createdAt?: true
    deletedAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    isRead?: true
    data?: true
    priority?: true
    expiresAt?: true
    isSent?: true
    sentAt?: true
    deliveryMethod?: true
    isEmailSent?: true
    emailSentAt?: true
    actionUrl?: true
    actionText?: true
    userId?: true
    createdAt?: true
    deletedAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead: boolean
    data: JsonValue | null
    priority: $Enums.NotificationPriority
    expiresAt: Date | null
    isSent: boolean
    sentAt: Date | null
    deliveryMethod: string[]
    isEmailSent: boolean
    emailSentAt: Date | null
    actionUrl: string | null
    actionText: string | null
    userId: string
    createdAt: Date
    deletedAt: Date | null
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    isRead?: boolean
    data?: boolean
    priority?: boolean
    expiresAt?: boolean
    isSent?: boolean
    sentAt?: boolean
    deliveryMethod?: boolean
    isEmailSent?: boolean
    emailSentAt?: boolean
    actionUrl?: boolean
    actionText?: boolean
    userId?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    isRead?: boolean
    data?: boolean
    priority?: boolean
    expiresAt?: boolean
    isSent?: boolean
    sentAt?: boolean
    deliveryMethod?: boolean
    isEmailSent?: boolean
    emailSentAt?: boolean
    actionUrl?: boolean
    actionText?: boolean
    userId?: boolean
    createdAt?: boolean
    deletedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    isRead?: boolean
    data?: boolean
    priority?: boolean
    expiresAt?: boolean
    isSent?: boolean
    sentAt?: boolean
    deliveryMethod?: boolean
    isEmailSent?: boolean
    emailSentAt?: boolean
    actionUrl?: boolean
    actionText?: boolean
    userId?: boolean
    createdAt?: boolean
    deletedAt?: boolean
  }

  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      message: string
      type: $Enums.NotificationType
      isRead: boolean
      data: Prisma.JsonValue | null
      priority: $Enums.NotificationPriority
      expiresAt: Date | null
      isSent: boolean
      sentAt: Date | null
      deliveryMethod: string[]
      isEmailSent: boolean
      emailSentAt: Date | null
      actionUrl: string | null
      actionText: string | null
      userId: string
      createdAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */ 
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly title: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly isRead: FieldRef<"Notification", 'Boolean'>
    readonly data: FieldRef<"Notification", 'Json'>
    readonly priority: FieldRef<"Notification", 'NotificationPriority'>
    readonly expiresAt: FieldRef<"Notification", 'DateTime'>
    readonly isSent: FieldRef<"Notification", 'Boolean'>
    readonly sentAt: FieldRef<"Notification", 'DateTime'>
    readonly deliveryMethod: FieldRef<"Notification", 'String[]'>
    readonly isEmailSent: FieldRef<"Notification", 'Boolean'>
    readonly emailSentAt: FieldRef<"Notification", 'DateTime'>
    readonly actionUrl: FieldRef<"Notification", 'String'>
    readonly actionText: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
    readonly deletedAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    amount: number | null
    processorFee: number | null
    netAmount: number | null
    taxAmount: number | null
    taxRate: number | null
  }

  export type PaymentSumAggregateOutputType = {
    amount: number | null
    processorFee: number | null
    netAmount: number | null
    taxAmount: number | null
    taxRate: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    amount: number | null
    currency: string | null
    status: $Enums.PaymentStatus | null
    type: $Enums.PaymentType | null
    description: string | null
    stripePaymentId: string | null
    failureReason: string | null
    refundReason: string | null
    processorFee: number | null
    netAmount: number | null
    taxAmount: number | null
    taxRate: number | null
    clientId: string | null
    escortId: string | null
    agencyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    completedAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    amount: number | null
    currency: string | null
    status: $Enums.PaymentStatus | null
    type: $Enums.PaymentType | null
    description: string | null
    stripePaymentId: string | null
    failureReason: string | null
    refundReason: string | null
    processorFee: number | null
    netAmount: number | null
    taxAmount: number | null
    taxRate: number | null
    clientId: string | null
    escortId: string | null
    agencyId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    completedAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    amount: number
    currency: number
    status: number
    type: number
    description: number
    stripePaymentId: number
    metadata: number
    failureReason: number
    refundReason: number
    processorFee: number
    netAmount: number
    taxAmount: number
    taxRate: number
    clientId: number
    escortId: number
    agencyId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    completedAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    amount?: true
    processorFee?: true
    netAmount?: true
    taxAmount?: true
    taxRate?: true
  }

  export type PaymentSumAggregateInputType = {
    amount?: true
    processorFee?: true
    netAmount?: true
    taxAmount?: true
    taxRate?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    description?: true
    stripePaymentId?: true
    failureReason?: true
    refundReason?: true
    processorFee?: true
    netAmount?: true
    taxAmount?: true
    taxRate?: true
    clientId?: true
    escortId?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    completedAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    description?: true
    stripePaymentId?: true
    failureReason?: true
    refundReason?: true
    processorFee?: true
    netAmount?: true
    taxAmount?: true
    taxRate?: true
    clientId?: true
    escortId?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    completedAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    amount?: true
    currency?: true
    status?: true
    type?: true
    description?: true
    stripePaymentId?: true
    metadata?: true
    failureReason?: true
    refundReason?: true
    processorFee?: true
    netAmount?: true
    taxAmount?: true
    taxRate?: true
    clientId?: true
    escortId?: true
    agencyId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    completedAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    amount: number
    currency: string
    status: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description: string | null
    stripePaymentId: string | null
    metadata: JsonValue | null
    failureReason: string | null
    refundReason: string | null
    processorFee: number | null
    netAmount: number | null
    taxAmount: number | null
    taxRate: number | null
    clientId: string | null
    escortId: string | null
    agencyId: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    completedAt: Date | null
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    description?: boolean
    stripePaymentId?: boolean
    metadata?: boolean
    failureReason?: boolean
    refundReason?: boolean
    processorFee?: boolean
    netAmount?: boolean
    taxAmount?: boolean
    taxRate?: boolean
    clientId?: boolean
    escortId?: boolean
    agencyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    completedAt?: boolean
    client?: boolean | Payment$clientArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    description?: boolean
    stripePaymentId?: boolean
    metadata?: boolean
    failureReason?: boolean
    refundReason?: boolean
    processorFee?: boolean
    netAmount?: boolean
    taxAmount?: boolean
    taxRate?: boolean
    clientId?: boolean
    escortId?: boolean
    agencyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    completedAt?: boolean
    client?: boolean | Payment$clientArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    type?: boolean
    description?: boolean
    stripePaymentId?: boolean
    metadata?: boolean
    failureReason?: boolean
    refundReason?: boolean
    processorFee?: boolean
    netAmount?: boolean
    taxAmount?: boolean
    taxRate?: boolean
    clientId?: boolean
    escortId?: boolean
    agencyId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    completedAt?: boolean
  }

  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Payment$clientArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    client?: boolean | Payment$clientArgs<ExtArgs>
  }

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      client: Prisma.$ClientPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      amount: number
      currency: string
      status: $Enums.PaymentStatus
      type: $Enums.PaymentType
      description: string | null
      stripePaymentId: string | null
      metadata: Prisma.JsonValue | null
      failureReason: string | null
      refundReason: string | null
      processorFee: number | null
      netAmount: number | null
      taxAmount: number | null
      taxRate: number | null
      clientId: string | null
      escortId: string | null
      agencyId: string | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      completedAt: Date | null
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    client<T extends Payment$clientArgs<ExtArgs> = {}>(args?: Subset<T, Payment$clientArgs<ExtArgs>>): Prisma__ClientClient<$Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */ 
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly amount: FieldRef<"Payment", 'Float'>
    readonly currency: FieldRef<"Payment", 'String'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly type: FieldRef<"Payment", 'PaymentType'>
    readonly description: FieldRef<"Payment", 'String'>
    readonly stripePaymentId: FieldRef<"Payment", 'String'>
    readonly metadata: FieldRef<"Payment", 'Json'>
    readonly failureReason: FieldRef<"Payment", 'String'>
    readonly refundReason: FieldRef<"Payment", 'String'>
    readonly processorFee: FieldRef<"Payment", 'Float'>
    readonly netAmount: FieldRef<"Payment", 'Float'>
    readonly taxAmount: FieldRef<"Payment", 'Float'>
    readonly taxRate: FieldRef<"Payment", 'Float'>
    readonly clientId: FieldRef<"Payment", 'String'>
    readonly escortId: FieldRef<"Payment", 'String'>
    readonly agencyId: FieldRef<"Payment", 'String'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
    readonly deletedAt: FieldRef<"Payment", 'DateTime'>
    readonly completedAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
  }

  /**
   * Payment.client
   */
  export type Payment$clientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Client
     */
    select?: ClientSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClientInclude<ExtArgs> | null
    where?: ClientWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model Boost
   */

  export type AggregateBoost = {
    _count: BoostCountAggregateOutputType | null
    _avg: BoostAvgAggregateOutputType | null
    _sum: BoostSumAggregateOutputType | null
    _min: BoostMinAggregateOutputType | null
    _max: BoostMaxAggregateOutputType | null
  }

  export type BoostAvgAggregateOutputType = {
    amount: number | null
    viewsBefore: number | null
    viewsAfter: number | null
    clicksBefore: number | null
    clicksAfter: number | null
    engagementBefore: number | null
    engagementAfter: number | null
    conversionRate: number | null
    stackLevel: number | null
  }

  export type BoostSumAggregateOutputType = {
    amount: number | null
    viewsBefore: number | null
    viewsAfter: number | null
    clicksBefore: number | null
    clicksAfter: number | null
    engagementBefore: number | null
    engagementAfter: number | null
    conversionRate: number | null
    stackLevel: number | null
  }

  export type BoostMinAggregateOutputType = {
    id: string | null
    pricingId: string | null
    isActive: boolean | null
    amount: number | null
    userId: string | null
    postId: string | null
    viewsBefore: number | null
    viewsAfter: number | null
    clicksBefore: number | null
    clicksAfter: number | null
    engagementBefore: number | null
    engagementAfter: number | null
    conversionRate: number | null
    geography: string | null
    stackLevel: number | null
    isStackBoost: boolean | null
    createdAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type BoostMaxAggregateOutputType = {
    id: string | null
    pricingId: string | null
    isActive: boolean | null
    amount: number | null
    userId: string | null
    postId: string | null
    viewsBefore: number | null
    viewsAfter: number | null
    clicksBefore: number | null
    clicksAfter: number | null
    engagementBefore: number | null
    engagementAfter: number | null
    conversionRate: number | null
    geography: string | null
    stackLevel: number | null
    isStackBoost: boolean | null
    createdAt: Date | null
    expiresAt: Date | null
    deletedAt: Date | null
  }

  export type BoostCountAggregateOutputType = {
    id: number
    pricingId: number
    isActive: number
    amount: number
    userId: number
    postId: number
    viewsBefore: number
    viewsAfter: number
    clicksBefore: number
    clicksAfter: number
    engagementBefore: number
    engagementAfter: number
    conversionRate: number
    targetAudience: number
    geography: number
    stackLevel: number
    isStackBoost: number
    createdAt: number
    expiresAt: number
    deletedAt: number
    _all: number
  }


  export type BoostAvgAggregateInputType = {
    amount?: true
    viewsBefore?: true
    viewsAfter?: true
    clicksBefore?: true
    clicksAfter?: true
    engagementBefore?: true
    engagementAfter?: true
    conversionRate?: true
    stackLevel?: true
  }

  export type BoostSumAggregateInputType = {
    amount?: true
    viewsBefore?: true
    viewsAfter?: true
    clicksBefore?: true
    clicksAfter?: true
    engagementBefore?: true
    engagementAfter?: true
    conversionRate?: true
    stackLevel?: true
  }

  export type BoostMinAggregateInputType = {
    id?: true
    pricingId?: true
    isActive?: true
    amount?: true
    userId?: true
    postId?: true
    viewsBefore?: true
    viewsAfter?: true
    clicksBefore?: true
    clicksAfter?: true
    engagementBefore?: true
    engagementAfter?: true
    conversionRate?: true
    geography?: true
    stackLevel?: true
    isStackBoost?: true
    createdAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type BoostMaxAggregateInputType = {
    id?: true
    pricingId?: true
    isActive?: true
    amount?: true
    userId?: true
    postId?: true
    viewsBefore?: true
    viewsAfter?: true
    clicksBefore?: true
    clicksAfter?: true
    engagementBefore?: true
    engagementAfter?: true
    conversionRate?: true
    geography?: true
    stackLevel?: true
    isStackBoost?: true
    createdAt?: true
    expiresAt?: true
    deletedAt?: true
  }

  export type BoostCountAggregateInputType = {
    id?: true
    pricingId?: true
    isActive?: true
    amount?: true
    userId?: true
    postId?: true
    viewsBefore?: true
    viewsAfter?: true
    clicksBefore?: true
    clicksAfter?: true
    engagementBefore?: true
    engagementAfter?: true
    conversionRate?: true
    targetAudience?: true
    geography?: true
    stackLevel?: true
    isStackBoost?: true
    createdAt?: true
    expiresAt?: true
    deletedAt?: true
    _all?: true
  }

  export type BoostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Boost to aggregate.
     */
    where?: BoostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Boosts to fetch.
     */
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BoostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Boosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Boosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Boosts
    **/
    _count?: true | BoostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BoostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BoostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BoostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BoostMaxAggregateInputType
  }

  export type GetBoostAggregateType<T extends BoostAggregateArgs> = {
        [P in keyof T & keyof AggregateBoost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBoost[P]>
      : GetScalarType<T[P], AggregateBoost[P]>
  }




  export type BoostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BoostWhereInput
    orderBy?: BoostOrderByWithAggregationInput | BoostOrderByWithAggregationInput[]
    by: BoostScalarFieldEnum[] | BoostScalarFieldEnum
    having?: BoostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BoostCountAggregateInputType | true
    _avg?: BoostAvgAggregateInputType
    _sum?: BoostSumAggregateInputType
    _min?: BoostMinAggregateInputType
    _max?: BoostMaxAggregateInputType
  }

  export type BoostGroupByOutputType = {
    id: string
    pricingId: string
    isActive: boolean
    amount: number
    userId: string
    postId: string
    viewsBefore: number
    viewsAfter: number
    clicksBefore: number
    clicksAfter: number
    engagementBefore: number
    engagementAfter: number
    conversionRate: number
    targetAudience: JsonValue | null
    geography: string | null
    stackLevel: number
    isStackBoost: boolean
    createdAt: Date
    expiresAt: Date
    deletedAt: Date | null
    _count: BoostCountAggregateOutputType | null
    _avg: BoostAvgAggregateOutputType | null
    _sum: BoostSumAggregateOutputType | null
    _min: BoostMinAggregateOutputType | null
    _max: BoostMaxAggregateOutputType | null
  }

  type GetBoostGroupByPayload<T extends BoostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BoostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BoostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BoostGroupByOutputType[P]>
            : GetScalarType<T[P], BoostGroupByOutputType[P]>
        }
      >
    >


  export type BoostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pricingId?: boolean
    isActive?: boolean
    amount?: boolean
    userId?: boolean
    postId?: boolean
    viewsBefore?: boolean
    viewsAfter?: boolean
    clicksBefore?: boolean
    clicksAfter?: boolean
    engagementBefore?: boolean
    engagementAfter?: boolean
    conversionRate?: boolean
    targetAudience?: boolean
    geography?: boolean
    stackLevel?: boolean
    isStackBoost?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    pricing?: boolean | BoostPricingDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["boost"]>

  export type BoostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pricingId?: boolean
    isActive?: boolean
    amount?: boolean
    userId?: boolean
    postId?: boolean
    viewsBefore?: boolean
    viewsAfter?: boolean
    clicksBefore?: boolean
    clicksAfter?: boolean
    engagementBefore?: boolean
    engagementAfter?: boolean
    conversionRate?: boolean
    targetAudience?: boolean
    geography?: boolean
    stackLevel?: boolean
    isStackBoost?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    pricing?: boolean | BoostPricingDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["boost"]>

  export type BoostSelectScalar = {
    id?: boolean
    pricingId?: boolean
    isActive?: boolean
    amount?: boolean
    userId?: boolean
    postId?: boolean
    viewsBefore?: boolean
    viewsAfter?: boolean
    clicksBefore?: boolean
    clicksAfter?: boolean
    engagementBefore?: boolean
    engagementAfter?: boolean
    conversionRate?: boolean
    targetAudience?: boolean
    geography?: boolean
    stackLevel?: boolean
    isStackBoost?: boolean
    createdAt?: boolean
    expiresAt?: boolean
    deletedAt?: boolean
  }

  export type BoostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    pricing?: boolean | BoostPricingDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type BoostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    pricing?: boolean | BoostPricingDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $BoostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Boost"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      pricing: Prisma.$BoostPricingPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      pricingId: string
      isActive: boolean
      amount: number
      userId: string
      postId: string
      viewsBefore: number
      viewsAfter: number
      clicksBefore: number
      clicksAfter: number
      engagementBefore: number
      engagementAfter: number
      conversionRate: number
      targetAudience: Prisma.JsonValue | null
      geography: string | null
      stackLevel: number
      isStackBoost: boolean
      createdAt: Date
      expiresAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["boost"]>
    composites: {}
  }

  type BoostGetPayload<S extends boolean | null | undefined | BoostDefaultArgs> = $Result.GetResult<Prisma.$BoostPayload, S>

  type BoostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BoostFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BoostCountAggregateInputType | true
    }

  export interface BoostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Boost'], meta: { name: 'Boost' } }
    /**
     * Find zero or one Boost that matches the filter.
     * @param {BoostFindUniqueArgs} args - Arguments to find a Boost
     * @example
     * // Get one Boost
     * const boost = await prisma.boost.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BoostFindUniqueArgs>(args: SelectSubset<T, BoostFindUniqueArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Boost that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BoostFindUniqueOrThrowArgs} args - Arguments to find a Boost
     * @example
     * // Get one Boost
     * const boost = await prisma.boost.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BoostFindUniqueOrThrowArgs>(args: SelectSubset<T, BoostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Boost that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostFindFirstArgs} args - Arguments to find a Boost
     * @example
     * // Get one Boost
     * const boost = await prisma.boost.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BoostFindFirstArgs>(args?: SelectSubset<T, BoostFindFirstArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Boost that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostFindFirstOrThrowArgs} args - Arguments to find a Boost
     * @example
     * // Get one Boost
     * const boost = await prisma.boost.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BoostFindFirstOrThrowArgs>(args?: SelectSubset<T, BoostFindFirstOrThrowArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Boosts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Boosts
     * const boosts = await prisma.boost.findMany()
     * 
     * // Get first 10 Boosts
     * const boosts = await prisma.boost.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const boostWithIdOnly = await prisma.boost.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BoostFindManyArgs>(args?: SelectSubset<T, BoostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Boost.
     * @param {BoostCreateArgs} args - Arguments to create a Boost.
     * @example
     * // Create one Boost
     * const Boost = await prisma.boost.create({
     *   data: {
     *     // ... data to create a Boost
     *   }
     * })
     * 
     */
    create<T extends BoostCreateArgs>(args: SelectSubset<T, BoostCreateArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Boosts.
     * @param {BoostCreateManyArgs} args - Arguments to create many Boosts.
     * @example
     * // Create many Boosts
     * const boost = await prisma.boost.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BoostCreateManyArgs>(args?: SelectSubset<T, BoostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Boosts and returns the data saved in the database.
     * @param {BoostCreateManyAndReturnArgs} args - Arguments to create many Boosts.
     * @example
     * // Create many Boosts
     * const boost = await prisma.boost.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Boosts and only return the `id`
     * const boostWithIdOnly = await prisma.boost.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BoostCreateManyAndReturnArgs>(args?: SelectSubset<T, BoostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Boost.
     * @param {BoostDeleteArgs} args - Arguments to delete one Boost.
     * @example
     * // Delete one Boost
     * const Boost = await prisma.boost.delete({
     *   where: {
     *     // ... filter to delete one Boost
     *   }
     * })
     * 
     */
    delete<T extends BoostDeleteArgs>(args: SelectSubset<T, BoostDeleteArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Boost.
     * @param {BoostUpdateArgs} args - Arguments to update one Boost.
     * @example
     * // Update one Boost
     * const boost = await prisma.boost.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BoostUpdateArgs>(args: SelectSubset<T, BoostUpdateArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Boosts.
     * @param {BoostDeleteManyArgs} args - Arguments to filter Boosts to delete.
     * @example
     * // Delete a few Boosts
     * const { count } = await prisma.boost.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BoostDeleteManyArgs>(args?: SelectSubset<T, BoostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Boosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Boosts
     * const boost = await prisma.boost.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BoostUpdateManyArgs>(args: SelectSubset<T, BoostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Boost.
     * @param {BoostUpsertArgs} args - Arguments to update or create a Boost.
     * @example
     * // Update or create a Boost
     * const boost = await prisma.boost.upsert({
     *   create: {
     *     // ... data to create a Boost
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Boost we want to update
     *   }
     * })
     */
    upsert<T extends BoostUpsertArgs>(args: SelectSubset<T, BoostUpsertArgs<ExtArgs>>): Prisma__BoostClient<$Result.GetResult<Prisma.$BoostPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Boosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostCountArgs} args - Arguments to filter Boosts to count.
     * @example
     * // Count the number of Boosts
     * const count = await prisma.boost.count({
     *   where: {
     *     // ... the filter for the Boosts we want to count
     *   }
     * })
    **/
    count<T extends BoostCountArgs>(
      args?: Subset<T, BoostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BoostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Boost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BoostAggregateArgs>(args: Subset<T, BoostAggregateArgs>): Prisma.PrismaPromise<GetBoostAggregateType<T>>

    /**
     * Group by Boost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BoostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BoostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BoostGroupByArgs['orderBy'] }
        : { orderBy?: BoostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BoostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBoostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Boost model
   */
  readonly fields: BoostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Boost.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BoostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    pricing<T extends BoostPricingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BoostPricingDefaultArgs<ExtArgs>>): Prisma__BoostPricingClient<$Result.GetResult<Prisma.$BoostPricingPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Boost model
   */ 
  interface BoostFieldRefs {
    readonly id: FieldRef<"Boost", 'String'>
    readonly pricingId: FieldRef<"Boost", 'String'>
    readonly isActive: FieldRef<"Boost", 'Boolean'>
    readonly amount: FieldRef<"Boost", 'Float'>
    readonly userId: FieldRef<"Boost", 'String'>
    readonly postId: FieldRef<"Boost", 'String'>
    readonly viewsBefore: FieldRef<"Boost", 'Int'>
    readonly viewsAfter: FieldRef<"Boost", 'Int'>
    readonly clicksBefore: FieldRef<"Boost", 'Int'>
    readonly clicksAfter: FieldRef<"Boost", 'Int'>
    readonly engagementBefore: FieldRef<"Boost", 'Float'>
    readonly engagementAfter: FieldRef<"Boost", 'Float'>
    readonly conversionRate: FieldRef<"Boost", 'Float'>
    readonly targetAudience: FieldRef<"Boost", 'Json'>
    readonly geography: FieldRef<"Boost", 'String'>
    readonly stackLevel: FieldRef<"Boost", 'Int'>
    readonly isStackBoost: FieldRef<"Boost", 'Boolean'>
    readonly createdAt: FieldRef<"Boost", 'DateTime'>
    readonly expiresAt: FieldRef<"Boost", 'DateTime'>
    readonly deletedAt: FieldRef<"Boost", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Boost findUnique
   */
  export type BoostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter, which Boost to fetch.
     */
    where: BoostWhereUniqueInput
  }

  /**
   * Boost findUniqueOrThrow
   */
  export type BoostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter, which Boost to fetch.
     */
    where: BoostWhereUniqueInput
  }

  /**
   * Boost findFirst
   */
  export type BoostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter, which Boost to fetch.
     */
    where?: BoostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Boosts to fetch.
     */
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Boosts.
     */
    cursor?: BoostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Boosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Boosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Boosts.
     */
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * Boost findFirstOrThrow
   */
  export type BoostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter, which Boost to fetch.
     */
    where?: BoostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Boosts to fetch.
     */
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Boosts.
     */
    cursor?: BoostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Boosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Boosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Boosts.
     */
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * Boost findMany
   */
  export type BoostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter, which Boosts to fetch.
     */
    where?: BoostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Boosts to fetch.
     */
    orderBy?: BoostOrderByWithRelationInput | BoostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Boosts.
     */
    cursor?: BoostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Boosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Boosts.
     */
    skip?: number
    distinct?: BoostScalarFieldEnum | BoostScalarFieldEnum[]
  }

  /**
   * Boost create
   */
  export type BoostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * The data needed to create a Boost.
     */
    data: XOR<BoostCreateInput, BoostUncheckedCreateInput>
  }

  /**
   * Boost createMany
   */
  export type BoostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Boosts.
     */
    data: BoostCreateManyInput | BoostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Boost createManyAndReturn
   */
  export type BoostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Boosts.
     */
    data: BoostCreateManyInput | BoostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Boost update
   */
  export type BoostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * The data needed to update a Boost.
     */
    data: XOR<BoostUpdateInput, BoostUncheckedUpdateInput>
    /**
     * Choose, which Boost to update.
     */
    where: BoostWhereUniqueInput
  }

  /**
   * Boost updateMany
   */
  export type BoostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Boosts.
     */
    data: XOR<BoostUpdateManyMutationInput, BoostUncheckedUpdateManyInput>
    /**
     * Filter which Boosts to update
     */
    where?: BoostWhereInput
  }

  /**
   * Boost upsert
   */
  export type BoostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * The filter to search for the Boost to update in case it exists.
     */
    where: BoostWhereUniqueInput
    /**
     * In case the Boost found by the `where` argument doesn't exist, create a new Boost with this data.
     */
    create: XOR<BoostCreateInput, BoostUncheckedCreateInput>
    /**
     * In case the Boost was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BoostUpdateInput, BoostUncheckedUpdateInput>
  }

  /**
   * Boost delete
   */
  export type BoostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
    /**
     * Filter which Boost to delete.
     */
    where: BoostWhereUniqueInput
  }

  /**
   * Boost deleteMany
   */
  export type BoostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Boosts to delete
     */
    where?: BoostWhereInput
  }

  /**
   * Boost without action
   */
  export type BoostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Boost
     */
    select?: BoostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BoostInclude<ExtArgs> | null
  }


  /**
   * Model AppMetrics
   */

  export type AggregateAppMetrics = {
    _count: AppMetricsCountAggregateOutputType | null
    _avg: AppMetricsAvgAggregateOutputType | null
    _sum: AppMetricsSumAggregateOutputType | null
    _min: AppMetricsMinAggregateOutputType | null
    _max: AppMetricsMaxAggregateOutputType | null
  }

  export type AppMetricsAvgAggregateOutputType = {
    totalUsers: number | null
    totalEscorts: number | null
    totalAgencies: number | null
    totalClients: number | null
    totalAdmins: number | null
    totalPosts: number | null
    totalPayments: number | null
    totalRevenue: number | null
    activeUsers: number | null
    bannedUsers: number | null
    verifiedEscorts: number | null
    premiumClients: number | null
    pendingAgencies: number | null
    totalVerifications: number | null
    expiredVerifications: number | null
    totalPointsSold: number | null
    totalPointsSpent: number | null
    totalBoosts: number | null
    pointsRevenue: number | null
    dailyLoginStreaks: number | null
    totalMessages: number | null
    averageSessionTime: number | null
    conversionRate: number | null
    churnRate: number | null
    revenuePerUser: number | null
    basicClients: number | null
    premiumClientsTier: number | null
    vipClients: number | null
    dailyActiveUsers: number | null
    weeklyActiveUsers: number | null
    monthlyActiveUsers: number | null
  }

  export type AppMetricsSumAggregateOutputType = {
    totalUsers: number | null
    totalEscorts: number | null
    totalAgencies: number | null
    totalClients: number | null
    totalAdmins: number | null
    totalPosts: number | null
    totalPayments: number | null
    totalRevenue: number | null
    activeUsers: number | null
    bannedUsers: number | null
    verifiedEscorts: number | null
    premiumClients: number | null
    pendingAgencies: number | null
    totalVerifications: number | null
    expiredVerifications: number | null
    totalPointsSold: number | null
    totalPointsSpent: number | null
    totalBoosts: number | null
    pointsRevenue: number | null
    dailyLoginStreaks: number | null
    totalMessages: number | null
    averageSessionTime: number | null
    conversionRate: number | null
    churnRate: number | null
    revenuePerUser: number | null
    basicClients: number | null
    premiumClientsTier: number | null
    vipClients: number | null
    dailyActiveUsers: number | null
    weeklyActiveUsers: number | null
    monthlyActiveUsers: number | null
  }

  export type AppMetricsMinAggregateOutputType = {
    id: string | null
    totalUsers: number | null
    totalEscorts: number | null
    totalAgencies: number | null
    totalClients: number | null
    totalAdmins: number | null
    totalPosts: number | null
    totalPayments: number | null
    totalRevenue: number | null
    activeUsers: number | null
    bannedUsers: number | null
    verifiedEscorts: number | null
    premiumClients: number | null
    pendingAgencies: number | null
    totalVerifications: number | null
    expiredVerifications: number | null
    totalPointsSold: number | null
    totalPointsSpent: number | null
    totalBoosts: number | null
    pointsRevenue: number | null
    dailyLoginStreaks: number | null
    totalMessages: number | null
    averageSessionTime: number | null
    conversionRate: number | null
    churnRate: number | null
    revenuePerUser: number | null
    basicClients: number | null
    premiumClientsTier: number | null
    vipClients: number | null
    dailyActiveUsers: number | null
    weeklyActiveUsers: number | null
    monthlyActiveUsers: number | null
    date: Date | null
    createdAt: Date | null
  }

  export type AppMetricsMaxAggregateOutputType = {
    id: string | null
    totalUsers: number | null
    totalEscorts: number | null
    totalAgencies: number | null
    totalClients: number | null
    totalAdmins: number | null
    totalPosts: number | null
    totalPayments: number | null
    totalRevenue: number | null
    activeUsers: number | null
    bannedUsers: number | null
    verifiedEscorts: number | null
    premiumClients: number | null
    pendingAgencies: number | null
    totalVerifications: number | null
    expiredVerifications: number | null
    totalPointsSold: number | null
    totalPointsSpent: number | null
    totalBoosts: number | null
    pointsRevenue: number | null
    dailyLoginStreaks: number | null
    totalMessages: number | null
    averageSessionTime: number | null
    conversionRate: number | null
    churnRate: number | null
    revenuePerUser: number | null
    basicClients: number | null
    premiumClientsTier: number | null
    vipClients: number | null
    dailyActiveUsers: number | null
    weeklyActiveUsers: number | null
    monthlyActiveUsers: number | null
    date: Date | null
    createdAt: Date | null
  }

  export type AppMetricsCountAggregateOutputType = {
    id: number
    totalUsers: number
    totalEscorts: number
    totalAgencies: number
    totalClients: number
    totalAdmins: number
    totalPosts: number
    totalPayments: number
    totalRevenue: number
    activeUsers: number
    bannedUsers: number
    verifiedEscorts: number
    premiumClients: number
    pendingAgencies: number
    totalVerifications: number
    expiredVerifications: number
    totalPointsSold: number
    totalPointsSpent: number
    totalBoosts: number
    pointsRevenue: number
    dailyLoginStreaks: number
    totalMessages: number
    averageSessionTime: number
    conversionRate: number
    churnRate: number
    revenuePerUser: number
    basicClients: number
    premiumClientsTier: number
    vipClients: number
    dailyActiveUsers: number
    weeklyActiveUsers: number
    monthlyActiveUsers: number
    topCountries: number
    topCities: number
    date: number
    createdAt: number
    _all: number
  }


  export type AppMetricsAvgAggregateInputType = {
    totalUsers?: true
    totalEscorts?: true
    totalAgencies?: true
    totalClients?: true
    totalAdmins?: true
    totalPosts?: true
    totalPayments?: true
    totalRevenue?: true
    activeUsers?: true
    bannedUsers?: true
    verifiedEscorts?: true
    premiumClients?: true
    pendingAgencies?: true
    totalVerifications?: true
    expiredVerifications?: true
    totalPointsSold?: true
    totalPointsSpent?: true
    totalBoosts?: true
    pointsRevenue?: true
    dailyLoginStreaks?: true
    totalMessages?: true
    averageSessionTime?: true
    conversionRate?: true
    churnRate?: true
    revenuePerUser?: true
    basicClients?: true
    premiumClientsTier?: true
    vipClients?: true
    dailyActiveUsers?: true
    weeklyActiveUsers?: true
    monthlyActiveUsers?: true
  }

  export type AppMetricsSumAggregateInputType = {
    totalUsers?: true
    totalEscorts?: true
    totalAgencies?: true
    totalClients?: true
    totalAdmins?: true
    totalPosts?: true
    totalPayments?: true
    totalRevenue?: true
    activeUsers?: true
    bannedUsers?: true
    verifiedEscorts?: true
    premiumClients?: true
    pendingAgencies?: true
    totalVerifications?: true
    expiredVerifications?: true
    totalPointsSold?: true
    totalPointsSpent?: true
    totalBoosts?: true
    pointsRevenue?: true
    dailyLoginStreaks?: true
    totalMessages?: true
    averageSessionTime?: true
    conversionRate?: true
    churnRate?: true
    revenuePerUser?: true
    basicClients?: true
    premiumClientsTier?: true
    vipClients?: true
    dailyActiveUsers?: true
    weeklyActiveUsers?: true
    monthlyActiveUsers?: true
  }

  export type AppMetricsMinAggregateInputType = {
    id?: true
    totalUsers?: true
    totalEscorts?: true
    totalAgencies?: true
    totalClients?: true
    totalAdmins?: true
    totalPosts?: true
    totalPayments?: true
    totalRevenue?: true
    activeUsers?: true
    bannedUsers?: true
    verifiedEscorts?: true
    premiumClients?: true
    pendingAgencies?: true
    totalVerifications?: true
    expiredVerifications?: true
    totalPointsSold?: true
    totalPointsSpent?: true
    totalBoosts?: true
    pointsRevenue?: true
    dailyLoginStreaks?: true
    totalMessages?: true
    averageSessionTime?: true
    conversionRate?: true
    churnRate?: true
    revenuePerUser?: true
    basicClients?: true
    premiumClientsTier?: true
    vipClients?: true
    dailyActiveUsers?: true
    weeklyActiveUsers?: true
    monthlyActiveUsers?: true
    date?: true
    createdAt?: true
  }

  export type AppMetricsMaxAggregateInputType = {
    id?: true
    totalUsers?: true
    totalEscorts?: true
    totalAgencies?: true
    totalClients?: true
    totalAdmins?: true
    totalPosts?: true
    totalPayments?: true
    totalRevenue?: true
    activeUsers?: true
    bannedUsers?: true
    verifiedEscorts?: true
    premiumClients?: true
    pendingAgencies?: true
    totalVerifications?: true
    expiredVerifications?: true
    totalPointsSold?: true
    totalPointsSpent?: true
    totalBoosts?: true
    pointsRevenue?: true
    dailyLoginStreaks?: true
    totalMessages?: true
    averageSessionTime?: true
    conversionRate?: true
    churnRate?: true
    revenuePerUser?: true
    basicClients?: true
    premiumClientsTier?: true
    vipClients?: true
    dailyActiveUsers?: true
    weeklyActiveUsers?: true
    monthlyActiveUsers?: true
    date?: true
    createdAt?: true
  }

  export type AppMetricsCountAggregateInputType = {
    id?: true
    totalUsers?: true
    totalEscorts?: true
    totalAgencies?: true
    totalClients?: true
    totalAdmins?: true
    totalPosts?: true
    totalPayments?: true
    totalRevenue?: true
    activeUsers?: true
    bannedUsers?: true
    verifiedEscorts?: true
    premiumClients?: true
    pendingAgencies?: true
    totalVerifications?: true
    expiredVerifications?: true
    totalPointsSold?: true
    totalPointsSpent?: true
    totalBoosts?: true
    pointsRevenue?: true
    dailyLoginStreaks?: true
    totalMessages?: true
    averageSessionTime?: true
    conversionRate?: true
    churnRate?: true
    revenuePerUser?: true
    basicClients?: true
    premiumClientsTier?: true
    vipClients?: true
    dailyActiveUsers?: true
    weeklyActiveUsers?: true
    monthlyActiveUsers?: true
    topCountries?: true
    topCities?: true
    date?: true
    createdAt?: true
    _all?: true
  }

  export type AppMetricsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppMetrics to aggregate.
     */
    where?: AppMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMetrics to fetch.
     */
    orderBy?: AppMetricsOrderByWithRelationInput | AppMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AppMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AppMetrics
    **/
    _count?: true | AppMetricsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AppMetricsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AppMetricsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AppMetricsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AppMetricsMaxAggregateInputType
  }

  export type GetAppMetricsAggregateType<T extends AppMetricsAggregateArgs> = {
        [P in keyof T & keyof AggregateAppMetrics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAppMetrics[P]>
      : GetScalarType<T[P], AggregateAppMetrics[P]>
  }




  export type AppMetricsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AppMetricsWhereInput
    orderBy?: AppMetricsOrderByWithAggregationInput | AppMetricsOrderByWithAggregationInput[]
    by: AppMetricsScalarFieldEnum[] | AppMetricsScalarFieldEnum
    having?: AppMetricsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AppMetricsCountAggregateInputType | true
    _avg?: AppMetricsAvgAggregateInputType
    _sum?: AppMetricsSumAggregateInputType
    _min?: AppMetricsMinAggregateInputType
    _max?: AppMetricsMaxAggregateInputType
  }

  export type AppMetricsGroupByOutputType = {
    id: string
    totalUsers: number
    totalEscorts: number
    totalAgencies: number
    totalClients: number
    totalAdmins: number
    totalPosts: number
    totalPayments: number
    totalRevenue: number
    activeUsers: number
    bannedUsers: number
    verifiedEscorts: number
    premiumClients: number
    pendingAgencies: number
    totalVerifications: number
    expiredVerifications: number
    totalPointsSold: number
    totalPointsSpent: number
    totalBoosts: number
    pointsRevenue: number
    dailyLoginStreaks: number
    totalMessages: number
    averageSessionTime: number
    conversionRate: number
    churnRate: number
    revenuePerUser: number
    basicClients: number
    premiumClientsTier: number
    vipClients: number
    dailyActiveUsers: number
    weeklyActiveUsers: number
    monthlyActiveUsers: number
    topCountries: JsonValue | null
    topCities: JsonValue | null
    date: Date
    createdAt: Date
    _count: AppMetricsCountAggregateOutputType | null
    _avg: AppMetricsAvgAggregateOutputType | null
    _sum: AppMetricsSumAggregateOutputType | null
    _min: AppMetricsMinAggregateOutputType | null
    _max: AppMetricsMaxAggregateOutputType | null
  }

  type GetAppMetricsGroupByPayload<T extends AppMetricsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AppMetricsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AppMetricsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AppMetricsGroupByOutputType[P]>
            : GetScalarType<T[P], AppMetricsGroupByOutputType[P]>
        }
      >
    >


  export type AppMetricsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalUsers?: boolean
    totalEscorts?: boolean
    totalAgencies?: boolean
    totalClients?: boolean
    totalAdmins?: boolean
    totalPosts?: boolean
    totalPayments?: boolean
    totalRevenue?: boolean
    activeUsers?: boolean
    bannedUsers?: boolean
    verifiedEscorts?: boolean
    premiumClients?: boolean
    pendingAgencies?: boolean
    totalVerifications?: boolean
    expiredVerifications?: boolean
    totalPointsSold?: boolean
    totalPointsSpent?: boolean
    totalBoosts?: boolean
    pointsRevenue?: boolean
    dailyLoginStreaks?: boolean
    totalMessages?: boolean
    averageSessionTime?: boolean
    conversionRate?: boolean
    churnRate?: boolean
    revenuePerUser?: boolean
    basicClients?: boolean
    premiumClientsTier?: boolean
    vipClients?: boolean
    dailyActiveUsers?: boolean
    weeklyActiveUsers?: boolean
    monthlyActiveUsers?: boolean
    topCountries?: boolean
    topCities?: boolean
    date?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["appMetrics"]>

  export type AppMetricsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    totalUsers?: boolean
    totalEscorts?: boolean
    totalAgencies?: boolean
    totalClients?: boolean
    totalAdmins?: boolean
    totalPosts?: boolean
    totalPayments?: boolean
    totalRevenue?: boolean
    activeUsers?: boolean
    bannedUsers?: boolean
    verifiedEscorts?: boolean
    premiumClients?: boolean
    pendingAgencies?: boolean
    totalVerifications?: boolean
    expiredVerifications?: boolean
    totalPointsSold?: boolean
    totalPointsSpent?: boolean
    totalBoosts?: boolean
    pointsRevenue?: boolean
    dailyLoginStreaks?: boolean
    totalMessages?: boolean
    averageSessionTime?: boolean
    conversionRate?: boolean
    churnRate?: boolean
    revenuePerUser?: boolean
    basicClients?: boolean
    premiumClientsTier?: boolean
    vipClients?: boolean
    dailyActiveUsers?: boolean
    weeklyActiveUsers?: boolean
    monthlyActiveUsers?: boolean
    topCountries?: boolean
    topCities?: boolean
    date?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["appMetrics"]>

  export type AppMetricsSelectScalar = {
    id?: boolean
    totalUsers?: boolean
    totalEscorts?: boolean
    totalAgencies?: boolean
    totalClients?: boolean
    totalAdmins?: boolean
    totalPosts?: boolean
    totalPayments?: boolean
    totalRevenue?: boolean
    activeUsers?: boolean
    bannedUsers?: boolean
    verifiedEscorts?: boolean
    premiumClients?: boolean
    pendingAgencies?: boolean
    totalVerifications?: boolean
    expiredVerifications?: boolean
    totalPointsSold?: boolean
    totalPointsSpent?: boolean
    totalBoosts?: boolean
    pointsRevenue?: boolean
    dailyLoginStreaks?: boolean
    totalMessages?: boolean
    averageSessionTime?: boolean
    conversionRate?: boolean
    churnRate?: boolean
    revenuePerUser?: boolean
    basicClients?: boolean
    premiumClientsTier?: boolean
    vipClients?: boolean
    dailyActiveUsers?: boolean
    weeklyActiveUsers?: boolean
    monthlyActiveUsers?: boolean
    topCountries?: boolean
    topCities?: boolean
    date?: boolean
    createdAt?: boolean
  }


  export type $AppMetricsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AppMetrics"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      totalUsers: number
      totalEscorts: number
      totalAgencies: number
      totalClients: number
      totalAdmins: number
      totalPosts: number
      totalPayments: number
      totalRevenue: number
      activeUsers: number
      bannedUsers: number
      verifiedEscorts: number
      premiumClients: number
      pendingAgencies: number
      totalVerifications: number
      expiredVerifications: number
      totalPointsSold: number
      totalPointsSpent: number
      totalBoosts: number
      pointsRevenue: number
      dailyLoginStreaks: number
      totalMessages: number
      averageSessionTime: number
      conversionRate: number
      churnRate: number
      revenuePerUser: number
      basicClients: number
      premiumClientsTier: number
      vipClients: number
      dailyActiveUsers: number
      weeklyActiveUsers: number
      monthlyActiveUsers: number
      topCountries: Prisma.JsonValue | null
      topCities: Prisma.JsonValue | null
      date: Date
      createdAt: Date
    }, ExtArgs["result"]["appMetrics"]>
    composites: {}
  }

  type AppMetricsGetPayload<S extends boolean | null | undefined | AppMetricsDefaultArgs> = $Result.GetResult<Prisma.$AppMetricsPayload, S>

  type AppMetricsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AppMetricsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AppMetricsCountAggregateInputType | true
    }

  export interface AppMetricsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AppMetrics'], meta: { name: 'AppMetrics' } }
    /**
     * Find zero or one AppMetrics that matches the filter.
     * @param {AppMetricsFindUniqueArgs} args - Arguments to find a AppMetrics
     * @example
     * // Get one AppMetrics
     * const appMetrics = await prisma.appMetrics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AppMetricsFindUniqueArgs>(args: SelectSubset<T, AppMetricsFindUniqueArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AppMetrics that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AppMetricsFindUniqueOrThrowArgs} args - Arguments to find a AppMetrics
     * @example
     * // Get one AppMetrics
     * const appMetrics = await prisma.appMetrics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AppMetricsFindUniqueOrThrowArgs>(args: SelectSubset<T, AppMetricsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AppMetrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsFindFirstArgs} args - Arguments to find a AppMetrics
     * @example
     * // Get one AppMetrics
     * const appMetrics = await prisma.appMetrics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AppMetricsFindFirstArgs>(args?: SelectSubset<T, AppMetricsFindFirstArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AppMetrics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsFindFirstOrThrowArgs} args - Arguments to find a AppMetrics
     * @example
     * // Get one AppMetrics
     * const appMetrics = await prisma.appMetrics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AppMetricsFindFirstOrThrowArgs>(args?: SelectSubset<T, AppMetricsFindFirstOrThrowArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AppMetrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AppMetrics
     * const appMetrics = await prisma.appMetrics.findMany()
     * 
     * // Get first 10 AppMetrics
     * const appMetrics = await prisma.appMetrics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const appMetricsWithIdOnly = await prisma.appMetrics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AppMetricsFindManyArgs>(args?: SelectSubset<T, AppMetricsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AppMetrics.
     * @param {AppMetricsCreateArgs} args - Arguments to create a AppMetrics.
     * @example
     * // Create one AppMetrics
     * const AppMetrics = await prisma.appMetrics.create({
     *   data: {
     *     // ... data to create a AppMetrics
     *   }
     * })
     * 
     */
    create<T extends AppMetricsCreateArgs>(args: SelectSubset<T, AppMetricsCreateArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AppMetrics.
     * @param {AppMetricsCreateManyArgs} args - Arguments to create many AppMetrics.
     * @example
     * // Create many AppMetrics
     * const appMetrics = await prisma.appMetrics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AppMetricsCreateManyArgs>(args?: SelectSubset<T, AppMetricsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AppMetrics and returns the data saved in the database.
     * @param {AppMetricsCreateManyAndReturnArgs} args - Arguments to create many AppMetrics.
     * @example
     * // Create many AppMetrics
     * const appMetrics = await prisma.appMetrics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AppMetrics and only return the `id`
     * const appMetricsWithIdOnly = await prisma.appMetrics.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AppMetricsCreateManyAndReturnArgs>(args?: SelectSubset<T, AppMetricsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AppMetrics.
     * @param {AppMetricsDeleteArgs} args - Arguments to delete one AppMetrics.
     * @example
     * // Delete one AppMetrics
     * const AppMetrics = await prisma.appMetrics.delete({
     *   where: {
     *     // ... filter to delete one AppMetrics
     *   }
     * })
     * 
     */
    delete<T extends AppMetricsDeleteArgs>(args: SelectSubset<T, AppMetricsDeleteArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AppMetrics.
     * @param {AppMetricsUpdateArgs} args - Arguments to update one AppMetrics.
     * @example
     * // Update one AppMetrics
     * const appMetrics = await prisma.appMetrics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AppMetricsUpdateArgs>(args: SelectSubset<T, AppMetricsUpdateArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AppMetrics.
     * @param {AppMetricsDeleteManyArgs} args - Arguments to filter AppMetrics to delete.
     * @example
     * // Delete a few AppMetrics
     * const { count } = await prisma.appMetrics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AppMetricsDeleteManyArgs>(args?: SelectSubset<T, AppMetricsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AppMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AppMetrics
     * const appMetrics = await prisma.appMetrics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AppMetricsUpdateManyArgs>(args: SelectSubset<T, AppMetricsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AppMetrics.
     * @param {AppMetricsUpsertArgs} args - Arguments to update or create a AppMetrics.
     * @example
     * // Update or create a AppMetrics
     * const appMetrics = await prisma.appMetrics.upsert({
     *   create: {
     *     // ... data to create a AppMetrics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AppMetrics we want to update
     *   }
     * })
     */
    upsert<T extends AppMetricsUpsertArgs>(args: SelectSubset<T, AppMetricsUpsertArgs<ExtArgs>>): Prisma__AppMetricsClient<$Result.GetResult<Prisma.$AppMetricsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AppMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsCountArgs} args - Arguments to filter AppMetrics to count.
     * @example
     * // Count the number of AppMetrics
     * const count = await prisma.appMetrics.count({
     *   where: {
     *     // ... the filter for the AppMetrics we want to count
     *   }
     * })
    **/
    count<T extends AppMetricsCountArgs>(
      args?: Subset<T, AppMetricsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AppMetricsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AppMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AppMetricsAggregateArgs>(args: Subset<T, AppMetricsAggregateArgs>): Prisma.PrismaPromise<GetAppMetricsAggregateType<T>>

    /**
     * Group by AppMetrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AppMetricsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AppMetricsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AppMetricsGroupByArgs['orderBy'] }
        : { orderBy?: AppMetricsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AppMetricsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAppMetricsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AppMetrics model
   */
  readonly fields: AppMetricsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AppMetrics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AppMetricsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AppMetrics model
   */ 
  interface AppMetricsFieldRefs {
    readonly id: FieldRef<"AppMetrics", 'String'>
    readonly totalUsers: FieldRef<"AppMetrics", 'Int'>
    readonly totalEscorts: FieldRef<"AppMetrics", 'Int'>
    readonly totalAgencies: FieldRef<"AppMetrics", 'Int'>
    readonly totalClients: FieldRef<"AppMetrics", 'Int'>
    readonly totalAdmins: FieldRef<"AppMetrics", 'Int'>
    readonly totalPosts: FieldRef<"AppMetrics", 'Int'>
    readonly totalPayments: FieldRef<"AppMetrics", 'Float'>
    readonly totalRevenue: FieldRef<"AppMetrics", 'Float'>
    readonly activeUsers: FieldRef<"AppMetrics", 'Int'>
    readonly bannedUsers: FieldRef<"AppMetrics", 'Int'>
    readonly verifiedEscorts: FieldRef<"AppMetrics", 'Int'>
    readonly premiumClients: FieldRef<"AppMetrics", 'Int'>
    readonly pendingAgencies: FieldRef<"AppMetrics", 'Int'>
    readonly totalVerifications: FieldRef<"AppMetrics", 'Int'>
    readonly expiredVerifications: FieldRef<"AppMetrics", 'Int'>
    readonly totalPointsSold: FieldRef<"AppMetrics", 'Int'>
    readonly totalPointsSpent: FieldRef<"AppMetrics", 'Int'>
    readonly totalBoosts: FieldRef<"AppMetrics", 'Int'>
    readonly pointsRevenue: FieldRef<"AppMetrics", 'Float'>
    readonly dailyLoginStreaks: FieldRef<"AppMetrics", 'Int'>
    readonly totalMessages: FieldRef<"AppMetrics", 'Int'>
    readonly averageSessionTime: FieldRef<"AppMetrics", 'Float'>
    readonly conversionRate: FieldRef<"AppMetrics", 'Float'>
    readonly churnRate: FieldRef<"AppMetrics", 'Float'>
    readonly revenuePerUser: FieldRef<"AppMetrics", 'Float'>
    readonly basicClients: FieldRef<"AppMetrics", 'Int'>
    readonly premiumClientsTier: FieldRef<"AppMetrics", 'Int'>
    readonly vipClients: FieldRef<"AppMetrics", 'Int'>
    readonly dailyActiveUsers: FieldRef<"AppMetrics", 'Int'>
    readonly weeklyActiveUsers: FieldRef<"AppMetrics", 'Int'>
    readonly monthlyActiveUsers: FieldRef<"AppMetrics", 'Int'>
    readonly topCountries: FieldRef<"AppMetrics", 'Json'>
    readonly topCities: FieldRef<"AppMetrics", 'Json'>
    readonly date: FieldRef<"AppMetrics", 'DateTime'>
    readonly createdAt: FieldRef<"AppMetrics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AppMetrics findUnique
   */
  export type AppMetricsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter, which AppMetrics to fetch.
     */
    where: AppMetricsWhereUniqueInput
  }

  /**
   * AppMetrics findUniqueOrThrow
   */
  export type AppMetricsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter, which AppMetrics to fetch.
     */
    where: AppMetricsWhereUniqueInput
  }

  /**
   * AppMetrics findFirst
   */
  export type AppMetricsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter, which AppMetrics to fetch.
     */
    where?: AppMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMetrics to fetch.
     */
    orderBy?: AppMetricsOrderByWithRelationInput | AppMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppMetrics.
     */
    cursor?: AppMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppMetrics.
     */
    distinct?: AppMetricsScalarFieldEnum | AppMetricsScalarFieldEnum[]
  }

  /**
   * AppMetrics findFirstOrThrow
   */
  export type AppMetricsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter, which AppMetrics to fetch.
     */
    where?: AppMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMetrics to fetch.
     */
    orderBy?: AppMetricsOrderByWithRelationInput | AppMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AppMetrics.
     */
    cursor?: AppMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMetrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AppMetrics.
     */
    distinct?: AppMetricsScalarFieldEnum | AppMetricsScalarFieldEnum[]
  }

  /**
   * AppMetrics findMany
   */
  export type AppMetricsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter, which AppMetrics to fetch.
     */
    where?: AppMetricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AppMetrics to fetch.
     */
    orderBy?: AppMetricsOrderByWithRelationInput | AppMetricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AppMetrics.
     */
    cursor?: AppMetricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AppMetrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AppMetrics.
     */
    skip?: number
    distinct?: AppMetricsScalarFieldEnum | AppMetricsScalarFieldEnum[]
  }

  /**
   * AppMetrics create
   */
  export type AppMetricsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * The data needed to create a AppMetrics.
     */
    data?: XOR<AppMetricsCreateInput, AppMetricsUncheckedCreateInput>
  }

  /**
   * AppMetrics createMany
   */
  export type AppMetricsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AppMetrics.
     */
    data: AppMetricsCreateManyInput | AppMetricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppMetrics createManyAndReturn
   */
  export type AppMetricsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AppMetrics.
     */
    data: AppMetricsCreateManyInput | AppMetricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AppMetrics update
   */
  export type AppMetricsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * The data needed to update a AppMetrics.
     */
    data: XOR<AppMetricsUpdateInput, AppMetricsUncheckedUpdateInput>
    /**
     * Choose, which AppMetrics to update.
     */
    where: AppMetricsWhereUniqueInput
  }

  /**
   * AppMetrics updateMany
   */
  export type AppMetricsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AppMetrics.
     */
    data: XOR<AppMetricsUpdateManyMutationInput, AppMetricsUncheckedUpdateManyInput>
    /**
     * Filter which AppMetrics to update
     */
    where?: AppMetricsWhereInput
  }

  /**
   * AppMetrics upsert
   */
  export type AppMetricsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * The filter to search for the AppMetrics to update in case it exists.
     */
    where: AppMetricsWhereUniqueInput
    /**
     * In case the AppMetrics found by the `where` argument doesn't exist, create a new AppMetrics with this data.
     */
    create: XOR<AppMetricsCreateInput, AppMetricsUncheckedCreateInput>
    /**
     * In case the AppMetrics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AppMetricsUpdateInput, AppMetricsUncheckedUpdateInput>
  }

  /**
   * AppMetrics delete
   */
  export type AppMetricsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
    /**
     * Filter which AppMetrics to delete.
     */
    where: AppMetricsWhereUniqueInput
  }

  /**
   * AppMetrics deleteMany
   */
  export type AppMetricsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AppMetrics to delete
     */
    where?: AppMetricsWhereInput
  }

  /**
   * AppMetrics without action
   */
  export type AppMetricsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AppMetrics
     */
    select?: AppMetricsSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const LocationScalarFieldEnum: {
    id: 'id',
    country: 'country',
    state: 'state',
    city: 'city'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    username: 'username',
    firstName: 'firstName',
    lastName: 'lastName',
    password: 'password',
    avatar: 'avatar',
    phone: 'phone',
    bio: 'bio',
    website: 'website',
    userType: 'userType',
    accountStatus: 'accountStatus',
    canLogin: 'canLogin',
    isActive: 'isActive',
    isBanned: 'isBanned',
    banReason: 'banReason',
    profileViews: 'profileViews',
    passwordResetToken: 'passwordResetToken',
    passwordResetExpiry: 'passwordResetExpiry',
    emailVerificationToken: 'emailVerificationToken',
    emailVerified: 'emailVerified',
    emailVerifiedAt: 'emailVerifiedAt',
    locationId: 'locationId',
    timezone: 'timezone',
    language: 'language',
    lastLoginIP: 'lastLoginIP',
    lastDailyReset: 'lastDailyReset',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastLogin: 'lastLogin',
    lastActiveAt: 'lastActiveAt',
    deletedAt: 'deletedAt',
    deletionReason: 'deletionReason',
    googleId: 'googleId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const AgencyRegistrationRequestScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    fullName: 'fullName',
    documentNumber: 'documentNumber',
    businessPhone: 'businessPhone',
    businessEmail: 'businessEmail',
    documentFrontImage: 'documentFrontImage',
    documentBackImage: 'documentBackImage',
    reviewNotes: 'reviewNotes',
    rejectionReason: 'rejectionReason',
    submittedAt: 'submittedAt',
    reviewedAt: 'reviewedAt',
    reviewedBy: 'reviewedBy',
    status: 'status'
  };

  export type AgencyRegistrationRequestScalarFieldEnum = (typeof AgencyRegistrationRequestScalarFieldEnum)[keyof typeof AgencyRegistrationRequestScalarFieldEnum]


  export const UserSettingsScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    emailNotifications: 'emailNotifications',
    pushNotifications: 'pushNotifications',
    messageNotifications: 'messageNotifications',
    likeNotifications: 'likeNotifications',
    boostNotifications: 'boostNotifications',
    profileReminders: 'profileReminders',
    verificationReminders: 'verificationReminders',
    showOnline: 'showOnline',
    showLastSeen: 'showLastSeen',
    allowDirectMessages: 'allowDirectMessages',
    showPhoneNumber: 'showPhoneNumber',
    showInDiscovery: 'showInDiscovery',
    showInTrending: 'showInTrending',
    showInSearch: 'showInSearch',
    contentFilter: 'contentFilter',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSettingsScalarFieldEnum = (typeof UserSettingsScalarFieldEnum)[keyof typeof UserSettingsScalarFieldEnum]


  export const DeviceTokenScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    token: 'token',
    platform: 'platform',
    deviceInfo: 'deviceInfo',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    lastUsedAt: 'lastUsedAt'
  };

  export type DeviceTokenScalarFieldEnum = (typeof DeviceTokenScalarFieldEnum)[keyof typeof DeviceTokenScalarFieldEnum]


  export const SearchHistoryScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    query: 'query',
    filters: 'filters',
    results: 'results',
    clicked: 'clicked',
    createdAt: 'createdAt'
  };

  export type SearchHistoryScalarFieldEnum = (typeof SearchHistoryScalarFieldEnum)[keyof typeof SearchHistoryScalarFieldEnum]


  export const UserBlockScalarFieldEnum: {
    id: 'id',
    blockerId: 'blockerId',
    blockedId: 'blockedId',
    reason: 'reason',
    createdAt: 'createdAt'
  };

  export type UserBlockScalarFieldEnum = (typeof UserBlockScalarFieldEnum)[keyof typeof UserBlockScalarFieldEnum]


  export const IdentityVerificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    documentType: 'documentType',
    documentNumber: 'documentNumber',
    documentImages: 'documentImages',
    selfieImage: 'selfieImage',
    status: 'status',
    verifiedBy: 'verifiedBy',
    rejectionReason: 'rejectionReason',
    notes: 'notes',
    submittedAt: 'submittedAt',
    completedAt: 'completedAt',
    expiresAt: 'expiresAt'
  };

  export type IdentityVerificationScalarFieldEnum = (typeof IdentityVerificationScalarFieldEnum)[keyof typeof IdentityVerificationScalarFieldEnum]


  export const SubscriptionPlanScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    price: 'price',
    duration: 'duration',
    features: 'features',
    isActive: 'isActive',
    userType: 'userType',
    priority: 'priority',
    maxPosts: 'maxPosts',
    maxImages: 'maxImages',
    maxBoosts: 'maxBoosts',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionPlanScalarFieldEnum = (typeof SubscriptionPlanScalarFieldEnum)[keyof typeof SubscriptionPlanScalarFieldEnum]


  export const SubscriptionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    planId: 'planId',
    status: 'status',
    stripeSubscriptionId: 'stripeSubscriptionId',
    currentPeriodStart: 'currentPeriodStart',
    currentPeriodEnd: 'currentPeriodEnd',
    postsUsed: 'postsUsed',
    imagesUsed: 'imagesUsed',
    boostsUsed: 'boostsUsed',
    startsAt: 'startsAt',
    endsAt: 'endsAt',
    cancelledAt: 'cancelledAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SubscriptionScalarFieldEnum = (typeof SubscriptionScalarFieldEnum)[keyof typeof SubscriptionScalarFieldEnum]


  export const TagScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    color: 'color',
    icon: 'icon',
    isActive: 'isActive',
    usageCount: 'usageCount',
    category: 'category',
    priority: 'priority',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TagScalarFieldEnum = (typeof TagScalarFieldEnum)[keyof typeof TagScalarFieldEnum]


  export const PostTagScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    tagId: 'tagId',
    createdAt: 'createdAt'
  };

  export type PostTagScalarFieldEnum = (typeof PostTagScalarFieldEnum)[keyof typeof PostTagScalarFieldEnum]


  export const AdminScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    role: 'role',
    permissions: 'permissions',
    totalBans: 'totalBans',
    totalReports: 'totalReports',
    totalVerifications: 'totalVerifications',
    totalAgencyApprovals: 'totalAgencyApprovals',
    canDeletePosts: 'canDeletePosts',
    canBanUsers: 'canBanUsers',
    canModifyPrices: 'canModifyPrices',
    canAccessMetrics: 'canAccessMetrics',
    canApproveAgencies: 'canApproveAgencies',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AdminScalarFieldEnum = (typeof AdminScalarFieldEnum)[keyof typeof AdminScalarFieldEnum]


  export const UserReputationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    overallScore: 'overallScore',
    responseRate: 'responseRate',
    averageResponseTime: 'averageResponseTime',
    profileCompleteness: 'profileCompleteness',
    trustScore: 'trustScore',
    totalViews: 'totalViews',
    totalLikes: 'totalLikes',
    totalMessages: 'totalMessages',
    totalFavorites: 'totalFavorites',
    discoveryScore: 'discoveryScore',
    trendingScore: 'trendingScore',
    qualityScore: 'qualityScore',
    lastScoreUpdate: 'lastScoreUpdate',
    spamScore: 'spamScore',
    reportScore: 'reportScore',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserReputationScalarFieldEnum = (typeof UserReputationScalarFieldEnum)[keyof typeof UserReputationScalarFieldEnum]


  export const EscortScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    isVerified: 'isVerified',
    verifiedAt: 'verifiedAt',
    verifiedBy: 'verifiedBy',
    verificationExpiresAt: 'verificationExpiresAt',
    rating: 'rating',
    totalRatings: 'totalRatings',
    age: 'age',
    height: 'height',
    weight: 'weight',
    bodyType: 'bodyType',
    ethnicity: 'ethnicity',
    hairColor: 'hairColor',
    eyeColor: 'eyeColor',
    rates: 'rates',
    availability: 'availability',
    languages: 'languages',
    maxPosts: 'maxPosts',
    currentPosts: 'currentPosts',
    totalBookings: 'totalBookings',
    completedBookings: 'completedBookings',
    services: 'services'
  };

  export type EscortScalarFieldEnum = (typeof EscortScalarFieldEnum)[keyof typeof EscortScalarFieldEnum]


  export const AgencyScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    isVerified: 'isVerified',
    verifiedAt: 'verifiedAt',
    companyName: 'companyName',
    businessLicense: 'businessLicense',
    contactPerson: 'contactPerson',
    address: 'address',
    cedulaFrente: 'cedulaFrente',
    cedulaTrasera: 'cedulaTrasera',
    verificationStatus: 'verificationStatus',
    taxId: 'taxId',
    maxPosts: 'maxPosts',
    totalEscorts: 'totalEscorts',
    verifiedEscorts: 'verifiedEscorts',
    totalVerifications: 'totalVerifications',
    activeEscorts: 'activeEscorts',
    defaultCommissionRate: 'defaultCommissionRate'
  };

  export type AgencyScalarFieldEnum = (typeof AgencyScalarFieldEnum)[keyof typeof AgencyScalarFieldEnum]


  export const ClientScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    points: 'points',
    isPremium: 'isPremium',
    premiumUntil: 'premiumUntil',
    premiumTier: 'premiumTier',
    chatPriorityUntil: 'chatPriorityUntil',
    maxFavorites: 'maxFavorites',
    currentFavorites: 'currentFavorites',
    dailyMessageLimit: 'dailyMessageLimit',
    messagesUsedToday: 'messagesUsedToday',
    canViewPhoneNumbers: 'canViewPhoneNumbers',
    canSendImages: 'canSendImages',
    canSendVoiceMessages: 'canSendVoiceMessages',
    prioritySupport: 'prioritySupport',
    canSeeOnlineStatus: 'canSeeOnlineStatus',
    totalMessagesUsed: 'totalMessagesUsed',
    lastMessageReset: 'lastMessageReset',
    canAccessPremiumProfiles: 'canAccessPremiumProfiles',
    lastDailyPointsClaim: 'lastDailyPointsClaim',
    dailyLoginStreak: 'dailyLoginStreak',
    totalDailyPointsEarned: 'totalDailyPointsEarned',
    totalPointsEarned: 'totalPointsEarned',
    totalPointsSpent: 'totalPointsSpent',
    pointsLastUpdated: 'pointsLastUpdated',
    totalPointsPurchased: 'totalPointsPurchased',
    agePreferenceMin: 'agePreferenceMin',
    agePreferenceMax: 'agePreferenceMax',
    locationPreference: 'locationPreference'
  };

  export type ClientScalarFieldEnum = (typeof ClientScalarFieldEnum)[keyof typeof ClientScalarFieldEnum]


  export const PointsPackageScalarFieldEnum: {
    id: 'id',
    name: 'name',
    points: 'points',
    price: 'price',
    bonus: 'bonus',
    isActive: 'isActive',
    isPopular: 'isPopular',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PointsPackageScalarFieldEnum = (typeof PointsPackageScalarFieldEnum)[keyof typeof PointsPackageScalarFieldEnum]


  export const PointsPurchaseScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    packageId: 'packageId',
    pointsPurchased: 'pointsPurchased',
    bonusPoints: 'bonusPoints',
    totalPoints: 'totalPoints',
    amountPaid: 'amountPaid',
    status: 'status',
    stripePaymentId: 'stripePaymentId',
    createdAt: 'createdAt',
    completedAt: 'completedAt'
  };

  export type PointsPurchaseScalarFieldEnum = (typeof PointsPurchaseScalarFieldEnum)[keyof typeof PointsPurchaseScalarFieldEnum]


  export const PointTransactionScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    amount: 'amount',
    type: 'type',
    description: 'description',
    cost: 'cost',
    postId: 'postId',
    messageId: 'messageId',
    paymentId: 'paymentId',
    purchaseId: 'purchaseId',
    actionId: 'actionId',
    balanceBefore: 'balanceBefore',
    balanceAfter: 'balanceAfter',
    metadata: 'metadata',
    source: 'source',
    createdAt: 'createdAt'
  };

  export type PointTransactionScalarFieldEnum = (typeof PointTransactionScalarFieldEnum)[keyof typeof PointTransactionScalarFieldEnum]


  export const PointsHistoryScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    type: 'type',
    amount: 'amount',
    description: 'description',
    balanceBefore: 'balanceBefore',
    balanceAfter: 'balanceAfter',
    metadata: 'metadata',
    source: 'source',
    purchaseId: 'purchaseId',
    actionId: 'actionId',
    createdAt: 'createdAt'
  };

  export type PointsHistoryScalarFieldEnum = (typeof PointsHistoryScalarFieldEnum)[keyof typeof PointsHistoryScalarFieldEnum]


  export const PremiumActivationScalarFieldEnum: {
    id: 'id',
    clientId: 'clientId',
    tier: 'tier',
    duration: 'duration',
    pointsCost: 'pointsCost',
    activatedAt: 'activatedAt',
    expiresAt: 'expiresAt',
    isActive: 'isActive',
    activatedBy: 'activatedBy'
  };

  export type PremiumActivationScalarFieldEnum = (typeof PremiumActivationScalarFieldEnum)[keyof typeof PremiumActivationScalarFieldEnum]


  export const ClientReviewScalarFieldEnum: {
    id: 'id',
    rating: 'rating',
    comment: 'comment',
    communication: 'communication',
    punctuality: 'punctuality',
    appearance: 'appearance',
    overall: 'overall',
    service: 'service',
    value: 'value',
    isAnonymous: 'isAnonymous',
    isVerified: 'isVerified',
    clientId: 'clientId',
    escortId: 'escortId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ClientReviewScalarFieldEnum = (typeof ClientReviewScalarFieldEnum)[keyof typeof ClientReviewScalarFieldEnum]


  export const BanScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    reason: 'reason',
    bannedBy: 'bannedBy',
    adminId: 'adminId',
    isActive: 'isActive',
    expiresAt: 'expiresAt',
    severity: 'severity',
    evidence: 'evidence',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BanScalarFieldEnum = (typeof BanScalarFieldEnum)[keyof typeof BanScalarFieldEnum]


  export const BanAppealScalarFieldEnum: {
    id: 'id',
    banId: 'banId',
    reason: 'reason',
    evidence: 'evidence',
    status: 'status',
    reviewedBy: 'reviewedBy',
    reviewNotes: 'reviewNotes',
    createdAt: 'createdAt',
    reviewedAt: 'reviewedAt'
  };

  export type BanAppealScalarFieldEnum = (typeof BanAppealScalarFieldEnum)[keyof typeof BanAppealScalarFieldEnum]


  export const UserInteractionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    targetUserId: 'targetUserId',
    postId: 'postId',
    type: 'type',
    weight: 'weight',
    duration: 'duration',
    whatsappOpened: 'whatsappOpened',
    deviceType: 'deviceType',
    source: 'source',
    location: 'location',
    sessionId: 'sessionId',
    userAgent: 'userAgent',
    metadata: 'metadata',
    createdAt: 'createdAt'
  };

  export type UserInteractionScalarFieldEnum = (typeof UserInteractionScalarFieldEnum)[keyof typeof UserInteractionScalarFieldEnum]


  export const ChatRateLimitScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    count: 'count',
    windowStart: 'windowStart',
    limitType: 'limitType'
  };

  export type ChatRateLimitScalarFieldEnum = (typeof ChatRateLimitScalarFieldEnum)[keyof typeof ChatRateLimitScalarFieldEnum]


  export const AgencyMembershipScalarFieldEnum: {
    id: 'id',
    escortId: 'escortId',
    agencyId: 'agencyId',
    status: 'status',
    role: 'role',
    commissionRate: 'commissionRate',
    canPostForAgency: 'canPostForAgency',
    canManageEscorts: 'canManageEscorts',
    canAccessFinances: 'canAccessFinances',
    approvedBy: 'approvedBy',
    approvedAt: 'approvedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type AgencyMembershipScalarFieldEnum = (typeof AgencyMembershipScalarFieldEnum)[keyof typeof AgencyMembershipScalarFieldEnum]


  export const AgencyInvitationScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    escortId: 'escortId',
    status: 'status',
    message: 'message',
    proposedCommission: 'proposedCommission',
    proposedRole: 'proposedRole',
    proposedBenefits: 'proposedBenefits',
    invitedBy: 'invitedBy',
    respondedAt: 'respondedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    expiresAt: 'expiresAt',
    deletedAt: 'deletedAt'
  };

  export type AgencyInvitationScalarFieldEnum = (typeof AgencyInvitationScalarFieldEnum)[keyof typeof AgencyInvitationScalarFieldEnum]


  export const EscortVerificationScalarFieldEnum: {
    id: 'id',
    agencyId: 'agencyId',
    escortId: 'escortId',
    pricingId: 'pricingId',
    status: 'status',
    membershipId: 'membershipId',
    startsAt: 'startsAt',
    expiresAt: 'expiresAt',
    isAutoRenewal: 'isAutoRenewal',
    reminderSent: 'reminderSent',
    documentsSubmitted: 'documentsSubmitted',
    verificationNotes: 'verificationNotes',
    rejectionReason: 'rejectionReason',
    verificationSteps: 'verificationSteps',
    verifiedBy: 'verifiedBy',
    createdAt: 'createdAt',
    completedAt: 'completedAt',
    deletedAt: 'deletedAt'
  };

  export type EscortVerificationScalarFieldEnum = (typeof EscortVerificationScalarFieldEnum)[keyof typeof EscortVerificationScalarFieldEnum]


  export const VerificationPricingScalarFieldEnum: {
    id: 'id',
    name: 'name',
    cost: 'cost',
    description: 'description',
    isActive: 'isActive',
    features: 'features',
    duration: 'duration',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VerificationPricingScalarFieldEnum = (typeof VerificationPricingScalarFieldEnum)[keyof typeof VerificationPricingScalarFieldEnum]


  export const BoostPricingScalarFieldEnum: {
    id: 'id',
    type: 'type',
    duration: 'duration',
    price: 'price',
    isActive: 'isActive',
    multiplier: 'multiplier',
    features: 'features',
    maxBoosts: 'maxBoosts',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BoostPricingScalarFieldEnum = (typeof BoostPricingScalarFieldEnum)[keyof typeof BoostPricingScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    images: 'images',
    phone: 'phone',
    isActive: 'isActive',
    views: 'views',
    viewsToday: 'viewsToday',
    clicks: 'clicks',
    clicksToday: 'clicksToday',
    score: 'score',
    engagementRate: 'engagementRate',
    lastBoosted: 'lastBoosted',
    locationId: 'locationId',
    rates: 'rates',
    availability: 'availability',
    trendingScore: 'trendingScore',
    isTrending: 'isTrending',
    isFeatured: 'isFeatured',
    discoveryScore: 'discoveryScore',
    qualityScore: 'qualityScore',
    lastScoreUpdate: 'lastScoreUpdate',
    isPrivate: 'isPrivate',
    premiumOnly: 'premiumOnly',
    uniqueViews: 'uniqueViews',
    totalTime: 'totalTime',
    bounceRate: 'bounceRate',
    whatsappClicks: 'whatsappClicks',
    hasActiveBoost: 'hasActiveBoost',
    boostEndsAt: 'boostEndsAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    expiresAt: 'expiresAt',
    authorId: 'authorId',
    age: 'age',
    location: 'location',
    services: 'services',
    sexo: 'sexo'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const TrendingHistoryScalarFieldEnum: {
    id: 'id',
    postId: 'postId',
    position: 'position',
    score: 'score',
    category: 'category',
    date: 'date'
  };

  export type TrendingHistoryScalarFieldEnum = (typeof TrendingHistoryScalarFieldEnum)[keyof typeof TrendingHistoryScalarFieldEnum]


  export const ChatScalarFieldEnum: {
    id: 'id',
    isGroup: 'isGroup',
    name: 'name',
    description: 'description',
    avatar: 'avatar',
    isDisputeChat: 'isDisputeChat',
    disputeStatus: 'disputeStatus',
    disputeReason: 'disputeReason',
    isArchived: 'isArchived',
    mutedUntil: 'mutedUntil',
    maxMembers: 'maxMembers',
    isPrivate: 'isPrivate',
    requireApproval: 'requireApproval',
    allowFiles: 'allowFiles',
    allowImages: 'allowImages',
    allowVoice: 'allowVoice',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    lastActivity: 'lastActivity'
  };

  export type ChatScalarFieldEnum = (typeof ChatScalarFieldEnum)[keyof typeof ChatScalarFieldEnum]


  export const ChatMemberScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    chatId: 'chatId',
    joinedAt: 'joinedAt',
    lastRead: 'lastRead',
    isMuted: 'isMuted',
    role: 'role',
    messageCount: 'messageCount',
    maxMessages: 'maxMessages',
    canAddMembers: 'canAddMembers',
    canDeleteMessages: 'canDeleteMessages',
    canManageChat: 'canManageChat',
    messagesCount: 'messagesCount'
  };

  export type ChatMemberScalarFieldEnum = (typeof ChatMemberScalarFieldEnum)[keyof typeof ChatMemberScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    content: 'content',
    messageType: 'messageType',
    fileUrl: 'fileUrl',
    fileName: 'fileName',
    fileSize: 'fileSize',
    mimeType: 'mimeType',
    isRead: 'isRead',
    costPoints: 'costPoints',
    isPremiumMessage: 'isPremiumMessage',
    isEdited: 'isEdited',
    editedAt: 'editedAt',
    isForwarded: 'isForwarded',
    replyToId: 'replyToId',
    isEncrypted: 'isEncrypted',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    readAt: 'readAt',
    senderId: 'senderId',
    receiverId: 'receiverId',
    chatId: 'chatId'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const FavoriteScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    postId: 'postId',
    isNotified: 'isNotified',
    createdAt: 'createdAt'
  };

  export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


  export const LikeScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    postId: 'postId',
    createdAt: 'createdAt'
  };

  export type LikeScalarFieldEnum = (typeof LikeScalarFieldEnum)[keyof typeof LikeScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    rating: 'rating',
    comment: 'comment',
    professionalism: 'professionalism',
    communication: 'communication',
    reliability: 'reliability',
    appearance: 'appearance',
    service: 'service',
    isAnonymous: 'isAnonymous',
    isVerified: 'isVerified',
    helpfulVotes: 'helpfulVotes',
    authorId: 'authorId',
    targetId: 'targetId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const ReportScalarFieldEnum: {
    id: 'id',
    reason: 'reason',
    description: 'description',
    status: 'status',
    evidence: 'evidence',
    category: 'category',
    severity: 'severity',
    resolution: 'resolution',
    resolvedBy: 'resolvedBy',
    resolvedAt: 'resolvedAt',
    actionTaken: 'actionTaken',
    authorId: 'authorId',
    targetUserId: 'targetUserId',
    postId: 'postId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ReportScalarFieldEnum = (typeof ReportScalarFieldEnum)[keyof typeof ReportScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    title: 'title',
    message: 'message',
    type: 'type',
    isRead: 'isRead',
    data: 'data',
    priority: 'priority',
    expiresAt: 'expiresAt',
    isSent: 'isSent',
    sentAt: 'sentAt',
    deliveryMethod: 'deliveryMethod',
    isEmailSent: 'isEmailSent',
    emailSentAt: 'emailSentAt',
    actionUrl: 'actionUrl',
    actionText: 'actionText',
    userId: 'userId',
    createdAt: 'createdAt',
    deletedAt: 'deletedAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    type: 'type',
    description: 'description',
    stripePaymentId: 'stripePaymentId',
    metadata: 'metadata',
    failureReason: 'failureReason',
    refundReason: 'refundReason',
    processorFee: 'processorFee',
    netAmount: 'netAmount',
    taxAmount: 'taxAmount',
    taxRate: 'taxRate',
    clientId: 'clientId',
    escortId: 'escortId',
    agencyId: 'agencyId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    completedAt: 'completedAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const BoostScalarFieldEnum: {
    id: 'id',
    pricingId: 'pricingId',
    isActive: 'isActive',
    amount: 'amount',
    userId: 'userId',
    postId: 'postId',
    viewsBefore: 'viewsBefore',
    viewsAfter: 'viewsAfter',
    clicksBefore: 'clicksBefore',
    clicksAfter: 'clicksAfter',
    engagementBefore: 'engagementBefore',
    engagementAfter: 'engagementAfter',
    conversionRate: 'conversionRate',
    targetAudience: 'targetAudience',
    geography: 'geography',
    stackLevel: 'stackLevel',
    isStackBoost: 'isStackBoost',
    createdAt: 'createdAt',
    expiresAt: 'expiresAt',
    deletedAt: 'deletedAt'
  };

  export type BoostScalarFieldEnum = (typeof BoostScalarFieldEnum)[keyof typeof BoostScalarFieldEnum]


  export const AppMetricsScalarFieldEnum: {
    id: 'id',
    totalUsers: 'totalUsers',
    totalEscorts: 'totalEscorts',
    totalAgencies: 'totalAgencies',
    totalClients: 'totalClients',
    totalAdmins: 'totalAdmins',
    totalPosts: 'totalPosts',
    totalPayments: 'totalPayments',
    totalRevenue: 'totalRevenue',
    activeUsers: 'activeUsers',
    bannedUsers: 'bannedUsers',
    verifiedEscorts: 'verifiedEscorts',
    premiumClients: 'premiumClients',
    pendingAgencies: 'pendingAgencies',
    totalVerifications: 'totalVerifications',
    expiredVerifications: 'expiredVerifications',
    totalPointsSold: 'totalPointsSold',
    totalPointsSpent: 'totalPointsSpent',
    totalBoosts: 'totalBoosts',
    pointsRevenue: 'pointsRevenue',
    dailyLoginStreaks: 'dailyLoginStreaks',
    totalMessages: 'totalMessages',
    averageSessionTime: 'averageSessionTime',
    conversionRate: 'conversionRate',
    churnRate: 'churnRate',
    revenuePerUser: 'revenuePerUser',
    basicClients: 'basicClients',
    premiumClientsTier: 'premiumClientsTier',
    vipClients: 'vipClients',
    dailyActiveUsers: 'dailyActiveUsers',
    weeklyActiveUsers: 'weeklyActiveUsers',
    monthlyActiveUsers: 'monthlyActiveUsers',
    topCountries: 'topCountries',
    topCities: 'topCities',
    date: 'date',
    createdAt: 'createdAt'
  };

  export type AppMetricsScalarFieldEnum = (typeof AppMetricsScalarFieldEnum)[keyof typeof AppMetricsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'UserType'
   */
  export type EnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType'>
    


  /**
   * Reference to a field of type 'UserType[]'
   */
  export type ListEnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType[]'>
    


  /**
   * Reference to a field of type 'AccountStatus'
   */
  export type EnumAccountStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountStatus'>
    


  /**
   * Reference to a field of type 'AccountStatus[]'
   */
  export type ListEnumAccountStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AccountStatus[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'AgencyRequestStatus'
   */
  export type EnumAgencyRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyRequestStatus'>
    


  /**
   * Reference to a field of type 'AgencyRequestStatus[]'
   */
  export type ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyRequestStatus[]'>
    


  /**
   * Reference to a field of type 'ContentFilterLevel'
   */
  export type EnumContentFilterLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContentFilterLevel'>
    


  /**
   * Reference to a field of type 'ContentFilterLevel[]'
   */
  export type ListEnumContentFilterLevelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ContentFilterLevel[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'VerificationStatus'
   */
  export type EnumVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationStatus'>
    


  /**
   * Reference to a field of type 'VerificationStatus[]'
   */
  export type ListEnumVerificationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus'
   */
  export type EnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus'>
    


  /**
   * Reference to a field of type 'SubscriptionStatus[]'
   */
  export type ListEnumSubscriptionStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SubscriptionStatus[]'>
    


  /**
   * Reference to a field of type 'TagCategory'
   */
  export type EnumTagCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TagCategory'>
    


  /**
   * Reference to a field of type 'TagCategory[]'
   */
  export type ListEnumTagCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TagCategory[]'>
    


  /**
   * Reference to a field of type 'AdminRole'
   */
  export type EnumAdminRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AdminRole'>
    


  /**
   * Reference to a field of type 'AdminRole[]'
   */
  export type ListEnumAdminRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AdminRole[]'>
    


  /**
   * Reference to a field of type 'PremiumTier'
   */
  export type EnumPremiumTierFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PremiumTier'>
    


  /**
   * Reference to a field of type 'PremiumTier[]'
   */
  export type ListEnumPremiumTierFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PremiumTier[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'PointTransactionType'
   */
  export type EnumPointTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PointTransactionType'>
    


  /**
   * Reference to a field of type 'PointTransactionType[]'
   */
  export type ListEnumPointTransactionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PointTransactionType[]'>
    


  /**
   * Reference to a field of type 'BanSeverity'
   */
  export type EnumBanSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BanSeverity'>
    


  /**
   * Reference to a field of type 'BanSeverity[]'
   */
  export type ListEnumBanSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BanSeverity[]'>
    


  /**
   * Reference to a field of type 'AppealStatus'
   */
  export type EnumAppealStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppealStatus'>
    


  /**
   * Reference to a field of type 'AppealStatus[]'
   */
  export type ListEnumAppealStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AppealStatus[]'>
    


  /**
   * Reference to a field of type 'InteractionType'
   */
  export type EnumInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InteractionType'>
    


  /**
   * Reference to a field of type 'InteractionType[]'
   */
  export type ListEnumInteractionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InteractionType[]'>
    


  /**
   * Reference to a field of type 'RateLimitType'
   */
  export type EnumRateLimitTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RateLimitType'>
    


  /**
   * Reference to a field of type 'RateLimitType[]'
   */
  export type ListEnumRateLimitTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'RateLimitType[]'>
    


  /**
   * Reference to a field of type 'MembershipStatus'
   */
  export type EnumMembershipStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MembershipStatus'>
    


  /**
   * Reference to a field of type 'MembershipStatus[]'
   */
  export type ListEnumMembershipStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MembershipStatus[]'>
    


  /**
   * Reference to a field of type 'AgencyRole'
   */
  export type EnumAgencyRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyRole'>
    


  /**
   * Reference to a field of type 'AgencyRole[]'
   */
  export type ListEnumAgencyRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgencyRole[]'>
    


  /**
   * Reference to a field of type 'InvitationStatus'
   */
  export type EnumInvitationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvitationStatus'>
    


  /**
   * Reference to a field of type 'InvitationStatus[]'
   */
  export type ListEnumInvitationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'InvitationStatus[]'>
    


  /**
   * Reference to a field of type 'BoostType'
   */
  export type EnumBoostTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BoostType'>
    


  /**
   * Reference to a field of type 'BoostType[]'
   */
  export type ListEnumBoostTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BoostType[]'>
    


  /**
   * Reference to a field of type 'DisputeStatus'
   */
  export type EnumDisputeStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisputeStatus'>
    


  /**
   * Reference to a field of type 'DisputeStatus[]'
   */
  export type ListEnumDisputeStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisputeStatus[]'>
    


  /**
   * Reference to a field of type 'ChatRole'
   */
  export type EnumChatRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ChatRole'>
    


  /**
   * Reference to a field of type 'ChatRole[]'
   */
  export type ListEnumChatRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ChatRole[]'>
    


  /**
   * Reference to a field of type 'MessageType'
   */
  export type EnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType'>
    


  /**
   * Reference to a field of type 'MessageType[]'
   */
  export type ListEnumMessageTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MessageType[]'>
    


  /**
   * Reference to a field of type 'ReportReason'
   */
  export type EnumReportReasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportReason'>
    


  /**
   * Reference to a field of type 'ReportReason[]'
   */
  export type ListEnumReportReasonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportReason[]'>
    


  /**
   * Reference to a field of type 'ReportStatus'
   */
  export type EnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus'>
    


  /**
   * Reference to a field of type 'ReportStatus[]'
   */
  export type ListEnumReportStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportStatus[]'>
    


  /**
   * Reference to a field of type 'ReportSeverity'
   */
  export type EnumReportSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportSeverity'>
    


  /**
   * Reference to a field of type 'ReportSeverity[]'
   */
  export type ListEnumReportSeverityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReportSeverity[]'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    


  /**
   * Reference to a field of type 'NotificationPriority'
   */
  export type EnumNotificationPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationPriority'>
    


  /**
   * Reference to a field of type 'NotificationPriority[]'
   */
  export type ListEnumNotificationPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationPriority[]'>
    


  /**
   * Reference to a field of type 'PaymentType'
   */
  export type EnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType'>
    


  /**
   * Reference to a field of type 'PaymentType[]'
   */
  export type ListEnumPaymentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentType[]'>
    
  /**
   * Deep Input Types
   */


  export type LocationWhereInput = {
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    id?: StringFilter<"Location"> | string
    country?: StringFilter<"Location"> | string
    state?: StringNullableFilter<"Location"> | string | null
    city?: StringFilter<"Location"> | string
    posts?: PostListRelationFilter
    users?: UserListRelationFilter
  }

  export type LocationOrderByWithRelationInput = {
    id?: SortOrder
    country?: SortOrder
    state?: SortOrderInput | SortOrder
    city?: SortOrder
    posts?: PostOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
  }

  export type LocationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    country_state_city?: LocationCountryStateCityCompoundUniqueInput
    AND?: LocationWhereInput | LocationWhereInput[]
    OR?: LocationWhereInput[]
    NOT?: LocationWhereInput | LocationWhereInput[]
    country?: StringFilter<"Location"> | string
    state?: StringNullableFilter<"Location"> | string | null
    city?: StringFilter<"Location"> | string
    posts?: PostListRelationFilter
    users?: UserListRelationFilter
  }, "id" | "country_state_city">

  export type LocationOrderByWithAggregationInput = {
    id?: SortOrder
    country?: SortOrder
    state?: SortOrderInput | SortOrder
    city?: SortOrder
    _count?: LocationCountOrderByAggregateInput
    _max?: LocationMaxOrderByAggregateInput
    _min?: LocationMinOrderByAggregateInput
  }

  export type LocationScalarWhereWithAggregatesInput = {
    AND?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    OR?: LocationScalarWhereWithAggregatesInput[]
    NOT?: LocationScalarWhereWithAggregatesInput | LocationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Location"> | string
    country?: StringWithAggregatesFilter<"Location"> | string
    state?: StringNullableWithAggregatesFilter<"Location"> | string | null
    city?: StringWithAggregatesFilter<"Location"> | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    userType?: EnumUserTypeFilter<"User"> | $Enums.UserType
    accountStatus?: EnumAccountStatusFilter<"User"> | $Enums.AccountStatus
    canLogin?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    profileViews?: IntFilter<"User"> | number
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    locationId?: StringNullableFilter<"User"> | string | null
    timezone?: StringNullableFilter<"User"> | string | null
    language?: StringNullableFilter<"User"> | string | null
    lastLoginIP?: StringNullableFilter<"User"> | string | null
    lastDailyReset?: DateTimeFilter<"User"> | Date | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    lastActiveAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletionReason?: StringNullableFilter<"User"> | string | null
    googleId?: StringNullableFilter<"User"> | string | null
    admin?: XOR<AdminNullableRelationFilter, AdminWhereInput> | null
    agency?: XOR<AgencyNullableRelationFilter, AgencyWhereInput> | null
    reviewedAgencyRequests?: AgencyRegistrationRequestListRelationFilter
    agencyRegistrationRequest?: XOR<AgencyRegistrationRequestNullableRelationFilter, AgencyRegistrationRequestWhereInput> | null
    banHistory?: BanListRelationFilter
    boosts?: BoostListRelationFilter
    chatMembers?: ChatMemberListRelationFilter
    chatRateLimits?: ChatRateLimitListRelationFilter
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
    deviceTokens?: DeviceTokenListRelationFilter
    escort?: XOR<EscortNullableRelationFilter, EscortWhereInput> | null
    favorites?: FavoriteListRelationFilter
    identityVerification?: XOR<IdentityVerificationNullableRelationFilter, IdentityVerificationWhereInput> | null
    likes?: LikeListRelationFilter
    receivedMessages?: MessageListRelationFilter
    sentMessages?: MessageListRelationFilter
    notifications?: NotificationListRelationFilter
    posts?: PostListRelationFilter
    reports?: ReportListRelationFilter
    reportsReceived?: ReportListRelationFilter
    searchHistory?: SearchHistoryListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
    blockedBy?: UserBlockListRelationFilter
    blockedUsers?: UserBlockListRelationFilter
    receivedInteractions?: UserInteractionListRelationFilter
    interactions?: UserInteractionListRelationFilter
    reputation?: XOR<UserReputationNullableRelationFilter, UserReputationWhereInput> | null
    settings?: XOR<UserSettingsNullableRelationFilter, UserSettingsWhereInput> | null
    location?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    userType?: SortOrder
    accountStatus?: SortOrder
    canLogin?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    profileViews?: SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpiry?: SortOrderInput | SortOrder
    emailVerificationToken?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    locationId?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    lastLoginIP?: SortOrderInput | SortOrder
    lastDailyReset?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    lastActiveAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletionReason?: SortOrderInput | SortOrder
    googleId?: SortOrderInput | SortOrder
    admin?: AdminOrderByWithRelationInput
    agency?: AgencyOrderByWithRelationInput
    reviewedAgencyRequests?: AgencyRegistrationRequestOrderByRelationAggregateInput
    agencyRegistrationRequest?: AgencyRegistrationRequestOrderByWithRelationInput
    banHistory?: BanOrderByRelationAggregateInput
    boosts?: BoostOrderByRelationAggregateInput
    chatMembers?: ChatMemberOrderByRelationAggregateInput
    chatRateLimits?: ChatRateLimitOrderByRelationAggregateInput
    client?: ClientOrderByWithRelationInput
    deviceTokens?: DeviceTokenOrderByRelationAggregateInput
    escort?: EscortOrderByWithRelationInput
    favorites?: FavoriteOrderByRelationAggregateInput
    identityVerification?: IdentityVerificationOrderByWithRelationInput
    likes?: LikeOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    posts?: PostOrderByRelationAggregateInput
    reports?: ReportOrderByRelationAggregateInput
    reportsReceived?: ReportOrderByRelationAggregateInput
    searchHistory?: SearchHistoryOrderByRelationAggregateInput
    subscriptions?: SubscriptionOrderByRelationAggregateInput
    blockedBy?: UserBlockOrderByRelationAggregateInput
    blockedUsers?: UserBlockOrderByRelationAggregateInput
    receivedInteractions?: UserInteractionOrderByRelationAggregateInput
    interactions?: UserInteractionOrderByRelationAggregateInput
    reputation?: UserReputationOrderByWithRelationInput
    settings?: UserSettingsOrderByWithRelationInput
    location?: LocationOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    googleId?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    userType?: EnumUserTypeFilter<"User"> | $Enums.UserType
    accountStatus?: EnumAccountStatusFilter<"User"> | $Enums.AccountStatus
    canLogin?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    profileViews?: IntFilter<"User"> | number
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    locationId?: StringNullableFilter<"User"> | string | null
    timezone?: StringNullableFilter<"User"> | string | null
    language?: StringNullableFilter<"User"> | string | null
    lastLoginIP?: StringNullableFilter<"User"> | string | null
    lastDailyReset?: DateTimeFilter<"User"> | Date | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    lastActiveAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletionReason?: StringNullableFilter<"User"> | string | null
    admin?: XOR<AdminNullableRelationFilter, AdminWhereInput> | null
    agency?: XOR<AgencyNullableRelationFilter, AgencyWhereInput> | null
    reviewedAgencyRequests?: AgencyRegistrationRequestListRelationFilter
    agencyRegistrationRequest?: XOR<AgencyRegistrationRequestNullableRelationFilter, AgencyRegistrationRequestWhereInput> | null
    banHistory?: BanListRelationFilter
    boosts?: BoostListRelationFilter
    chatMembers?: ChatMemberListRelationFilter
    chatRateLimits?: ChatRateLimitListRelationFilter
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
    deviceTokens?: DeviceTokenListRelationFilter
    escort?: XOR<EscortNullableRelationFilter, EscortWhereInput> | null
    favorites?: FavoriteListRelationFilter
    identityVerification?: XOR<IdentityVerificationNullableRelationFilter, IdentityVerificationWhereInput> | null
    likes?: LikeListRelationFilter
    receivedMessages?: MessageListRelationFilter
    sentMessages?: MessageListRelationFilter
    notifications?: NotificationListRelationFilter
    posts?: PostListRelationFilter
    reports?: ReportListRelationFilter
    reportsReceived?: ReportListRelationFilter
    searchHistory?: SearchHistoryListRelationFilter
    subscriptions?: SubscriptionListRelationFilter
    blockedBy?: UserBlockListRelationFilter
    blockedUsers?: UserBlockListRelationFilter
    receivedInteractions?: UserInteractionListRelationFilter
    interactions?: UserInteractionListRelationFilter
    reputation?: XOR<UserReputationNullableRelationFilter, UserReputationWhereInput> | null
    settings?: XOR<UserSettingsNullableRelationFilter, UserSettingsWhereInput> | null
    location?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
  }, "id" | "email" | "username" | "googleId">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    avatar?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    userType?: SortOrder
    accountStatus?: SortOrder
    canLogin?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrderInput | SortOrder
    profileViews?: SortOrder
    passwordResetToken?: SortOrderInput | SortOrder
    passwordResetExpiry?: SortOrderInput | SortOrder
    emailVerificationToken?: SortOrderInput | SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    locationId?: SortOrderInput | SortOrder
    timezone?: SortOrderInput | SortOrder
    language?: SortOrderInput | SortOrder
    lastLoginIP?: SortOrderInput | SortOrder
    lastDailyReset?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLogin?: SortOrderInput | SortOrder
    lastActiveAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletionReason?: SortOrderInput | SortOrder
    googleId?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    bio?: StringNullableWithAggregatesFilter<"User"> | string | null
    website?: StringNullableWithAggregatesFilter<"User"> | string | null
    userType?: EnumUserTypeWithAggregatesFilter<"User"> | $Enums.UserType
    accountStatus?: EnumAccountStatusWithAggregatesFilter<"User"> | $Enums.AccountStatus
    canLogin?: BoolWithAggregatesFilter<"User"> | boolean
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    isBanned?: BoolWithAggregatesFilter<"User"> | boolean
    banReason?: StringNullableWithAggregatesFilter<"User"> | string | null
    profileViews?: IntWithAggregatesFilter<"User"> | number
    passwordResetToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordResetExpiry?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    emailVerificationToken?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    locationId?: StringNullableWithAggregatesFilter<"User"> | string | null
    timezone?: StringNullableWithAggregatesFilter<"User"> | string | null
    language?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastLoginIP?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastDailyReset?: DateTimeWithAggregatesFilter<"User"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    lastLogin?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    lastActiveAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    deletionReason?: StringNullableWithAggregatesFilter<"User"> | string | null
    googleId?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type AgencyRegistrationRequestWhereInput = {
    AND?: AgencyRegistrationRequestWhereInput | AgencyRegistrationRequestWhereInput[]
    OR?: AgencyRegistrationRequestWhereInput[]
    NOT?: AgencyRegistrationRequestWhereInput | AgencyRegistrationRequestWhereInput[]
    id?: StringFilter<"AgencyRegistrationRequest"> | string
    userId?: StringFilter<"AgencyRegistrationRequest"> | string
    fullName?: StringFilter<"AgencyRegistrationRequest"> | string
    documentNumber?: StringFilter<"AgencyRegistrationRequest"> | string
    businessPhone?: StringFilter<"AgencyRegistrationRequest"> | string
    businessEmail?: StringFilter<"AgencyRegistrationRequest"> | string
    documentFrontImage?: StringFilter<"AgencyRegistrationRequest"> | string
    documentBackImage?: StringFilter<"AgencyRegistrationRequest"> | string
    reviewNotes?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    submittedAt?: DateTimeFilter<"AgencyRegistrationRequest"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AgencyRegistrationRequest"> | Date | string | null
    reviewedBy?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    status?: EnumAgencyRequestStatusFilter<"AgencyRegistrationRequest"> | $Enums.AgencyRequestStatus
    reviewer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AgencyRegistrationRequestOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    fullName?: SortOrder
    documentNumber?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    documentFrontImage?: SortOrder
    documentBackImage?: SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    status?: SortOrder
    reviewer?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type AgencyRegistrationRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: AgencyRegistrationRequestWhereInput | AgencyRegistrationRequestWhereInput[]
    OR?: AgencyRegistrationRequestWhereInput[]
    NOT?: AgencyRegistrationRequestWhereInput | AgencyRegistrationRequestWhereInput[]
    fullName?: StringFilter<"AgencyRegistrationRequest"> | string
    documentNumber?: StringFilter<"AgencyRegistrationRequest"> | string
    businessPhone?: StringFilter<"AgencyRegistrationRequest"> | string
    businessEmail?: StringFilter<"AgencyRegistrationRequest"> | string
    documentFrontImage?: StringFilter<"AgencyRegistrationRequest"> | string
    documentBackImage?: StringFilter<"AgencyRegistrationRequest"> | string
    reviewNotes?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    submittedAt?: DateTimeFilter<"AgencyRegistrationRequest"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AgencyRegistrationRequest"> | Date | string | null
    reviewedBy?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    status?: EnumAgencyRequestStatusFilter<"AgencyRegistrationRequest"> | $Enums.AgencyRequestStatus
    reviewer?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type AgencyRegistrationRequestOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    fullName?: SortOrder
    documentNumber?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    documentFrontImage?: SortOrder
    documentBackImage?: SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: AgencyRegistrationRequestCountOrderByAggregateInput
    _max?: AgencyRegistrationRequestMaxOrderByAggregateInput
    _min?: AgencyRegistrationRequestMinOrderByAggregateInput
  }

  export type AgencyRegistrationRequestScalarWhereWithAggregatesInput = {
    AND?: AgencyRegistrationRequestScalarWhereWithAggregatesInput | AgencyRegistrationRequestScalarWhereWithAggregatesInput[]
    OR?: AgencyRegistrationRequestScalarWhereWithAggregatesInput[]
    NOT?: AgencyRegistrationRequestScalarWhereWithAggregatesInput | AgencyRegistrationRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    userId?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    fullName?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    documentNumber?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    businessPhone?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    businessEmail?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    documentFrontImage?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    documentBackImage?: StringWithAggregatesFilter<"AgencyRegistrationRequest"> | string
    reviewNotes?: StringNullableWithAggregatesFilter<"AgencyRegistrationRequest"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"AgencyRegistrationRequest"> | string | null
    submittedAt?: DateTimeWithAggregatesFilter<"AgencyRegistrationRequest"> | Date | string
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"AgencyRegistrationRequest"> | Date | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"AgencyRegistrationRequest"> | string | null
    status?: EnumAgencyRequestStatusWithAggregatesFilter<"AgencyRegistrationRequest"> | $Enums.AgencyRequestStatus
  }

  export type UserSettingsWhereInput = {
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    id?: StringFilter<"UserSettings"> | string
    userId?: StringFilter<"UserSettings"> | string
    emailNotifications?: BoolFilter<"UserSettings"> | boolean
    pushNotifications?: BoolFilter<"UserSettings"> | boolean
    messageNotifications?: BoolFilter<"UserSettings"> | boolean
    likeNotifications?: BoolFilter<"UserSettings"> | boolean
    boostNotifications?: BoolFilter<"UserSettings"> | boolean
    profileReminders?: BoolFilter<"UserSettings"> | boolean
    verificationReminders?: BoolFilter<"UserSettings"> | boolean
    showOnline?: BoolFilter<"UserSettings"> | boolean
    showLastSeen?: BoolFilter<"UserSettings"> | boolean
    allowDirectMessages?: BoolFilter<"UserSettings"> | boolean
    showPhoneNumber?: BoolFilter<"UserSettings"> | boolean
    showInDiscovery?: BoolFilter<"UserSettings"> | boolean
    showInTrending?: BoolFilter<"UserSettings"> | boolean
    showInSearch?: BoolFilter<"UserSettings"> | boolean
    contentFilter?: EnumContentFilterLevelFilter<"UserSettings"> | $Enums.ContentFilterLevel
    createdAt?: DateTimeFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeFilter<"UserSettings"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSettingsOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    messageNotifications?: SortOrder
    likeNotifications?: SortOrder
    boostNotifications?: SortOrder
    profileReminders?: SortOrder
    verificationReminders?: SortOrder
    showOnline?: SortOrder
    showLastSeen?: SortOrder
    allowDirectMessages?: SortOrder
    showPhoneNumber?: SortOrder
    showInDiscovery?: SortOrder
    showInTrending?: SortOrder
    showInSearch?: SortOrder
    contentFilter?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    emailNotifications?: BoolFilter<"UserSettings"> | boolean
    pushNotifications?: BoolFilter<"UserSettings"> | boolean
    messageNotifications?: BoolFilter<"UserSettings"> | boolean
    likeNotifications?: BoolFilter<"UserSettings"> | boolean
    boostNotifications?: BoolFilter<"UserSettings"> | boolean
    profileReminders?: BoolFilter<"UserSettings"> | boolean
    verificationReminders?: BoolFilter<"UserSettings"> | boolean
    showOnline?: BoolFilter<"UserSettings"> | boolean
    showLastSeen?: BoolFilter<"UserSettings"> | boolean
    allowDirectMessages?: BoolFilter<"UserSettings"> | boolean
    showPhoneNumber?: BoolFilter<"UserSettings"> | boolean
    showInDiscovery?: BoolFilter<"UserSettings"> | boolean
    showInTrending?: BoolFilter<"UserSettings"> | boolean
    showInSearch?: BoolFilter<"UserSettings"> | boolean
    contentFilter?: EnumContentFilterLevelFilter<"UserSettings"> | $Enums.ContentFilterLevel
    createdAt?: DateTimeFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeFilter<"UserSettings"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type UserSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    messageNotifications?: SortOrder
    likeNotifications?: SortOrder
    boostNotifications?: SortOrder
    profileReminders?: SortOrder
    verificationReminders?: SortOrder
    showOnline?: SortOrder
    showLastSeen?: SortOrder
    allowDirectMessages?: SortOrder
    showPhoneNumber?: SortOrder
    showInDiscovery?: SortOrder
    showInTrending?: SortOrder
    showInSearch?: SortOrder
    contentFilter?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSettingsCountOrderByAggregateInput
    _max?: UserSettingsMaxOrderByAggregateInput
    _min?: UserSettingsMinOrderByAggregateInput
  }

  export type UserSettingsScalarWhereWithAggregatesInput = {
    AND?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    OR?: UserSettingsScalarWhereWithAggregatesInput[]
    NOT?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSettings"> | string
    userId?: StringWithAggregatesFilter<"UserSettings"> | string
    emailNotifications?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    pushNotifications?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    messageNotifications?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    likeNotifications?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    boostNotifications?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    profileReminders?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    verificationReminders?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showOnline?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showLastSeen?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    allowDirectMessages?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showPhoneNumber?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showInDiscovery?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showInTrending?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    showInSearch?: BoolWithAggregatesFilter<"UserSettings"> | boolean
    contentFilter?: EnumContentFilterLevelWithAggregatesFilter<"UserSettings"> | $Enums.ContentFilterLevel
    createdAt?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
  }

  export type DeviceTokenWhereInput = {
    AND?: DeviceTokenWhereInput | DeviceTokenWhereInput[]
    OR?: DeviceTokenWhereInput[]
    NOT?: DeviceTokenWhereInput | DeviceTokenWhereInput[]
    id?: StringFilter<"DeviceToken"> | string
    userId?: StringFilter<"DeviceToken"> | string
    token?: StringFilter<"DeviceToken"> | string
    platform?: StringFilter<"DeviceToken"> | string
    deviceInfo?: JsonNullableFilter<"DeviceToken">
    isActive?: BoolFilter<"DeviceToken"> | boolean
    createdAt?: DateTimeFilter<"DeviceToken"> | Date | string
    updatedAt?: DateTimeFilter<"DeviceToken"> | Date | string
    lastUsedAt?: DateTimeFilter<"DeviceToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type DeviceTokenOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    platform?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastUsedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type DeviceTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: DeviceTokenWhereInput | DeviceTokenWhereInput[]
    OR?: DeviceTokenWhereInput[]
    NOT?: DeviceTokenWhereInput | DeviceTokenWhereInput[]
    userId?: StringFilter<"DeviceToken"> | string
    platform?: StringFilter<"DeviceToken"> | string
    deviceInfo?: JsonNullableFilter<"DeviceToken">
    isActive?: BoolFilter<"DeviceToken"> | boolean
    createdAt?: DateTimeFilter<"DeviceToken"> | Date | string
    updatedAt?: DateTimeFilter<"DeviceToken"> | Date | string
    lastUsedAt?: DateTimeFilter<"DeviceToken"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type DeviceTokenOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    platform?: SortOrder
    deviceInfo?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastUsedAt?: SortOrder
    _count?: DeviceTokenCountOrderByAggregateInput
    _max?: DeviceTokenMaxOrderByAggregateInput
    _min?: DeviceTokenMinOrderByAggregateInput
  }

  export type DeviceTokenScalarWhereWithAggregatesInput = {
    AND?: DeviceTokenScalarWhereWithAggregatesInput | DeviceTokenScalarWhereWithAggregatesInput[]
    OR?: DeviceTokenScalarWhereWithAggregatesInput[]
    NOT?: DeviceTokenScalarWhereWithAggregatesInput | DeviceTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"DeviceToken"> | string
    userId?: StringWithAggregatesFilter<"DeviceToken"> | string
    token?: StringWithAggregatesFilter<"DeviceToken"> | string
    platform?: StringWithAggregatesFilter<"DeviceToken"> | string
    deviceInfo?: JsonNullableWithAggregatesFilter<"DeviceToken">
    isActive?: BoolWithAggregatesFilter<"DeviceToken"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"DeviceToken"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"DeviceToken"> | Date | string
    lastUsedAt?: DateTimeWithAggregatesFilter<"DeviceToken"> | Date | string
  }

  export type SearchHistoryWhereInput = {
    AND?: SearchHistoryWhereInput | SearchHistoryWhereInput[]
    OR?: SearchHistoryWhereInput[]
    NOT?: SearchHistoryWhereInput | SearchHistoryWhereInput[]
    id?: StringFilter<"SearchHistory"> | string
    userId?: StringFilter<"SearchHistory"> | string
    query?: StringFilter<"SearchHistory"> | string
    filters?: JsonNullableFilter<"SearchHistory">
    results?: IntFilter<"SearchHistory"> | number
    clicked?: BoolFilter<"SearchHistory"> | boolean
    createdAt?: DateTimeFilter<"SearchHistory"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SearchHistoryOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    query?: SortOrder
    filters?: SortOrderInput | SortOrder
    results?: SortOrder
    clicked?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SearchHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SearchHistoryWhereInput | SearchHistoryWhereInput[]
    OR?: SearchHistoryWhereInput[]
    NOT?: SearchHistoryWhereInput | SearchHistoryWhereInput[]
    userId?: StringFilter<"SearchHistory"> | string
    query?: StringFilter<"SearchHistory"> | string
    filters?: JsonNullableFilter<"SearchHistory">
    results?: IntFilter<"SearchHistory"> | number
    clicked?: BoolFilter<"SearchHistory"> | boolean
    createdAt?: DateTimeFilter<"SearchHistory"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SearchHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    query?: SortOrder
    filters?: SortOrderInput | SortOrder
    results?: SortOrder
    clicked?: SortOrder
    createdAt?: SortOrder
    _count?: SearchHistoryCountOrderByAggregateInput
    _avg?: SearchHistoryAvgOrderByAggregateInput
    _max?: SearchHistoryMaxOrderByAggregateInput
    _min?: SearchHistoryMinOrderByAggregateInput
    _sum?: SearchHistorySumOrderByAggregateInput
  }

  export type SearchHistoryScalarWhereWithAggregatesInput = {
    AND?: SearchHistoryScalarWhereWithAggregatesInput | SearchHistoryScalarWhereWithAggregatesInput[]
    OR?: SearchHistoryScalarWhereWithAggregatesInput[]
    NOT?: SearchHistoryScalarWhereWithAggregatesInput | SearchHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SearchHistory"> | string
    userId?: StringWithAggregatesFilter<"SearchHistory"> | string
    query?: StringWithAggregatesFilter<"SearchHistory"> | string
    filters?: JsonNullableWithAggregatesFilter<"SearchHistory">
    results?: IntWithAggregatesFilter<"SearchHistory"> | number
    clicked?: BoolWithAggregatesFilter<"SearchHistory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"SearchHistory"> | Date | string
  }

  export type UserBlockWhereInput = {
    AND?: UserBlockWhereInput | UserBlockWhereInput[]
    OR?: UserBlockWhereInput[]
    NOT?: UserBlockWhereInput | UserBlockWhereInput[]
    id?: StringFilter<"UserBlock"> | string
    blockerId?: StringFilter<"UserBlock"> | string
    blockedId?: StringFilter<"UserBlock"> | string
    reason?: StringNullableFilter<"UserBlock"> | string | null
    createdAt?: DateTimeFilter<"UserBlock"> | Date | string
    blocked?: XOR<UserRelationFilter, UserWhereInput>
    blocker?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserBlockOrderByWithRelationInput = {
    id?: SortOrder
    blockerId?: SortOrder
    blockedId?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    blocked?: UserOrderByWithRelationInput
    blocker?: UserOrderByWithRelationInput
  }

  export type UserBlockWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    blockerId_blockedId?: UserBlockBlockerIdBlockedIdCompoundUniqueInput
    AND?: UserBlockWhereInput | UserBlockWhereInput[]
    OR?: UserBlockWhereInput[]
    NOT?: UserBlockWhereInput | UserBlockWhereInput[]
    blockerId?: StringFilter<"UserBlock"> | string
    blockedId?: StringFilter<"UserBlock"> | string
    reason?: StringNullableFilter<"UserBlock"> | string | null
    createdAt?: DateTimeFilter<"UserBlock"> | Date | string
    blocked?: XOR<UserRelationFilter, UserWhereInput>
    blocker?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "blockerId_blockedId">

  export type UserBlockOrderByWithAggregationInput = {
    id?: SortOrder
    blockerId?: SortOrder
    blockedId?: SortOrder
    reason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: UserBlockCountOrderByAggregateInput
    _max?: UserBlockMaxOrderByAggregateInput
    _min?: UserBlockMinOrderByAggregateInput
  }

  export type UserBlockScalarWhereWithAggregatesInput = {
    AND?: UserBlockScalarWhereWithAggregatesInput | UserBlockScalarWhereWithAggregatesInput[]
    OR?: UserBlockScalarWhereWithAggregatesInput[]
    NOT?: UserBlockScalarWhereWithAggregatesInput | UserBlockScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserBlock"> | string
    blockerId?: StringWithAggregatesFilter<"UserBlock"> | string
    blockedId?: StringWithAggregatesFilter<"UserBlock"> | string
    reason?: StringNullableWithAggregatesFilter<"UserBlock"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserBlock"> | Date | string
  }

  export type IdentityVerificationWhereInput = {
    AND?: IdentityVerificationWhereInput | IdentityVerificationWhereInput[]
    OR?: IdentityVerificationWhereInput[]
    NOT?: IdentityVerificationWhereInput | IdentityVerificationWhereInput[]
    id?: StringFilter<"IdentityVerification"> | string
    userId?: StringFilter<"IdentityVerification"> | string
    documentType?: StringFilter<"IdentityVerification"> | string
    documentNumber?: StringFilter<"IdentityVerification"> | string
    documentImages?: StringNullableListFilter<"IdentityVerification">
    selfieImage?: StringNullableFilter<"IdentityVerification"> | string | null
    status?: EnumVerificationStatusFilter<"IdentityVerification"> | $Enums.VerificationStatus
    verifiedBy?: StringNullableFilter<"IdentityVerification"> | string | null
    rejectionReason?: StringNullableFilter<"IdentityVerification"> | string | null
    notes?: StringNullableFilter<"IdentityVerification"> | string | null
    submittedAt?: DateTimeFilter<"IdentityVerification"> | Date | string
    completedAt?: DateTimeNullableFilter<"IdentityVerification"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"IdentityVerification"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type IdentityVerificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentImages?: SortOrder
    selfieImage?: SortOrderInput | SortOrder
    status?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    submittedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type IdentityVerificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: IdentityVerificationWhereInput | IdentityVerificationWhereInput[]
    OR?: IdentityVerificationWhereInput[]
    NOT?: IdentityVerificationWhereInput | IdentityVerificationWhereInput[]
    documentType?: StringFilter<"IdentityVerification"> | string
    documentNumber?: StringFilter<"IdentityVerification"> | string
    documentImages?: StringNullableListFilter<"IdentityVerification">
    selfieImage?: StringNullableFilter<"IdentityVerification"> | string | null
    status?: EnumVerificationStatusFilter<"IdentityVerification"> | $Enums.VerificationStatus
    verifiedBy?: StringNullableFilter<"IdentityVerification"> | string | null
    rejectionReason?: StringNullableFilter<"IdentityVerification"> | string | null
    notes?: StringNullableFilter<"IdentityVerification"> | string | null
    submittedAt?: DateTimeFilter<"IdentityVerification"> | Date | string
    completedAt?: DateTimeNullableFilter<"IdentityVerification"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"IdentityVerification"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type IdentityVerificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentImages?: SortOrder
    selfieImage?: SortOrderInput | SortOrder
    status?: SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    submittedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    _count?: IdentityVerificationCountOrderByAggregateInput
    _max?: IdentityVerificationMaxOrderByAggregateInput
    _min?: IdentityVerificationMinOrderByAggregateInput
  }

  export type IdentityVerificationScalarWhereWithAggregatesInput = {
    AND?: IdentityVerificationScalarWhereWithAggregatesInput | IdentityVerificationScalarWhereWithAggregatesInput[]
    OR?: IdentityVerificationScalarWhereWithAggregatesInput[]
    NOT?: IdentityVerificationScalarWhereWithAggregatesInput | IdentityVerificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"IdentityVerification"> | string
    userId?: StringWithAggregatesFilter<"IdentityVerification"> | string
    documentType?: StringWithAggregatesFilter<"IdentityVerification"> | string
    documentNumber?: StringWithAggregatesFilter<"IdentityVerification"> | string
    documentImages?: StringNullableListFilter<"IdentityVerification">
    selfieImage?: StringNullableWithAggregatesFilter<"IdentityVerification"> | string | null
    status?: EnumVerificationStatusWithAggregatesFilter<"IdentityVerification"> | $Enums.VerificationStatus
    verifiedBy?: StringNullableWithAggregatesFilter<"IdentityVerification"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"IdentityVerification"> | string | null
    notes?: StringNullableWithAggregatesFilter<"IdentityVerification"> | string | null
    submittedAt?: DateTimeWithAggregatesFilter<"IdentityVerification"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"IdentityVerification"> | Date | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"IdentityVerification"> | Date | string | null
  }

  export type SubscriptionPlanWhereInput = {
    AND?: SubscriptionPlanWhereInput | SubscriptionPlanWhereInput[]
    OR?: SubscriptionPlanWhereInput[]
    NOT?: SubscriptionPlanWhereInput | SubscriptionPlanWhereInput[]
    id?: StringFilter<"SubscriptionPlan"> | string
    name?: StringFilter<"SubscriptionPlan"> | string
    description?: StringFilter<"SubscriptionPlan"> | string
    price?: FloatFilter<"SubscriptionPlan"> | number
    duration?: IntFilter<"SubscriptionPlan"> | number
    features?: JsonFilter<"SubscriptionPlan">
    isActive?: BoolFilter<"SubscriptionPlan"> | boolean
    userType?: EnumUserTypeFilter<"SubscriptionPlan"> | $Enums.UserType
    priority?: IntFilter<"SubscriptionPlan"> | number
    maxPosts?: IntNullableFilter<"SubscriptionPlan"> | number | null
    maxImages?: IntNullableFilter<"SubscriptionPlan"> | number | null
    maxBoosts?: IntNullableFilter<"SubscriptionPlan"> | number | null
    createdAt?: DateTimeFilter<"SubscriptionPlan"> | Date | string
    updatedAt?: DateTimeFilter<"SubscriptionPlan"> | Date | string
    subscriptions?: SubscriptionListRelationFilter
  }

  export type SubscriptionPlanOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    duration?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrderInput | SortOrder
    maxImages?: SortOrderInput | SortOrder
    maxBoosts?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    subscriptions?: SubscriptionOrderByRelationAggregateInput
  }

  export type SubscriptionPlanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: SubscriptionPlanWhereInput | SubscriptionPlanWhereInput[]
    OR?: SubscriptionPlanWhereInput[]
    NOT?: SubscriptionPlanWhereInput | SubscriptionPlanWhereInput[]
    description?: StringFilter<"SubscriptionPlan"> | string
    price?: FloatFilter<"SubscriptionPlan"> | number
    duration?: IntFilter<"SubscriptionPlan"> | number
    features?: JsonFilter<"SubscriptionPlan">
    isActive?: BoolFilter<"SubscriptionPlan"> | boolean
    userType?: EnumUserTypeFilter<"SubscriptionPlan"> | $Enums.UserType
    priority?: IntFilter<"SubscriptionPlan"> | number
    maxPosts?: IntNullableFilter<"SubscriptionPlan"> | number | null
    maxImages?: IntNullableFilter<"SubscriptionPlan"> | number | null
    maxBoosts?: IntNullableFilter<"SubscriptionPlan"> | number | null
    createdAt?: DateTimeFilter<"SubscriptionPlan"> | Date | string
    updatedAt?: DateTimeFilter<"SubscriptionPlan"> | Date | string
    subscriptions?: SubscriptionListRelationFilter
  }, "id" | "name">

  export type SubscriptionPlanOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    duration?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrderInput | SortOrder
    maxImages?: SortOrderInput | SortOrder
    maxBoosts?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscriptionPlanCountOrderByAggregateInput
    _avg?: SubscriptionPlanAvgOrderByAggregateInput
    _max?: SubscriptionPlanMaxOrderByAggregateInput
    _min?: SubscriptionPlanMinOrderByAggregateInput
    _sum?: SubscriptionPlanSumOrderByAggregateInput
  }

  export type SubscriptionPlanScalarWhereWithAggregatesInput = {
    AND?: SubscriptionPlanScalarWhereWithAggregatesInput | SubscriptionPlanScalarWhereWithAggregatesInput[]
    OR?: SubscriptionPlanScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionPlanScalarWhereWithAggregatesInput | SubscriptionPlanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SubscriptionPlan"> | string
    name?: StringWithAggregatesFilter<"SubscriptionPlan"> | string
    description?: StringWithAggregatesFilter<"SubscriptionPlan"> | string
    price?: FloatWithAggregatesFilter<"SubscriptionPlan"> | number
    duration?: IntWithAggregatesFilter<"SubscriptionPlan"> | number
    features?: JsonWithAggregatesFilter<"SubscriptionPlan">
    isActive?: BoolWithAggregatesFilter<"SubscriptionPlan"> | boolean
    userType?: EnumUserTypeWithAggregatesFilter<"SubscriptionPlan"> | $Enums.UserType
    priority?: IntWithAggregatesFilter<"SubscriptionPlan"> | number
    maxPosts?: IntNullableWithAggregatesFilter<"SubscriptionPlan"> | number | null
    maxImages?: IntNullableWithAggregatesFilter<"SubscriptionPlan"> | number | null
    maxBoosts?: IntNullableWithAggregatesFilter<"SubscriptionPlan"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"SubscriptionPlan"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SubscriptionPlan"> | Date | string
  }

  export type SubscriptionWhereInput = {
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    id?: StringFilter<"Subscription"> | string
    userId?: StringFilter<"Subscription"> | string
    planId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    stripeSubscriptionId?: StringNullableFilter<"Subscription"> | string | null
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    postsUsed?: IntFilter<"Subscription"> | number
    imagesUsed?: IntFilter<"Subscription"> | number
    boostsUsed?: IntFilter<"Subscription"> | number
    startsAt?: DateTimeFilter<"Subscription"> | Date | string
    endsAt?: DateTimeFilter<"Subscription"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    plan?: XOR<SubscriptionPlanRelationFilter, SubscriptionPlanWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type SubscriptionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
    startsAt?: SortOrder
    endsAt?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    plan?: SubscriptionPlanOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type SubscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SubscriptionWhereInput | SubscriptionWhereInput[]
    OR?: SubscriptionWhereInput[]
    NOT?: SubscriptionWhereInput | SubscriptionWhereInput[]
    userId?: StringFilter<"Subscription"> | string
    planId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    stripeSubscriptionId?: StringNullableFilter<"Subscription"> | string | null
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    postsUsed?: IntFilter<"Subscription"> | number
    imagesUsed?: IntFilter<"Subscription"> | number
    boostsUsed?: IntFilter<"Subscription"> | number
    startsAt?: DateTimeFilter<"Subscription"> | Date | string
    endsAt?: DateTimeFilter<"Subscription"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
    plan?: XOR<SubscriptionPlanRelationFilter, SubscriptionPlanWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type SubscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    stripeSubscriptionId?: SortOrderInput | SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
    startsAt?: SortOrder
    endsAt?: SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SubscriptionCountOrderByAggregateInput
    _avg?: SubscriptionAvgOrderByAggregateInput
    _max?: SubscriptionMaxOrderByAggregateInput
    _min?: SubscriptionMinOrderByAggregateInput
    _sum?: SubscriptionSumOrderByAggregateInput
  }

  export type SubscriptionScalarWhereWithAggregatesInput = {
    AND?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    OR?: SubscriptionScalarWhereWithAggregatesInput[]
    NOT?: SubscriptionScalarWhereWithAggregatesInput | SubscriptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subscription"> | string
    userId?: StringWithAggregatesFilter<"Subscription"> | string
    planId?: StringWithAggregatesFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusWithAggregatesFilter<"Subscription"> | $Enums.SubscriptionStatus
    stripeSubscriptionId?: StringNullableWithAggregatesFilter<"Subscription"> | string | null
    currentPeriodStart?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    postsUsed?: IntWithAggregatesFilter<"Subscription"> | number
    imagesUsed?: IntWithAggregatesFilter<"Subscription"> | number
    boostsUsed?: IntWithAggregatesFilter<"Subscription"> | number
    startsAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    endsAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Subscription"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Subscription"> | Date | string
  }

  export type TagWhereInput = {
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    id?: StringFilter<"Tag"> | string
    name?: StringFilter<"Tag"> | string
    slug?: StringFilter<"Tag"> | string
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    icon?: StringNullableFilter<"Tag"> | string | null
    isActive?: BoolFilter<"Tag"> | boolean
    usageCount?: IntFilter<"Tag"> | number
    category?: EnumTagCategoryFilter<"Tag"> | $Enums.TagCategory
    priority?: IntFilter<"Tag"> | number
    createdAt?: DateTimeFilter<"Tag"> | Date | string
    updatedAt?: DateTimeFilter<"Tag"> | Date | string
    posts?: PostTagListRelationFilter
  }

  export type TagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    isActive?: SortOrder
    usageCount?: SortOrder
    category?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    posts?: PostTagOrderByRelationAggregateInput
  }

  export type TagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    slug?: string
    AND?: TagWhereInput | TagWhereInput[]
    OR?: TagWhereInput[]
    NOT?: TagWhereInput | TagWhereInput[]
    description?: StringNullableFilter<"Tag"> | string | null
    color?: StringNullableFilter<"Tag"> | string | null
    icon?: StringNullableFilter<"Tag"> | string | null
    isActive?: BoolFilter<"Tag"> | boolean
    usageCount?: IntFilter<"Tag"> | number
    category?: EnumTagCategoryFilter<"Tag"> | $Enums.TagCategory
    priority?: IntFilter<"Tag"> | number
    createdAt?: DateTimeFilter<"Tag"> | Date | string
    updatedAt?: DateTimeFilter<"Tag"> | Date | string
    posts?: PostTagListRelationFilter
  }, "id" | "name" | "slug">

  export type TagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    color?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    isActive?: SortOrder
    usageCount?: SortOrder
    category?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: TagCountOrderByAggregateInput
    _avg?: TagAvgOrderByAggregateInput
    _max?: TagMaxOrderByAggregateInput
    _min?: TagMinOrderByAggregateInput
    _sum?: TagSumOrderByAggregateInput
  }

  export type TagScalarWhereWithAggregatesInput = {
    AND?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    OR?: TagScalarWhereWithAggregatesInput[]
    NOT?: TagScalarWhereWithAggregatesInput | TagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Tag"> | string
    name?: StringWithAggregatesFilter<"Tag"> | string
    slug?: StringWithAggregatesFilter<"Tag"> | string
    description?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    color?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    icon?: StringNullableWithAggregatesFilter<"Tag"> | string | null
    isActive?: BoolWithAggregatesFilter<"Tag"> | boolean
    usageCount?: IntWithAggregatesFilter<"Tag"> | number
    category?: EnumTagCategoryWithAggregatesFilter<"Tag"> | $Enums.TagCategory
    priority?: IntWithAggregatesFilter<"Tag"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Tag"> | Date | string
  }

  export type PostTagWhereInput = {
    AND?: PostTagWhereInput | PostTagWhereInput[]
    OR?: PostTagWhereInput[]
    NOT?: PostTagWhereInput | PostTagWhereInput[]
    id?: StringFilter<"PostTag"> | string
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
    createdAt?: DateTimeFilter<"PostTag"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    tag?: XOR<TagRelationFilter, TagWhereInput>
  }

  export type PostTagOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    tagId?: SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    tag?: TagOrderByWithRelationInput
  }

  export type PostTagWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    postId_tagId?: PostTagPostIdTagIdCompoundUniqueInput
    AND?: PostTagWhereInput | PostTagWhereInput[]
    OR?: PostTagWhereInput[]
    NOT?: PostTagWhereInput | PostTagWhereInput[]
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
    createdAt?: DateTimeFilter<"PostTag"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    tag?: XOR<TagRelationFilter, TagWhereInput>
  }, "id" | "postId_tagId">

  export type PostTagOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    tagId?: SortOrder
    createdAt?: SortOrder
    _count?: PostTagCountOrderByAggregateInput
    _max?: PostTagMaxOrderByAggregateInput
    _min?: PostTagMinOrderByAggregateInput
  }

  export type PostTagScalarWhereWithAggregatesInput = {
    AND?: PostTagScalarWhereWithAggregatesInput | PostTagScalarWhereWithAggregatesInput[]
    OR?: PostTagScalarWhereWithAggregatesInput[]
    NOT?: PostTagScalarWhereWithAggregatesInput | PostTagScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PostTag"> | string
    postId?: StringWithAggregatesFilter<"PostTag"> | string
    tagId?: StringWithAggregatesFilter<"PostTag"> | string
    createdAt?: DateTimeWithAggregatesFilter<"PostTag"> | Date | string
  }

  export type AdminWhereInput = {
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    id?: StringFilter<"Admin"> | string
    userId?: StringFilter<"Admin"> | string
    role?: EnumAdminRoleFilter<"Admin"> | $Enums.AdminRole
    permissions?: JsonNullableFilter<"Admin">
    totalBans?: IntFilter<"Admin"> | number
    totalReports?: IntFilter<"Admin"> | number
    totalVerifications?: IntFilter<"Admin"> | number
    totalAgencyApprovals?: IntFilter<"Admin"> | number
    canDeletePosts?: BoolFilter<"Admin"> | boolean
    canBanUsers?: BoolFilter<"Admin"> | boolean
    canModifyPrices?: BoolFilter<"Admin"> | boolean
    canAccessMetrics?: BoolFilter<"Admin"> | boolean
    canApproveAgencies?: BoolFilter<"Admin"> | boolean
    createdAt?: DateTimeFilter<"Admin"> | Date | string
    updatedAt?: DateTimeFilter<"Admin"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type AdminOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrderInput | SortOrder
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
    canDeletePosts?: SortOrder
    canBanUsers?: SortOrder
    canModifyPrices?: SortOrder
    canAccessMetrics?: SortOrder
    canApproveAgencies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AdminWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: AdminWhereInput | AdminWhereInput[]
    OR?: AdminWhereInput[]
    NOT?: AdminWhereInput | AdminWhereInput[]
    role?: EnumAdminRoleFilter<"Admin"> | $Enums.AdminRole
    permissions?: JsonNullableFilter<"Admin">
    totalBans?: IntFilter<"Admin"> | number
    totalReports?: IntFilter<"Admin"> | number
    totalVerifications?: IntFilter<"Admin"> | number
    totalAgencyApprovals?: IntFilter<"Admin"> | number
    canDeletePosts?: BoolFilter<"Admin"> | boolean
    canBanUsers?: BoolFilter<"Admin"> | boolean
    canModifyPrices?: BoolFilter<"Admin"> | boolean
    canAccessMetrics?: BoolFilter<"Admin"> | boolean
    canApproveAgencies?: BoolFilter<"Admin"> | boolean
    createdAt?: DateTimeFilter<"Admin"> | Date | string
    updatedAt?: DateTimeFilter<"Admin"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type AdminOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrderInput | SortOrder
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
    canDeletePosts?: SortOrder
    canBanUsers?: SortOrder
    canModifyPrices?: SortOrder
    canAccessMetrics?: SortOrder
    canApproveAgencies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AdminCountOrderByAggregateInput
    _avg?: AdminAvgOrderByAggregateInput
    _max?: AdminMaxOrderByAggregateInput
    _min?: AdminMinOrderByAggregateInput
    _sum?: AdminSumOrderByAggregateInput
  }

  export type AdminScalarWhereWithAggregatesInput = {
    AND?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    OR?: AdminScalarWhereWithAggregatesInput[]
    NOT?: AdminScalarWhereWithAggregatesInput | AdminScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Admin"> | string
    userId?: StringWithAggregatesFilter<"Admin"> | string
    role?: EnumAdminRoleWithAggregatesFilter<"Admin"> | $Enums.AdminRole
    permissions?: JsonNullableWithAggregatesFilter<"Admin">
    totalBans?: IntWithAggregatesFilter<"Admin"> | number
    totalReports?: IntWithAggregatesFilter<"Admin"> | number
    totalVerifications?: IntWithAggregatesFilter<"Admin"> | number
    totalAgencyApprovals?: IntWithAggregatesFilter<"Admin"> | number
    canDeletePosts?: BoolWithAggregatesFilter<"Admin"> | boolean
    canBanUsers?: BoolWithAggregatesFilter<"Admin"> | boolean
    canModifyPrices?: BoolWithAggregatesFilter<"Admin"> | boolean
    canAccessMetrics?: BoolWithAggregatesFilter<"Admin"> | boolean
    canApproveAgencies?: BoolWithAggregatesFilter<"Admin"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Admin"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Admin"> | Date | string
  }

  export type UserReputationWhereInput = {
    AND?: UserReputationWhereInput | UserReputationWhereInput[]
    OR?: UserReputationWhereInput[]
    NOT?: UserReputationWhereInput | UserReputationWhereInput[]
    id?: StringFilter<"UserReputation"> | string
    userId?: StringFilter<"UserReputation"> | string
    overallScore?: FloatFilter<"UserReputation"> | number
    responseRate?: FloatFilter<"UserReputation"> | number
    averageResponseTime?: IntNullableFilter<"UserReputation"> | number | null
    profileCompleteness?: FloatFilter<"UserReputation"> | number
    trustScore?: FloatFilter<"UserReputation"> | number
    totalViews?: IntFilter<"UserReputation"> | number
    totalLikes?: IntFilter<"UserReputation"> | number
    totalMessages?: IntFilter<"UserReputation"> | number
    totalFavorites?: IntFilter<"UserReputation"> | number
    discoveryScore?: FloatFilter<"UserReputation"> | number
    trendingScore?: FloatFilter<"UserReputation"> | number
    qualityScore?: FloatFilter<"UserReputation"> | number
    lastScoreUpdate?: DateTimeFilter<"UserReputation"> | Date | string
    spamScore?: FloatFilter<"UserReputation"> | number
    reportScore?: FloatFilter<"UserReputation"> | number
    createdAt?: DateTimeFilter<"UserReputation"> | Date | string
    updatedAt?: DateTimeFilter<"UserReputation"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserReputationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrderInput | SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserReputationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: UserReputationWhereInput | UserReputationWhereInput[]
    OR?: UserReputationWhereInput[]
    NOT?: UserReputationWhereInput | UserReputationWhereInput[]
    overallScore?: FloatFilter<"UserReputation"> | number
    responseRate?: FloatFilter<"UserReputation"> | number
    averageResponseTime?: IntNullableFilter<"UserReputation"> | number | null
    profileCompleteness?: FloatFilter<"UserReputation"> | number
    trustScore?: FloatFilter<"UserReputation"> | number
    totalViews?: IntFilter<"UserReputation"> | number
    totalLikes?: IntFilter<"UserReputation"> | number
    totalMessages?: IntFilter<"UserReputation"> | number
    totalFavorites?: IntFilter<"UserReputation"> | number
    discoveryScore?: FloatFilter<"UserReputation"> | number
    trendingScore?: FloatFilter<"UserReputation"> | number
    qualityScore?: FloatFilter<"UserReputation"> | number
    lastScoreUpdate?: DateTimeFilter<"UserReputation"> | Date | string
    spamScore?: FloatFilter<"UserReputation"> | number
    reportScore?: FloatFilter<"UserReputation"> | number
    createdAt?: DateTimeFilter<"UserReputation"> | Date | string
    updatedAt?: DateTimeFilter<"UserReputation"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId">

  export type UserReputationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrderInput | SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserReputationCountOrderByAggregateInput
    _avg?: UserReputationAvgOrderByAggregateInput
    _max?: UserReputationMaxOrderByAggregateInput
    _min?: UserReputationMinOrderByAggregateInput
    _sum?: UserReputationSumOrderByAggregateInput
  }

  export type UserReputationScalarWhereWithAggregatesInput = {
    AND?: UserReputationScalarWhereWithAggregatesInput | UserReputationScalarWhereWithAggregatesInput[]
    OR?: UserReputationScalarWhereWithAggregatesInput[]
    NOT?: UserReputationScalarWhereWithAggregatesInput | UserReputationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserReputation"> | string
    userId?: StringWithAggregatesFilter<"UserReputation"> | string
    overallScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    responseRate?: FloatWithAggregatesFilter<"UserReputation"> | number
    averageResponseTime?: IntNullableWithAggregatesFilter<"UserReputation"> | number | null
    profileCompleteness?: FloatWithAggregatesFilter<"UserReputation"> | number
    trustScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    totalViews?: IntWithAggregatesFilter<"UserReputation"> | number
    totalLikes?: IntWithAggregatesFilter<"UserReputation"> | number
    totalMessages?: IntWithAggregatesFilter<"UserReputation"> | number
    totalFavorites?: IntWithAggregatesFilter<"UserReputation"> | number
    discoveryScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    trendingScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    qualityScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    lastScoreUpdate?: DateTimeWithAggregatesFilter<"UserReputation"> | Date | string
    spamScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    reportScore?: FloatWithAggregatesFilter<"UserReputation"> | number
    createdAt?: DateTimeWithAggregatesFilter<"UserReputation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserReputation"> | Date | string
  }

  export type EscortWhereInput = {
    AND?: EscortWhereInput | EscortWhereInput[]
    OR?: EscortWhereInput[]
    NOT?: EscortWhereInput | EscortWhereInput[]
    id?: StringFilter<"Escort"> | string
    userId?: StringFilter<"Escort"> | string
    isVerified?: BoolFilter<"Escort"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Escort"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Escort"> | string | null
    verificationExpiresAt?: DateTimeNullableFilter<"Escort"> | Date | string | null
    rating?: FloatFilter<"Escort"> | number
    totalRatings?: IntFilter<"Escort"> | number
    age?: IntNullableFilter<"Escort"> | number | null
    height?: StringNullableFilter<"Escort"> | string | null
    weight?: StringNullableFilter<"Escort"> | string | null
    bodyType?: StringNullableFilter<"Escort"> | string | null
    ethnicity?: StringNullableFilter<"Escort"> | string | null
    hairColor?: StringNullableFilter<"Escort"> | string | null
    eyeColor?: StringNullableFilter<"Escort"> | string | null
    rates?: JsonNullableFilter<"Escort">
    availability?: JsonNullableFilter<"Escort">
    languages?: StringNullableListFilter<"Escort">
    maxPosts?: IntFilter<"Escort"> | number
    currentPosts?: IntFilter<"Escort"> | number
    totalBookings?: IntFilter<"Escort"> | number
    completedBookings?: IntFilter<"Escort"> | number
    services?: StringNullableListFilter<"Escort">
    agencyInvitations?: AgencyInvitationListRelationFilter
    agencyMemberships?: AgencyMembershipListRelationFilter
    clientReviews?: ClientReviewListRelationFilter
    verifications?: EscortVerificationListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    reviewsGiven?: ReviewListRelationFilter
    reviews?: ReviewListRelationFilter
  }

  export type EscortOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verificationExpiresAt?: SortOrderInput | SortOrder
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    bodyType?: SortOrderInput | SortOrder
    ethnicity?: SortOrderInput | SortOrder
    hairColor?: SortOrderInput | SortOrder
    eyeColor?: SortOrderInput | SortOrder
    rates?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    languages?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
    services?: SortOrder
    agencyInvitations?: AgencyInvitationOrderByRelationAggregateInput
    agencyMemberships?: AgencyMembershipOrderByRelationAggregateInput
    clientReviews?: ClientReviewOrderByRelationAggregateInput
    verifications?: EscortVerificationOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    reviewsGiven?: ReviewOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
  }

  export type EscortWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: EscortWhereInput | EscortWhereInput[]
    OR?: EscortWhereInput[]
    NOT?: EscortWhereInput | EscortWhereInput[]
    isVerified?: BoolFilter<"Escort"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Escort"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Escort"> | string | null
    verificationExpiresAt?: DateTimeNullableFilter<"Escort"> | Date | string | null
    rating?: FloatFilter<"Escort"> | number
    totalRatings?: IntFilter<"Escort"> | number
    age?: IntNullableFilter<"Escort"> | number | null
    height?: StringNullableFilter<"Escort"> | string | null
    weight?: StringNullableFilter<"Escort"> | string | null
    bodyType?: StringNullableFilter<"Escort"> | string | null
    ethnicity?: StringNullableFilter<"Escort"> | string | null
    hairColor?: StringNullableFilter<"Escort"> | string | null
    eyeColor?: StringNullableFilter<"Escort"> | string | null
    rates?: JsonNullableFilter<"Escort">
    availability?: JsonNullableFilter<"Escort">
    languages?: StringNullableListFilter<"Escort">
    maxPosts?: IntFilter<"Escort"> | number
    currentPosts?: IntFilter<"Escort"> | number
    totalBookings?: IntFilter<"Escort"> | number
    completedBookings?: IntFilter<"Escort"> | number
    services?: StringNullableListFilter<"Escort">
    agencyInvitations?: AgencyInvitationListRelationFilter
    agencyMemberships?: AgencyMembershipListRelationFilter
    clientReviews?: ClientReviewListRelationFilter
    verifications?: EscortVerificationListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    reviewsGiven?: ReviewListRelationFilter
    reviews?: ReviewListRelationFilter
  }, "id" | "userId">

  export type EscortOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verificationExpiresAt?: SortOrderInput | SortOrder
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    bodyType?: SortOrderInput | SortOrder
    ethnicity?: SortOrderInput | SortOrder
    hairColor?: SortOrderInput | SortOrder
    eyeColor?: SortOrderInput | SortOrder
    rates?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    languages?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
    services?: SortOrder
    _count?: EscortCountOrderByAggregateInput
    _avg?: EscortAvgOrderByAggregateInput
    _max?: EscortMaxOrderByAggregateInput
    _min?: EscortMinOrderByAggregateInput
    _sum?: EscortSumOrderByAggregateInput
  }

  export type EscortScalarWhereWithAggregatesInput = {
    AND?: EscortScalarWhereWithAggregatesInput | EscortScalarWhereWithAggregatesInput[]
    OR?: EscortScalarWhereWithAggregatesInput[]
    NOT?: EscortScalarWhereWithAggregatesInput | EscortScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Escort"> | string
    userId?: StringWithAggregatesFilter<"Escort"> | string
    isVerified?: BoolWithAggregatesFilter<"Escort"> | boolean
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Escort"> | Date | string | null
    verifiedBy?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    verificationExpiresAt?: DateTimeNullableWithAggregatesFilter<"Escort"> | Date | string | null
    rating?: FloatWithAggregatesFilter<"Escort"> | number
    totalRatings?: IntWithAggregatesFilter<"Escort"> | number
    age?: IntNullableWithAggregatesFilter<"Escort"> | number | null
    height?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    weight?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    bodyType?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    ethnicity?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    hairColor?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    eyeColor?: StringNullableWithAggregatesFilter<"Escort"> | string | null
    rates?: JsonNullableWithAggregatesFilter<"Escort">
    availability?: JsonNullableWithAggregatesFilter<"Escort">
    languages?: StringNullableListFilter<"Escort">
    maxPosts?: IntWithAggregatesFilter<"Escort"> | number
    currentPosts?: IntWithAggregatesFilter<"Escort"> | number
    totalBookings?: IntWithAggregatesFilter<"Escort"> | number
    completedBookings?: IntWithAggregatesFilter<"Escort"> | number
    services?: StringNullableListFilter<"Escort">
  }

  export type AgencyWhereInput = {
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    id?: StringFilter<"Agency"> | string
    userId?: StringFilter<"Agency"> | string
    isVerified?: BoolFilter<"Agency"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    companyName?: StringFilter<"Agency"> | string
    businessLicense?: StringNullableFilter<"Agency"> | string | null
    contactPerson?: StringFilter<"Agency"> | string
    address?: StringFilter<"Agency"> | string
    cedulaFrente?: StringNullableFilter<"Agency"> | string | null
    cedulaTrasera?: StringNullableFilter<"Agency"> | string | null
    verificationStatus?: EnumVerificationStatusFilter<"Agency"> | $Enums.VerificationStatus
    taxId?: StringNullableFilter<"Agency"> | string | null
    maxPosts?: IntNullableFilter<"Agency"> | number | null
    totalEscorts?: IntFilter<"Agency"> | number
    verifiedEscorts?: IntFilter<"Agency"> | number
    totalVerifications?: IntFilter<"Agency"> | number
    activeEscorts?: IntFilter<"Agency"> | number
    defaultCommissionRate?: FloatFilter<"Agency"> | number
    user?: XOR<UserRelationFilter, UserWhereInput>
    invitations?: AgencyInvitationListRelationFilter
    memberships?: AgencyMembershipListRelationFilter
    verifications?: EscortVerificationListRelationFilter
  }

  export type AgencyOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    companyName?: SortOrder
    businessLicense?: SortOrderInput | SortOrder
    contactPerson?: SortOrder
    address?: SortOrder
    cedulaFrente?: SortOrderInput | SortOrder
    cedulaTrasera?: SortOrderInput | SortOrder
    verificationStatus?: SortOrder
    taxId?: SortOrderInput | SortOrder
    maxPosts?: SortOrderInput | SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
    user?: UserOrderByWithRelationInput
    invitations?: AgencyInvitationOrderByRelationAggregateInput
    memberships?: AgencyMembershipOrderByRelationAggregateInput
    verifications?: EscortVerificationOrderByRelationAggregateInput
  }

  export type AgencyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: AgencyWhereInput | AgencyWhereInput[]
    OR?: AgencyWhereInput[]
    NOT?: AgencyWhereInput | AgencyWhereInput[]
    isVerified?: BoolFilter<"Agency"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Agency"> | Date | string | null
    companyName?: StringFilter<"Agency"> | string
    businessLicense?: StringNullableFilter<"Agency"> | string | null
    contactPerson?: StringFilter<"Agency"> | string
    address?: StringFilter<"Agency"> | string
    cedulaFrente?: StringNullableFilter<"Agency"> | string | null
    cedulaTrasera?: StringNullableFilter<"Agency"> | string | null
    verificationStatus?: EnumVerificationStatusFilter<"Agency"> | $Enums.VerificationStatus
    taxId?: StringNullableFilter<"Agency"> | string | null
    maxPosts?: IntNullableFilter<"Agency"> | number | null
    totalEscorts?: IntFilter<"Agency"> | number
    verifiedEscorts?: IntFilter<"Agency"> | number
    totalVerifications?: IntFilter<"Agency"> | number
    activeEscorts?: IntFilter<"Agency"> | number
    defaultCommissionRate?: FloatFilter<"Agency"> | number
    user?: XOR<UserRelationFilter, UserWhereInput>
    invitations?: AgencyInvitationListRelationFilter
    memberships?: AgencyMembershipListRelationFilter
    verifications?: EscortVerificationListRelationFilter
  }, "id" | "userId">

  export type AgencyOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    companyName?: SortOrder
    businessLicense?: SortOrderInput | SortOrder
    contactPerson?: SortOrder
    address?: SortOrder
    cedulaFrente?: SortOrderInput | SortOrder
    cedulaTrasera?: SortOrderInput | SortOrder
    verificationStatus?: SortOrder
    taxId?: SortOrderInput | SortOrder
    maxPosts?: SortOrderInput | SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
    _count?: AgencyCountOrderByAggregateInput
    _avg?: AgencyAvgOrderByAggregateInput
    _max?: AgencyMaxOrderByAggregateInput
    _min?: AgencyMinOrderByAggregateInput
    _sum?: AgencySumOrderByAggregateInput
  }

  export type AgencyScalarWhereWithAggregatesInput = {
    AND?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    OR?: AgencyScalarWhereWithAggregatesInput[]
    NOT?: AgencyScalarWhereWithAggregatesInput | AgencyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Agency"> | string
    userId?: StringWithAggregatesFilter<"Agency"> | string
    isVerified?: BoolWithAggregatesFilter<"Agency"> | boolean
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Agency"> | Date | string | null
    companyName?: StringWithAggregatesFilter<"Agency"> | string
    businessLicense?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    contactPerson?: StringWithAggregatesFilter<"Agency"> | string
    address?: StringWithAggregatesFilter<"Agency"> | string
    cedulaFrente?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    cedulaTrasera?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    verificationStatus?: EnumVerificationStatusWithAggregatesFilter<"Agency"> | $Enums.VerificationStatus
    taxId?: StringNullableWithAggregatesFilter<"Agency"> | string | null
    maxPosts?: IntNullableWithAggregatesFilter<"Agency"> | number | null
    totalEscorts?: IntWithAggregatesFilter<"Agency"> | number
    verifiedEscorts?: IntWithAggregatesFilter<"Agency"> | number
    totalVerifications?: IntWithAggregatesFilter<"Agency"> | number
    activeEscorts?: IntWithAggregatesFilter<"Agency"> | number
    defaultCommissionRate?: FloatWithAggregatesFilter<"Agency"> | number
  }

  export type ClientWhereInput = {
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    id?: StringFilter<"Client"> | string
    userId?: StringFilter<"Client"> | string
    points?: IntFilter<"Client"> | number
    isPremium?: BoolFilter<"Client"> | boolean
    premiumUntil?: DateTimeNullableFilter<"Client"> | Date | string | null
    premiumTier?: EnumPremiumTierFilter<"Client"> | $Enums.PremiumTier
    chatPriorityUntil?: DateTimeNullableFilter<"Client"> | Date | string | null
    maxFavorites?: IntFilter<"Client"> | number
    currentFavorites?: IntFilter<"Client"> | number
    dailyMessageLimit?: IntFilter<"Client"> | number
    messagesUsedToday?: IntFilter<"Client"> | number
    canViewPhoneNumbers?: BoolFilter<"Client"> | boolean
    canSendImages?: BoolFilter<"Client"> | boolean
    canSendVoiceMessages?: BoolFilter<"Client"> | boolean
    prioritySupport?: BoolFilter<"Client"> | boolean
    canSeeOnlineStatus?: BoolFilter<"Client"> | boolean
    totalMessagesUsed?: IntFilter<"Client"> | number
    lastMessageReset?: DateTimeFilter<"Client"> | Date | string
    canAccessPremiumProfiles?: BoolFilter<"Client"> | boolean
    lastDailyPointsClaim?: DateTimeNullableFilter<"Client"> | Date | string | null
    dailyLoginStreak?: IntFilter<"Client"> | number
    totalDailyPointsEarned?: IntFilter<"Client"> | number
    totalPointsEarned?: IntFilter<"Client"> | number
    totalPointsSpent?: IntFilter<"Client"> | number
    pointsLastUpdated?: DateTimeFilter<"Client"> | Date | string
    totalPointsPurchased?: IntFilter<"Client"> | number
    agePreferenceMin?: IntNullableFilter<"Client"> | number | null
    agePreferenceMax?: IntNullableFilter<"Client"> | number | null
    locationPreference?: StringNullableFilter<"Client"> | string | null
    clientReviews?: ClientReviewListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    payments?: PaymentListRelationFilter
    pointTransactions?: PointTransactionListRelationFilter
    pointsHistory?: PointsHistoryListRelationFilter
    pointsPurchases?: PointsPurchaseListRelationFilter
    premiumActivations?: PremiumActivationListRelationFilter
  }

  export type ClientOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    points?: SortOrder
    isPremium?: SortOrder
    premiumUntil?: SortOrderInput | SortOrder
    premiumTier?: SortOrder
    chatPriorityUntil?: SortOrderInput | SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    canViewPhoneNumbers?: SortOrder
    canSendImages?: SortOrder
    canSendVoiceMessages?: SortOrder
    prioritySupport?: SortOrder
    canSeeOnlineStatus?: SortOrder
    totalMessagesUsed?: SortOrder
    lastMessageReset?: SortOrder
    canAccessPremiumProfiles?: SortOrder
    lastDailyPointsClaim?: SortOrderInput | SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    pointsLastUpdated?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrderInput | SortOrder
    agePreferenceMax?: SortOrderInput | SortOrder
    locationPreference?: SortOrderInput | SortOrder
    clientReviews?: ClientReviewOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
    payments?: PaymentOrderByRelationAggregateInput
    pointTransactions?: PointTransactionOrderByRelationAggregateInput
    pointsHistory?: PointsHistoryOrderByRelationAggregateInput
    pointsPurchases?: PointsPurchaseOrderByRelationAggregateInput
    premiumActivations?: PremiumActivationOrderByRelationAggregateInput
  }

  export type ClientWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ClientWhereInput | ClientWhereInput[]
    OR?: ClientWhereInput[]
    NOT?: ClientWhereInput | ClientWhereInput[]
    points?: IntFilter<"Client"> | number
    isPremium?: BoolFilter<"Client"> | boolean
    premiumUntil?: DateTimeNullableFilter<"Client"> | Date | string | null
    premiumTier?: EnumPremiumTierFilter<"Client"> | $Enums.PremiumTier
    chatPriorityUntil?: DateTimeNullableFilter<"Client"> | Date | string | null
    maxFavorites?: IntFilter<"Client"> | number
    currentFavorites?: IntFilter<"Client"> | number
    dailyMessageLimit?: IntFilter<"Client"> | number
    messagesUsedToday?: IntFilter<"Client"> | number
    canViewPhoneNumbers?: BoolFilter<"Client"> | boolean
    canSendImages?: BoolFilter<"Client"> | boolean
    canSendVoiceMessages?: BoolFilter<"Client"> | boolean
    prioritySupport?: BoolFilter<"Client"> | boolean
    canSeeOnlineStatus?: BoolFilter<"Client"> | boolean
    totalMessagesUsed?: IntFilter<"Client"> | number
    lastMessageReset?: DateTimeFilter<"Client"> | Date | string
    canAccessPremiumProfiles?: BoolFilter<"Client"> | boolean
    lastDailyPointsClaim?: DateTimeNullableFilter<"Client"> | Date | string | null
    dailyLoginStreak?: IntFilter<"Client"> | number
    totalDailyPointsEarned?: IntFilter<"Client"> | number
    totalPointsEarned?: IntFilter<"Client"> | number
    totalPointsSpent?: IntFilter<"Client"> | number
    pointsLastUpdated?: DateTimeFilter<"Client"> | Date | string
    totalPointsPurchased?: IntFilter<"Client"> | number
    agePreferenceMin?: IntNullableFilter<"Client"> | number | null
    agePreferenceMax?: IntNullableFilter<"Client"> | number | null
    locationPreference?: StringNullableFilter<"Client"> | string | null
    clientReviews?: ClientReviewListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
    payments?: PaymentListRelationFilter
    pointTransactions?: PointTransactionListRelationFilter
    pointsHistory?: PointsHistoryListRelationFilter
    pointsPurchases?: PointsPurchaseListRelationFilter
    premiumActivations?: PremiumActivationListRelationFilter
  }, "id" | "userId">

  export type ClientOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    points?: SortOrder
    isPremium?: SortOrder
    premiumUntil?: SortOrderInput | SortOrder
    premiumTier?: SortOrder
    chatPriorityUntil?: SortOrderInput | SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    canViewPhoneNumbers?: SortOrder
    canSendImages?: SortOrder
    canSendVoiceMessages?: SortOrder
    prioritySupport?: SortOrder
    canSeeOnlineStatus?: SortOrder
    totalMessagesUsed?: SortOrder
    lastMessageReset?: SortOrder
    canAccessPremiumProfiles?: SortOrder
    lastDailyPointsClaim?: SortOrderInput | SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    pointsLastUpdated?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrderInput | SortOrder
    agePreferenceMax?: SortOrderInput | SortOrder
    locationPreference?: SortOrderInput | SortOrder
    _count?: ClientCountOrderByAggregateInput
    _avg?: ClientAvgOrderByAggregateInput
    _max?: ClientMaxOrderByAggregateInput
    _min?: ClientMinOrderByAggregateInput
    _sum?: ClientSumOrderByAggregateInput
  }

  export type ClientScalarWhereWithAggregatesInput = {
    AND?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    OR?: ClientScalarWhereWithAggregatesInput[]
    NOT?: ClientScalarWhereWithAggregatesInput | ClientScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Client"> | string
    userId?: StringWithAggregatesFilter<"Client"> | string
    points?: IntWithAggregatesFilter<"Client"> | number
    isPremium?: BoolWithAggregatesFilter<"Client"> | boolean
    premiumUntil?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    premiumTier?: EnumPremiumTierWithAggregatesFilter<"Client"> | $Enums.PremiumTier
    chatPriorityUntil?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    maxFavorites?: IntWithAggregatesFilter<"Client"> | number
    currentFavorites?: IntWithAggregatesFilter<"Client"> | number
    dailyMessageLimit?: IntWithAggregatesFilter<"Client"> | number
    messagesUsedToday?: IntWithAggregatesFilter<"Client"> | number
    canViewPhoneNumbers?: BoolWithAggregatesFilter<"Client"> | boolean
    canSendImages?: BoolWithAggregatesFilter<"Client"> | boolean
    canSendVoiceMessages?: BoolWithAggregatesFilter<"Client"> | boolean
    prioritySupport?: BoolWithAggregatesFilter<"Client"> | boolean
    canSeeOnlineStatus?: BoolWithAggregatesFilter<"Client"> | boolean
    totalMessagesUsed?: IntWithAggregatesFilter<"Client"> | number
    lastMessageReset?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    canAccessPremiumProfiles?: BoolWithAggregatesFilter<"Client"> | boolean
    lastDailyPointsClaim?: DateTimeNullableWithAggregatesFilter<"Client"> | Date | string | null
    dailyLoginStreak?: IntWithAggregatesFilter<"Client"> | number
    totalDailyPointsEarned?: IntWithAggregatesFilter<"Client"> | number
    totalPointsEarned?: IntWithAggregatesFilter<"Client"> | number
    totalPointsSpent?: IntWithAggregatesFilter<"Client"> | number
    pointsLastUpdated?: DateTimeWithAggregatesFilter<"Client"> | Date | string
    totalPointsPurchased?: IntWithAggregatesFilter<"Client"> | number
    agePreferenceMin?: IntNullableWithAggregatesFilter<"Client"> | number | null
    agePreferenceMax?: IntNullableWithAggregatesFilter<"Client"> | number | null
    locationPreference?: StringNullableWithAggregatesFilter<"Client"> | string | null
  }

  export type PointsPackageWhereInput = {
    AND?: PointsPackageWhereInput | PointsPackageWhereInput[]
    OR?: PointsPackageWhereInput[]
    NOT?: PointsPackageWhereInput | PointsPackageWhereInput[]
    id?: StringFilter<"PointsPackage"> | string
    name?: StringFilter<"PointsPackage"> | string
    points?: IntFilter<"PointsPackage"> | number
    price?: FloatFilter<"PointsPackage"> | number
    bonus?: IntFilter<"PointsPackage"> | number
    isActive?: BoolFilter<"PointsPackage"> | boolean
    isPopular?: BoolFilter<"PointsPackage"> | boolean
    description?: StringNullableFilter<"PointsPackage"> | string | null
    createdAt?: DateTimeFilter<"PointsPackage"> | Date | string
    updatedAt?: DateTimeFilter<"PointsPackage"> | Date | string
    purchases?: PointsPurchaseListRelationFilter
  }

  export type PointsPackageOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
    isActive?: SortOrder
    isPopular?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    purchases?: PointsPurchaseOrderByRelationAggregateInput
  }

  export type PointsPackageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: PointsPackageWhereInput | PointsPackageWhereInput[]
    OR?: PointsPackageWhereInput[]
    NOT?: PointsPackageWhereInput | PointsPackageWhereInput[]
    points?: IntFilter<"PointsPackage"> | number
    price?: FloatFilter<"PointsPackage"> | number
    bonus?: IntFilter<"PointsPackage"> | number
    isActive?: BoolFilter<"PointsPackage"> | boolean
    isPopular?: BoolFilter<"PointsPackage"> | boolean
    description?: StringNullableFilter<"PointsPackage"> | string | null
    createdAt?: DateTimeFilter<"PointsPackage"> | Date | string
    updatedAt?: DateTimeFilter<"PointsPackage"> | Date | string
    purchases?: PointsPurchaseListRelationFilter
  }, "id" | "name">

  export type PointsPackageOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
    isActive?: SortOrder
    isPopular?: SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PointsPackageCountOrderByAggregateInput
    _avg?: PointsPackageAvgOrderByAggregateInput
    _max?: PointsPackageMaxOrderByAggregateInput
    _min?: PointsPackageMinOrderByAggregateInput
    _sum?: PointsPackageSumOrderByAggregateInput
  }

  export type PointsPackageScalarWhereWithAggregatesInput = {
    AND?: PointsPackageScalarWhereWithAggregatesInput | PointsPackageScalarWhereWithAggregatesInput[]
    OR?: PointsPackageScalarWhereWithAggregatesInput[]
    NOT?: PointsPackageScalarWhereWithAggregatesInput | PointsPackageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PointsPackage"> | string
    name?: StringWithAggregatesFilter<"PointsPackage"> | string
    points?: IntWithAggregatesFilter<"PointsPackage"> | number
    price?: FloatWithAggregatesFilter<"PointsPackage"> | number
    bonus?: IntWithAggregatesFilter<"PointsPackage"> | number
    isActive?: BoolWithAggregatesFilter<"PointsPackage"> | boolean
    isPopular?: BoolWithAggregatesFilter<"PointsPackage"> | boolean
    description?: StringNullableWithAggregatesFilter<"PointsPackage"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PointsPackage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PointsPackage"> | Date | string
  }

  export type PointsPurchaseWhereInput = {
    AND?: PointsPurchaseWhereInput | PointsPurchaseWhereInput[]
    OR?: PointsPurchaseWhereInput[]
    NOT?: PointsPurchaseWhereInput | PointsPurchaseWhereInput[]
    id?: StringFilter<"PointsPurchase"> | string
    clientId?: StringFilter<"PointsPurchase"> | string
    packageId?: StringFilter<"PointsPurchase"> | string
    pointsPurchased?: IntFilter<"PointsPurchase"> | number
    bonusPoints?: IntFilter<"PointsPurchase"> | number
    totalPoints?: IntFilter<"PointsPurchase"> | number
    amountPaid?: FloatFilter<"PointsPurchase"> | number
    status?: EnumPaymentStatusFilter<"PointsPurchase"> | $Enums.PaymentStatus
    stripePaymentId?: StringNullableFilter<"PointsPurchase"> | string | null
    createdAt?: DateTimeFilter<"PointsPurchase"> | Date | string
    completedAt?: DateTimeNullableFilter<"PointsPurchase"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    package?: XOR<PointsPackageRelationFilter, PointsPackageWhereInput>
  }

  export type PointsPurchaseOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    packageId?: SortOrder
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
    status?: SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    package?: PointsPackageOrderByWithRelationInput
  }

  export type PointsPurchaseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PointsPurchaseWhereInput | PointsPurchaseWhereInput[]
    OR?: PointsPurchaseWhereInput[]
    NOT?: PointsPurchaseWhereInput | PointsPurchaseWhereInput[]
    clientId?: StringFilter<"PointsPurchase"> | string
    packageId?: StringFilter<"PointsPurchase"> | string
    pointsPurchased?: IntFilter<"PointsPurchase"> | number
    bonusPoints?: IntFilter<"PointsPurchase"> | number
    totalPoints?: IntFilter<"PointsPurchase"> | number
    amountPaid?: FloatFilter<"PointsPurchase"> | number
    status?: EnumPaymentStatusFilter<"PointsPurchase"> | $Enums.PaymentStatus
    stripePaymentId?: StringNullableFilter<"PointsPurchase"> | string | null
    createdAt?: DateTimeFilter<"PointsPurchase"> | Date | string
    completedAt?: DateTimeNullableFilter<"PointsPurchase"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    package?: XOR<PointsPackageRelationFilter, PointsPackageWhereInput>
  }, "id">

  export type PointsPurchaseOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    packageId?: SortOrder
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
    status?: SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    _count?: PointsPurchaseCountOrderByAggregateInput
    _avg?: PointsPurchaseAvgOrderByAggregateInput
    _max?: PointsPurchaseMaxOrderByAggregateInput
    _min?: PointsPurchaseMinOrderByAggregateInput
    _sum?: PointsPurchaseSumOrderByAggregateInput
  }

  export type PointsPurchaseScalarWhereWithAggregatesInput = {
    AND?: PointsPurchaseScalarWhereWithAggregatesInput | PointsPurchaseScalarWhereWithAggregatesInput[]
    OR?: PointsPurchaseScalarWhereWithAggregatesInput[]
    NOT?: PointsPurchaseScalarWhereWithAggregatesInput | PointsPurchaseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PointsPurchase"> | string
    clientId?: StringWithAggregatesFilter<"PointsPurchase"> | string
    packageId?: StringWithAggregatesFilter<"PointsPurchase"> | string
    pointsPurchased?: IntWithAggregatesFilter<"PointsPurchase"> | number
    bonusPoints?: IntWithAggregatesFilter<"PointsPurchase"> | number
    totalPoints?: IntWithAggregatesFilter<"PointsPurchase"> | number
    amountPaid?: FloatWithAggregatesFilter<"PointsPurchase"> | number
    status?: EnumPaymentStatusWithAggregatesFilter<"PointsPurchase"> | $Enums.PaymentStatus
    stripePaymentId?: StringNullableWithAggregatesFilter<"PointsPurchase"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PointsPurchase"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"PointsPurchase"> | Date | string | null
  }

  export type PointTransactionWhereInput = {
    AND?: PointTransactionWhereInput | PointTransactionWhereInput[]
    OR?: PointTransactionWhereInput[]
    NOT?: PointTransactionWhereInput | PointTransactionWhereInput[]
    id?: StringFilter<"PointTransaction"> | string
    clientId?: StringFilter<"PointTransaction"> | string
    amount?: IntFilter<"PointTransaction"> | number
    type?: EnumPointTransactionTypeFilter<"PointTransaction"> | $Enums.PointTransactionType
    description?: StringNullableFilter<"PointTransaction"> | string | null
    cost?: FloatNullableFilter<"PointTransaction"> | number | null
    postId?: StringNullableFilter<"PointTransaction"> | string | null
    messageId?: StringNullableFilter<"PointTransaction"> | string | null
    paymentId?: StringNullableFilter<"PointTransaction"> | string | null
    purchaseId?: StringNullableFilter<"PointTransaction"> | string | null
    actionId?: StringNullableFilter<"PointTransaction"> | string | null
    balanceBefore?: IntFilter<"PointTransaction"> | number
    balanceAfter?: IntFilter<"PointTransaction"> | number
    metadata?: JsonNullableFilter<"PointTransaction">
    source?: StringNullableFilter<"PointTransaction"> | string | null
    createdAt?: DateTimeFilter<"PointTransaction"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type PointTransactionOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    messageId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    purchaseId?: SortOrderInput | SortOrder
    actionId?: SortOrderInput | SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type PointTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PointTransactionWhereInput | PointTransactionWhereInput[]
    OR?: PointTransactionWhereInput[]
    NOT?: PointTransactionWhereInput | PointTransactionWhereInput[]
    clientId?: StringFilter<"PointTransaction"> | string
    amount?: IntFilter<"PointTransaction"> | number
    type?: EnumPointTransactionTypeFilter<"PointTransaction"> | $Enums.PointTransactionType
    description?: StringNullableFilter<"PointTransaction"> | string | null
    cost?: FloatNullableFilter<"PointTransaction"> | number | null
    postId?: StringNullableFilter<"PointTransaction"> | string | null
    messageId?: StringNullableFilter<"PointTransaction"> | string | null
    paymentId?: StringNullableFilter<"PointTransaction"> | string | null
    purchaseId?: StringNullableFilter<"PointTransaction"> | string | null
    actionId?: StringNullableFilter<"PointTransaction"> | string | null
    balanceBefore?: IntFilter<"PointTransaction"> | number
    balanceAfter?: IntFilter<"PointTransaction"> | number
    metadata?: JsonNullableFilter<"PointTransaction">
    source?: StringNullableFilter<"PointTransaction"> | string | null
    createdAt?: DateTimeFilter<"PointTransaction"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type PointTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    cost?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    messageId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    purchaseId?: SortOrderInput | SortOrder
    actionId?: SortOrderInput | SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PointTransactionCountOrderByAggregateInput
    _avg?: PointTransactionAvgOrderByAggregateInput
    _max?: PointTransactionMaxOrderByAggregateInput
    _min?: PointTransactionMinOrderByAggregateInput
    _sum?: PointTransactionSumOrderByAggregateInput
  }

  export type PointTransactionScalarWhereWithAggregatesInput = {
    AND?: PointTransactionScalarWhereWithAggregatesInput | PointTransactionScalarWhereWithAggregatesInput[]
    OR?: PointTransactionScalarWhereWithAggregatesInput[]
    NOT?: PointTransactionScalarWhereWithAggregatesInput | PointTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PointTransaction"> | string
    clientId?: StringWithAggregatesFilter<"PointTransaction"> | string
    amount?: IntWithAggregatesFilter<"PointTransaction"> | number
    type?: EnumPointTransactionTypeWithAggregatesFilter<"PointTransaction"> | $Enums.PointTransactionType
    description?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    cost?: FloatNullableWithAggregatesFilter<"PointTransaction"> | number | null
    postId?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    messageId?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    paymentId?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    purchaseId?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    actionId?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    balanceBefore?: IntWithAggregatesFilter<"PointTransaction"> | number
    balanceAfter?: IntWithAggregatesFilter<"PointTransaction"> | number
    metadata?: JsonNullableWithAggregatesFilter<"PointTransaction">
    source?: StringNullableWithAggregatesFilter<"PointTransaction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PointTransaction"> | Date | string
  }

  export type PointsHistoryWhereInput = {
    AND?: PointsHistoryWhereInput | PointsHistoryWhereInput[]
    OR?: PointsHistoryWhereInput[]
    NOT?: PointsHistoryWhereInput | PointsHistoryWhereInput[]
    id?: StringFilter<"PointsHistory"> | string
    clientId?: StringFilter<"PointsHistory"> | string
    type?: EnumPointTransactionTypeFilter<"PointsHistory"> | $Enums.PointTransactionType
    amount?: IntFilter<"PointsHistory"> | number
    description?: StringFilter<"PointsHistory"> | string
    balanceBefore?: IntFilter<"PointsHistory"> | number
    balanceAfter?: IntFilter<"PointsHistory"> | number
    metadata?: JsonNullableFilter<"PointsHistory">
    source?: StringNullableFilter<"PointsHistory"> | string | null
    purchaseId?: StringNullableFilter<"PointsHistory"> | string | null
    actionId?: StringNullableFilter<"PointsHistory"> | string | null
    createdAt?: DateTimeFilter<"PointsHistory"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type PointsHistoryOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    purchaseId?: SortOrderInput | SortOrder
    actionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type PointsHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PointsHistoryWhereInput | PointsHistoryWhereInput[]
    OR?: PointsHistoryWhereInput[]
    NOT?: PointsHistoryWhereInput | PointsHistoryWhereInput[]
    clientId?: StringFilter<"PointsHistory"> | string
    type?: EnumPointTransactionTypeFilter<"PointsHistory"> | $Enums.PointTransactionType
    amount?: IntFilter<"PointsHistory"> | number
    description?: StringFilter<"PointsHistory"> | string
    balanceBefore?: IntFilter<"PointsHistory"> | number
    balanceAfter?: IntFilter<"PointsHistory"> | number
    metadata?: JsonNullableFilter<"PointsHistory">
    source?: StringNullableFilter<"PointsHistory"> | string | null
    purchaseId?: StringNullableFilter<"PointsHistory"> | string | null
    actionId?: StringNullableFilter<"PointsHistory"> | string | null
    createdAt?: DateTimeFilter<"PointsHistory"> | Date | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type PointsHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    purchaseId?: SortOrderInput | SortOrder
    actionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PointsHistoryCountOrderByAggregateInput
    _avg?: PointsHistoryAvgOrderByAggregateInput
    _max?: PointsHistoryMaxOrderByAggregateInput
    _min?: PointsHistoryMinOrderByAggregateInput
    _sum?: PointsHistorySumOrderByAggregateInput
  }

  export type PointsHistoryScalarWhereWithAggregatesInput = {
    AND?: PointsHistoryScalarWhereWithAggregatesInput | PointsHistoryScalarWhereWithAggregatesInput[]
    OR?: PointsHistoryScalarWhereWithAggregatesInput[]
    NOT?: PointsHistoryScalarWhereWithAggregatesInput | PointsHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PointsHistory"> | string
    clientId?: StringWithAggregatesFilter<"PointsHistory"> | string
    type?: EnumPointTransactionTypeWithAggregatesFilter<"PointsHistory"> | $Enums.PointTransactionType
    amount?: IntWithAggregatesFilter<"PointsHistory"> | number
    description?: StringWithAggregatesFilter<"PointsHistory"> | string
    balanceBefore?: IntWithAggregatesFilter<"PointsHistory"> | number
    balanceAfter?: IntWithAggregatesFilter<"PointsHistory"> | number
    metadata?: JsonNullableWithAggregatesFilter<"PointsHistory">
    source?: StringNullableWithAggregatesFilter<"PointsHistory"> | string | null
    purchaseId?: StringNullableWithAggregatesFilter<"PointsHistory"> | string | null
    actionId?: StringNullableWithAggregatesFilter<"PointsHistory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PointsHistory"> | Date | string
  }

  export type PremiumActivationWhereInput = {
    AND?: PremiumActivationWhereInput | PremiumActivationWhereInput[]
    OR?: PremiumActivationWhereInput[]
    NOT?: PremiumActivationWhereInput | PremiumActivationWhereInput[]
    id?: StringFilter<"PremiumActivation"> | string
    clientId?: StringFilter<"PremiumActivation"> | string
    tier?: EnumPremiumTierFilter<"PremiumActivation"> | $Enums.PremiumTier
    duration?: IntFilter<"PremiumActivation"> | number
    pointsCost?: IntFilter<"PremiumActivation"> | number
    activatedAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    expiresAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    isActive?: BoolFilter<"PremiumActivation"> | boolean
    activatedBy?: StringFilter<"PremiumActivation"> | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }

  export type PremiumActivationOrderByWithRelationInput = {
    id?: SortOrder
    clientId?: SortOrder
    tier?: SortOrder
    duration?: SortOrder
    pointsCost?: SortOrder
    activatedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
    activatedBy?: SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type PremiumActivationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PremiumActivationWhereInput | PremiumActivationWhereInput[]
    OR?: PremiumActivationWhereInput[]
    NOT?: PremiumActivationWhereInput | PremiumActivationWhereInput[]
    clientId?: StringFilter<"PremiumActivation"> | string
    tier?: EnumPremiumTierFilter<"PremiumActivation"> | $Enums.PremiumTier
    duration?: IntFilter<"PremiumActivation"> | number
    pointsCost?: IntFilter<"PremiumActivation"> | number
    activatedAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    expiresAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    isActive?: BoolFilter<"PremiumActivation"> | boolean
    activatedBy?: StringFilter<"PremiumActivation"> | string
    client?: XOR<ClientRelationFilter, ClientWhereInput>
  }, "id">

  export type PremiumActivationOrderByWithAggregationInput = {
    id?: SortOrder
    clientId?: SortOrder
    tier?: SortOrder
    duration?: SortOrder
    pointsCost?: SortOrder
    activatedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
    activatedBy?: SortOrder
    _count?: PremiumActivationCountOrderByAggregateInput
    _avg?: PremiumActivationAvgOrderByAggregateInput
    _max?: PremiumActivationMaxOrderByAggregateInput
    _min?: PremiumActivationMinOrderByAggregateInput
    _sum?: PremiumActivationSumOrderByAggregateInput
  }

  export type PremiumActivationScalarWhereWithAggregatesInput = {
    AND?: PremiumActivationScalarWhereWithAggregatesInput | PremiumActivationScalarWhereWithAggregatesInput[]
    OR?: PremiumActivationScalarWhereWithAggregatesInput[]
    NOT?: PremiumActivationScalarWhereWithAggregatesInput | PremiumActivationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PremiumActivation"> | string
    clientId?: StringWithAggregatesFilter<"PremiumActivation"> | string
    tier?: EnumPremiumTierWithAggregatesFilter<"PremiumActivation"> | $Enums.PremiumTier
    duration?: IntWithAggregatesFilter<"PremiumActivation"> | number
    pointsCost?: IntWithAggregatesFilter<"PremiumActivation"> | number
    activatedAt?: DateTimeWithAggregatesFilter<"PremiumActivation"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"PremiumActivation"> | Date | string
    isActive?: BoolWithAggregatesFilter<"PremiumActivation"> | boolean
    activatedBy?: StringWithAggregatesFilter<"PremiumActivation"> | string
  }

  export type ClientReviewWhereInput = {
    AND?: ClientReviewWhereInput | ClientReviewWhereInput[]
    OR?: ClientReviewWhereInput[]
    NOT?: ClientReviewWhereInput | ClientReviewWhereInput[]
    id?: StringFilter<"ClientReview"> | string
    rating?: IntFilter<"ClientReview"> | number
    comment?: StringNullableFilter<"ClientReview"> | string | null
    communication?: IntNullableFilter<"ClientReview"> | number | null
    punctuality?: IntNullableFilter<"ClientReview"> | number | null
    appearance?: IntNullableFilter<"ClientReview"> | number | null
    overall?: IntNullableFilter<"ClientReview"> | number | null
    service?: IntNullableFilter<"ClientReview"> | number | null
    value?: IntNullableFilter<"ClientReview"> | number | null
    isAnonymous?: BoolFilter<"ClientReview"> | boolean
    isVerified?: BoolFilter<"ClientReview"> | boolean
    clientId?: StringFilter<"ClientReview"> | string
    escortId?: StringFilter<"ClientReview"> | string
    createdAt?: DateTimeFilter<"ClientReview"> | Date | string
    updatedAt?: DateTimeFilter<"ClientReview"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ClientReview"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }

  export type ClientReviewOrderByWithRelationInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    communication?: SortOrderInput | SortOrder
    punctuality?: SortOrderInput | SortOrder
    appearance?: SortOrderInput | SortOrder
    overall?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
    escort?: EscortOrderByWithRelationInput
  }

  export type ClientReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    clientId_escortId?: ClientReviewClientIdEscortIdCompoundUniqueInput
    AND?: ClientReviewWhereInput | ClientReviewWhereInput[]
    OR?: ClientReviewWhereInput[]
    NOT?: ClientReviewWhereInput | ClientReviewWhereInput[]
    rating?: IntFilter<"ClientReview"> | number
    comment?: StringNullableFilter<"ClientReview"> | string | null
    communication?: IntNullableFilter<"ClientReview"> | number | null
    punctuality?: IntNullableFilter<"ClientReview"> | number | null
    appearance?: IntNullableFilter<"ClientReview"> | number | null
    overall?: IntNullableFilter<"ClientReview"> | number | null
    service?: IntNullableFilter<"ClientReview"> | number | null
    value?: IntNullableFilter<"ClientReview"> | number | null
    isAnonymous?: BoolFilter<"ClientReview"> | boolean
    isVerified?: BoolFilter<"ClientReview"> | boolean
    clientId?: StringFilter<"ClientReview"> | string
    escortId?: StringFilter<"ClientReview"> | string
    createdAt?: DateTimeFilter<"ClientReview"> | Date | string
    updatedAt?: DateTimeFilter<"ClientReview"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ClientReview"> | Date | string | null
    client?: XOR<ClientRelationFilter, ClientWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }, "id" | "clientId_escortId">

  export type ClientReviewOrderByWithAggregationInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    communication?: SortOrderInput | SortOrder
    punctuality?: SortOrderInput | SortOrder
    appearance?: SortOrderInput | SortOrder
    overall?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ClientReviewCountOrderByAggregateInput
    _avg?: ClientReviewAvgOrderByAggregateInput
    _max?: ClientReviewMaxOrderByAggregateInput
    _min?: ClientReviewMinOrderByAggregateInput
    _sum?: ClientReviewSumOrderByAggregateInput
  }

  export type ClientReviewScalarWhereWithAggregatesInput = {
    AND?: ClientReviewScalarWhereWithAggregatesInput | ClientReviewScalarWhereWithAggregatesInput[]
    OR?: ClientReviewScalarWhereWithAggregatesInput[]
    NOT?: ClientReviewScalarWhereWithAggregatesInput | ClientReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClientReview"> | string
    rating?: IntWithAggregatesFilter<"ClientReview"> | number
    comment?: StringNullableWithAggregatesFilter<"ClientReview"> | string | null
    communication?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    punctuality?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    appearance?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    overall?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    service?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    value?: IntNullableWithAggregatesFilter<"ClientReview"> | number | null
    isAnonymous?: BoolWithAggregatesFilter<"ClientReview"> | boolean
    isVerified?: BoolWithAggregatesFilter<"ClientReview"> | boolean
    clientId?: StringWithAggregatesFilter<"ClientReview"> | string
    escortId?: StringWithAggregatesFilter<"ClientReview"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ClientReview"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ClientReview"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ClientReview"> | Date | string | null
  }

  export type BanWhereInput = {
    AND?: BanWhereInput | BanWhereInput[]
    OR?: BanWhereInput[]
    NOT?: BanWhereInput | BanWhereInput[]
    id?: StringFilter<"Ban"> | string
    userId?: StringFilter<"Ban"> | string
    reason?: StringFilter<"Ban"> | string
    bannedBy?: StringFilter<"Ban"> | string
    adminId?: StringNullableFilter<"Ban"> | string | null
    isActive?: BoolFilter<"Ban"> | boolean
    expiresAt?: DateTimeNullableFilter<"Ban"> | Date | string | null
    severity?: EnumBanSeverityFilter<"Ban"> | $Enums.BanSeverity
    evidence?: JsonNullableFilter<"Ban">
    createdAt?: DateTimeFilter<"Ban"> | Date | string
    updatedAt?: DateTimeFilter<"Ban"> | Date | string
    appeals?: BanAppealListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type BanOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    reason?: SortOrder
    bannedBy?: SortOrder
    adminId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    severity?: SortOrder
    evidence?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    appeals?: BanAppealOrderByRelationAggregateInput
    user?: UserOrderByWithRelationInput
  }

  export type BanWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BanWhereInput | BanWhereInput[]
    OR?: BanWhereInput[]
    NOT?: BanWhereInput | BanWhereInput[]
    userId?: StringFilter<"Ban"> | string
    reason?: StringFilter<"Ban"> | string
    bannedBy?: StringFilter<"Ban"> | string
    adminId?: StringNullableFilter<"Ban"> | string | null
    isActive?: BoolFilter<"Ban"> | boolean
    expiresAt?: DateTimeNullableFilter<"Ban"> | Date | string | null
    severity?: EnumBanSeverityFilter<"Ban"> | $Enums.BanSeverity
    evidence?: JsonNullableFilter<"Ban">
    createdAt?: DateTimeFilter<"Ban"> | Date | string
    updatedAt?: DateTimeFilter<"Ban"> | Date | string
    appeals?: BanAppealListRelationFilter
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type BanOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    reason?: SortOrder
    bannedBy?: SortOrder
    adminId?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    severity?: SortOrder
    evidence?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BanCountOrderByAggregateInput
    _max?: BanMaxOrderByAggregateInput
    _min?: BanMinOrderByAggregateInput
  }

  export type BanScalarWhereWithAggregatesInput = {
    AND?: BanScalarWhereWithAggregatesInput | BanScalarWhereWithAggregatesInput[]
    OR?: BanScalarWhereWithAggregatesInput[]
    NOT?: BanScalarWhereWithAggregatesInput | BanScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Ban"> | string
    userId?: StringWithAggregatesFilter<"Ban"> | string
    reason?: StringWithAggregatesFilter<"Ban"> | string
    bannedBy?: StringWithAggregatesFilter<"Ban"> | string
    adminId?: StringNullableWithAggregatesFilter<"Ban"> | string | null
    isActive?: BoolWithAggregatesFilter<"Ban"> | boolean
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Ban"> | Date | string | null
    severity?: EnumBanSeverityWithAggregatesFilter<"Ban"> | $Enums.BanSeverity
    evidence?: JsonNullableWithAggregatesFilter<"Ban">
    createdAt?: DateTimeWithAggregatesFilter<"Ban"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Ban"> | Date | string
  }

  export type BanAppealWhereInput = {
    AND?: BanAppealWhereInput | BanAppealWhereInput[]
    OR?: BanAppealWhereInput[]
    NOT?: BanAppealWhereInput | BanAppealWhereInput[]
    id?: StringFilter<"BanAppeal"> | string
    banId?: StringFilter<"BanAppeal"> | string
    reason?: StringFilter<"BanAppeal"> | string
    evidence?: JsonNullableFilter<"BanAppeal">
    status?: EnumAppealStatusFilter<"BanAppeal"> | $Enums.AppealStatus
    reviewedBy?: StringNullableFilter<"BanAppeal"> | string | null
    reviewNotes?: StringNullableFilter<"BanAppeal"> | string | null
    createdAt?: DateTimeFilter<"BanAppeal"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"BanAppeal"> | Date | string | null
    ban?: XOR<BanRelationFilter, BanWhereInput>
  }

  export type BanAppealOrderByWithRelationInput = {
    id?: SortOrder
    banId?: SortOrder
    reason?: SortOrder
    evidence?: SortOrderInput | SortOrder
    status?: SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    ban?: BanOrderByWithRelationInput
  }

  export type BanAppealWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BanAppealWhereInput | BanAppealWhereInput[]
    OR?: BanAppealWhereInput[]
    NOT?: BanAppealWhereInput | BanAppealWhereInput[]
    banId?: StringFilter<"BanAppeal"> | string
    reason?: StringFilter<"BanAppeal"> | string
    evidence?: JsonNullableFilter<"BanAppeal">
    status?: EnumAppealStatusFilter<"BanAppeal"> | $Enums.AppealStatus
    reviewedBy?: StringNullableFilter<"BanAppeal"> | string | null
    reviewNotes?: StringNullableFilter<"BanAppeal"> | string | null
    createdAt?: DateTimeFilter<"BanAppeal"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"BanAppeal"> | Date | string | null
    ban?: XOR<BanRelationFilter, BanWhereInput>
  }, "id">

  export type BanAppealOrderByWithAggregationInput = {
    id?: SortOrder
    banId?: SortOrder
    reason?: SortOrder
    evidence?: SortOrderInput | SortOrder
    status?: SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    _count?: BanAppealCountOrderByAggregateInput
    _max?: BanAppealMaxOrderByAggregateInput
    _min?: BanAppealMinOrderByAggregateInput
  }

  export type BanAppealScalarWhereWithAggregatesInput = {
    AND?: BanAppealScalarWhereWithAggregatesInput | BanAppealScalarWhereWithAggregatesInput[]
    OR?: BanAppealScalarWhereWithAggregatesInput[]
    NOT?: BanAppealScalarWhereWithAggregatesInput | BanAppealScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BanAppeal"> | string
    banId?: StringWithAggregatesFilter<"BanAppeal"> | string
    reason?: StringWithAggregatesFilter<"BanAppeal"> | string
    evidence?: JsonNullableWithAggregatesFilter<"BanAppeal">
    status?: EnumAppealStatusWithAggregatesFilter<"BanAppeal"> | $Enums.AppealStatus
    reviewedBy?: StringNullableWithAggregatesFilter<"BanAppeal"> | string | null
    reviewNotes?: StringNullableWithAggregatesFilter<"BanAppeal"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BanAppeal"> | Date | string
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"BanAppeal"> | Date | string | null
  }

  export type UserInteractionWhereInput = {
    AND?: UserInteractionWhereInput | UserInteractionWhereInput[]
    OR?: UserInteractionWhereInput[]
    NOT?: UserInteractionWhereInput | UserInteractionWhereInput[]
    id?: StringFilter<"UserInteraction"> | string
    userId?: StringFilter<"UserInteraction"> | string
    targetUserId?: StringNullableFilter<"UserInteraction"> | string | null
    postId?: StringNullableFilter<"UserInteraction"> | string | null
    type?: EnumInteractionTypeFilter<"UserInteraction"> | $Enums.InteractionType
    weight?: FloatFilter<"UserInteraction"> | number
    duration?: IntNullableFilter<"UserInteraction"> | number | null
    whatsappOpened?: BoolFilter<"UserInteraction"> | boolean
    deviceType?: StringNullableFilter<"UserInteraction"> | string | null
    source?: StringNullableFilter<"UserInteraction"> | string | null
    location?: StringNullableFilter<"UserInteraction"> | string | null
    sessionId?: StringNullableFilter<"UserInteraction"> | string | null
    userAgent?: StringNullableFilter<"UserInteraction"> | string | null
    metadata?: StringNullableFilter<"UserInteraction"> | string | null
    createdAt?: DateTimeFilter<"UserInteraction"> | Date | string
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    targetUser?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserInteractionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    targetUserId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    type?: SortOrder
    weight?: SortOrder
    duration?: SortOrderInput | SortOrder
    whatsappOpened?: SortOrder
    deviceType?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    targetUser?: UserOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type UserInteractionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserInteractionWhereInput | UserInteractionWhereInput[]
    OR?: UserInteractionWhereInput[]
    NOT?: UserInteractionWhereInput | UserInteractionWhereInput[]
    userId?: StringFilter<"UserInteraction"> | string
    targetUserId?: StringNullableFilter<"UserInteraction"> | string | null
    postId?: StringNullableFilter<"UserInteraction"> | string | null
    type?: EnumInteractionTypeFilter<"UserInteraction"> | $Enums.InteractionType
    weight?: FloatFilter<"UserInteraction"> | number
    duration?: IntNullableFilter<"UserInteraction"> | number | null
    whatsappOpened?: BoolFilter<"UserInteraction"> | boolean
    deviceType?: StringNullableFilter<"UserInteraction"> | string | null
    source?: StringNullableFilter<"UserInteraction"> | string | null
    location?: StringNullableFilter<"UserInteraction"> | string | null
    sessionId?: StringNullableFilter<"UserInteraction"> | string | null
    userAgent?: StringNullableFilter<"UserInteraction"> | string | null
    metadata?: StringNullableFilter<"UserInteraction"> | string | null
    createdAt?: DateTimeFilter<"UserInteraction"> | Date | string
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    targetUser?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type UserInteractionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    targetUserId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    type?: SortOrder
    weight?: SortOrder
    duration?: SortOrderInput | SortOrder
    whatsappOpened?: SortOrder
    deviceType?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: UserInteractionCountOrderByAggregateInput
    _avg?: UserInteractionAvgOrderByAggregateInput
    _max?: UserInteractionMaxOrderByAggregateInput
    _min?: UserInteractionMinOrderByAggregateInput
    _sum?: UserInteractionSumOrderByAggregateInput
  }

  export type UserInteractionScalarWhereWithAggregatesInput = {
    AND?: UserInteractionScalarWhereWithAggregatesInput | UserInteractionScalarWhereWithAggregatesInput[]
    OR?: UserInteractionScalarWhereWithAggregatesInput[]
    NOT?: UserInteractionScalarWhereWithAggregatesInput | UserInteractionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserInteraction"> | string
    userId?: StringWithAggregatesFilter<"UserInteraction"> | string
    targetUserId?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    postId?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    type?: EnumInteractionTypeWithAggregatesFilter<"UserInteraction"> | $Enums.InteractionType
    weight?: FloatWithAggregatesFilter<"UserInteraction"> | number
    duration?: IntNullableWithAggregatesFilter<"UserInteraction"> | number | null
    whatsappOpened?: BoolWithAggregatesFilter<"UserInteraction"> | boolean
    deviceType?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    source?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    location?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    sessionId?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    metadata?: StringNullableWithAggregatesFilter<"UserInteraction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserInteraction"> | Date | string
  }

  export type ChatRateLimitWhereInput = {
    AND?: ChatRateLimitWhereInput | ChatRateLimitWhereInput[]
    OR?: ChatRateLimitWhereInput[]
    NOT?: ChatRateLimitWhereInput | ChatRateLimitWhereInput[]
    id?: StringFilter<"ChatRateLimit"> | string
    userId?: StringFilter<"ChatRateLimit"> | string
    count?: IntFilter<"ChatRateLimit"> | number
    windowStart?: DateTimeFilter<"ChatRateLimit"> | Date | string
    limitType?: EnumRateLimitTypeFilter<"ChatRateLimit"> | $Enums.RateLimitType
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type ChatRateLimitOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    count?: SortOrder
    windowStart?: SortOrder
    limitType?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type ChatRateLimitWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_limitType?: ChatRateLimitUserIdLimitTypeCompoundUniqueInput
    AND?: ChatRateLimitWhereInput | ChatRateLimitWhereInput[]
    OR?: ChatRateLimitWhereInput[]
    NOT?: ChatRateLimitWhereInput | ChatRateLimitWhereInput[]
    userId?: StringFilter<"ChatRateLimit"> | string
    count?: IntFilter<"ChatRateLimit"> | number
    windowStart?: DateTimeFilter<"ChatRateLimit"> | Date | string
    limitType?: EnumRateLimitTypeFilter<"ChatRateLimit"> | $Enums.RateLimitType
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId_limitType">

  export type ChatRateLimitOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    count?: SortOrder
    windowStart?: SortOrder
    limitType?: SortOrder
    _count?: ChatRateLimitCountOrderByAggregateInput
    _avg?: ChatRateLimitAvgOrderByAggregateInput
    _max?: ChatRateLimitMaxOrderByAggregateInput
    _min?: ChatRateLimitMinOrderByAggregateInput
    _sum?: ChatRateLimitSumOrderByAggregateInput
  }

  export type ChatRateLimitScalarWhereWithAggregatesInput = {
    AND?: ChatRateLimitScalarWhereWithAggregatesInput | ChatRateLimitScalarWhereWithAggregatesInput[]
    OR?: ChatRateLimitScalarWhereWithAggregatesInput[]
    NOT?: ChatRateLimitScalarWhereWithAggregatesInput | ChatRateLimitScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ChatRateLimit"> | string
    userId?: StringWithAggregatesFilter<"ChatRateLimit"> | string
    count?: IntWithAggregatesFilter<"ChatRateLimit"> | number
    windowStart?: DateTimeWithAggregatesFilter<"ChatRateLimit"> | Date | string
    limitType?: EnumRateLimitTypeWithAggregatesFilter<"ChatRateLimit"> | $Enums.RateLimitType
  }

  export type AgencyMembershipWhereInput = {
    AND?: AgencyMembershipWhereInput | AgencyMembershipWhereInput[]
    OR?: AgencyMembershipWhereInput[]
    NOT?: AgencyMembershipWhereInput | AgencyMembershipWhereInput[]
    id?: StringFilter<"AgencyMembership"> | string
    escortId?: StringFilter<"AgencyMembership"> | string
    agencyId?: StringFilter<"AgencyMembership"> | string
    status?: EnumMembershipStatusFilter<"AgencyMembership"> | $Enums.MembershipStatus
    role?: EnumAgencyRoleFilter<"AgencyMembership"> | $Enums.AgencyRole
    commissionRate?: FloatNullableFilter<"AgencyMembership"> | number | null
    canPostForAgency?: BoolFilter<"AgencyMembership"> | boolean
    canManageEscorts?: BoolFilter<"AgencyMembership"> | boolean
    canAccessFinances?: BoolFilter<"AgencyMembership"> | boolean
    approvedBy?: StringNullableFilter<"AgencyMembership"> | string | null
    approvedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }

  export type AgencyMembershipOrderByWithRelationInput = {
    id?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    status?: SortOrder
    role?: SortOrder
    commissionRate?: SortOrderInput | SortOrder
    canPostForAgency?: SortOrder
    canManageEscorts?: SortOrder
    canAccessFinances?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    agency?: AgencyOrderByWithRelationInput
    escort?: EscortOrderByWithRelationInput
  }

  export type AgencyMembershipWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    escortId_agencyId?: AgencyMembershipEscortIdAgencyIdCompoundUniqueInput
    AND?: AgencyMembershipWhereInput | AgencyMembershipWhereInput[]
    OR?: AgencyMembershipWhereInput[]
    NOT?: AgencyMembershipWhereInput | AgencyMembershipWhereInput[]
    escortId?: StringFilter<"AgencyMembership"> | string
    agencyId?: StringFilter<"AgencyMembership"> | string
    status?: EnumMembershipStatusFilter<"AgencyMembership"> | $Enums.MembershipStatus
    role?: EnumAgencyRoleFilter<"AgencyMembership"> | $Enums.AgencyRole
    commissionRate?: FloatNullableFilter<"AgencyMembership"> | number | null
    canPostForAgency?: BoolFilter<"AgencyMembership"> | boolean
    canManageEscorts?: BoolFilter<"AgencyMembership"> | boolean
    canAccessFinances?: BoolFilter<"AgencyMembership"> | boolean
    approvedBy?: StringNullableFilter<"AgencyMembership"> | string | null
    approvedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }, "id" | "escortId_agencyId">

  export type AgencyMembershipOrderByWithAggregationInput = {
    id?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    status?: SortOrder
    role?: SortOrder
    commissionRate?: SortOrderInput | SortOrder
    canPostForAgency?: SortOrder
    canManageEscorts?: SortOrder
    canAccessFinances?: SortOrder
    approvedBy?: SortOrderInput | SortOrder
    approvedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: AgencyMembershipCountOrderByAggregateInput
    _avg?: AgencyMembershipAvgOrderByAggregateInput
    _max?: AgencyMembershipMaxOrderByAggregateInput
    _min?: AgencyMembershipMinOrderByAggregateInput
    _sum?: AgencyMembershipSumOrderByAggregateInput
  }

  export type AgencyMembershipScalarWhereWithAggregatesInput = {
    AND?: AgencyMembershipScalarWhereWithAggregatesInput | AgencyMembershipScalarWhereWithAggregatesInput[]
    OR?: AgencyMembershipScalarWhereWithAggregatesInput[]
    NOT?: AgencyMembershipScalarWhereWithAggregatesInput | AgencyMembershipScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyMembership"> | string
    escortId?: StringWithAggregatesFilter<"AgencyMembership"> | string
    agencyId?: StringWithAggregatesFilter<"AgencyMembership"> | string
    status?: EnumMembershipStatusWithAggregatesFilter<"AgencyMembership"> | $Enums.MembershipStatus
    role?: EnumAgencyRoleWithAggregatesFilter<"AgencyMembership"> | $Enums.AgencyRole
    commissionRate?: FloatNullableWithAggregatesFilter<"AgencyMembership"> | number | null
    canPostForAgency?: BoolWithAggregatesFilter<"AgencyMembership"> | boolean
    canManageEscorts?: BoolWithAggregatesFilter<"AgencyMembership"> | boolean
    canAccessFinances?: BoolWithAggregatesFilter<"AgencyMembership"> | boolean
    approvedBy?: StringNullableWithAggregatesFilter<"AgencyMembership"> | string | null
    approvedAt?: DateTimeNullableWithAggregatesFilter<"AgencyMembership"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AgencyMembership"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyMembership"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AgencyMembership"> | Date | string | null
  }

  export type AgencyInvitationWhereInput = {
    AND?: AgencyInvitationWhereInput | AgencyInvitationWhereInput[]
    OR?: AgencyInvitationWhereInput[]
    NOT?: AgencyInvitationWhereInput | AgencyInvitationWhereInput[]
    id?: StringFilter<"AgencyInvitation"> | string
    agencyId?: StringFilter<"AgencyInvitation"> | string
    escortId?: StringFilter<"AgencyInvitation"> | string
    status?: EnumInvitationStatusFilter<"AgencyInvitation"> | $Enums.InvitationStatus
    message?: StringNullableFilter<"AgencyInvitation"> | string | null
    proposedCommission?: FloatNullableFilter<"AgencyInvitation"> | number | null
    proposedRole?: EnumAgencyRoleFilter<"AgencyInvitation"> | $Enums.AgencyRole
    proposedBenefits?: JsonNullableFilter<"AgencyInvitation">
    invitedBy?: StringFilter<"AgencyInvitation"> | string
    respondedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    expiresAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }

  export type AgencyInvitationOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    status?: SortOrder
    message?: SortOrderInput | SortOrder
    proposedCommission?: SortOrderInput | SortOrder
    proposedRole?: SortOrder
    proposedBenefits?: SortOrderInput | SortOrder
    invitedBy?: SortOrder
    respondedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    agency?: AgencyOrderByWithRelationInput
    escort?: EscortOrderByWithRelationInput
  }

  export type AgencyInvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    agencyId_escortId?: AgencyInvitationAgencyIdEscortIdCompoundUniqueInput
    AND?: AgencyInvitationWhereInput | AgencyInvitationWhereInput[]
    OR?: AgencyInvitationWhereInput[]
    NOT?: AgencyInvitationWhereInput | AgencyInvitationWhereInput[]
    agencyId?: StringFilter<"AgencyInvitation"> | string
    escortId?: StringFilter<"AgencyInvitation"> | string
    status?: EnumInvitationStatusFilter<"AgencyInvitation"> | $Enums.InvitationStatus
    message?: StringNullableFilter<"AgencyInvitation"> | string | null
    proposedCommission?: FloatNullableFilter<"AgencyInvitation"> | number | null
    proposedRole?: EnumAgencyRoleFilter<"AgencyInvitation"> | $Enums.AgencyRole
    proposedBenefits?: JsonNullableFilter<"AgencyInvitation">
    invitedBy?: StringFilter<"AgencyInvitation"> | string
    respondedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    expiresAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
  }, "id" | "agencyId_escortId">

  export type AgencyInvitationOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    status?: SortOrder
    message?: SortOrderInput | SortOrder
    proposedCommission?: SortOrderInput | SortOrder
    proposedRole?: SortOrder
    proposedBenefits?: SortOrderInput | SortOrder
    invitedBy?: SortOrder
    respondedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: AgencyInvitationCountOrderByAggregateInput
    _avg?: AgencyInvitationAvgOrderByAggregateInput
    _max?: AgencyInvitationMaxOrderByAggregateInput
    _min?: AgencyInvitationMinOrderByAggregateInput
    _sum?: AgencyInvitationSumOrderByAggregateInput
  }

  export type AgencyInvitationScalarWhereWithAggregatesInput = {
    AND?: AgencyInvitationScalarWhereWithAggregatesInput | AgencyInvitationScalarWhereWithAggregatesInput[]
    OR?: AgencyInvitationScalarWhereWithAggregatesInput[]
    NOT?: AgencyInvitationScalarWhereWithAggregatesInput | AgencyInvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AgencyInvitation"> | string
    agencyId?: StringWithAggregatesFilter<"AgencyInvitation"> | string
    escortId?: StringWithAggregatesFilter<"AgencyInvitation"> | string
    status?: EnumInvitationStatusWithAggregatesFilter<"AgencyInvitation"> | $Enums.InvitationStatus
    message?: StringNullableWithAggregatesFilter<"AgencyInvitation"> | string | null
    proposedCommission?: FloatNullableWithAggregatesFilter<"AgencyInvitation"> | number | null
    proposedRole?: EnumAgencyRoleWithAggregatesFilter<"AgencyInvitation"> | $Enums.AgencyRole
    proposedBenefits?: JsonNullableWithAggregatesFilter<"AgencyInvitation">
    invitedBy?: StringWithAggregatesFilter<"AgencyInvitation"> | string
    respondedAt?: DateTimeNullableWithAggregatesFilter<"AgencyInvitation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AgencyInvitation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AgencyInvitation"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"AgencyInvitation"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"AgencyInvitation"> | Date | string | null
  }

  export type EscortVerificationWhereInput = {
    AND?: EscortVerificationWhereInput | EscortVerificationWhereInput[]
    OR?: EscortVerificationWhereInput[]
    NOT?: EscortVerificationWhereInput | EscortVerificationWhereInput[]
    id?: StringFilter<"EscortVerification"> | string
    agencyId?: StringFilter<"EscortVerification"> | string
    escortId?: StringFilter<"EscortVerification"> | string
    pricingId?: StringFilter<"EscortVerification"> | string
    status?: EnumVerificationStatusFilter<"EscortVerification"> | $Enums.VerificationStatus
    membershipId?: StringNullableFilter<"EscortVerification"> | string | null
    startsAt?: DateTimeFilter<"EscortVerification"> | Date | string
    expiresAt?: DateTimeFilter<"EscortVerification"> | Date | string
    isAutoRenewal?: BoolFilter<"EscortVerification"> | boolean
    reminderSent?: BoolFilter<"EscortVerification"> | boolean
    documentsSubmitted?: JsonNullableFilter<"EscortVerification">
    verificationNotes?: StringNullableFilter<"EscortVerification"> | string | null
    rejectionReason?: StringNullableFilter<"EscortVerification"> | string | null
    verificationSteps?: JsonNullableFilter<"EscortVerification">
    verifiedBy?: StringNullableFilter<"EscortVerification"> | string | null
    createdAt?: DateTimeFilter<"EscortVerification"> | Date | string
    completedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
    pricing?: XOR<VerificationPricingRelationFilter, VerificationPricingWhereInput>
  }

  export type EscortVerificationOrderByWithRelationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    pricingId?: SortOrder
    status?: SortOrder
    membershipId?: SortOrderInput | SortOrder
    startsAt?: SortOrder
    expiresAt?: SortOrder
    isAutoRenewal?: SortOrder
    reminderSent?: SortOrder
    documentsSubmitted?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    verificationSteps?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    agency?: AgencyOrderByWithRelationInput
    escort?: EscortOrderByWithRelationInput
    pricing?: VerificationPricingOrderByWithRelationInput
  }

  export type EscortVerificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EscortVerificationWhereInput | EscortVerificationWhereInput[]
    OR?: EscortVerificationWhereInput[]
    NOT?: EscortVerificationWhereInput | EscortVerificationWhereInput[]
    agencyId?: StringFilter<"EscortVerification"> | string
    escortId?: StringFilter<"EscortVerification"> | string
    pricingId?: StringFilter<"EscortVerification"> | string
    status?: EnumVerificationStatusFilter<"EscortVerification"> | $Enums.VerificationStatus
    membershipId?: StringNullableFilter<"EscortVerification"> | string | null
    startsAt?: DateTimeFilter<"EscortVerification"> | Date | string
    expiresAt?: DateTimeFilter<"EscortVerification"> | Date | string
    isAutoRenewal?: BoolFilter<"EscortVerification"> | boolean
    reminderSent?: BoolFilter<"EscortVerification"> | boolean
    documentsSubmitted?: JsonNullableFilter<"EscortVerification">
    verificationNotes?: StringNullableFilter<"EscortVerification"> | string | null
    rejectionReason?: StringNullableFilter<"EscortVerification"> | string | null
    verificationSteps?: JsonNullableFilter<"EscortVerification">
    verifiedBy?: StringNullableFilter<"EscortVerification"> | string | null
    createdAt?: DateTimeFilter<"EscortVerification"> | Date | string
    completedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
    agency?: XOR<AgencyRelationFilter, AgencyWhereInput>
    escort?: XOR<EscortRelationFilter, EscortWhereInput>
    pricing?: XOR<VerificationPricingRelationFilter, VerificationPricingWhereInput>
  }, "id">

  export type EscortVerificationOrderByWithAggregationInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    pricingId?: SortOrder
    status?: SortOrder
    membershipId?: SortOrderInput | SortOrder
    startsAt?: SortOrder
    expiresAt?: SortOrder
    isAutoRenewal?: SortOrder
    reminderSent?: SortOrder
    documentsSubmitted?: SortOrderInput | SortOrder
    verificationNotes?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    verificationSteps?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: EscortVerificationCountOrderByAggregateInput
    _max?: EscortVerificationMaxOrderByAggregateInput
    _min?: EscortVerificationMinOrderByAggregateInput
  }

  export type EscortVerificationScalarWhereWithAggregatesInput = {
    AND?: EscortVerificationScalarWhereWithAggregatesInput | EscortVerificationScalarWhereWithAggregatesInput[]
    OR?: EscortVerificationScalarWhereWithAggregatesInput[]
    NOT?: EscortVerificationScalarWhereWithAggregatesInput | EscortVerificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EscortVerification"> | string
    agencyId?: StringWithAggregatesFilter<"EscortVerification"> | string
    escortId?: StringWithAggregatesFilter<"EscortVerification"> | string
    pricingId?: StringWithAggregatesFilter<"EscortVerification"> | string
    status?: EnumVerificationStatusWithAggregatesFilter<"EscortVerification"> | $Enums.VerificationStatus
    membershipId?: StringNullableWithAggregatesFilter<"EscortVerification"> | string | null
    startsAt?: DateTimeWithAggregatesFilter<"EscortVerification"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"EscortVerification"> | Date | string
    isAutoRenewal?: BoolWithAggregatesFilter<"EscortVerification"> | boolean
    reminderSent?: BoolWithAggregatesFilter<"EscortVerification"> | boolean
    documentsSubmitted?: JsonNullableWithAggregatesFilter<"EscortVerification">
    verificationNotes?: StringNullableWithAggregatesFilter<"EscortVerification"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"EscortVerification"> | string | null
    verificationSteps?: JsonNullableWithAggregatesFilter<"EscortVerification">
    verifiedBy?: StringNullableWithAggregatesFilter<"EscortVerification"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EscortVerification"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"EscortVerification"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"EscortVerification"> | Date | string | null
  }

  export type VerificationPricingWhereInput = {
    AND?: VerificationPricingWhereInput | VerificationPricingWhereInput[]
    OR?: VerificationPricingWhereInput[]
    NOT?: VerificationPricingWhereInput | VerificationPricingWhereInput[]
    id?: StringFilter<"VerificationPricing"> | string
    name?: StringFilter<"VerificationPricing"> | string
    cost?: FloatFilter<"VerificationPricing"> | number
    description?: StringFilter<"VerificationPricing"> | string
    isActive?: BoolFilter<"VerificationPricing"> | boolean
    features?: JsonNullableFilter<"VerificationPricing">
    duration?: IntFilter<"VerificationPricing"> | number
    createdAt?: DateTimeFilter<"VerificationPricing"> | Date | string
    updatedAt?: DateTimeFilter<"VerificationPricing"> | Date | string
    verifications?: EscortVerificationListRelationFilter
  }

  export type VerificationPricingOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    cost?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    features?: SortOrderInput | SortOrder
    duration?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    verifications?: EscortVerificationOrderByRelationAggregateInput
  }

  export type VerificationPricingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VerificationPricingWhereInput | VerificationPricingWhereInput[]
    OR?: VerificationPricingWhereInput[]
    NOT?: VerificationPricingWhereInput | VerificationPricingWhereInput[]
    name?: StringFilter<"VerificationPricing"> | string
    cost?: FloatFilter<"VerificationPricing"> | number
    description?: StringFilter<"VerificationPricing"> | string
    isActive?: BoolFilter<"VerificationPricing"> | boolean
    features?: JsonNullableFilter<"VerificationPricing">
    duration?: IntFilter<"VerificationPricing"> | number
    createdAt?: DateTimeFilter<"VerificationPricing"> | Date | string
    updatedAt?: DateTimeFilter<"VerificationPricing"> | Date | string
    verifications?: EscortVerificationListRelationFilter
  }, "id">

  export type VerificationPricingOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    cost?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    features?: SortOrderInput | SortOrder
    duration?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VerificationPricingCountOrderByAggregateInput
    _avg?: VerificationPricingAvgOrderByAggregateInput
    _max?: VerificationPricingMaxOrderByAggregateInput
    _min?: VerificationPricingMinOrderByAggregateInput
    _sum?: VerificationPricingSumOrderByAggregateInput
  }

  export type VerificationPricingScalarWhereWithAggregatesInput = {
    AND?: VerificationPricingScalarWhereWithAggregatesInput | VerificationPricingScalarWhereWithAggregatesInput[]
    OR?: VerificationPricingScalarWhereWithAggregatesInput[]
    NOT?: VerificationPricingScalarWhereWithAggregatesInput | VerificationPricingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VerificationPricing"> | string
    name?: StringWithAggregatesFilter<"VerificationPricing"> | string
    cost?: FloatWithAggregatesFilter<"VerificationPricing"> | number
    description?: StringWithAggregatesFilter<"VerificationPricing"> | string
    isActive?: BoolWithAggregatesFilter<"VerificationPricing"> | boolean
    features?: JsonNullableWithAggregatesFilter<"VerificationPricing">
    duration?: IntWithAggregatesFilter<"VerificationPricing"> | number
    createdAt?: DateTimeWithAggregatesFilter<"VerificationPricing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VerificationPricing"> | Date | string
  }

  export type BoostPricingWhereInput = {
    AND?: BoostPricingWhereInput | BoostPricingWhereInput[]
    OR?: BoostPricingWhereInput[]
    NOT?: BoostPricingWhereInput | BoostPricingWhereInput[]
    id?: StringFilter<"BoostPricing"> | string
    type?: EnumBoostTypeFilter<"BoostPricing"> | $Enums.BoostType
    duration?: IntFilter<"BoostPricing"> | number
    price?: FloatFilter<"BoostPricing"> | number
    isActive?: BoolFilter<"BoostPricing"> | boolean
    multiplier?: FloatFilter<"BoostPricing"> | number
    features?: JsonNullableFilter<"BoostPricing">
    maxBoosts?: IntNullableFilter<"BoostPricing"> | number | null
    createdAt?: DateTimeFilter<"BoostPricing"> | Date | string
    updatedAt?: DateTimeFilter<"BoostPricing"> | Date | string
    boosts?: BoostListRelationFilter
  }

  export type BoostPricingOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    isActive?: SortOrder
    multiplier?: SortOrder
    features?: SortOrderInput | SortOrder
    maxBoosts?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    boosts?: BoostOrderByRelationAggregateInput
  }

  export type BoostPricingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BoostPricingWhereInput | BoostPricingWhereInput[]
    OR?: BoostPricingWhereInput[]
    NOT?: BoostPricingWhereInput | BoostPricingWhereInput[]
    type?: EnumBoostTypeFilter<"BoostPricing"> | $Enums.BoostType
    duration?: IntFilter<"BoostPricing"> | number
    price?: FloatFilter<"BoostPricing"> | number
    isActive?: BoolFilter<"BoostPricing"> | boolean
    multiplier?: FloatFilter<"BoostPricing"> | number
    features?: JsonNullableFilter<"BoostPricing">
    maxBoosts?: IntNullableFilter<"BoostPricing"> | number | null
    createdAt?: DateTimeFilter<"BoostPricing"> | Date | string
    updatedAt?: DateTimeFilter<"BoostPricing"> | Date | string
    boosts?: BoostListRelationFilter
  }, "id">

  export type BoostPricingOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    isActive?: SortOrder
    multiplier?: SortOrder
    features?: SortOrderInput | SortOrder
    maxBoosts?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BoostPricingCountOrderByAggregateInput
    _avg?: BoostPricingAvgOrderByAggregateInput
    _max?: BoostPricingMaxOrderByAggregateInput
    _min?: BoostPricingMinOrderByAggregateInput
    _sum?: BoostPricingSumOrderByAggregateInput
  }

  export type BoostPricingScalarWhereWithAggregatesInput = {
    AND?: BoostPricingScalarWhereWithAggregatesInput | BoostPricingScalarWhereWithAggregatesInput[]
    OR?: BoostPricingScalarWhereWithAggregatesInput[]
    NOT?: BoostPricingScalarWhereWithAggregatesInput | BoostPricingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BoostPricing"> | string
    type?: EnumBoostTypeWithAggregatesFilter<"BoostPricing"> | $Enums.BoostType
    duration?: IntWithAggregatesFilter<"BoostPricing"> | number
    price?: FloatWithAggregatesFilter<"BoostPricing"> | number
    isActive?: BoolWithAggregatesFilter<"BoostPricing"> | boolean
    multiplier?: FloatWithAggregatesFilter<"BoostPricing"> | number
    features?: JsonNullableWithAggregatesFilter<"BoostPricing">
    maxBoosts?: IntNullableWithAggregatesFilter<"BoostPricing"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"BoostPricing"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BoostPricing"> | Date | string
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    id?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    description?: StringFilter<"Post"> | string
    images?: StringNullableListFilter<"Post">
    phone?: StringFilter<"Post"> | string
    isActive?: BoolFilter<"Post"> | boolean
    views?: IntFilter<"Post"> | number
    viewsToday?: IntFilter<"Post"> | number
    clicks?: IntFilter<"Post"> | number
    clicksToday?: IntFilter<"Post"> | number
    score?: FloatFilter<"Post"> | number
    engagementRate?: FloatFilter<"Post"> | number
    lastBoosted?: DateTimeNullableFilter<"Post"> | Date | string | null
    locationId?: StringNullableFilter<"Post"> | string | null
    rates?: JsonNullableFilter<"Post">
    availability?: JsonNullableFilter<"Post">
    trendingScore?: FloatFilter<"Post"> | number
    isTrending?: BoolFilter<"Post"> | boolean
    isFeatured?: BoolFilter<"Post"> | boolean
    discoveryScore?: FloatFilter<"Post"> | number
    qualityScore?: FloatFilter<"Post"> | number
    lastScoreUpdate?: DateTimeFilter<"Post"> | Date | string
    isPrivate?: BoolFilter<"Post"> | boolean
    premiumOnly?: BoolFilter<"Post"> | boolean
    uniqueViews?: IntFilter<"Post"> | number
    totalTime?: IntFilter<"Post"> | number
    bounceRate?: FloatFilter<"Post"> | number
    whatsappClicks?: IntFilter<"Post"> | number
    hasActiveBoost?: BoolFilter<"Post"> | boolean
    boostEndsAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    authorId?: StringFilter<"Post"> | string
    age?: IntNullableFilter<"Post"> | number | null
    location?: StringNullableFilter<"Post"> | string | null
    services?: StringNullableListFilter<"Post">
    sexo?: StringNullableFilter<"Post"> | string | null
    boosts?: BoostListRelationFilter
    favorites?: FavoriteListRelationFilter
    likes?: LikeListRelationFilter
    tags?: PostTagListRelationFilter
    author?: XOR<UserRelationFilter, UserWhereInput>
    locationRef?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    reports?: ReportListRelationFilter
    trendingHistory?: TrendingHistoryListRelationFilter
    interactions?: UserInteractionListRelationFilter
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    images?: SortOrder
    phone?: SortOrder
    isActive?: SortOrder
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    lastBoosted?: SortOrderInput | SortOrder
    locationId?: SortOrderInput | SortOrder
    rates?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    trendingScore?: SortOrder
    isTrending?: SortOrder
    isFeatured?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    isPrivate?: SortOrder
    premiumOnly?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    hasActiveBoost?: SortOrder
    boostEndsAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    authorId?: SortOrder
    age?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    services?: SortOrder
    sexo?: SortOrderInput | SortOrder
    boosts?: BoostOrderByRelationAggregateInput
    favorites?: FavoriteOrderByRelationAggregateInput
    likes?: LikeOrderByRelationAggregateInput
    tags?: PostTagOrderByRelationAggregateInput
    author?: UserOrderByWithRelationInput
    locationRef?: LocationOrderByWithRelationInput
    reports?: ReportOrderByRelationAggregateInput
    trendingHistory?: TrendingHistoryOrderByRelationAggregateInput
    interactions?: UserInteractionOrderByRelationAggregateInput
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    title?: StringFilter<"Post"> | string
    description?: StringFilter<"Post"> | string
    images?: StringNullableListFilter<"Post">
    phone?: StringFilter<"Post"> | string
    isActive?: BoolFilter<"Post"> | boolean
    views?: IntFilter<"Post"> | number
    viewsToday?: IntFilter<"Post"> | number
    clicks?: IntFilter<"Post"> | number
    clicksToday?: IntFilter<"Post"> | number
    score?: FloatFilter<"Post"> | number
    engagementRate?: FloatFilter<"Post"> | number
    lastBoosted?: DateTimeNullableFilter<"Post"> | Date | string | null
    locationId?: StringNullableFilter<"Post"> | string | null
    rates?: JsonNullableFilter<"Post">
    availability?: JsonNullableFilter<"Post">
    trendingScore?: FloatFilter<"Post"> | number
    isTrending?: BoolFilter<"Post"> | boolean
    isFeatured?: BoolFilter<"Post"> | boolean
    discoveryScore?: FloatFilter<"Post"> | number
    qualityScore?: FloatFilter<"Post"> | number
    lastScoreUpdate?: DateTimeFilter<"Post"> | Date | string
    isPrivate?: BoolFilter<"Post"> | boolean
    premiumOnly?: BoolFilter<"Post"> | boolean
    uniqueViews?: IntFilter<"Post"> | number
    totalTime?: IntFilter<"Post"> | number
    bounceRate?: FloatFilter<"Post"> | number
    whatsappClicks?: IntFilter<"Post"> | number
    hasActiveBoost?: BoolFilter<"Post"> | boolean
    boostEndsAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    authorId?: StringFilter<"Post"> | string
    age?: IntNullableFilter<"Post"> | number | null
    location?: StringNullableFilter<"Post"> | string | null
    services?: StringNullableListFilter<"Post">
    sexo?: StringNullableFilter<"Post"> | string | null
    boosts?: BoostListRelationFilter
    favorites?: FavoriteListRelationFilter
    likes?: LikeListRelationFilter
    tags?: PostTagListRelationFilter
    author?: XOR<UserRelationFilter, UserWhereInput>
    locationRef?: XOR<LocationNullableRelationFilter, LocationWhereInput> | null
    reports?: ReportListRelationFilter
    trendingHistory?: TrendingHistoryListRelationFilter
    interactions?: UserInteractionListRelationFilter
  }, "id">

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    images?: SortOrder
    phone?: SortOrder
    isActive?: SortOrder
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    lastBoosted?: SortOrderInput | SortOrder
    locationId?: SortOrderInput | SortOrder
    rates?: SortOrderInput | SortOrder
    availability?: SortOrderInput | SortOrder
    trendingScore?: SortOrder
    isTrending?: SortOrder
    isFeatured?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    isPrivate?: SortOrder
    premiumOnly?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    hasActiveBoost?: SortOrder
    boostEndsAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    authorId?: SortOrder
    age?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    services?: SortOrder
    sexo?: SortOrderInput | SortOrder
    _count?: PostCountOrderByAggregateInput
    _avg?: PostAvgOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
    _sum?: PostSumOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Post"> | string
    title?: StringWithAggregatesFilter<"Post"> | string
    description?: StringWithAggregatesFilter<"Post"> | string
    images?: StringNullableListFilter<"Post">
    phone?: StringWithAggregatesFilter<"Post"> | string
    isActive?: BoolWithAggregatesFilter<"Post"> | boolean
    views?: IntWithAggregatesFilter<"Post"> | number
    viewsToday?: IntWithAggregatesFilter<"Post"> | number
    clicks?: IntWithAggregatesFilter<"Post"> | number
    clicksToday?: IntWithAggregatesFilter<"Post"> | number
    score?: FloatWithAggregatesFilter<"Post"> | number
    engagementRate?: FloatWithAggregatesFilter<"Post"> | number
    lastBoosted?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    locationId?: StringNullableWithAggregatesFilter<"Post"> | string | null
    rates?: JsonNullableWithAggregatesFilter<"Post">
    availability?: JsonNullableWithAggregatesFilter<"Post">
    trendingScore?: FloatWithAggregatesFilter<"Post"> | number
    isTrending?: BoolWithAggregatesFilter<"Post"> | boolean
    isFeatured?: BoolWithAggregatesFilter<"Post"> | boolean
    discoveryScore?: FloatWithAggregatesFilter<"Post"> | number
    qualityScore?: FloatWithAggregatesFilter<"Post"> | number
    lastScoreUpdate?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    isPrivate?: BoolWithAggregatesFilter<"Post"> | boolean
    premiumOnly?: BoolWithAggregatesFilter<"Post"> | boolean
    uniqueViews?: IntWithAggregatesFilter<"Post"> | number
    totalTime?: IntWithAggregatesFilter<"Post"> | number
    bounceRate?: FloatWithAggregatesFilter<"Post"> | number
    whatsappClicks?: IntWithAggregatesFilter<"Post"> | number
    hasActiveBoost?: BoolWithAggregatesFilter<"Post"> | boolean
    boostEndsAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Post"> | Date | string | null
    authorId?: StringWithAggregatesFilter<"Post"> | string
    age?: IntNullableWithAggregatesFilter<"Post"> | number | null
    location?: StringNullableWithAggregatesFilter<"Post"> | string | null
    services?: StringNullableListFilter<"Post">
    sexo?: StringNullableWithAggregatesFilter<"Post"> | string | null
  }

  export type TrendingHistoryWhereInput = {
    AND?: TrendingHistoryWhereInput | TrendingHistoryWhereInput[]
    OR?: TrendingHistoryWhereInput[]
    NOT?: TrendingHistoryWhereInput | TrendingHistoryWhereInput[]
    id?: StringFilter<"TrendingHistory"> | string
    postId?: StringFilter<"TrendingHistory"> | string
    position?: IntFilter<"TrendingHistory"> | number
    score?: FloatFilter<"TrendingHistory"> | number
    category?: StringNullableFilter<"TrendingHistory"> | string | null
    date?: DateTimeFilter<"TrendingHistory"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
  }

  export type TrendingHistoryOrderByWithRelationInput = {
    id?: SortOrder
    postId?: SortOrder
    position?: SortOrder
    score?: SortOrder
    category?: SortOrderInput | SortOrder
    date?: SortOrder
    post?: PostOrderByWithRelationInput
  }

  export type TrendingHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TrendingHistoryWhereInput | TrendingHistoryWhereInput[]
    OR?: TrendingHistoryWhereInput[]
    NOT?: TrendingHistoryWhereInput | TrendingHistoryWhereInput[]
    postId?: StringFilter<"TrendingHistory"> | string
    position?: IntFilter<"TrendingHistory"> | number
    score?: FloatFilter<"TrendingHistory"> | number
    category?: StringNullableFilter<"TrendingHistory"> | string | null
    date?: DateTimeFilter<"TrendingHistory"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
  }, "id">

  export type TrendingHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    postId?: SortOrder
    position?: SortOrder
    score?: SortOrder
    category?: SortOrderInput | SortOrder
    date?: SortOrder
    _count?: TrendingHistoryCountOrderByAggregateInput
    _avg?: TrendingHistoryAvgOrderByAggregateInput
    _max?: TrendingHistoryMaxOrderByAggregateInput
    _min?: TrendingHistoryMinOrderByAggregateInput
    _sum?: TrendingHistorySumOrderByAggregateInput
  }

  export type TrendingHistoryScalarWhereWithAggregatesInput = {
    AND?: TrendingHistoryScalarWhereWithAggregatesInput | TrendingHistoryScalarWhereWithAggregatesInput[]
    OR?: TrendingHistoryScalarWhereWithAggregatesInput[]
    NOT?: TrendingHistoryScalarWhereWithAggregatesInput | TrendingHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"TrendingHistory"> | string
    postId?: StringWithAggregatesFilter<"TrendingHistory"> | string
    position?: IntWithAggregatesFilter<"TrendingHistory"> | number
    score?: FloatWithAggregatesFilter<"TrendingHistory"> | number
    category?: StringNullableWithAggregatesFilter<"TrendingHistory"> | string | null
    date?: DateTimeWithAggregatesFilter<"TrendingHistory"> | Date | string
  }

  export type ChatWhereInput = {
    AND?: ChatWhereInput | ChatWhereInput[]
    OR?: ChatWhereInput[]
    NOT?: ChatWhereInput | ChatWhereInput[]
    id?: StringFilter<"Chat"> | string
    isGroup?: BoolFilter<"Chat"> | boolean
    name?: StringNullableFilter<"Chat"> | string | null
    description?: StringNullableFilter<"Chat"> | string | null
    avatar?: StringNullableFilter<"Chat"> | string | null
    isDisputeChat?: BoolFilter<"Chat"> | boolean
    disputeStatus?: EnumDisputeStatusFilter<"Chat"> | $Enums.DisputeStatus
    disputeReason?: StringNullableFilter<"Chat"> | string | null
    isArchived?: BoolFilter<"Chat"> | boolean
    mutedUntil?: DateTimeNullableFilter<"Chat"> | Date | string | null
    maxMembers?: IntNullableFilter<"Chat"> | number | null
    isPrivate?: BoolFilter<"Chat"> | boolean
    requireApproval?: BoolFilter<"Chat"> | boolean
    allowFiles?: BoolFilter<"Chat"> | boolean
    allowImages?: BoolFilter<"Chat"> | boolean
    allowVoice?: BoolFilter<"Chat"> | boolean
    createdAt?: DateTimeFilter<"Chat"> | Date | string
    updatedAt?: DateTimeFilter<"Chat"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Chat"> | Date | string | null
    lastActivity?: DateTimeFilter<"Chat"> | Date | string
    members?: ChatMemberListRelationFilter
    messages?: MessageListRelationFilter
  }

  export type ChatOrderByWithRelationInput = {
    id?: SortOrder
    isGroup?: SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    isDisputeChat?: SortOrder
    disputeStatus?: SortOrder
    disputeReason?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    mutedUntil?: SortOrderInput | SortOrder
    maxMembers?: SortOrderInput | SortOrder
    isPrivate?: SortOrder
    requireApproval?: SortOrder
    allowFiles?: SortOrder
    allowImages?: SortOrder
    allowVoice?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    members?: ChatMemberOrderByRelationAggregateInput
    messages?: MessageOrderByRelationAggregateInput
  }

  export type ChatWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ChatWhereInput | ChatWhereInput[]
    OR?: ChatWhereInput[]
    NOT?: ChatWhereInput | ChatWhereInput[]
    isGroup?: BoolFilter<"Chat"> | boolean
    name?: StringNullableFilter<"Chat"> | string | null
    description?: StringNullableFilter<"Chat"> | string | null
    avatar?: StringNullableFilter<"Chat"> | string | null
    isDisputeChat?: BoolFilter<"Chat"> | boolean
    disputeStatus?: EnumDisputeStatusFilter<"Chat"> | $Enums.DisputeStatus
    disputeReason?: StringNullableFilter<"Chat"> | string | null
    isArchived?: BoolFilter<"Chat"> | boolean
    mutedUntil?: DateTimeNullableFilter<"Chat"> | Date | string | null
    maxMembers?: IntNullableFilter<"Chat"> | number | null
    isPrivate?: BoolFilter<"Chat"> | boolean
    requireApproval?: BoolFilter<"Chat"> | boolean
    allowFiles?: BoolFilter<"Chat"> | boolean
    allowImages?: BoolFilter<"Chat"> | boolean
    allowVoice?: BoolFilter<"Chat"> | boolean
    createdAt?: DateTimeFilter<"Chat"> | Date | string
    updatedAt?: DateTimeFilter<"Chat"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Chat"> | Date | string | null
    lastActivity?: DateTimeFilter<"Chat"> | Date | string
    members?: ChatMemberListRelationFilter
    messages?: MessageListRelationFilter
  }, "id">

  export type ChatOrderByWithAggregationInput = {
    id?: SortOrder
    isGroup?: SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    isDisputeChat?: SortOrder
    disputeStatus?: SortOrder
    disputeReason?: SortOrderInput | SortOrder
    isArchived?: SortOrder
    mutedUntil?: SortOrderInput | SortOrder
    maxMembers?: SortOrderInput | SortOrder
    isPrivate?: SortOrder
    requireApproval?: SortOrder
    allowFiles?: SortOrder
    allowImages?: SortOrder
    allowVoice?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    lastActivity?: SortOrder
    _count?: ChatCountOrderByAggregateInput
    _avg?: ChatAvgOrderByAggregateInput
    _max?: ChatMaxOrderByAggregateInput
    _min?: ChatMinOrderByAggregateInput
    _sum?: ChatSumOrderByAggregateInput
  }

  export type ChatScalarWhereWithAggregatesInput = {
    AND?: ChatScalarWhereWithAggregatesInput | ChatScalarWhereWithAggregatesInput[]
    OR?: ChatScalarWhereWithAggregatesInput[]
    NOT?: ChatScalarWhereWithAggregatesInput | ChatScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Chat"> | string
    isGroup?: BoolWithAggregatesFilter<"Chat"> | boolean
    name?: StringNullableWithAggregatesFilter<"Chat"> | string | null
    description?: StringNullableWithAggregatesFilter<"Chat"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"Chat"> | string | null
    isDisputeChat?: BoolWithAggregatesFilter<"Chat"> | boolean
    disputeStatus?: EnumDisputeStatusWithAggregatesFilter<"Chat"> | $Enums.DisputeStatus
    disputeReason?: StringNullableWithAggregatesFilter<"Chat"> | string | null
    isArchived?: BoolWithAggregatesFilter<"Chat"> | boolean
    mutedUntil?: DateTimeNullableWithAggregatesFilter<"Chat"> | Date | string | null
    maxMembers?: IntNullableWithAggregatesFilter<"Chat"> | number | null
    isPrivate?: BoolWithAggregatesFilter<"Chat"> | boolean
    requireApproval?: BoolWithAggregatesFilter<"Chat"> | boolean
    allowFiles?: BoolWithAggregatesFilter<"Chat"> | boolean
    allowImages?: BoolWithAggregatesFilter<"Chat"> | boolean
    allowVoice?: BoolWithAggregatesFilter<"Chat"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Chat"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Chat"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Chat"> | Date | string | null
    lastActivity?: DateTimeWithAggregatesFilter<"Chat"> | Date | string
  }

  export type ChatMemberWhereInput = {
    AND?: ChatMemberWhereInput | ChatMemberWhereInput[]
    OR?: ChatMemberWhereInput[]
    NOT?: ChatMemberWhereInput | ChatMemberWhereInput[]
    id?: StringFilter<"ChatMember"> | string
    userId?: StringFilter<"ChatMember"> | string
    chatId?: StringFilter<"ChatMember"> | string
    joinedAt?: DateTimeFilter<"ChatMember"> | Date | string
    lastRead?: DateTimeFilter<"ChatMember"> | Date | string
    isMuted?: BoolFilter<"ChatMember"> | boolean
    role?: EnumChatRoleFilter<"ChatMember"> | $Enums.ChatRole
    messageCount?: IntFilter<"ChatMember"> | number
    maxMessages?: IntFilter<"ChatMember"> | number
    canAddMembers?: BoolFilter<"ChatMember"> | boolean
    canDeleteMessages?: BoolFilter<"ChatMember"> | boolean
    canManageChat?: BoolFilter<"ChatMember"> | boolean
    messagesCount?: IntFilter<"ChatMember"> | number
    chat?: XOR<ChatRelationFilter, ChatWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type ChatMemberOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    chatId?: SortOrder
    joinedAt?: SortOrder
    lastRead?: SortOrder
    isMuted?: SortOrder
    role?: SortOrder
    messageCount?: SortOrder
    maxMessages?: SortOrder
    canAddMembers?: SortOrder
    canDeleteMessages?: SortOrder
    canManageChat?: SortOrder
    messagesCount?: SortOrder
    chat?: ChatOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ChatMemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_chatId?: ChatMemberUserIdChatIdCompoundUniqueInput
    AND?: ChatMemberWhereInput | ChatMemberWhereInput[]
    OR?: ChatMemberWhereInput[]
    NOT?: ChatMemberWhereInput | ChatMemberWhereInput[]
    userId?: StringFilter<"ChatMember"> | string
    chatId?: StringFilter<"ChatMember"> | string
    joinedAt?: DateTimeFilter<"ChatMember"> | Date | string
    lastRead?: DateTimeFilter<"ChatMember"> | Date | string
    isMuted?: BoolFilter<"ChatMember"> | boolean
    role?: EnumChatRoleFilter<"ChatMember"> | $Enums.ChatRole
    messageCount?: IntFilter<"ChatMember"> | number
    maxMessages?: IntFilter<"ChatMember"> | number
    canAddMembers?: BoolFilter<"ChatMember"> | boolean
    canDeleteMessages?: BoolFilter<"ChatMember"> | boolean
    canManageChat?: BoolFilter<"ChatMember"> | boolean
    messagesCount?: IntFilter<"ChatMember"> | number
    chat?: XOR<ChatRelationFilter, ChatWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId_chatId">

  export type ChatMemberOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    chatId?: SortOrder
    joinedAt?: SortOrder
    lastRead?: SortOrder
    isMuted?: SortOrder
    role?: SortOrder
    messageCount?: SortOrder
    maxMessages?: SortOrder
    canAddMembers?: SortOrder
    canDeleteMessages?: SortOrder
    canManageChat?: SortOrder
    messagesCount?: SortOrder
    _count?: ChatMemberCountOrderByAggregateInput
    _avg?: ChatMemberAvgOrderByAggregateInput
    _max?: ChatMemberMaxOrderByAggregateInput
    _min?: ChatMemberMinOrderByAggregateInput
    _sum?: ChatMemberSumOrderByAggregateInput
  }

  export type ChatMemberScalarWhereWithAggregatesInput = {
    AND?: ChatMemberScalarWhereWithAggregatesInput | ChatMemberScalarWhereWithAggregatesInput[]
    OR?: ChatMemberScalarWhereWithAggregatesInput[]
    NOT?: ChatMemberScalarWhereWithAggregatesInput | ChatMemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ChatMember"> | string
    userId?: StringWithAggregatesFilter<"ChatMember"> | string
    chatId?: StringWithAggregatesFilter<"ChatMember"> | string
    joinedAt?: DateTimeWithAggregatesFilter<"ChatMember"> | Date | string
    lastRead?: DateTimeWithAggregatesFilter<"ChatMember"> | Date | string
    isMuted?: BoolWithAggregatesFilter<"ChatMember"> | boolean
    role?: EnumChatRoleWithAggregatesFilter<"ChatMember"> | $Enums.ChatRole
    messageCount?: IntWithAggregatesFilter<"ChatMember"> | number
    maxMessages?: IntWithAggregatesFilter<"ChatMember"> | number
    canAddMembers?: BoolWithAggregatesFilter<"ChatMember"> | boolean
    canDeleteMessages?: BoolWithAggregatesFilter<"ChatMember"> | boolean
    canManageChat?: BoolWithAggregatesFilter<"ChatMember"> | boolean
    messagesCount?: IntWithAggregatesFilter<"ChatMember"> | number
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: StringFilter<"Message"> | string
    content?: StringNullableFilter<"Message"> | string | null
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    fileUrl?: StringNullableFilter<"Message"> | string | null
    fileName?: StringNullableFilter<"Message"> | string | null
    fileSize?: IntNullableFilter<"Message"> | number | null
    mimeType?: StringNullableFilter<"Message"> | string | null
    isRead?: BoolFilter<"Message"> | boolean
    costPoints?: IntNullableFilter<"Message"> | number | null
    isPremiumMessage?: BoolFilter<"Message"> | boolean
    isEdited?: BoolFilter<"Message"> | boolean
    editedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    isForwarded?: BoolFilter<"Message"> | boolean
    replyToId?: StringNullableFilter<"Message"> | string | null
    isEncrypted?: BoolFilter<"Message"> | boolean
    expiresAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringNullableFilter<"Message"> | string | null
    chatId?: StringFilter<"Message"> | string
    chat?: XOR<ChatRelationFilter, ChatWhereInput>
    receiver?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    sender?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrderInput | SortOrder
    messageType?: SortOrder
    fileUrl?: SortOrderInput | SortOrder
    fileName?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRead?: SortOrder
    costPoints?: SortOrderInput | SortOrder
    isPremiumMessage?: SortOrder
    isEdited?: SortOrder
    editedAt?: SortOrderInput | SortOrder
    isForwarded?: SortOrder
    replyToId?: SortOrderInput | SortOrder
    isEncrypted?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    readAt?: SortOrderInput | SortOrder
    senderId?: SortOrder
    receiverId?: SortOrderInput | SortOrder
    chatId?: SortOrder
    chat?: ChatOrderByWithRelationInput
    receiver?: UserOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    content?: StringNullableFilter<"Message"> | string | null
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    fileUrl?: StringNullableFilter<"Message"> | string | null
    fileName?: StringNullableFilter<"Message"> | string | null
    fileSize?: IntNullableFilter<"Message"> | number | null
    mimeType?: StringNullableFilter<"Message"> | string | null
    isRead?: BoolFilter<"Message"> | boolean
    costPoints?: IntNullableFilter<"Message"> | number | null
    isPremiumMessage?: BoolFilter<"Message"> | boolean
    isEdited?: BoolFilter<"Message"> | boolean
    editedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    isForwarded?: BoolFilter<"Message"> | boolean
    replyToId?: StringNullableFilter<"Message"> | string | null
    isEncrypted?: BoolFilter<"Message"> | boolean
    expiresAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringNullableFilter<"Message"> | string | null
    chatId?: StringFilter<"Message"> | string
    chat?: XOR<ChatRelationFilter, ChatWhereInput>
    receiver?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    sender?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrderInput | SortOrder
    messageType?: SortOrder
    fileUrl?: SortOrderInput | SortOrder
    fileName?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    isRead?: SortOrder
    costPoints?: SortOrderInput | SortOrder
    isPremiumMessage?: SortOrder
    isEdited?: SortOrder
    editedAt?: SortOrderInput | SortOrder
    isForwarded?: SortOrder
    replyToId?: SortOrderInput | SortOrder
    isEncrypted?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    readAt?: SortOrderInput | SortOrder
    senderId?: SortOrder
    receiverId?: SortOrderInput | SortOrder
    chatId?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _avg?: MessageAvgOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
    _sum?: MessageSumOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Message"> | string
    content?: StringNullableWithAggregatesFilter<"Message"> | string | null
    messageType?: EnumMessageTypeWithAggregatesFilter<"Message"> | $Enums.MessageType
    fileUrl?: StringNullableWithAggregatesFilter<"Message"> | string | null
    fileName?: StringNullableWithAggregatesFilter<"Message"> | string | null
    fileSize?: IntNullableWithAggregatesFilter<"Message"> | number | null
    mimeType?: StringNullableWithAggregatesFilter<"Message"> | string | null
    isRead?: BoolWithAggregatesFilter<"Message"> | boolean
    costPoints?: IntNullableWithAggregatesFilter<"Message"> | number | null
    isPremiumMessage?: BoolWithAggregatesFilter<"Message"> | boolean
    isEdited?: BoolWithAggregatesFilter<"Message"> | boolean
    editedAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
    isForwarded?: BoolWithAggregatesFilter<"Message"> | boolean
    replyToId?: StringNullableWithAggregatesFilter<"Message"> | string | null
    isEncrypted?: BoolWithAggregatesFilter<"Message"> | boolean
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
    readAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
    senderId?: StringWithAggregatesFilter<"Message"> | string
    receiverId?: StringNullableWithAggregatesFilter<"Message"> | string | null
    chatId?: StringWithAggregatesFilter<"Message"> | string
  }

  export type FavoriteWhereInput = {
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    id?: StringFilter<"Favorite"> | string
    userId?: StringFilter<"Favorite"> | string
    postId?: StringFilter<"Favorite"> | string
    isNotified?: BoolFilter<"Favorite"> | boolean
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type FavoriteOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    isNotified?: SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type FavoriteWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_postId?: FavoriteUserIdPostIdCompoundUniqueInput
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    userId?: StringFilter<"Favorite"> | string
    postId?: StringFilter<"Favorite"> | string
    isNotified?: BoolFilter<"Favorite"> | boolean
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId_postId">

  export type FavoriteOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    isNotified?: SortOrder
    createdAt?: SortOrder
    _count?: FavoriteCountOrderByAggregateInput
    _max?: FavoriteMaxOrderByAggregateInput
    _min?: FavoriteMinOrderByAggregateInput
  }

  export type FavoriteScalarWhereWithAggregatesInput = {
    AND?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    OR?: FavoriteScalarWhereWithAggregatesInput[]
    NOT?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Favorite"> | string
    userId?: StringWithAggregatesFilter<"Favorite"> | string
    postId?: StringWithAggregatesFilter<"Favorite"> | string
    isNotified?: BoolWithAggregatesFilter<"Favorite"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Favorite"> | Date | string
  }

  export type LikeWhereInput = {
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    postId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type LikeOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
    post?: PostOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type LikeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_postId?: LikeUserIdPostIdCompoundUniqueInput
    AND?: LikeWhereInput | LikeWhereInput[]
    OR?: LikeWhereInput[]
    NOT?: LikeWhereInput | LikeWhereInput[]
    userId?: StringFilter<"Like"> | string
    postId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
    post?: XOR<PostRelationFilter, PostWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "userId_postId">

  export type LikeOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
    _count?: LikeCountOrderByAggregateInput
    _max?: LikeMaxOrderByAggregateInput
    _min?: LikeMinOrderByAggregateInput
  }

  export type LikeScalarWhereWithAggregatesInput = {
    AND?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    OR?: LikeScalarWhereWithAggregatesInput[]
    NOT?: LikeScalarWhereWithAggregatesInput | LikeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Like"> | string
    userId?: StringWithAggregatesFilter<"Like"> | string
    postId?: StringWithAggregatesFilter<"Like"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Like"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    professionalism?: IntNullableFilter<"Review"> | number | null
    communication?: IntNullableFilter<"Review"> | number | null
    reliability?: IntNullableFilter<"Review"> | number | null
    appearance?: IntNullableFilter<"Review"> | number | null
    service?: IntNullableFilter<"Review"> | number | null
    isAnonymous?: BoolFilter<"Review"> | boolean
    isVerified?: BoolFilter<"Review"> | boolean
    helpfulVotes?: IntFilter<"Review"> | number
    authorId?: StringFilter<"Review"> | string
    targetId?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
    author?: XOR<EscortRelationFilter, EscortWhereInput>
    target?: XOR<EscortRelationFilter, EscortWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    professionalism?: SortOrderInput | SortOrder
    communication?: SortOrderInput | SortOrder
    reliability?: SortOrderInput | SortOrder
    appearance?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    helpfulVotes?: SortOrder
    authorId?: SortOrder
    targetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    author?: EscortOrderByWithRelationInput
    target?: EscortOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    authorId_targetId?: ReviewAuthorIdTargetIdCompoundUniqueInput
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    professionalism?: IntNullableFilter<"Review"> | number | null
    communication?: IntNullableFilter<"Review"> | number | null
    reliability?: IntNullableFilter<"Review"> | number | null
    appearance?: IntNullableFilter<"Review"> | number | null
    service?: IntNullableFilter<"Review"> | number | null
    isAnonymous?: BoolFilter<"Review"> | boolean
    isVerified?: BoolFilter<"Review"> | boolean
    helpfulVotes?: IntFilter<"Review"> | number
    authorId?: StringFilter<"Review"> | string
    targetId?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
    author?: XOR<EscortRelationFilter, EscortWhereInput>
    target?: XOR<EscortRelationFilter, EscortWhereInput>
  }, "id" | "authorId_targetId">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrderInput | SortOrder
    professionalism?: SortOrderInput | SortOrder
    communication?: SortOrderInput | SortOrder
    reliability?: SortOrderInput | SortOrder
    appearance?: SortOrderInput | SortOrder
    service?: SortOrderInput | SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    helpfulVotes?: SortOrder
    authorId?: SortOrder
    targetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Review"> | string
    rating?: IntWithAggregatesFilter<"Review"> | number
    comment?: StringNullableWithAggregatesFilter<"Review"> | string | null
    professionalism?: IntNullableWithAggregatesFilter<"Review"> | number | null
    communication?: IntNullableWithAggregatesFilter<"Review"> | number | null
    reliability?: IntNullableWithAggregatesFilter<"Review"> | number | null
    appearance?: IntNullableWithAggregatesFilter<"Review"> | number | null
    service?: IntNullableWithAggregatesFilter<"Review"> | number | null
    isAnonymous?: BoolWithAggregatesFilter<"Review"> | boolean
    isVerified?: BoolWithAggregatesFilter<"Review"> | boolean
    helpfulVotes?: IntWithAggregatesFilter<"Review"> | number
    authorId?: StringWithAggregatesFilter<"Review"> | string
    targetId?: StringWithAggregatesFilter<"Review"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Review"> | Date | string | null
  }

  export type ReportWhereInput = {
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    id?: StringFilter<"Report"> | string
    reason?: EnumReportReasonFilter<"Report"> | $Enums.ReportReason
    description?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    evidence?: JsonNullableFilter<"Report">
    category?: StringNullableFilter<"Report"> | string | null
    severity?: EnumReportSeverityFilter<"Report"> | $Enums.ReportSeverity
    resolution?: StringNullableFilter<"Report"> | string | null
    resolvedBy?: StringNullableFilter<"Report"> | string | null
    resolvedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    actionTaken?: StringNullableFilter<"Report"> | string | null
    authorId?: StringFilter<"Report"> | string
    targetUserId?: StringNullableFilter<"Report"> | string | null
    postId?: StringNullableFilter<"Report"> | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    author?: XOR<UserRelationFilter, UserWhereInput>
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    targetUser?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type ReportOrderByWithRelationInput = {
    id?: SortOrder
    reason?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    evidence?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    severity?: SortOrder
    resolution?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    actionTaken?: SortOrderInput | SortOrder
    authorId?: SortOrder
    targetUserId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    author?: UserOrderByWithRelationInput
    post?: PostOrderByWithRelationInput
    targetUser?: UserOrderByWithRelationInput
  }

  export type ReportWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReportWhereInput | ReportWhereInput[]
    OR?: ReportWhereInput[]
    NOT?: ReportWhereInput | ReportWhereInput[]
    reason?: EnumReportReasonFilter<"Report"> | $Enums.ReportReason
    description?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    evidence?: JsonNullableFilter<"Report">
    category?: StringNullableFilter<"Report"> | string | null
    severity?: EnumReportSeverityFilter<"Report"> | $Enums.ReportSeverity
    resolution?: StringNullableFilter<"Report"> | string | null
    resolvedBy?: StringNullableFilter<"Report"> | string | null
    resolvedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    actionTaken?: StringNullableFilter<"Report"> | string | null
    authorId?: StringFilter<"Report"> | string
    targetUserId?: StringNullableFilter<"Report"> | string | null
    postId?: StringNullableFilter<"Report"> | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    author?: XOR<UserRelationFilter, UserWhereInput>
    post?: XOR<PostNullableRelationFilter, PostWhereInput> | null
    targetUser?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id">

  export type ReportOrderByWithAggregationInput = {
    id?: SortOrder
    reason?: SortOrder
    description?: SortOrderInput | SortOrder
    status?: SortOrder
    evidence?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    severity?: SortOrder
    resolution?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    actionTaken?: SortOrderInput | SortOrder
    authorId?: SortOrder
    targetUserId?: SortOrderInput | SortOrder
    postId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ReportCountOrderByAggregateInput
    _max?: ReportMaxOrderByAggregateInput
    _min?: ReportMinOrderByAggregateInput
  }

  export type ReportScalarWhereWithAggregatesInput = {
    AND?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    OR?: ReportScalarWhereWithAggregatesInput[]
    NOT?: ReportScalarWhereWithAggregatesInput | ReportScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Report"> | string
    reason?: EnumReportReasonWithAggregatesFilter<"Report"> | $Enums.ReportReason
    description?: StringNullableWithAggregatesFilter<"Report"> | string | null
    status?: EnumReportStatusWithAggregatesFilter<"Report"> | $Enums.ReportStatus
    evidence?: JsonNullableWithAggregatesFilter<"Report">
    category?: StringNullableWithAggregatesFilter<"Report"> | string | null
    severity?: EnumReportSeverityWithAggregatesFilter<"Report"> | $Enums.ReportSeverity
    resolution?: StringNullableWithAggregatesFilter<"Report"> | string | null
    resolvedBy?: StringNullableWithAggregatesFilter<"Report"> | string | null
    resolvedAt?: DateTimeNullableWithAggregatesFilter<"Report"> | Date | string | null
    actionTaken?: StringNullableWithAggregatesFilter<"Report"> | string | null
    authorId?: StringWithAggregatesFilter<"Report"> | string
    targetUserId?: StringNullableWithAggregatesFilter<"Report"> | string | null
    postId?: StringNullableWithAggregatesFilter<"Report"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Report"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Report"> | Date | string | null
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    isRead?: BoolFilter<"Notification"> | boolean
    data?: JsonNullableFilter<"Notification">
    priority?: EnumNotificationPriorityFilter<"Notification"> | $Enums.NotificationPriority
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    isSent?: BoolFilter<"Notification"> | boolean
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    deliveryMethod?: StringNullableListFilter<"Notification">
    isEmailSent?: BoolFilter<"Notification"> | boolean
    emailSentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionText?: StringNullableFilter<"Notification"> | string | null
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    data?: SortOrderInput | SortOrder
    priority?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    isSent?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    deliveryMethod?: SortOrder
    isEmailSent?: SortOrder
    emailSentAt?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    actionText?: SortOrderInput | SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    isRead?: BoolFilter<"Notification"> | boolean
    data?: JsonNullableFilter<"Notification">
    priority?: EnumNotificationPriorityFilter<"Notification"> | $Enums.NotificationPriority
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    isSent?: BoolFilter<"Notification"> | boolean
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    deliveryMethod?: StringNullableListFilter<"Notification">
    isEmailSent?: BoolFilter<"Notification"> | boolean
    emailSentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionText?: StringNullableFilter<"Notification"> | string | null
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    data?: SortOrderInput | SortOrder
    priority?: SortOrder
    expiresAt?: SortOrderInput | SortOrder
    isSent?: SortOrder
    sentAt?: SortOrderInput | SortOrder
    deliveryMethod?: SortOrder
    isEmailSent?: SortOrder
    emailSentAt?: SortOrderInput | SortOrder
    actionUrl?: SortOrderInput | SortOrder
    actionText?: SortOrderInput | SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    title?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    isRead?: BoolWithAggregatesFilter<"Notification"> | boolean
    data?: JsonNullableWithAggregatesFilter<"Notification">
    priority?: EnumNotificationPriorityWithAggregatesFilter<"Notification"> | $Enums.NotificationPriority
    expiresAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    isSent?: BoolWithAggregatesFilter<"Notification"> | boolean
    sentAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    deliveryMethod?: StringNullableListFilter<"Notification">
    isEmailSent?: BoolWithAggregatesFilter<"Notification"> | boolean
    emailSentAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    actionText?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    userId?: StringWithAggregatesFilter<"Notification"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Notification"> | Date | string | null
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    type?: EnumPaymentTypeFilter<"Payment"> | $Enums.PaymentType
    description?: StringNullableFilter<"Payment"> | string | null
    stripePaymentId?: StringNullableFilter<"Payment"> | string | null
    metadata?: JsonNullableFilter<"Payment">
    failureReason?: StringNullableFilter<"Payment"> | string | null
    refundReason?: StringNullableFilter<"Payment"> | string | null
    processorFee?: FloatNullableFilter<"Payment"> | number | null
    netAmount?: FloatNullableFilter<"Payment"> | number | null
    taxAmount?: FloatNullableFilter<"Payment"> | number | null
    taxRate?: FloatNullableFilter<"Payment"> | number | null
    clientId?: StringNullableFilter<"Payment"> | string | null
    escortId?: StringNullableFilter<"Payment"> | string | null
    agencyId?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    refundReason?: SortOrderInput | SortOrder
    processorFee?: SortOrderInput | SortOrder
    netAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    escortId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    client?: ClientOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    type?: EnumPaymentTypeFilter<"Payment"> | $Enums.PaymentType
    description?: StringNullableFilter<"Payment"> | string | null
    stripePaymentId?: StringNullableFilter<"Payment"> | string | null
    metadata?: JsonNullableFilter<"Payment">
    failureReason?: StringNullableFilter<"Payment"> | string | null
    refundReason?: StringNullableFilter<"Payment"> | string | null
    processorFee?: FloatNullableFilter<"Payment"> | number | null
    netAmount?: FloatNullableFilter<"Payment"> | number | null
    taxAmount?: FloatNullableFilter<"Payment"> | number | null
    taxRate?: FloatNullableFilter<"Payment"> | number | null
    clientId?: StringNullableFilter<"Payment"> | string | null
    escortId?: StringNullableFilter<"Payment"> | string | null
    agencyId?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    client?: XOR<ClientNullableRelationFilter, ClientWhereInput> | null
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    stripePaymentId?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    failureReason?: SortOrderInput | SortOrder
    refundReason?: SortOrderInput | SortOrder
    processorFee?: SortOrderInput | SortOrder
    netAmount?: SortOrderInput | SortOrder
    taxAmount?: SortOrderInput | SortOrder
    taxRate?: SortOrderInput | SortOrder
    clientId?: SortOrderInput | SortOrder
    escortId?: SortOrderInput | SortOrder
    agencyId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    amount?: FloatWithAggregatesFilter<"Payment"> | number
    currency?: StringWithAggregatesFilter<"Payment"> | string
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    type?: EnumPaymentTypeWithAggregatesFilter<"Payment"> | $Enums.PaymentType
    description?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    stripePaymentId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    metadata?: JsonNullableWithAggregatesFilter<"Payment">
    failureReason?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    refundReason?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    processorFee?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    netAmount?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    taxAmount?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    taxRate?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    clientId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    escortId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    agencyId?: StringNullableWithAggregatesFilter<"Payment"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"Payment"> | Date | string | null
  }

  export type BoostWhereInput = {
    AND?: BoostWhereInput | BoostWhereInput[]
    OR?: BoostWhereInput[]
    NOT?: BoostWhereInput | BoostWhereInput[]
    id?: StringFilter<"Boost"> | string
    pricingId?: StringFilter<"Boost"> | string
    isActive?: BoolFilter<"Boost"> | boolean
    amount?: FloatFilter<"Boost"> | number
    userId?: StringFilter<"Boost"> | string
    postId?: StringFilter<"Boost"> | string
    viewsBefore?: IntFilter<"Boost"> | number
    viewsAfter?: IntFilter<"Boost"> | number
    clicksBefore?: IntFilter<"Boost"> | number
    clicksAfter?: IntFilter<"Boost"> | number
    engagementBefore?: FloatFilter<"Boost"> | number
    engagementAfter?: FloatFilter<"Boost"> | number
    conversionRate?: FloatFilter<"Boost"> | number
    targetAudience?: JsonNullableFilter<"Boost">
    geography?: StringNullableFilter<"Boost"> | string | null
    stackLevel?: IntFilter<"Boost"> | number
    isStackBoost?: BoolFilter<"Boost"> | boolean
    createdAt?: DateTimeFilter<"Boost"> | Date | string
    expiresAt?: DateTimeFilter<"Boost"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Boost"> | Date | string | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    pricing?: XOR<BoostPricingRelationFilter, BoostPricingWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type BoostOrderByWithRelationInput = {
    id?: SortOrder
    pricingId?: SortOrder
    isActive?: SortOrder
    amount?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    targetAudience?: SortOrderInput | SortOrder
    geography?: SortOrderInput | SortOrder
    stackLevel?: SortOrder
    isStackBoost?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    post?: PostOrderByWithRelationInput
    pricing?: BoostPricingOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type BoostWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BoostWhereInput | BoostWhereInput[]
    OR?: BoostWhereInput[]
    NOT?: BoostWhereInput | BoostWhereInput[]
    pricingId?: StringFilter<"Boost"> | string
    isActive?: BoolFilter<"Boost"> | boolean
    amount?: FloatFilter<"Boost"> | number
    userId?: StringFilter<"Boost"> | string
    postId?: StringFilter<"Boost"> | string
    viewsBefore?: IntFilter<"Boost"> | number
    viewsAfter?: IntFilter<"Boost"> | number
    clicksBefore?: IntFilter<"Boost"> | number
    clicksAfter?: IntFilter<"Boost"> | number
    engagementBefore?: FloatFilter<"Boost"> | number
    engagementAfter?: FloatFilter<"Boost"> | number
    conversionRate?: FloatFilter<"Boost"> | number
    targetAudience?: JsonNullableFilter<"Boost">
    geography?: StringNullableFilter<"Boost"> | string | null
    stackLevel?: IntFilter<"Boost"> | number
    isStackBoost?: BoolFilter<"Boost"> | boolean
    createdAt?: DateTimeFilter<"Boost"> | Date | string
    expiresAt?: DateTimeFilter<"Boost"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Boost"> | Date | string | null
    post?: XOR<PostRelationFilter, PostWhereInput>
    pricing?: XOR<BoostPricingRelationFilter, BoostPricingWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type BoostOrderByWithAggregationInput = {
    id?: SortOrder
    pricingId?: SortOrder
    isActive?: SortOrder
    amount?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    targetAudience?: SortOrderInput | SortOrder
    geography?: SortOrderInput | SortOrder
    stackLevel?: SortOrder
    isStackBoost?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: BoostCountOrderByAggregateInput
    _avg?: BoostAvgOrderByAggregateInput
    _max?: BoostMaxOrderByAggregateInput
    _min?: BoostMinOrderByAggregateInput
    _sum?: BoostSumOrderByAggregateInput
  }

  export type BoostScalarWhereWithAggregatesInput = {
    AND?: BoostScalarWhereWithAggregatesInput | BoostScalarWhereWithAggregatesInput[]
    OR?: BoostScalarWhereWithAggregatesInput[]
    NOT?: BoostScalarWhereWithAggregatesInput | BoostScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Boost"> | string
    pricingId?: StringWithAggregatesFilter<"Boost"> | string
    isActive?: BoolWithAggregatesFilter<"Boost"> | boolean
    amount?: FloatWithAggregatesFilter<"Boost"> | number
    userId?: StringWithAggregatesFilter<"Boost"> | string
    postId?: StringWithAggregatesFilter<"Boost"> | string
    viewsBefore?: IntWithAggregatesFilter<"Boost"> | number
    viewsAfter?: IntWithAggregatesFilter<"Boost"> | number
    clicksBefore?: IntWithAggregatesFilter<"Boost"> | number
    clicksAfter?: IntWithAggregatesFilter<"Boost"> | number
    engagementBefore?: FloatWithAggregatesFilter<"Boost"> | number
    engagementAfter?: FloatWithAggregatesFilter<"Boost"> | number
    conversionRate?: FloatWithAggregatesFilter<"Boost"> | number
    targetAudience?: JsonNullableWithAggregatesFilter<"Boost">
    geography?: StringNullableWithAggregatesFilter<"Boost"> | string | null
    stackLevel?: IntWithAggregatesFilter<"Boost"> | number
    isStackBoost?: BoolWithAggregatesFilter<"Boost"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Boost"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"Boost"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Boost"> | Date | string | null
  }

  export type AppMetricsWhereInput = {
    AND?: AppMetricsWhereInput | AppMetricsWhereInput[]
    OR?: AppMetricsWhereInput[]
    NOT?: AppMetricsWhereInput | AppMetricsWhereInput[]
    id?: StringFilter<"AppMetrics"> | string
    totalUsers?: IntFilter<"AppMetrics"> | number
    totalEscorts?: IntFilter<"AppMetrics"> | number
    totalAgencies?: IntFilter<"AppMetrics"> | number
    totalClients?: IntFilter<"AppMetrics"> | number
    totalAdmins?: IntFilter<"AppMetrics"> | number
    totalPosts?: IntFilter<"AppMetrics"> | number
    totalPayments?: FloatFilter<"AppMetrics"> | number
    totalRevenue?: FloatFilter<"AppMetrics"> | number
    activeUsers?: IntFilter<"AppMetrics"> | number
    bannedUsers?: IntFilter<"AppMetrics"> | number
    verifiedEscorts?: IntFilter<"AppMetrics"> | number
    premiumClients?: IntFilter<"AppMetrics"> | number
    pendingAgencies?: IntFilter<"AppMetrics"> | number
    totalVerifications?: IntFilter<"AppMetrics"> | number
    expiredVerifications?: IntFilter<"AppMetrics"> | number
    totalPointsSold?: IntFilter<"AppMetrics"> | number
    totalPointsSpent?: IntFilter<"AppMetrics"> | number
    totalBoosts?: IntFilter<"AppMetrics"> | number
    pointsRevenue?: FloatFilter<"AppMetrics"> | number
    dailyLoginStreaks?: IntFilter<"AppMetrics"> | number
    totalMessages?: IntFilter<"AppMetrics"> | number
    averageSessionTime?: FloatFilter<"AppMetrics"> | number
    conversionRate?: FloatFilter<"AppMetrics"> | number
    churnRate?: FloatFilter<"AppMetrics"> | number
    revenuePerUser?: FloatFilter<"AppMetrics"> | number
    basicClients?: IntFilter<"AppMetrics"> | number
    premiumClientsTier?: IntFilter<"AppMetrics"> | number
    vipClients?: IntFilter<"AppMetrics"> | number
    dailyActiveUsers?: IntFilter<"AppMetrics"> | number
    weeklyActiveUsers?: IntFilter<"AppMetrics"> | number
    monthlyActiveUsers?: IntFilter<"AppMetrics"> | number
    topCountries?: JsonNullableFilter<"AppMetrics">
    topCities?: JsonNullableFilter<"AppMetrics">
    date?: DateTimeFilter<"AppMetrics"> | Date | string
    createdAt?: DateTimeFilter<"AppMetrics"> | Date | string
  }

  export type AppMetricsOrderByWithRelationInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
    topCountries?: SortOrderInput | SortOrder
    topCities?: SortOrderInput | SortOrder
    date?: SortOrder
    createdAt?: SortOrder
  }

  export type AppMetricsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AppMetricsWhereInput | AppMetricsWhereInput[]
    OR?: AppMetricsWhereInput[]
    NOT?: AppMetricsWhereInput | AppMetricsWhereInput[]
    totalUsers?: IntFilter<"AppMetrics"> | number
    totalEscorts?: IntFilter<"AppMetrics"> | number
    totalAgencies?: IntFilter<"AppMetrics"> | number
    totalClients?: IntFilter<"AppMetrics"> | number
    totalAdmins?: IntFilter<"AppMetrics"> | number
    totalPosts?: IntFilter<"AppMetrics"> | number
    totalPayments?: FloatFilter<"AppMetrics"> | number
    totalRevenue?: FloatFilter<"AppMetrics"> | number
    activeUsers?: IntFilter<"AppMetrics"> | number
    bannedUsers?: IntFilter<"AppMetrics"> | number
    verifiedEscorts?: IntFilter<"AppMetrics"> | number
    premiumClients?: IntFilter<"AppMetrics"> | number
    pendingAgencies?: IntFilter<"AppMetrics"> | number
    totalVerifications?: IntFilter<"AppMetrics"> | number
    expiredVerifications?: IntFilter<"AppMetrics"> | number
    totalPointsSold?: IntFilter<"AppMetrics"> | number
    totalPointsSpent?: IntFilter<"AppMetrics"> | number
    totalBoosts?: IntFilter<"AppMetrics"> | number
    pointsRevenue?: FloatFilter<"AppMetrics"> | number
    dailyLoginStreaks?: IntFilter<"AppMetrics"> | number
    totalMessages?: IntFilter<"AppMetrics"> | number
    averageSessionTime?: FloatFilter<"AppMetrics"> | number
    conversionRate?: FloatFilter<"AppMetrics"> | number
    churnRate?: FloatFilter<"AppMetrics"> | number
    revenuePerUser?: FloatFilter<"AppMetrics"> | number
    basicClients?: IntFilter<"AppMetrics"> | number
    premiumClientsTier?: IntFilter<"AppMetrics"> | number
    vipClients?: IntFilter<"AppMetrics"> | number
    dailyActiveUsers?: IntFilter<"AppMetrics"> | number
    weeklyActiveUsers?: IntFilter<"AppMetrics"> | number
    monthlyActiveUsers?: IntFilter<"AppMetrics"> | number
    topCountries?: JsonNullableFilter<"AppMetrics">
    topCities?: JsonNullableFilter<"AppMetrics">
    date?: DateTimeFilter<"AppMetrics"> | Date | string
    createdAt?: DateTimeFilter<"AppMetrics"> | Date | string
  }, "id">

  export type AppMetricsOrderByWithAggregationInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
    topCountries?: SortOrderInput | SortOrder
    topCities?: SortOrderInput | SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    _count?: AppMetricsCountOrderByAggregateInput
    _avg?: AppMetricsAvgOrderByAggregateInput
    _max?: AppMetricsMaxOrderByAggregateInput
    _min?: AppMetricsMinOrderByAggregateInput
    _sum?: AppMetricsSumOrderByAggregateInput
  }

  export type AppMetricsScalarWhereWithAggregatesInput = {
    AND?: AppMetricsScalarWhereWithAggregatesInput | AppMetricsScalarWhereWithAggregatesInput[]
    OR?: AppMetricsScalarWhereWithAggregatesInput[]
    NOT?: AppMetricsScalarWhereWithAggregatesInput | AppMetricsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AppMetrics"> | string
    totalUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalEscorts?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalAgencies?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalClients?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalAdmins?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalPosts?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalPayments?: FloatWithAggregatesFilter<"AppMetrics"> | number
    totalRevenue?: FloatWithAggregatesFilter<"AppMetrics"> | number
    activeUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    bannedUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    verifiedEscorts?: IntWithAggregatesFilter<"AppMetrics"> | number
    premiumClients?: IntWithAggregatesFilter<"AppMetrics"> | number
    pendingAgencies?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalVerifications?: IntWithAggregatesFilter<"AppMetrics"> | number
    expiredVerifications?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalPointsSold?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalPointsSpent?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalBoosts?: IntWithAggregatesFilter<"AppMetrics"> | number
    pointsRevenue?: FloatWithAggregatesFilter<"AppMetrics"> | number
    dailyLoginStreaks?: IntWithAggregatesFilter<"AppMetrics"> | number
    totalMessages?: IntWithAggregatesFilter<"AppMetrics"> | number
    averageSessionTime?: FloatWithAggregatesFilter<"AppMetrics"> | number
    conversionRate?: FloatWithAggregatesFilter<"AppMetrics"> | number
    churnRate?: FloatWithAggregatesFilter<"AppMetrics"> | number
    revenuePerUser?: FloatWithAggregatesFilter<"AppMetrics"> | number
    basicClients?: IntWithAggregatesFilter<"AppMetrics"> | number
    premiumClientsTier?: IntWithAggregatesFilter<"AppMetrics"> | number
    vipClients?: IntWithAggregatesFilter<"AppMetrics"> | number
    dailyActiveUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    weeklyActiveUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    monthlyActiveUsers?: IntWithAggregatesFilter<"AppMetrics"> | number
    topCountries?: JsonNullableWithAggregatesFilter<"AppMetrics">
    topCities?: JsonNullableWithAggregatesFilter<"AppMetrics">
    date?: DateTimeWithAggregatesFilter<"AppMetrics"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"AppMetrics"> | Date | string
  }

  export type LocationCreateInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    posts?: PostCreateNestedManyWithoutLocationRefInput
    users?: UserCreateNestedManyWithoutLocationInput
  }

  export type LocationUncheckedCreateInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    posts?: PostUncheckedCreateNestedManyWithoutLocationRefInput
    users?: UserUncheckedCreateNestedManyWithoutLocationInput
  }

  export type LocationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    posts?: PostUpdateManyWithoutLocationRefNestedInput
    users?: UserUpdateManyWithoutLocationNestedInput
  }

  export type LocationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    posts?: PostUncheckedUpdateManyWithoutLocationRefNestedInput
    users?: UserUncheckedUpdateManyWithoutLocationNestedInput
  }

  export type LocationCreateManyInput = {
    id?: string
    country: string
    state?: string | null
    city: string
  }

  export type LocationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
  }

  export type LocationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyRegistrationRequestCreateInput = {
    id?: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    status?: $Enums.AgencyRequestStatus
    reviewer?: UserCreateNestedOneWithoutReviewedAgencyRequestsInput
    user: UserCreateNestedOneWithoutAgencyRegistrationRequestInput
  }

  export type AgencyRegistrationRequestUncheckedCreateInput = {
    id?: string
    userId: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    status?: $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
    reviewer?: UserUpdateOneWithoutReviewedAgencyRequestsNestedInput
    user?: UserUpdateOneRequiredWithoutAgencyRegistrationRequestNestedInput
  }

  export type AgencyRegistrationRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestCreateManyInput = {
    id?: string
    userId: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    status?: $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type UserSettingsCreateInput = {
    id?: string
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: $Enums.ContentFilterLevel
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSettingsInput
  }

  export type UserSettingsUncheckedCreateInput = {
    id?: string
    userId: string
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: $Enums.ContentFilterLevel
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSettingsNestedInput
  }

  export type UserSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsCreateManyInput = {
    id?: string
    userId: string
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: $Enums.ContentFilterLevel
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceTokenCreateInput = {
    id?: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
    user: UserCreateNestedOneWithoutDeviceTokensInput
  }

  export type DeviceTokenUncheckedCreateInput = {
    id?: string
    userId: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type DeviceTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutDeviceTokensNestedInput
  }

  export type DeviceTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceTokenCreateManyInput = {
    id?: string
    userId: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type DeviceTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SearchHistoryCreateInput = {
    id?: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutSearchHistoryInput
  }

  export type SearchHistoryUncheckedCreateInput = {
    id?: string
    userId: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
  }

  export type SearchHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSearchHistoryNestedInput
  }

  export type SearchHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SearchHistoryCreateManyInput = {
    id?: string
    userId: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
  }

  export type SearchHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SearchHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockCreateInput = {
    id?: string
    reason?: string | null
    createdAt?: Date | string
    blocked: UserCreateNestedOneWithoutBlockedByInput
    blocker: UserCreateNestedOneWithoutBlockedUsersInput
  }

  export type UserBlockUncheckedCreateInput = {
    id?: string
    blockerId: string
    blockedId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserBlockUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blocked?: UserUpdateOneRequiredWithoutBlockedByNestedInput
    blocker?: UserUpdateOneRequiredWithoutBlockedUsersNestedInput
  }

  export type UserBlockUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockerId?: StringFieldUpdateOperationsInput | string
    blockedId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockCreateManyInput = {
    id?: string
    blockerId: string
    blockedId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserBlockUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockerId?: StringFieldUpdateOperationsInput | string
    blockedId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IdentityVerificationCreateInput = {
    id?: string
    documentType: string
    documentNumber: string
    documentImages?: IdentityVerificationCreatedocumentImagesInput | string[]
    selfieImage?: string | null
    status?: $Enums.VerificationStatus
    verifiedBy?: string | null
    rejectionReason?: string | null
    notes?: string | null
    submittedAt?: Date | string
    completedAt?: Date | string | null
    expiresAt?: Date | string | null
    user: UserCreateNestedOneWithoutIdentityVerificationInput
  }

  export type IdentityVerificationUncheckedCreateInput = {
    id?: string
    userId: string
    documentType: string
    documentNumber: string
    documentImages?: IdentityVerificationCreatedocumentImagesInput | string[]
    selfieImage?: string | null
    status?: $Enums.VerificationStatus
    verifiedBy?: string | null
    rejectionReason?: string | null
    notes?: string | null
    submittedAt?: Date | string
    completedAt?: Date | string | null
    expiresAt?: Date | string | null
  }

  export type IdentityVerificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutIdentityVerificationNestedInput
  }

  export type IdentityVerificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IdentityVerificationCreateManyInput = {
    id?: string
    userId: string
    documentType: string
    documentNumber: string
    documentImages?: IdentityVerificationCreatedocumentImagesInput | string[]
    selfieImage?: string | null
    status?: $Enums.VerificationStatus
    verifiedBy?: string | null
    rejectionReason?: string | null
    notes?: string | null
    submittedAt?: Date | string
    completedAt?: Date | string | null
    expiresAt?: Date | string | null
  }

  export type IdentityVerificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IdentityVerificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SubscriptionPlanCreateInput = {
    id?: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    userType: $Enums.UserType
    priority?: number
    maxPosts?: number | null
    maxImages?: number | null
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptions?: SubscriptionCreateNestedManyWithoutPlanInput
  }

  export type SubscriptionPlanUncheckedCreateInput = {
    id?: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    userType: $Enums.UserType
    priority?: number
    maxPosts?: number | null
    maxImages?: number | null
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutPlanInput
  }

  export type SubscriptionPlanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptions?: SubscriptionUpdateManyWithoutPlanNestedInput
  }

  export type SubscriptionPlanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutPlanNestedInput
  }

  export type SubscriptionPlanCreateManyInput = {
    id?: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    userType: $Enums.UserType
    priority?: number
    maxPosts?: number | null
    maxImages?: number | null
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionPlanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionPlanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateInput = {
    id?: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    plan: SubscriptionPlanCreateNestedOneWithoutSubscriptionsInput
    user: UserCreateNestedOneWithoutSubscriptionsInput
  }

  export type SubscriptionUncheckedCreateInput = {
    id?: string
    userId: string
    planId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    plan?: SubscriptionPlanUpdateOneRequiredWithoutSubscriptionsNestedInput
    user?: UserUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type SubscriptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateManyInput = {
    id?: string
    userId: string
    planId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    color?: string | null
    icon?: string | null
    isActive?: boolean
    usageCount?: number
    category?: $Enums.TagCategory
    priority?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    posts?: PostTagCreateNestedManyWithoutTagInput
  }

  export type TagUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    color?: string | null
    icon?: string | null
    isActive?: boolean
    usageCount?: number
    category?: $Enums.TagCategory
    priority?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    posts?: PostTagUncheckedCreateNestedManyWithoutTagInput
  }

  export type TagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: PostTagUpdateManyWithoutTagNestedInput
  }

  export type TagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    posts?: PostTagUncheckedUpdateManyWithoutTagNestedInput
  }

  export type TagCreateManyInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    color?: string | null
    icon?: string | null
    isActive?: boolean
    usageCount?: number
    category?: $Enums.TagCategory
    priority?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagCreateInput = {
    id?: string
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutTagsInput
    tag: TagCreateNestedOneWithoutPostsInput
  }

  export type PostTagUncheckedCreateInput = {
    id?: string
    postId: string
    tagId: string
    createdAt?: Date | string
  }

  export type PostTagUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutTagsNestedInput
    tag?: TagUpdateOneRequiredWithoutPostsNestedInput
  }

  export type PostTagUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagCreateManyInput = {
    id?: string
    postId: string
    tagId: string
    createdAt?: Date | string
  }

  export type PostTagUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminCreateInput = {
    id?: string
    role?: $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: number
    totalReports?: number
    totalVerifications?: number
    totalAgencyApprovals?: number
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAdminInput
  }

  export type AdminUncheckedCreateInput = {
    id?: string
    userId: string
    role?: $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: number
    totalReports?: number
    totalVerifications?: number
    totalAgencyApprovals?: number
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAdminNestedInput
  }

  export type AdminUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminCreateManyInput = {
    id?: string
    userId: string
    role?: $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: number
    totalReports?: number
    totalVerifications?: number
    totalAgencyApprovals?: number
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserReputationCreateInput = {
    id?: string
    overallScore?: number
    responseRate?: number
    averageResponseTime?: number | null
    profileCompleteness?: number
    trustScore?: number
    totalViews?: number
    totalLikes?: number
    totalMessages?: number
    totalFavorites?: number
    discoveryScore?: number
    trendingScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    spamScore?: number
    reportScore?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReputationInput
  }

  export type UserReputationUncheckedCreateInput = {
    id?: string
    userId: string
    overallScore?: number
    responseRate?: number
    averageResponseTime?: number | null
    profileCompleteness?: number
    trustScore?: number
    totalViews?: number
    totalLikes?: number
    totalMessages?: number
    totalFavorites?: number
    discoveryScore?: number
    trendingScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    spamScore?: number
    reportScore?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserReputationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReputationNestedInput
  }

  export type UserReputationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserReputationCreateManyInput = {
    id?: string
    userId: string
    overallScore?: number
    responseRate?: number
    averageResponseTime?: number | null
    profileCompleteness?: number
    trustScore?: number
    totalViews?: number
    totalLikes?: number
    totalMessages?: number
    totalFavorites?: number
    discoveryScore?: number
    trendingScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    spamScore?: number
    reportScore?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserReputationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserReputationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EscortCreateInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type EscortCreateManyInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
  }

  export type EscortUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
  }

  export type EscortUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
  }

  export type AgencyCreateInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    user: UserCreateNestedOneWithoutAgencyInput
    invitations?: AgencyInvitationCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    invitations?: AgencyInvitationUncheckedCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipUncheckedCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutAgencyNestedInput
    invitations?: AgencyInvitationUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    invitations?: AgencyInvitationUncheckedUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUncheckedUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyCreateManyInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
  }

  export type AgencyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
  }

  export type AgencyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
  }

  export type ClientCreateInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateManyInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
  }

  export type ClientUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ClientUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PointsPackageCreateInput = {
    id?: string
    name: string
    points: number
    price: number
    bonus?: number
    isActive?: boolean
    isPopular?: boolean
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchases?: PointsPurchaseCreateNestedManyWithoutPackageInput
  }

  export type PointsPackageUncheckedCreateInput = {
    id?: string
    name: string
    points: number
    price: number
    bonus?: number
    isActive?: boolean
    isPopular?: boolean
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    purchases?: PointsPurchaseUncheckedCreateNestedManyWithoutPackageInput
  }

  export type PointsPackageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchases?: PointsPurchaseUpdateManyWithoutPackageNestedInput
  }

  export type PointsPackageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    purchases?: PointsPurchaseUncheckedUpdateManyWithoutPackageNestedInput
  }

  export type PointsPackageCreateManyInput = {
    id?: string
    name: string
    points: number
    price: number
    bonus?: number
    isActive?: boolean
    isPopular?: boolean
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PointsPackageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsPackageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsPurchaseCreateInput = {
    id?: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutPointsPurchasesInput
    package: PointsPackageCreateNestedOneWithoutPurchasesInput
  }

  export type PointsPurchaseUncheckedCreateInput = {
    id?: string
    clientId: string
    packageId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PointsPurchaseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutPointsPurchasesNestedInput
    package?: PointsPackageUpdateOneRequiredWithoutPurchasesNestedInput
  }

  export type PointsPurchaseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointsPurchaseCreateManyInput = {
    id?: string
    clientId: string
    packageId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PointsPurchaseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointsPurchaseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointTransactionCreateInput = {
    id?: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutPointTransactionsInput
  }

  export type PointTransactionUncheckedCreateInput = {
    id?: string
    clientId: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
  }

  export type PointTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutPointTransactionsNestedInput
  }

  export type PointTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointTransactionCreateManyInput = {
    id?: string
    clientId: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
  }

  export type PointTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryCreateInput = {
    id?: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
    client: ClientCreateNestedOneWithoutPointsHistoryInput
  }

  export type PointsHistoryUncheckedCreateInput = {
    id?: string
    clientId: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
  }

  export type PointsHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    client?: ClientUpdateOneRequiredWithoutPointsHistoryNestedInput
  }

  export type PointsHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryCreateManyInput = {
    id?: string
    clientId: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
  }

  export type PointsHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PremiumActivationCreateInput = {
    id?: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
    client: ClientCreateNestedOneWithoutPremiumActivationsInput
  }

  export type PremiumActivationUncheckedCreateInput = {
    id?: string
    clientId: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
  }

  export type PremiumActivationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
    client?: ClientUpdateOneRequiredWithoutPremiumActivationsNestedInput
  }

  export type PremiumActivationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PremiumActivationCreateManyInput = {
    id?: string
    clientId: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
  }

  export type PremiumActivationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PremiumActivationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type ClientReviewCreateInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutClientReviewsInput
    escort: EscortCreateNestedOneWithoutClientReviewsInput
  }

  export type ClientReviewUncheckedCreateInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    clientId: string
    escortId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ClientReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutClientReviewsNestedInput
    escort?: EscortUpdateOneRequiredWithoutClientReviewsNestedInput
  }

  export type ClientReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    clientId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewCreateManyInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    clientId: string
    escortId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ClientReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    clientId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanCreateInput = {
    id?: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    appeals?: BanAppealCreateNestedManyWithoutBanInput
    user: UserCreateNestedOneWithoutBanHistoryInput
  }

  export type BanUncheckedCreateInput = {
    id?: string
    userId: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    appeals?: BanAppealUncheckedCreateNestedManyWithoutBanInput
  }

  export type BanUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appeals?: BanAppealUpdateManyWithoutBanNestedInput
    user?: UserUpdateOneRequiredWithoutBanHistoryNestedInput
  }

  export type BanUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appeals?: BanAppealUncheckedUpdateManyWithoutBanNestedInput
  }

  export type BanCreateManyInput = {
    id?: string
    userId: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BanUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BanUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BanAppealCreateInput = {
    id?: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
    ban: BanCreateNestedOneWithoutAppealsInput
  }

  export type BanAppealUncheckedCreateInput = {
    id?: string
    banId: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
  }

  export type BanAppealUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ban?: BanUpdateOneRequiredWithoutAppealsNestedInput
  }

  export type BanAppealUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    banId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanAppealCreateManyInput = {
    id?: string
    banId: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
  }

  export type BanAppealUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanAppealUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    banId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserInteractionCreateInput = {
    id?: string
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
    post?: PostCreateNestedOneWithoutInteractionsInput
    targetUser?: UserCreateNestedOneWithoutReceivedInteractionsInput
    user: UserCreateNestedOneWithoutInteractionsInput
  }

  export type UserInteractionUncheckedCreateInput = {
    id?: string
    userId: string
    targetUserId?: string | null
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutInteractionsNestedInput
    targetUser?: UserUpdateOneWithoutReceivedInteractionsNestedInput
    user?: UserUpdateOneRequiredWithoutInteractionsNestedInput
  }

  export type UserInteractionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionCreateManyInput = {
    id?: string
    userId: string
    targetUserId?: string | null
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChatRateLimitCreateInput = {
    id?: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
    user: UserCreateNestedOneWithoutChatRateLimitsInput
  }

  export type ChatRateLimitUncheckedCreateInput = {
    id?: string
    userId: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
  }

  export type ChatRateLimitUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
    user?: UserUpdateOneRequiredWithoutChatRateLimitsNestedInput
  }

  export type ChatRateLimitUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type ChatRateLimitCreateManyInput = {
    id?: string
    userId: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
  }

  export type ChatRateLimitUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type ChatRateLimitUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type AgencyMembershipCreateInput = {
    id?: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutMembershipsInput
    escort: EscortCreateNestedOneWithoutAgencyMembershipsInput
  }

  export type AgencyMembershipUncheckedCreateInput = {
    id?: string
    escortId: string
    agencyId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutMembershipsNestedInput
    escort?: EscortUpdateOneRequiredWithoutAgencyMembershipsNestedInput
  }

  export type AgencyMembershipUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipCreateManyInput = {
    id?: string
    escortId: string
    agencyId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationCreateInput = {
    id?: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutInvitationsInput
    escort: EscortCreateNestedOneWithoutAgencyInvitationsInput
  }

  export type AgencyInvitationUncheckedCreateInput = {
    id?: string
    agencyId: string
    escortId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutInvitationsNestedInput
    escort?: EscortUpdateOneRequiredWithoutAgencyInvitationsNestedInput
  }

  export type AgencyInvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationCreateManyInput = {
    id?: string
    agencyId: string
    escortId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationCreateInput = {
    id?: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutVerificationsInput
    escort: EscortCreateNestedOneWithoutVerificationsInput
    pricing: VerificationPricingCreateNestedOneWithoutVerificationsInput
  }

  export type EscortVerificationUncheckedCreateInput = {
    id?: string
    agencyId: string
    escortId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutVerificationsNestedInput
    escort?: EscortUpdateOneRequiredWithoutVerificationsNestedInput
    pricing?: VerificationPricingUpdateOneRequiredWithoutVerificationsNestedInput
  }

  export type EscortVerificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationCreateManyInput = {
    id?: string
    agencyId: string
    escortId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationPricingCreateInput = {
    id?: string
    name: string
    cost?: number
    description: string
    isActive?: boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    verifications?: EscortVerificationCreateNestedManyWithoutPricingInput
  }

  export type VerificationPricingUncheckedCreateInput = {
    id?: string
    name: string
    cost?: number
    description: string
    isActive?: boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutPricingInput
  }

  export type VerificationPricingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verifications?: EscortVerificationUpdateManyWithoutPricingNestedInput
  }

  export type VerificationPricingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    verifications?: EscortVerificationUncheckedUpdateManyWithoutPricingNestedInput
  }

  export type VerificationPricingCreateManyInput = {
    id?: string
    name: string
    cost?: number
    description: string
    isActive?: boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationPricingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationPricingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BoostPricingCreateInput = {
    id?: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive?: boolean
    multiplier?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    boosts?: BoostCreateNestedManyWithoutPricingInput
  }

  export type BoostPricingUncheckedCreateInput = {
    id?: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive?: boolean
    multiplier?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    boosts?: BoostUncheckedCreateNestedManyWithoutPricingInput
  }

  export type BoostPricingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    boosts?: BoostUpdateManyWithoutPricingNestedInput
  }

  export type BoostPricingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    boosts?: BoostUncheckedUpdateManyWithoutPricingNestedInput
  }

  export type BoostPricingCreateManyInput = {
    id?: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive?: boolean
    multiplier?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BoostPricingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BoostPricingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostCreateInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostCreateManyInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
  }

  export type PostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TrendingHistoryCreateInput = {
    id?: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
    post: PostCreateNestedOneWithoutTrendingHistoryInput
  }

  export type TrendingHistoryUncheckedCreateInput = {
    id?: string
    postId: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
  }

  export type TrendingHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutTrendingHistoryNestedInput
  }

  export type TrendingHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrendingHistoryCreateManyInput = {
    id?: string
    postId: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
  }

  export type TrendingHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrendingHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChatCreateInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    members?: ChatMemberCreateNestedManyWithoutChatInput
    messages?: MessageCreateNestedManyWithoutChatInput
  }

  export type ChatUncheckedCreateInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    members?: ChatMemberUncheckedCreateNestedManyWithoutChatInput
    messages?: MessageUncheckedCreateNestedManyWithoutChatInput
  }

  export type ChatUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    members?: ChatMemberUpdateManyWithoutChatNestedInput
    messages?: MessageUpdateManyWithoutChatNestedInput
  }

  export type ChatUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    members?: ChatMemberUncheckedUpdateManyWithoutChatNestedInput
    messages?: MessageUncheckedUpdateManyWithoutChatNestedInput
  }

  export type ChatCreateManyInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
  }

  export type ChatUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChatUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChatMemberCreateInput = {
    id?: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
    chat: ChatCreateNestedOneWithoutMembersInput
    user: UserCreateNestedOneWithoutChatMembersInput
  }

  export type ChatMemberUncheckedCreateInput = {
    id?: string
    userId: string
    chatId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type ChatMemberUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
    chat?: ChatUpdateOneRequiredWithoutMembersNestedInput
    user?: UserUpdateOneRequiredWithoutChatMembersNestedInput
  }

  export type ChatMemberUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ChatMemberCreateManyInput = {
    id?: string
    userId: string
    chatId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type ChatMemberUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ChatMemberUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type MessageCreateInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    chat: ChatCreateNestedOneWithoutMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    receiverId?: string | null
    chatId: string
  }

  export type MessageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat?: ChatUpdateOneRequiredWithoutMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type MessageCreateManyInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    receiverId?: string | null
    chatId: string
  }

  export type MessageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type FavoriteCreateInput = {
    id?: string
    isNotified?: boolean
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutFavoritesInput
    user: UserCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateInput = {
    id?: string
    userId: string
    postId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type FavoriteUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutFavoritesNestedInput
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteCreateManyInput = {
    id?: string
    userId: string
    postId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type FavoriteUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeCreateInput = {
    id?: string
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutLikesInput
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateInput = {
    id?: string
    userId: string
    postId: string
    createdAt?: Date | string
  }

  export type LikeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutLikesNestedInput
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeCreateManyInput = {
    id?: string
    userId: string
    postId: string
    createdAt?: Date | string
  }

  export type LikeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    author: EscortCreateNestedOneWithoutReviewsGivenInput
    target: EscortCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    authorId: string
    targetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: EscortUpdateOneRequiredWithoutReviewsGivenNestedInput
    target?: EscortUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    authorId?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewCreateManyInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    authorId: string
    targetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    authorId?: StringFieldUpdateOperationsInput | string
    targetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportCreateInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    author: UserCreateNestedOneWithoutReportsInput
    post?: PostCreateNestedOneWithoutReportsInput
    targetUser?: UserCreateNestedOneWithoutReportsReceivedInput
  }

  export type ReportUncheckedCreateInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    targetUserId?: string | null
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: UserUpdateOneRequiredWithoutReportsNestedInput
    post?: PostUpdateOneWithoutReportsNestedInput
    targetUser?: UserUpdateOneWithoutReportsReceivedNestedInput
  }

  export type ReportUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportCreateManyInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    targetUserId?: string | null
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationCreateInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    userId: string
    createdAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationCreateManyInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    userId: string
    createdAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentCreateInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
    client?: ClientCreateNestedOneWithoutPaymentsInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    clientId?: string | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneWithoutPaymentsNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentCreateManyInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    clientId?: string | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    clientId?: NullableStringFieldUpdateOperationsInput | string | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostCreateInput = {
    id?: string
    isActive?: boolean
    amount?: number
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    post: PostCreateNestedOneWithoutBoostsInput
    pricing: BoostPricingCreateNestedOneWithoutBoostsInput
    user: UserCreateNestedOneWithoutBoostsInput
  }

  export type BoostUncheckedCreateInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    userId: string
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneRequiredWithoutBoostsNestedInput
    pricing?: BoostPricingUpdateOneRequiredWithoutBoostsNestedInput
    user?: UserUpdateOneRequiredWithoutBoostsNestedInput
  }

  export type BoostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostCreateManyInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    userId: string
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AppMetricsCreateInput = {
    id?: string
    totalUsers?: number
    totalEscorts?: number
    totalAgencies?: number
    totalClients?: number
    totalAdmins?: number
    totalPosts?: number
    totalPayments?: number
    totalRevenue?: number
    activeUsers?: number
    bannedUsers?: number
    verifiedEscorts?: number
    premiumClients?: number
    pendingAgencies?: number
    totalVerifications?: number
    expiredVerifications?: number
    totalPointsSold?: number
    totalPointsSpent?: number
    totalBoosts?: number
    pointsRevenue?: number
    dailyLoginStreaks?: number
    totalMessages?: number
    averageSessionTime?: number
    conversionRate?: number
    churnRate?: number
    revenuePerUser?: number
    basicClients?: number
    premiumClientsTier?: number
    vipClients?: number
    dailyActiveUsers?: number
    weeklyActiveUsers?: number
    monthlyActiveUsers?: number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string
    createdAt?: Date | string
  }

  export type AppMetricsUncheckedCreateInput = {
    id?: string
    totalUsers?: number
    totalEscorts?: number
    totalAgencies?: number
    totalClients?: number
    totalAdmins?: number
    totalPosts?: number
    totalPayments?: number
    totalRevenue?: number
    activeUsers?: number
    bannedUsers?: number
    verifiedEscorts?: number
    premiumClients?: number
    pendingAgencies?: number
    totalVerifications?: number
    expiredVerifications?: number
    totalPointsSold?: number
    totalPointsSpent?: number
    totalBoosts?: number
    pointsRevenue?: number
    dailyLoginStreaks?: number
    totalMessages?: number
    averageSessionTime?: number
    conversionRate?: number
    churnRate?: number
    revenuePerUser?: number
    basicClients?: number
    premiumClientsTier?: number
    vipClients?: number
    dailyActiveUsers?: number
    weeklyActiveUsers?: number
    monthlyActiveUsers?: number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string
    createdAt?: Date | string
  }

  export type AppMetricsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    totalEscorts?: IntFieldUpdateOperationsInput | number
    totalAgencies?: IntFieldUpdateOperationsInput | number
    totalClients?: IntFieldUpdateOperationsInput | number
    totalAdmins?: IntFieldUpdateOperationsInput | number
    totalPosts?: IntFieldUpdateOperationsInput | number
    totalPayments?: FloatFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    bannedUsers?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    premiumClients?: IntFieldUpdateOperationsInput | number
    pendingAgencies?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    expiredVerifications?: IntFieldUpdateOperationsInput | number
    totalPointsSold?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    totalBoosts?: IntFieldUpdateOperationsInput | number
    pointsRevenue?: FloatFieldUpdateOperationsInput | number
    dailyLoginStreaks?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    averageSessionTime?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    churnRate?: FloatFieldUpdateOperationsInput | number
    revenuePerUser?: FloatFieldUpdateOperationsInput | number
    basicClients?: IntFieldUpdateOperationsInput | number
    premiumClientsTier?: IntFieldUpdateOperationsInput | number
    vipClients?: IntFieldUpdateOperationsInput | number
    dailyActiveUsers?: IntFieldUpdateOperationsInput | number
    weeklyActiveUsers?: IntFieldUpdateOperationsInput | number
    monthlyActiveUsers?: IntFieldUpdateOperationsInput | number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppMetricsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    totalEscorts?: IntFieldUpdateOperationsInput | number
    totalAgencies?: IntFieldUpdateOperationsInput | number
    totalClients?: IntFieldUpdateOperationsInput | number
    totalAdmins?: IntFieldUpdateOperationsInput | number
    totalPosts?: IntFieldUpdateOperationsInput | number
    totalPayments?: FloatFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    bannedUsers?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    premiumClients?: IntFieldUpdateOperationsInput | number
    pendingAgencies?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    expiredVerifications?: IntFieldUpdateOperationsInput | number
    totalPointsSold?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    totalBoosts?: IntFieldUpdateOperationsInput | number
    pointsRevenue?: FloatFieldUpdateOperationsInput | number
    dailyLoginStreaks?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    averageSessionTime?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    churnRate?: FloatFieldUpdateOperationsInput | number
    revenuePerUser?: FloatFieldUpdateOperationsInput | number
    basicClients?: IntFieldUpdateOperationsInput | number
    premiumClientsTier?: IntFieldUpdateOperationsInput | number
    vipClients?: IntFieldUpdateOperationsInput | number
    dailyActiveUsers?: IntFieldUpdateOperationsInput | number
    weeklyActiveUsers?: IntFieldUpdateOperationsInput | number
    monthlyActiveUsers?: IntFieldUpdateOperationsInput | number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppMetricsCreateManyInput = {
    id?: string
    totalUsers?: number
    totalEscorts?: number
    totalAgencies?: number
    totalClients?: number
    totalAdmins?: number
    totalPosts?: number
    totalPayments?: number
    totalRevenue?: number
    activeUsers?: number
    bannedUsers?: number
    verifiedEscorts?: number
    premiumClients?: number
    pendingAgencies?: number
    totalVerifications?: number
    expiredVerifications?: number
    totalPointsSold?: number
    totalPointsSpent?: number
    totalBoosts?: number
    pointsRevenue?: number
    dailyLoginStreaks?: number
    totalMessages?: number
    averageSessionTime?: number
    conversionRate?: number
    churnRate?: number
    revenuePerUser?: number
    basicClients?: number
    premiumClientsTier?: number
    vipClients?: number
    dailyActiveUsers?: number
    weeklyActiveUsers?: number
    monthlyActiveUsers?: number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: Date | string
    createdAt?: Date | string
  }

  export type AppMetricsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    totalEscorts?: IntFieldUpdateOperationsInput | number
    totalAgencies?: IntFieldUpdateOperationsInput | number
    totalClients?: IntFieldUpdateOperationsInput | number
    totalAdmins?: IntFieldUpdateOperationsInput | number
    totalPosts?: IntFieldUpdateOperationsInput | number
    totalPayments?: FloatFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    bannedUsers?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    premiumClients?: IntFieldUpdateOperationsInput | number
    pendingAgencies?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    expiredVerifications?: IntFieldUpdateOperationsInput | number
    totalPointsSold?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    totalBoosts?: IntFieldUpdateOperationsInput | number
    pointsRevenue?: FloatFieldUpdateOperationsInput | number
    dailyLoginStreaks?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    averageSessionTime?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    churnRate?: FloatFieldUpdateOperationsInput | number
    revenuePerUser?: FloatFieldUpdateOperationsInput | number
    basicClients?: IntFieldUpdateOperationsInput | number
    premiumClientsTier?: IntFieldUpdateOperationsInput | number
    vipClients?: IntFieldUpdateOperationsInput | number
    dailyActiveUsers?: IntFieldUpdateOperationsInput | number
    weeklyActiveUsers?: IntFieldUpdateOperationsInput | number
    monthlyActiveUsers?: IntFieldUpdateOperationsInput | number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AppMetricsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalUsers?: IntFieldUpdateOperationsInput | number
    totalEscorts?: IntFieldUpdateOperationsInput | number
    totalAgencies?: IntFieldUpdateOperationsInput | number
    totalClients?: IntFieldUpdateOperationsInput | number
    totalAdmins?: IntFieldUpdateOperationsInput | number
    totalPosts?: IntFieldUpdateOperationsInput | number
    totalPayments?: FloatFieldUpdateOperationsInput | number
    totalRevenue?: FloatFieldUpdateOperationsInput | number
    activeUsers?: IntFieldUpdateOperationsInput | number
    bannedUsers?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    premiumClients?: IntFieldUpdateOperationsInput | number
    pendingAgencies?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    expiredVerifications?: IntFieldUpdateOperationsInput | number
    totalPointsSold?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    totalBoosts?: IntFieldUpdateOperationsInput | number
    pointsRevenue?: FloatFieldUpdateOperationsInput | number
    dailyLoginStreaks?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    averageSessionTime?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    churnRate?: FloatFieldUpdateOperationsInput | number
    revenuePerUser?: FloatFieldUpdateOperationsInput | number
    basicClients?: IntFieldUpdateOperationsInput | number
    premiumClientsTier?: IntFieldUpdateOperationsInput | number
    vipClients?: IntFieldUpdateOperationsInput | number
    dailyActiveUsers?: IntFieldUpdateOperationsInput | number
    weeklyActiveUsers?: IntFieldUpdateOperationsInput | number
    monthlyActiveUsers?: IntFieldUpdateOperationsInput | number
    topCountries?: NullableJsonNullValueInput | InputJsonValue
    topCities?: NullableJsonNullValueInput | InputJsonValue
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocationCountryStateCityCompoundUniqueInput = {
    country: string
    state: string
    city: string
  }

  export type LocationCountOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type LocationMaxOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type LocationMinOrderByAggregateInput = {
    id?: SortOrder
    country?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type EnumAccountStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusFilter<$PrismaModel> | $Enums.AccountStatus
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AdminNullableRelationFilter = {
    is?: AdminWhereInput | null
    isNot?: AdminWhereInput | null
  }

  export type AgencyNullableRelationFilter = {
    is?: AgencyWhereInput | null
    isNot?: AgencyWhereInput | null
  }

  export type AgencyRegistrationRequestListRelationFilter = {
    every?: AgencyRegistrationRequestWhereInput
    some?: AgencyRegistrationRequestWhereInput
    none?: AgencyRegistrationRequestWhereInput
  }

  export type AgencyRegistrationRequestNullableRelationFilter = {
    is?: AgencyRegistrationRequestWhereInput | null
    isNot?: AgencyRegistrationRequestWhereInput | null
  }

  export type BanListRelationFilter = {
    every?: BanWhereInput
    some?: BanWhereInput
    none?: BanWhereInput
  }

  export type BoostListRelationFilter = {
    every?: BoostWhereInput
    some?: BoostWhereInput
    none?: BoostWhereInput
  }

  export type ChatMemberListRelationFilter = {
    every?: ChatMemberWhereInput
    some?: ChatMemberWhereInput
    none?: ChatMemberWhereInput
  }

  export type ChatRateLimitListRelationFilter = {
    every?: ChatRateLimitWhereInput
    some?: ChatRateLimitWhereInput
    none?: ChatRateLimitWhereInput
  }

  export type ClientNullableRelationFilter = {
    is?: ClientWhereInput | null
    isNot?: ClientWhereInput | null
  }

  export type DeviceTokenListRelationFilter = {
    every?: DeviceTokenWhereInput
    some?: DeviceTokenWhereInput
    none?: DeviceTokenWhereInput
  }

  export type EscortNullableRelationFilter = {
    is?: EscortWhereInput | null
    isNot?: EscortWhereInput | null
  }

  export type FavoriteListRelationFilter = {
    every?: FavoriteWhereInput
    some?: FavoriteWhereInput
    none?: FavoriteWhereInput
  }

  export type IdentityVerificationNullableRelationFilter = {
    is?: IdentityVerificationWhereInput | null
    isNot?: IdentityVerificationWhereInput | null
  }

  export type LikeListRelationFilter = {
    every?: LikeWhereInput
    some?: LikeWhereInput
    none?: LikeWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type ReportListRelationFilter = {
    every?: ReportWhereInput
    some?: ReportWhereInput
    none?: ReportWhereInput
  }

  export type SearchHistoryListRelationFilter = {
    every?: SearchHistoryWhereInput
    some?: SearchHistoryWhereInput
    none?: SearchHistoryWhereInput
  }

  export type SubscriptionListRelationFilter = {
    every?: SubscriptionWhereInput
    some?: SubscriptionWhereInput
    none?: SubscriptionWhereInput
  }

  export type UserBlockListRelationFilter = {
    every?: UserBlockWhereInput
    some?: UserBlockWhereInput
    none?: UserBlockWhereInput
  }

  export type UserInteractionListRelationFilter = {
    every?: UserInteractionWhereInput
    some?: UserInteractionWhereInput
    none?: UserInteractionWhereInput
  }

  export type UserReputationNullableRelationFilter = {
    is?: UserReputationWhereInput | null
    isNot?: UserReputationWhereInput | null
  }

  export type UserSettingsNullableRelationFilter = {
    is?: UserSettingsWhereInput | null
    isNot?: UserSettingsWhereInput | null
  }

  export type LocationNullableRelationFilter = {
    is?: LocationWhereInput | null
    isNot?: LocationWhereInput | null
  }

  export type AgencyRegistrationRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BanOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BoostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChatMemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChatRateLimitOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DeviceTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoriteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LikeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReportOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SearchHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubscriptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserBlockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserInteractionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    phone?: SortOrder
    bio?: SortOrder
    website?: SortOrder
    userType?: SortOrder
    accountStatus?: SortOrder
    canLogin?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    profileViews?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpiry?: SortOrder
    emailVerificationToken?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    locationId?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    lastLoginIP?: SortOrder
    lastDailyReset?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLogin?: SortOrder
    lastActiveAt?: SortOrder
    deletedAt?: SortOrder
    deletionReason?: SortOrder
    googleId?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    profileViews?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    phone?: SortOrder
    bio?: SortOrder
    website?: SortOrder
    userType?: SortOrder
    accountStatus?: SortOrder
    canLogin?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    profileViews?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpiry?: SortOrder
    emailVerificationToken?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    locationId?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    lastLoginIP?: SortOrder
    lastDailyReset?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLogin?: SortOrder
    lastActiveAt?: SortOrder
    deletedAt?: SortOrder
    deletionReason?: SortOrder
    googleId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    username?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    avatar?: SortOrder
    phone?: SortOrder
    bio?: SortOrder
    website?: SortOrder
    userType?: SortOrder
    accountStatus?: SortOrder
    canLogin?: SortOrder
    isActive?: SortOrder
    isBanned?: SortOrder
    banReason?: SortOrder
    profileViews?: SortOrder
    passwordResetToken?: SortOrder
    passwordResetExpiry?: SortOrder
    emailVerificationToken?: SortOrder
    emailVerified?: SortOrder
    emailVerifiedAt?: SortOrder
    locationId?: SortOrder
    timezone?: SortOrder
    language?: SortOrder
    lastLoginIP?: SortOrder
    lastDailyReset?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastLogin?: SortOrder
    lastActiveAt?: SortOrder
    deletedAt?: SortOrder
    deletionReason?: SortOrder
    googleId?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    profileViews?: SortOrder
  }

  export type EnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type EnumAccountStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel> | $Enums.AccountStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountStatusFilter<$PrismaModel>
    _max?: NestedEnumAccountStatusFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumAgencyRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRequestStatus | EnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRequestStatusFilter<$PrismaModel> | $Enums.AgencyRequestStatus
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type AgencyRegistrationRequestCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fullName?: SortOrder
    documentNumber?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    documentFrontImage?: SortOrder
    documentBackImage?: SortOrder
    reviewNotes?: SortOrder
    rejectionReason?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    status?: SortOrder
  }

  export type AgencyRegistrationRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fullName?: SortOrder
    documentNumber?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    documentFrontImage?: SortOrder
    documentBackImage?: SortOrder
    reviewNotes?: SortOrder
    rejectionReason?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    status?: SortOrder
  }

  export type AgencyRegistrationRequestMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fullName?: SortOrder
    documentNumber?: SortOrder
    businessPhone?: SortOrder
    businessEmail?: SortOrder
    documentFrontImage?: SortOrder
    documentBackImage?: SortOrder
    reviewNotes?: SortOrder
    rejectionReason?: SortOrder
    submittedAt?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    status?: SortOrder
  }

  export type EnumAgencyRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRequestStatus | EnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.AgencyRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumAgencyRequestStatusFilter<$PrismaModel>
  }

  export type EnumContentFilterLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.ContentFilterLevel | EnumContentFilterLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumContentFilterLevelFilter<$PrismaModel> | $Enums.ContentFilterLevel
  }

  export type UserSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    messageNotifications?: SortOrder
    likeNotifications?: SortOrder
    boostNotifications?: SortOrder
    profileReminders?: SortOrder
    verificationReminders?: SortOrder
    showOnline?: SortOrder
    showLastSeen?: SortOrder
    allowDirectMessages?: SortOrder
    showPhoneNumber?: SortOrder
    showInDiscovery?: SortOrder
    showInTrending?: SortOrder
    showInSearch?: SortOrder
    contentFilter?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    messageNotifications?: SortOrder
    likeNotifications?: SortOrder
    boostNotifications?: SortOrder
    profileReminders?: SortOrder
    verificationReminders?: SortOrder
    showOnline?: SortOrder
    showLastSeen?: SortOrder
    allowDirectMessages?: SortOrder
    showPhoneNumber?: SortOrder
    showInDiscovery?: SortOrder
    showInTrending?: SortOrder
    showInSearch?: SortOrder
    contentFilter?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    emailNotifications?: SortOrder
    pushNotifications?: SortOrder
    messageNotifications?: SortOrder
    likeNotifications?: SortOrder
    boostNotifications?: SortOrder
    profileReminders?: SortOrder
    verificationReminders?: SortOrder
    showOnline?: SortOrder
    showLastSeen?: SortOrder
    allowDirectMessages?: SortOrder
    showPhoneNumber?: SortOrder
    showInDiscovery?: SortOrder
    showInTrending?: SortOrder
    showInSearch?: SortOrder
    contentFilter?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumContentFilterLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContentFilterLevel | EnumContentFilterLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumContentFilterLevelWithAggregatesFilter<$PrismaModel> | $Enums.ContentFilterLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContentFilterLevelFilter<$PrismaModel>
    _max?: NestedEnumContentFilterLevelFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DeviceTokenCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    platform?: SortOrder
    deviceInfo?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastUsedAt?: SortOrder
  }

  export type DeviceTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    platform?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastUsedAt?: SortOrder
  }

  export type DeviceTokenMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    token?: SortOrder
    platform?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    lastUsedAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type SearchHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    query?: SortOrder
    filters?: SortOrder
    results?: SortOrder
    clicked?: SortOrder
    createdAt?: SortOrder
  }

  export type SearchHistoryAvgOrderByAggregateInput = {
    results?: SortOrder
  }

  export type SearchHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    query?: SortOrder
    results?: SortOrder
    clicked?: SortOrder
    createdAt?: SortOrder
  }

  export type SearchHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    query?: SortOrder
    results?: SortOrder
    clicked?: SortOrder
    createdAt?: SortOrder
  }

  export type SearchHistorySumOrderByAggregateInput = {
    results?: SortOrder
  }

  export type UserBlockBlockerIdBlockedIdCompoundUniqueInput = {
    blockerId: string
    blockedId: string
  }

  export type UserBlockCountOrderByAggregateInput = {
    id?: SortOrder
    blockerId?: SortOrder
    blockedId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type UserBlockMaxOrderByAggregateInput = {
    id?: SortOrder
    blockerId?: SortOrder
    blockedId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type UserBlockMinOrderByAggregateInput = {
    id?: SortOrder
    blockerId?: SortOrder
    blockedId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type EnumVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusFilter<$PrismaModel> | $Enums.VerificationStatus
  }

  export type IdentityVerificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    documentImages?: SortOrder
    selfieImage?: SortOrder
    status?: SortOrder
    verifiedBy?: SortOrder
    rejectionReason?: SortOrder
    notes?: SortOrder
    submittedAt?: SortOrder
    completedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type IdentityVerificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    selfieImage?: SortOrder
    status?: SortOrder
    verifiedBy?: SortOrder
    rejectionReason?: SortOrder
    notes?: SortOrder
    submittedAt?: SortOrder
    completedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type IdentityVerificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    documentType?: SortOrder
    documentNumber?: SortOrder
    selfieImage?: SortOrder
    status?: SortOrder
    verifiedBy?: SortOrder
    rejectionReason?: SortOrder
    notes?: SortOrder
    submittedAt?: SortOrder
    completedAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type EnumVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.VerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumVerificationStatusFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SubscriptionPlanCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    duration?: SortOrder
    features?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrder
    maxImages?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionPlanAvgOrderByAggregateInput = {
    price?: SortOrder
    duration?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrder
    maxImages?: SortOrder
    maxBoosts?: SortOrder
  }

  export type SubscriptionPlanMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    duration?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrder
    maxImages?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionPlanMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    duration?: SortOrder
    isActive?: SortOrder
    userType?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrder
    maxImages?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionPlanSumOrderByAggregateInput = {
    price?: SortOrder
    duration?: SortOrder
    priority?: SortOrder
    maxPosts?: SortOrder
    maxImages?: SortOrder
    maxBoosts?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type SubscriptionPlanRelationFilter = {
    is?: SubscriptionPlanWhereInput
    isNot?: SubscriptionPlanWhereInput
  }

  export type SubscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    stripeSubscriptionId?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
    startsAt?: SortOrder
    endsAt?: SortOrder
    cancelledAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionAvgOrderByAggregateInput = {
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
  }

  export type SubscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    stripeSubscriptionId?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
    startsAt?: SortOrder
    endsAt?: SortOrder
    cancelledAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    planId?: SortOrder
    status?: SortOrder
    stripeSubscriptionId?: SortOrder
    currentPeriodStart?: SortOrder
    currentPeriodEnd?: SortOrder
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
    startsAt?: SortOrder
    endsAt?: SortOrder
    cancelledAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SubscriptionSumOrderByAggregateInput = {
    postsUsed?: SortOrder
    imagesUsed?: SortOrder
    boostsUsed?: SortOrder
  }

  export type EnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type EnumTagCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.TagCategory | EnumTagCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumTagCategoryFilter<$PrismaModel> | $Enums.TagCategory
  }

  export type PostTagListRelationFilter = {
    every?: PostTagWhereInput
    some?: PostTagWhereInput
    none?: PostTagWhereInput
  }

  export type PostTagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    icon?: SortOrder
    isActive?: SortOrder
    usageCount?: SortOrder
    category?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TagAvgOrderByAggregateInput = {
    usageCount?: SortOrder
    priority?: SortOrder
  }

  export type TagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    icon?: SortOrder
    isActive?: SortOrder
    usageCount?: SortOrder
    category?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    color?: SortOrder
    icon?: SortOrder
    isActive?: SortOrder
    usageCount?: SortOrder
    category?: SortOrder
    priority?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TagSumOrderByAggregateInput = {
    usageCount?: SortOrder
    priority?: SortOrder
  }

  export type EnumTagCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TagCategory | EnumTagCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumTagCategoryWithAggregatesFilter<$PrismaModel> | $Enums.TagCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTagCategoryFilter<$PrismaModel>
    _max?: NestedEnumTagCategoryFilter<$PrismaModel>
  }

  export type PostRelationFilter = {
    is?: PostWhereInput
    isNot?: PostWhereInput
  }

  export type TagRelationFilter = {
    is?: TagWhereInput
    isNot?: TagWhereInput
  }

  export type PostTagPostIdTagIdCompoundUniqueInput = {
    postId: string
    tagId: string
  }

  export type PostTagCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    tagId?: SortOrder
    createdAt?: SortOrder
  }

  export type PostTagMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    tagId?: SortOrder
    createdAt?: SortOrder
  }

  export type PostTagMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    tagId?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumAdminRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminRole | EnumAdminRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminRoleFilter<$PrismaModel> | $Enums.AdminRole
  }

  export type AdminCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
    canDeletePosts?: SortOrder
    canBanUsers?: SortOrder
    canModifyPrices?: SortOrder
    canAccessMetrics?: SortOrder
    canApproveAgencies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdminAvgOrderByAggregateInput = {
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
  }

  export type AdminMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
    canDeletePosts?: SortOrder
    canBanUsers?: SortOrder
    canModifyPrices?: SortOrder
    canAccessMetrics?: SortOrder
    canApproveAgencies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdminMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
    canDeletePosts?: SortOrder
    canBanUsers?: SortOrder
    canModifyPrices?: SortOrder
    canAccessMetrics?: SortOrder
    canApproveAgencies?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdminSumOrderByAggregateInput = {
    totalBans?: SortOrder
    totalReports?: SortOrder
    totalVerifications?: SortOrder
    totalAgencyApprovals?: SortOrder
  }

  export type EnumAdminRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminRole | EnumAdminRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminRoleWithAggregatesFilter<$PrismaModel> | $Enums.AdminRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAdminRoleFilter<$PrismaModel>
    _max?: NestedEnumAdminRoleFilter<$PrismaModel>
  }

  export type UserReputationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserReputationAvgOrderByAggregateInput = {
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
  }

  export type UserReputationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserReputationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserReputationSumOrderByAggregateInput = {
    overallScore?: SortOrder
    responseRate?: SortOrder
    averageResponseTime?: SortOrder
    profileCompleteness?: SortOrder
    trustScore?: SortOrder
    totalViews?: SortOrder
    totalLikes?: SortOrder
    totalMessages?: SortOrder
    totalFavorites?: SortOrder
    discoveryScore?: SortOrder
    trendingScore?: SortOrder
    qualityScore?: SortOrder
    spamScore?: SortOrder
    reportScore?: SortOrder
  }

  export type AgencyInvitationListRelationFilter = {
    every?: AgencyInvitationWhereInput
    some?: AgencyInvitationWhereInput
    none?: AgencyInvitationWhereInput
  }

  export type AgencyMembershipListRelationFilter = {
    every?: AgencyMembershipWhereInput
    some?: AgencyMembershipWhereInput
    none?: AgencyMembershipWhereInput
  }

  export type ClientReviewListRelationFilter = {
    every?: ClientReviewWhereInput
    some?: ClientReviewWhereInput
    none?: ClientReviewWhereInput
  }

  export type EscortVerificationListRelationFilter = {
    every?: EscortVerificationWhereInput
    some?: EscortVerificationWhereInput
    none?: EscortVerificationWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type AgencyInvitationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AgencyMembershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EscortVerificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EscortCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    verificationExpiresAt?: SortOrder
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    bodyType?: SortOrder
    ethnicity?: SortOrder
    hairColor?: SortOrder
    eyeColor?: SortOrder
    rates?: SortOrder
    availability?: SortOrder
    languages?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
    services?: SortOrder
  }

  export type EscortAvgOrderByAggregateInput = {
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
  }

  export type EscortMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    verificationExpiresAt?: SortOrder
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    bodyType?: SortOrder
    ethnicity?: SortOrder
    hairColor?: SortOrder
    eyeColor?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
  }

  export type EscortMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    verificationExpiresAt?: SortOrder
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    bodyType?: SortOrder
    ethnicity?: SortOrder
    hairColor?: SortOrder
    eyeColor?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
  }

  export type EscortSumOrderByAggregateInput = {
    rating?: SortOrder
    totalRatings?: SortOrder
    age?: SortOrder
    maxPosts?: SortOrder
    currentPosts?: SortOrder
    totalBookings?: SortOrder
    completedBookings?: SortOrder
  }

  export type AgencyCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    companyName?: SortOrder
    businessLicense?: SortOrder
    contactPerson?: SortOrder
    address?: SortOrder
    cedulaFrente?: SortOrder
    cedulaTrasera?: SortOrder
    verificationStatus?: SortOrder
    taxId?: SortOrder
    maxPosts?: SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
  }

  export type AgencyAvgOrderByAggregateInput = {
    maxPosts?: SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
  }

  export type AgencyMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    companyName?: SortOrder
    businessLicense?: SortOrder
    contactPerson?: SortOrder
    address?: SortOrder
    cedulaFrente?: SortOrder
    cedulaTrasera?: SortOrder
    verificationStatus?: SortOrder
    taxId?: SortOrder
    maxPosts?: SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
  }

  export type AgencyMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    isVerified?: SortOrder
    verifiedAt?: SortOrder
    companyName?: SortOrder
    businessLicense?: SortOrder
    contactPerson?: SortOrder
    address?: SortOrder
    cedulaFrente?: SortOrder
    cedulaTrasera?: SortOrder
    verificationStatus?: SortOrder
    taxId?: SortOrder
    maxPosts?: SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
  }

  export type AgencySumOrderByAggregateInput = {
    maxPosts?: SortOrder
    totalEscorts?: SortOrder
    verifiedEscorts?: SortOrder
    totalVerifications?: SortOrder
    activeEscorts?: SortOrder
    defaultCommissionRate?: SortOrder
  }

  export type EnumPremiumTierFilter<$PrismaModel = never> = {
    equals?: $Enums.PremiumTier | EnumPremiumTierFieldRefInput<$PrismaModel>
    in?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPremiumTierFilter<$PrismaModel> | $Enums.PremiumTier
  }

  export type PaymentListRelationFilter = {
    every?: PaymentWhereInput
    some?: PaymentWhereInput
    none?: PaymentWhereInput
  }

  export type PointTransactionListRelationFilter = {
    every?: PointTransactionWhereInput
    some?: PointTransactionWhereInput
    none?: PointTransactionWhereInput
  }

  export type PointsHistoryListRelationFilter = {
    every?: PointsHistoryWhereInput
    some?: PointsHistoryWhereInput
    none?: PointsHistoryWhereInput
  }

  export type PointsPurchaseListRelationFilter = {
    every?: PointsPurchaseWhereInput
    some?: PointsPurchaseWhereInput
    none?: PointsPurchaseWhereInput
  }

  export type PremiumActivationListRelationFilter = {
    every?: PremiumActivationWhereInput
    some?: PremiumActivationWhereInput
    none?: PremiumActivationWhereInput
  }

  export type PaymentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PointTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PointsHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PointsPurchaseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PremiumActivationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ClientCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    points?: SortOrder
    isPremium?: SortOrder
    premiumUntil?: SortOrder
    premiumTier?: SortOrder
    chatPriorityUntil?: SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    canViewPhoneNumbers?: SortOrder
    canSendImages?: SortOrder
    canSendVoiceMessages?: SortOrder
    prioritySupport?: SortOrder
    canSeeOnlineStatus?: SortOrder
    totalMessagesUsed?: SortOrder
    lastMessageReset?: SortOrder
    canAccessPremiumProfiles?: SortOrder
    lastDailyPointsClaim?: SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    pointsLastUpdated?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrder
    agePreferenceMax?: SortOrder
    locationPreference?: SortOrder
  }

  export type ClientAvgOrderByAggregateInput = {
    points?: SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    totalMessagesUsed?: SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrder
    agePreferenceMax?: SortOrder
  }

  export type ClientMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    points?: SortOrder
    isPremium?: SortOrder
    premiumUntil?: SortOrder
    premiumTier?: SortOrder
    chatPriorityUntil?: SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    canViewPhoneNumbers?: SortOrder
    canSendImages?: SortOrder
    canSendVoiceMessages?: SortOrder
    prioritySupport?: SortOrder
    canSeeOnlineStatus?: SortOrder
    totalMessagesUsed?: SortOrder
    lastMessageReset?: SortOrder
    canAccessPremiumProfiles?: SortOrder
    lastDailyPointsClaim?: SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    pointsLastUpdated?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrder
    agePreferenceMax?: SortOrder
    locationPreference?: SortOrder
  }

  export type ClientMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    points?: SortOrder
    isPremium?: SortOrder
    premiumUntil?: SortOrder
    premiumTier?: SortOrder
    chatPriorityUntil?: SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    canViewPhoneNumbers?: SortOrder
    canSendImages?: SortOrder
    canSendVoiceMessages?: SortOrder
    prioritySupport?: SortOrder
    canSeeOnlineStatus?: SortOrder
    totalMessagesUsed?: SortOrder
    lastMessageReset?: SortOrder
    canAccessPremiumProfiles?: SortOrder
    lastDailyPointsClaim?: SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    pointsLastUpdated?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrder
    agePreferenceMax?: SortOrder
    locationPreference?: SortOrder
  }

  export type ClientSumOrderByAggregateInput = {
    points?: SortOrder
    maxFavorites?: SortOrder
    currentFavorites?: SortOrder
    dailyMessageLimit?: SortOrder
    messagesUsedToday?: SortOrder
    totalMessagesUsed?: SortOrder
    dailyLoginStreak?: SortOrder
    totalDailyPointsEarned?: SortOrder
    totalPointsEarned?: SortOrder
    totalPointsSpent?: SortOrder
    totalPointsPurchased?: SortOrder
    agePreferenceMin?: SortOrder
    agePreferenceMax?: SortOrder
  }

  export type EnumPremiumTierWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PremiumTier | EnumPremiumTierFieldRefInput<$PrismaModel>
    in?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPremiumTierWithAggregatesFilter<$PrismaModel> | $Enums.PremiumTier
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPremiumTierFilter<$PrismaModel>
    _max?: NestedEnumPremiumTierFilter<$PrismaModel>
  }

  export type PointsPackageCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
    isActive?: SortOrder
    isPopular?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PointsPackageAvgOrderByAggregateInput = {
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
  }

  export type PointsPackageMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
    isActive?: SortOrder
    isPopular?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PointsPackageMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
    isActive?: SortOrder
    isPopular?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PointsPackageSumOrderByAggregateInput = {
    points?: SortOrder
    price?: SortOrder
    bonus?: SortOrder
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type ClientRelationFilter = {
    is?: ClientWhereInput
    isNot?: ClientWhereInput
  }

  export type PointsPackageRelationFilter = {
    is?: PointsPackageWhereInput
    isNot?: PointsPackageWhereInput
  }

  export type PointsPurchaseCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    packageId?: SortOrder
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
    status?: SortOrder
    stripePaymentId?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PointsPurchaseAvgOrderByAggregateInput = {
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
  }

  export type PointsPurchaseMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    packageId?: SortOrder
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
    status?: SortOrder
    stripePaymentId?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PointsPurchaseMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    packageId?: SortOrder
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
    status?: SortOrder
    stripePaymentId?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PointsPurchaseSumOrderByAggregateInput = {
    pointsPurchased?: SortOrder
    bonusPoints?: SortOrder
    totalPoints?: SortOrder
    amountPaid?: SortOrder
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumPointTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PointTransactionType | EnumPointTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPointTransactionTypeFilter<$PrismaModel> | $Enums.PointTransactionType
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type PointTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    postId?: SortOrder
    messageId?: SortOrder
    paymentId?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type PointTransactionAvgOrderByAggregateInput = {
    amount?: SortOrder
    cost?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
  }

  export type PointTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    postId?: SortOrder
    messageId?: SortOrder
    paymentId?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type PointTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    amount?: SortOrder
    type?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    postId?: SortOrder
    messageId?: SortOrder
    paymentId?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    source?: SortOrder
    createdAt?: SortOrder
  }

  export type PointTransactionSumOrderByAggregateInput = {
    amount?: SortOrder
    cost?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
  }

  export type EnumPointTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PointTransactionType | EnumPointTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPointTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PointTransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPointTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumPointTransactionTypeFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type PointsHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    metadata?: SortOrder
    source?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    createdAt?: SortOrder
  }

  export type PointsHistoryAvgOrderByAggregateInput = {
    amount?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
  }

  export type PointsHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    source?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    createdAt?: SortOrder
  }

  export type PointsHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    type?: SortOrder
    amount?: SortOrder
    description?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
    source?: SortOrder
    purchaseId?: SortOrder
    actionId?: SortOrder
    createdAt?: SortOrder
  }

  export type PointsHistorySumOrderByAggregateInput = {
    amount?: SortOrder
    balanceBefore?: SortOrder
    balanceAfter?: SortOrder
  }

  export type PremiumActivationCountOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    tier?: SortOrder
    duration?: SortOrder
    pointsCost?: SortOrder
    activatedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
    activatedBy?: SortOrder
  }

  export type PremiumActivationAvgOrderByAggregateInput = {
    duration?: SortOrder
    pointsCost?: SortOrder
  }

  export type PremiumActivationMaxOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    tier?: SortOrder
    duration?: SortOrder
    pointsCost?: SortOrder
    activatedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
    activatedBy?: SortOrder
  }

  export type PremiumActivationMinOrderByAggregateInput = {
    id?: SortOrder
    clientId?: SortOrder
    tier?: SortOrder
    duration?: SortOrder
    pointsCost?: SortOrder
    activatedAt?: SortOrder
    expiresAt?: SortOrder
    isActive?: SortOrder
    activatedBy?: SortOrder
  }

  export type PremiumActivationSumOrderByAggregateInput = {
    duration?: SortOrder
    pointsCost?: SortOrder
  }

  export type EscortRelationFilter = {
    is?: EscortWhereInput
    isNot?: EscortWhereInput
  }

  export type ClientReviewClientIdEscortIdCompoundUniqueInput = {
    clientId: string
    escortId: string
  }

  export type ClientReviewCountOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    communication?: SortOrder
    punctuality?: SortOrder
    appearance?: SortOrder
    overall?: SortOrder
    service?: SortOrder
    value?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ClientReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
    communication?: SortOrder
    punctuality?: SortOrder
    appearance?: SortOrder
    overall?: SortOrder
    service?: SortOrder
    value?: SortOrder
  }

  export type ClientReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    communication?: SortOrder
    punctuality?: SortOrder
    appearance?: SortOrder
    overall?: SortOrder
    service?: SortOrder
    value?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ClientReviewMinOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    communication?: SortOrder
    punctuality?: SortOrder
    appearance?: SortOrder
    overall?: SortOrder
    service?: SortOrder
    value?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ClientReviewSumOrderByAggregateInput = {
    rating?: SortOrder
    communication?: SortOrder
    punctuality?: SortOrder
    appearance?: SortOrder
    overall?: SortOrder
    service?: SortOrder
    value?: SortOrder
  }

  export type EnumBanSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.BanSeverity | EnumBanSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumBanSeverityFilter<$PrismaModel> | $Enums.BanSeverity
  }

  export type BanAppealListRelationFilter = {
    every?: BanAppealWhereInput
    some?: BanAppealWhereInput
    none?: BanAppealWhereInput
  }

  export type BanAppealOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BanCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reason?: SortOrder
    bannedBy?: SortOrder
    adminId?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    severity?: SortOrder
    evidence?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BanMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reason?: SortOrder
    bannedBy?: SortOrder
    adminId?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BanMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reason?: SortOrder
    bannedBy?: SortOrder
    adminId?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    severity?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumBanSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BanSeverity | EnumBanSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumBanSeverityWithAggregatesFilter<$PrismaModel> | $Enums.BanSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBanSeverityFilter<$PrismaModel>
    _max?: NestedEnumBanSeverityFilter<$PrismaModel>
  }

  export type EnumAppealStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AppealStatus | EnumAppealStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAppealStatusFilter<$PrismaModel> | $Enums.AppealStatus
  }

  export type BanRelationFilter = {
    is?: BanWhereInput
    isNot?: BanWhereInput
  }

  export type BanAppealCountOrderByAggregateInput = {
    id?: SortOrder
    banId?: SortOrder
    reason?: SortOrder
    evidence?: SortOrder
    status?: SortOrder
    reviewedBy?: SortOrder
    reviewNotes?: SortOrder
    createdAt?: SortOrder
    reviewedAt?: SortOrder
  }

  export type BanAppealMaxOrderByAggregateInput = {
    id?: SortOrder
    banId?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    reviewedBy?: SortOrder
    reviewNotes?: SortOrder
    createdAt?: SortOrder
    reviewedAt?: SortOrder
  }

  export type BanAppealMinOrderByAggregateInput = {
    id?: SortOrder
    banId?: SortOrder
    reason?: SortOrder
    status?: SortOrder
    reviewedBy?: SortOrder
    reviewNotes?: SortOrder
    createdAt?: SortOrder
    reviewedAt?: SortOrder
  }

  export type EnumAppealStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppealStatus | EnumAppealStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAppealStatusWithAggregatesFilter<$PrismaModel> | $Enums.AppealStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppealStatusFilter<$PrismaModel>
    _max?: NestedEnumAppealStatusFilter<$PrismaModel>
  }

  export type EnumInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeFilter<$PrismaModel> | $Enums.InteractionType
  }

  export type PostNullableRelationFilter = {
    is?: PostWhereInput | null
    isNot?: PostWhereInput | null
  }

  export type UserInteractionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    type?: SortOrder
    weight?: SortOrder
    duration?: SortOrder
    whatsappOpened?: SortOrder
    deviceType?: SortOrder
    source?: SortOrder
    location?: SortOrder
    sessionId?: SortOrder
    userAgent?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type UserInteractionAvgOrderByAggregateInput = {
    weight?: SortOrder
    duration?: SortOrder
  }

  export type UserInteractionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    type?: SortOrder
    weight?: SortOrder
    duration?: SortOrder
    whatsappOpened?: SortOrder
    deviceType?: SortOrder
    source?: SortOrder
    location?: SortOrder
    sessionId?: SortOrder
    userAgent?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type UserInteractionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    type?: SortOrder
    weight?: SortOrder
    duration?: SortOrder
    whatsappOpened?: SortOrder
    deviceType?: SortOrder
    source?: SortOrder
    location?: SortOrder
    sessionId?: SortOrder
    userAgent?: SortOrder
    metadata?: SortOrder
    createdAt?: SortOrder
  }

  export type UserInteractionSumOrderByAggregateInput = {
    weight?: SortOrder
    duration?: SortOrder
  }

  export type EnumInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumInteractionTypeFilter<$PrismaModel>
  }

  export type EnumRateLimitTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RateLimitType | EnumRateLimitTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRateLimitTypeFilter<$PrismaModel> | $Enums.RateLimitType
  }

  export type ChatRateLimitUserIdLimitTypeCompoundUniqueInput = {
    userId: string
    limitType: $Enums.RateLimitType
  }

  export type ChatRateLimitCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    count?: SortOrder
    windowStart?: SortOrder
    limitType?: SortOrder
  }

  export type ChatRateLimitAvgOrderByAggregateInput = {
    count?: SortOrder
  }

  export type ChatRateLimitMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    count?: SortOrder
    windowStart?: SortOrder
    limitType?: SortOrder
  }

  export type ChatRateLimitMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    count?: SortOrder
    windowStart?: SortOrder
    limitType?: SortOrder
  }

  export type ChatRateLimitSumOrderByAggregateInput = {
    count?: SortOrder
  }

  export type EnumRateLimitTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RateLimitType | EnumRateLimitTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRateLimitTypeWithAggregatesFilter<$PrismaModel> | $Enums.RateLimitType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRateLimitTypeFilter<$PrismaModel>
    _max?: NestedEnumRateLimitTypeFilter<$PrismaModel>
  }

  export type EnumMembershipStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipStatus | EnumMembershipStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipStatusFilter<$PrismaModel> | $Enums.MembershipStatus
  }

  export type EnumAgencyRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRole | EnumAgencyRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRoleFilter<$PrismaModel> | $Enums.AgencyRole
  }

  export type AgencyRelationFilter = {
    is?: AgencyWhereInput
    isNot?: AgencyWhereInput
  }

  export type AgencyMembershipEscortIdAgencyIdCompoundUniqueInput = {
    escortId: string
    agencyId: string
  }

  export type AgencyMembershipCountOrderByAggregateInput = {
    id?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    status?: SortOrder
    role?: SortOrder
    commissionRate?: SortOrder
    canPostForAgency?: SortOrder
    canManageEscorts?: SortOrder
    canAccessFinances?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyMembershipAvgOrderByAggregateInput = {
    commissionRate?: SortOrder
  }

  export type AgencyMembershipMaxOrderByAggregateInput = {
    id?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    status?: SortOrder
    role?: SortOrder
    commissionRate?: SortOrder
    canPostForAgency?: SortOrder
    canManageEscorts?: SortOrder
    canAccessFinances?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyMembershipMinOrderByAggregateInput = {
    id?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    status?: SortOrder
    role?: SortOrder
    commissionRate?: SortOrder
    canPostForAgency?: SortOrder
    canManageEscorts?: SortOrder
    canAccessFinances?: SortOrder
    approvedBy?: SortOrder
    approvedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyMembershipSumOrderByAggregateInput = {
    commissionRate?: SortOrder
  }

  export type EnumMembershipStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipStatus | EnumMembershipStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipStatusWithAggregatesFilter<$PrismaModel> | $Enums.MembershipStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMembershipStatusFilter<$PrismaModel>
    _max?: NestedEnumMembershipStatusFilter<$PrismaModel>
  }

  export type EnumAgencyRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRole | EnumAgencyRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRoleWithAggregatesFilter<$PrismaModel> | $Enums.AgencyRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyRoleFilter<$PrismaModel>
    _max?: NestedEnumAgencyRoleFilter<$PrismaModel>
  }

  export type EnumInvitationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusFilter<$PrismaModel> | $Enums.InvitationStatus
  }

  export type AgencyInvitationAgencyIdEscortIdCompoundUniqueInput = {
    agencyId: string
    escortId: string
  }

  export type AgencyInvitationCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    status?: SortOrder
    message?: SortOrder
    proposedCommission?: SortOrder
    proposedRole?: SortOrder
    proposedBenefits?: SortOrder
    invitedBy?: SortOrder
    respondedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyInvitationAvgOrderByAggregateInput = {
    proposedCommission?: SortOrder
  }

  export type AgencyInvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    status?: SortOrder
    message?: SortOrder
    proposedCommission?: SortOrder
    proposedRole?: SortOrder
    invitedBy?: SortOrder
    respondedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyInvitationMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    status?: SortOrder
    message?: SortOrder
    proposedCommission?: SortOrder
    proposedRole?: SortOrder
    invitedBy?: SortOrder
    respondedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type AgencyInvitationSumOrderByAggregateInput = {
    proposedCommission?: SortOrder
  }

  export type EnumInvitationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvitationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvitationStatusFilter<$PrismaModel>
    _max?: NestedEnumInvitationStatusFilter<$PrismaModel>
  }

  export type VerificationPricingRelationFilter = {
    is?: VerificationPricingWhereInput
    isNot?: VerificationPricingWhereInput
  }

  export type EscortVerificationCountOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    pricingId?: SortOrder
    status?: SortOrder
    membershipId?: SortOrder
    startsAt?: SortOrder
    expiresAt?: SortOrder
    isAutoRenewal?: SortOrder
    reminderSent?: SortOrder
    documentsSubmitted?: SortOrder
    verificationNotes?: SortOrder
    rejectionReason?: SortOrder
    verificationSteps?: SortOrder
    verifiedBy?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type EscortVerificationMaxOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    pricingId?: SortOrder
    status?: SortOrder
    membershipId?: SortOrder
    startsAt?: SortOrder
    expiresAt?: SortOrder
    isAutoRenewal?: SortOrder
    reminderSent?: SortOrder
    verificationNotes?: SortOrder
    rejectionReason?: SortOrder
    verifiedBy?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type EscortVerificationMinOrderByAggregateInput = {
    id?: SortOrder
    agencyId?: SortOrder
    escortId?: SortOrder
    pricingId?: SortOrder
    status?: SortOrder
    membershipId?: SortOrder
    startsAt?: SortOrder
    expiresAt?: SortOrder
    isAutoRenewal?: SortOrder
    reminderSent?: SortOrder
    verificationNotes?: SortOrder
    rejectionReason?: SortOrder
    verifiedBy?: SortOrder
    createdAt?: SortOrder
    completedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type VerificationPricingCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cost?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    features?: SortOrder
    duration?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationPricingAvgOrderByAggregateInput = {
    cost?: SortOrder
    duration?: SortOrder
  }

  export type VerificationPricingMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cost?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    duration?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationPricingMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    cost?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    duration?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationPricingSumOrderByAggregateInput = {
    cost?: SortOrder
    duration?: SortOrder
  }

  export type EnumBoostTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BoostType | EnumBoostTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBoostTypeFilter<$PrismaModel> | $Enums.BoostType
  }

  export type BoostPricingCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    isActive?: SortOrder
    multiplier?: SortOrder
    features?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BoostPricingAvgOrderByAggregateInput = {
    duration?: SortOrder
    price?: SortOrder
    multiplier?: SortOrder
    maxBoosts?: SortOrder
  }

  export type BoostPricingMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    isActive?: SortOrder
    multiplier?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BoostPricingMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    duration?: SortOrder
    price?: SortOrder
    isActive?: SortOrder
    multiplier?: SortOrder
    maxBoosts?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BoostPricingSumOrderByAggregateInput = {
    duration?: SortOrder
    price?: SortOrder
    multiplier?: SortOrder
    maxBoosts?: SortOrder
  }

  export type EnumBoostTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BoostType | EnumBoostTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBoostTypeWithAggregatesFilter<$PrismaModel> | $Enums.BoostType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBoostTypeFilter<$PrismaModel>
    _max?: NestedEnumBoostTypeFilter<$PrismaModel>
  }

  export type TrendingHistoryListRelationFilter = {
    every?: TrendingHistoryWhereInput
    some?: TrendingHistoryWhereInput
    none?: TrendingHistoryWhereInput
  }

  export type TrendingHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    images?: SortOrder
    phone?: SortOrder
    isActive?: SortOrder
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    lastBoosted?: SortOrder
    locationId?: SortOrder
    rates?: SortOrder
    availability?: SortOrder
    trendingScore?: SortOrder
    isTrending?: SortOrder
    isFeatured?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    isPrivate?: SortOrder
    premiumOnly?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    hasActiveBoost?: SortOrder
    boostEndsAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    expiresAt?: SortOrder
    authorId?: SortOrder
    age?: SortOrder
    location?: SortOrder
    services?: SortOrder
    sexo?: SortOrder
  }

  export type PostAvgOrderByAggregateInput = {
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    trendingScore?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    age?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    phone?: SortOrder
    isActive?: SortOrder
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    lastBoosted?: SortOrder
    locationId?: SortOrder
    trendingScore?: SortOrder
    isTrending?: SortOrder
    isFeatured?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    isPrivate?: SortOrder
    premiumOnly?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    hasActiveBoost?: SortOrder
    boostEndsAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    expiresAt?: SortOrder
    authorId?: SortOrder
    age?: SortOrder
    location?: SortOrder
    sexo?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    phone?: SortOrder
    isActive?: SortOrder
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    lastBoosted?: SortOrder
    locationId?: SortOrder
    trendingScore?: SortOrder
    isTrending?: SortOrder
    isFeatured?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    lastScoreUpdate?: SortOrder
    isPrivate?: SortOrder
    premiumOnly?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    hasActiveBoost?: SortOrder
    boostEndsAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    expiresAt?: SortOrder
    authorId?: SortOrder
    age?: SortOrder
    location?: SortOrder
    sexo?: SortOrder
  }

  export type PostSumOrderByAggregateInput = {
    views?: SortOrder
    viewsToday?: SortOrder
    clicks?: SortOrder
    clicksToday?: SortOrder
    score?: SortOrder
    engagementRate?: SortOrder
    trendingScore?: SortOrder
    discoveryScore?: SortOrder
    qualityScore?: SortOrder
    uniqueViews?: SortOrder
    totalTime?: SortOrder
    bounceRate?: SortOrder
    whatsappClicks?: SortOrder
    age?: SortOrder
  }

  export type TrendingHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    position?: SortOrder
    score?: SortOrder
    category?: SortOrder
    date?: SortOrder
  }

  export type TrendingHistoryAvgOrderByAggregateInput = {
    position?: SortOrder
    score?: SortOrder
  }

  export type TrendingHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    position?: SortOrder
    score?: SortOrder
    category?: SortOrder
    date?: SortOrder
  }

  export type TrendingHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    postId?: SortOrder
    position?: SortOrder
    score?: SortOrder
    category?: SortOrder
    date?: SortOrder
  }

  export type TrendingHistorySumOrderByAggregateInput = {
    position?: SortOrder
    score?: SortOrder
  }

  export type EnumDisputeStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisputeStatus | EnumDisputeStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisputeStatusFilter<$PrismaModel> | $Enums.DisputeStatus
  }

  export type ChatCountOrderByAggregateInput = {
    id?: SortOrder
    isGroup?: SortOrder
    name?: SortOrder
    description?: SortOrder
    avatar?: SortOrder
    isDisputeChat?: SortOrder
    disputeStatus?: SortOrder
    disputeReason?: SortOrder
    isArchived?: SortOrder
    mutedUntil?: SortOrder
    maxMembers?: SortOrder
    isPrivate?: SortOrder
    requireApproval?: SortOrder
    allowFiles?: SortOrder
    allowImages?: SortOrder
    allowVoice?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    lastActivity?: SortOrder
  }

  export type ChatAvgOrderByAggregateInput = {
    maxMembers?: SortOrder
  }

  export type ChatMaxOrderByAggregateInput = {
    id?: SortOrder
    isGroup?: SortOrder
    name?: SortOrder
    description?: SortOrder
    avatar?: SortOrder
    isDisputeChat?: SortOrder
    disputeStatus?: SortOrder
    disputeReason?: SortOrder
    isArchived?: SortOrder
    mutedUntil?: SortOrder
    maxMembers?: SortOrder
    isPrivate?: SortOrder
    requireApproval?: SortOrder
    allowFiles?: SortOrder
    allowImages?: SortOrder
    allowVoice?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    lastActivity?: SortOrder
  }

  export type ChatMinOrderByAggregateInput = {
    id?: SortOrder
    isGroup?: SortOrder
    name?: SortOrder
    description?: SortOrder
    avatar?: SortOrder
    isDisputeChat?: SortOrder
    disputeStatus?: SortOrder
    disputeReason?: SortOrder
    isArchived?: SortOrder
    mutedUntil?: SortOrder
    maxMembers?: SortOrder
    isPrivate?: SortOrder
    requireApproval?: SortOrder
    allowFiles?: SortOrder
    allowImages?: SortOrder
    allowVoice?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    lastActivity?: SortOrder
  }

  export type ChatSumOrderByAggregateInput = {
    maxMembers?: SortOrder
  }

  export type EnumDisputeStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisputeStatus | EnumDisputeStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisputeStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisputeStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisputeStatusFilter<$PrismaModel>
    _max?: NestedEnumDisputeStatusFilter<$PrismaModel>
  }

  export type EnumChatRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.ChatRole | EnumChatRoleFieldRefInput<$PrismaModel>
    in?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumChatRoleFilter<$PrismaModel> | $Enums.ChatRole
  }

  export type ChatRelationFilter = {
    is?: ChatWhereInput
    isNot?: ChatWhereInput
  }

  export type ChatMemberUserIdChatIdCompoundUniqueInput = {
    userId: string
    chatId: string
  }

  export type ChatMemberCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    chatId?: SortOrder
    joinedAt?: SortOrder
    lastRead?: SortOrder
    isMuted?: SortOrder
    role?: SortOrder
    messageCount?: SortOrder
    maxMessages?: SortOrder
    canAddMembers?: SortOrder
    canDeleteMessages?: SortOrder
    canManageChat?: SortOrder
    messagesCount?: SortOrder
  }

  export type ChatMemberAvgOrderByAggregateInput = {
    messageCount?: SortOrder
    maxMessages?: SortOrder
    messagesCount?: SortOrder
  }

  export type ChatMemberMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    chatId?: SortOrder
    joinedAt?: SortOrder
    lastRead?: SortOrder
    isMuted?: SortOrder
    role?: SortOrder
    messageCount?: SortOrder
    maxMessages?: SortOrder
    canAddMembers?: SortOrder
    canDeleteMessages?: SortOrder
    canManageChat?: SortOrder
    messagesCount?: SortOrder
  }

  export type ChatMemberMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    chatId?: SortOrder
    joinedAt?: SortOrder
    lastRead?: SortOrder
    isMuted?: SortOrder
    role?: SortOrder
    messageCount?: SortOrder
    maxMessages?: SortOrder
    canAddMembers?: SortOrder
    canDeleteMessages?: SortOrder
    canManageChat?: SortOrder
    messagesCount?: SortOrder
  }

  export type ChatMemberSumOrderByAggregateInput = {
    messageCount?: SortOrder
    maxMessages?: SortOrder
    messagesCount?: SortOrder
  }

  export type EnumChatRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ChatRole | EnumChatRoleFieldRefInput<$PrismaModel>
    in?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumChatRoleWithAggregatesFilter<$PrismaModel> | $Enums.ChatRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumChatRoleFilter<$PrismaModel>
    _max?: NestedEnumChatRoleFilter<$PrismaModel>
  }

  export type EnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    fileUrl?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRead?: SortOrder
    costPoints?: SortOrder
    isPremiumMessage?: SortOrder
    isEdited?: SortOrder
    editedAt?: SortOrder
    isForwarded?: SortOrder
    replyToId?: SortOrder
    isEncrypted?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    readAt?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    chatId?: SortOrder
  }

  export type MessageAvgOrderByAggregateInput = {
    fileSize?: SortOrder
    costPoints?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    fileUrl?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRead?: SortOrder
    costPoints?: SortOrder
    isPremiumMessage?: SortOrder
    isEdited?: SortOrder
    editedAt?: SortOrder
    isForwarded?: SortOrder
    replyToId?: SortOrder
    isEncrypted?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    readAt?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    chatId?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    messageType?: SortOrder
    fileUrl?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    mimeType?: SortOrder
    isRead?: SortOrder
    costPoints?: SortOrder
    isPremiumMessage?: SortOrder
    isEdited?: SortOrder
    editedAt?: SortOrder
    isForwarded?: SortOrder
    replyToId?: SortOrder
    isEncrypted?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    readAt?: SortOrder
    senderId?: SortOrder
    receiverId?: SortOrder
    chatId?: SortOrder
  }

  export type MessageSumOrderByAggregateInput = {
    fileSize?: SortOrder
    costPoints?: SortOrder
  }

  export type EnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type FavoriteUserIdPostIdCompoundUniqueInput = {
    userId: string
    postId: string
  }

  export type FavoriteCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    isNotified?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    isNotified?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    isNotified?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeUserIdPostIdCompoundUniqueInput = {
    userId: string
    postId: string
  }

  export type LikeCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
  }

  export type LikeMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
  }

  export type ReviewAuthorIdTargetIdCompoundUniqueInput = {
    authorId: string
    targetId: string
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    professionalism?: SortOrder
    communication?: SortOrder
    reliability?: SortOrder
    appearance?: SortOrder
    service?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    helpfulVotes?: SortOrder
    authorId?: SortOrder
    targetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
    professionalism?: SortOrder
    communication?: SortOrder
    reliability?: SortOrder
    appearance?: SortOrder
    service?: SortOrder
    helpfulVotes?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    professionalism?: SortOrder
    communication?: SortOrder
    reliability?: SortOrder
    appearance?: SortOrder
    service?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    helpfulVotes?: SortOrder
    authorId?: SortOrder
    targetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    comment?: SortOrder
    professionalism?: SortOrder
    communication?: SortOrder
    reliability?: SortOrder
    appearance?: SortOrder
    service?: SortOrder
    isAnonymous?: SortOrder
    isVerified?: SortOrder
    helpfulVotes?: SortOrder
    authorId?: SortOrder
    targetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    rating?: SortOrder
    professionalism?: SortOrder
    communication?: SortOrder
    reliability?: SortOrder
    appearance?: SortOrder
    service?: SortOrder
    helpfulVotes?: SortOrder
  }

  export type EnumReportReasonFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportReason | EnumReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumReportReasonFilter<$PrismaModel> | $Enums.ReportReason
  }

  export type EnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type EnumReportSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportSeverity | EnumReportSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumReportSeverityFilter<$PrismaModel> | $Enums.ReportSeverity
  }

  export type ReportCountOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    status?: SortOrder
    evidence?: SortOrder
    category?: SortOrder
    severity?: SortOrder
    resolution?: SortOrder
    resolvedBy?: SortOrder
    resolvedAt?: SortOrder
    actionTaken?: SortOrder
    authorId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ReportMaxOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    status?: SortOrder
    category?: SortOrder
    severity?: SortOrder
    resolution?: SortOrder
    resolvedBy?: SortOrder
    resolvedAt?: SortOrder
    actionTaken?: SortOrder
    authorId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ReportMinOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    description?: SortOrder
    status?: SortOrder
    category?: SortOrder
    severity?: SortOrder
    resolution?: SortOrder
    resolvedBy?: SortOrder
    resolvedAt?: SortOrder
    actionTaken?: SortOrder
    authorId?: SortOrder
    targetUserId?: SortOrder
    postId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type EnumReportReasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportReason | EnumReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumReportReasonWithAggregatesFilter<$PrismaModel> | $Enums.ReportReason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportReasonFilter<$PrismaModel>
    _max?: NestedEnumReportReasonFilter<$PrismaModel>
  }

  export type EnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type EnumReportSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportSeverity | EnumReportSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumReportSeverityWithAggregatesFilter<$PrismaModel> | $Enums.ReportSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportSeverityFilter<$PrismaModel>
    _max?: NestedEnumReportSeverityFilter<$PrismaModel>
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type EnumNotificationPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationPriority | EnumNotificationPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationPriorityFilter<$PrismaModel> | $Enums.NotificationPriority
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    data?: SortOrder
    priority?: SortOrder
    expiresAt?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    deliveryMethod?: SortOrder
    isEmailSent?: SortOrder
    emailSentAt?: SortOrder
    actionUrl?: SortOrder
    actionText?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    priority?: SortOrder
    expiresAt?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    isEmailSent?: SortOrder
    emailSentAt?: SortOrder
    actionUrl?: SortOrder
    actionText?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    isRead?: SortOrder
    priority?: SortOrder
    expiresAt?: SortOrder
    isSent?: SortOrder
    sentAt?: SortOrder
    isEmailSent?: SortOrder
    emailSentAt?: SortOrder
    actionUrl?: SortOrder
    actionText?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type EnumNotificationPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationPriority | EnumNotificationPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationPriorityWithAggregatesFilter<$PrismaModel> | $Enums.NotificationPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationPriorityFilter<$PrismaModel>
    _max?: NestedEnumNotificationPriorityFilter<$PrismaModel>
  }

  export type EnumPaymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeFilter<$PrismaModel> | $Enums.PaymentType
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    description?: SortOrder
    stripePaymentId?: SortOrder
    metadata?: SortOrder
    failureReason?: SortOrder
    refundReason?: SortOrder
    processorFee?: SortOrder
    netAmount?: SortOrder
    taxAmount?: SortOrder
    taxRate?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    amount?: SortOrder
    processorFee?: SortOrder
    netAmount?: SortOrder
    taxAmount?: SortOrder
    taxRate?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    description?: SortOrder
    stripePaymentId?: SortOrder
    failureReason?: SortOrder
    refundReason?: SortOrder
    processorFee?: SortOrder
    netAmount?: SortOrder
    taxAmount?: SortOrder
    taxRate?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    type?: SortOrder
    description?: SortOrder
    stripePaymentId?: SortOrder
    failureReason?: SortOrder
    refundReason?: SortOrder
    processorFee?: SortOrder
    netAmount?: SortOrder
    taxAmount?: SortOrder
    taxRate?: SortOrder
    clientId?: SortOrder
    escortId?: SortOrder
    agencyId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    completedAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    amount?: SortOrder
    processorFee?: SortOrder
    netAmount?: SortOrder
    taxAmount?: SortOrder
    taxRate?: SortOrder
  }

  export type EnumPaymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeFilter<$PrismaModel>
  }

  export type BoostPricingRelationFilter = {
    is?: BoostPricingWhereInput
    isNot?: BoostPricingWhereInput
  }

  export type BoostCountOrderByAggregateInput = {
    id?: SortOrder
    pricingId?: SortOrder
    isActive?: SortOrder
    amount?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    targetAudience?: SortOrder
    geography?: SortOrder
    stackLevel?: SortOrder
    isStackBoost?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type BoostAvgOrderByAggregateInput = {
    amount?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    stackLevel?: SortOrder
  }

  export type BoostMaxOrderByAggregateInput = {
    id?: SortOrder
    pricingId?: SortOrder
    isActive?: SortOrder
    amount?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    geography?: SortOrder
    stackLevel?: SortOrder
    isStackBoost?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type BoostMinOrderByAggregateInput = {
    id?: SortOrder
    pricingId?: SortOrder
    isActive?: SortOrder
    amount?: SortOrder
    userId?: SortOrder
    postId?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    geography?: SortOrder
    stackLevel?: SortOrder
    isStackBoost?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type BoostSumOrderByAggregateInput = {
    amount?: SortOrder
    viewsBefore?: SortOrder
    viewsAfter?: SortOrder
    clicksBefore?: SortOrder
    clicksAfter?: SortOrder
    engagementBefore?: SortOrder
    engagementAfter?: SortOrder
    conversionRate?: SortOrder
    stackLevel?: SortOrder
  }

  export type AppMetricsCountOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
    topCountries?: SortOrder
    topCities?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
  }

  export type AppMetricsAvgOrderByAggregateInput = {
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
  }

  export type AppMetricsMaxOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
  }

  export type AppMetricsMinOrderByAggregateInput = {
    id?: SortOrder
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
  }

  export type AppMetricsSumOrderByAggregateInput = {
    totalUsers?: SortOrder
    totalEscorts?: SortOrder
    totalAgencies?: SortOrder
    totalClients?: SortOrder
    totalAdmins?: SortOrder
    totalPosts?: SortOrder
    totalPayments?: SortOrder
    totalRevenue?: SortOrder
    activeUsers?: SortOrder
    bannedUsers?: SortOrder
    verifiedEscorts?: SortOrder
    premiumClients?: SortOrder
    pendingAgencies?: SortOrder
    totalVerifications?: SortOrder
    expiredVerifications?: SortOrder
    totalPointsSold?: SortOrder
    totalPointsSpent?: SortOrder
    totalBoosts?: SortOrder
    pointsRevenue?: SortOrder
    dailyLoginStreaks?: SortOrder
    totalMessages?: SortOrder
    averageSessionTime?: SortOrder
    conversionRate?: SortOrder
    churnRate?: SortOrder
    revenuePerUser?: SortOrder
    basicClients?: SortOrder
    premiumClientsTier?: SortOrder
    vipClients?: SortOrder
    dailyActiveUsers?: SortOrder
    weeklyActiveUsers?: SortOrder
    monthlyActiveUsers?: SortOrder
  }

  export type PostCreateNestedManyWithoutLocationRefInput = {
    create?: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput> | PostCreateWithoutLocationRefInput[] | PostUncheckedCreateWithoutLocationRefInput[]
    connectOrCreate?: PostCreateOrConnectWithoutLocationRefInput | PostCreateOrConnectWithoutLocationRefInput[]
    createMany?: PostCreateManyLocationRefInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutLocationInput = {
    create?: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput> | UserCreateWithoutLocationInput[] | UserUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLocationInput | UserCreateOrConnectWithoutLocationInput[]
    createMany?: UserCreateManyLocationInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutLocationRefInput = {
    create?: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput> | PostCreateWithoutLocationRefInput[] | PostUncheckedCreateWithoutLocationRefInput[]
    connectOrCreate?: PostCreateOrConnectWithoutLocationRefInput | PostCreateOrConnectWithoutLocationRefInput[]
    createMany?: PostCreateManyLocationRefInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutLocationInput = {
    create?: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput> | UserCreateWithoutLocationInput[] | UserUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLocationInput | UserCreateOrConnectWithoutLocationInput[]
    createMany?: UserCreateManyLocationInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type PostUpdateManyWithoutLocationRefNestedInput = {
    create?: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput> | PostCreateWithoutLocationRefInput[] | PostUncheckedCreateWithoutLocationRefInput[]
    connectOrCreate?: PostCreateOrConnectWithoutLocationRefInput | PostCreateOrConnectWithoutLocationRefInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutLocationRefInput | PostUpsertWithWhereUniqueWithoutLocationRefInput[]
    createMany?: PostCreateManyLocationRefInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutLocationRefInput | PostUpdateWithWhereUniqueWithoutLocationRefInput[]
    updateMany?: PostUpdateManyWithWhereWithoutLocationRefInput | PostUpdateManyWithWhereWithoutLocationRefInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type UserUpdateManyWithoutLocationNestedInput = {
    create?: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput> | UserCreateWithoutLocationInput[] | UserUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLocationInput | UserCreateOrConnectWithoutLocationInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLocationInput | UserUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: UserCreateManyLocationInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLocationInput | UserUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLocationInput | UserUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutLocationRefNestedInput = {
    create?: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput> | PostCreateWithoutLocationRefInput[] | PostUncheckedCreateWithoutLocationRefInput[]
    connectOrCreate?: PostCreateOrConnectWithoutLocationRefInput | PostCreateOrConnectWithoutLocationRefInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutLocationRefInput | PostUpsertWithWhereUniqueWithoutLocationRefInput[]
    createMany?: PostCreateManyLocationRefInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutLocationRefInput | PostUpdateWithWhereUniqueWithoutLocationRefInput[]
    updateMany?: PostUpdateManyWithWhereWithoutLocationRefInput | PostUpdateManyWithWhereWithoutLocationRefInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutLocationNestedInput = {
    create?: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput> | UserCreateWithoutLocationInput[] | UserUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: UserCreateOrConnectWithoutLocationInput | UserCreateOrConnectWithoutLocationInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutLocationInput | UserUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: UserCreateManyLocationInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutLocationInput | UserUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: UserUpdateManyWithWhereWithoutLocationInput | UserUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type AdminCreateNestedOneWithoutUserInput = {
    create?: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
    connectOrCreate?: AdminCreateOrConnectWithoutUserInput
    connect?: AdminWhereUniqueInput
  }

  export type AgencyCreateNestedOneWithoutUserInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    connect?: AgencyWhereUniqueInput
  }

  export type AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput> | AgencyRegistrationRequestCreateWithoutReviewerInput[] | AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput | AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput[]
    createMany?: AgencyRegistrationRequestCreateManyReviewerInputEnvelope
    connect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
  }

  export type AgencyRegistrationRequestCreateNestedOneWithoutUserInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutUserInput
    connect?: AgencyRegistrationRequestWhereUniqueInput
  }

  export type BanCreateNestedManyWithoutUserInput = {
    create?: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput> | BanCreateWithoutUserInput[] | BanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BanCreateOrConnectWithoutUserInput | BanCreateOrConnectWithoutUserInput[]
    createMany?: BanCreateManyUserInputEnvelope
    connect?: BanWhereUniqueInput | BanWhereUniqueInput[]
  }

  export type BoostCreateNestedManyWithoutUserInput = {
    create?: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput> | BoostCreateWithoutUserInput[] | BoostUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutUserInput | BoostCreateOrConnectWithoutUserInput[]
    createMany?: BoostCreateManyUserInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type ChatMemberCreateNestedManyWithoutUserInput = {
    create?: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput> | ChatMemberCreateWithoutUserInput[] | ChatMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutUserInput | ChatMemberCreateOrConnectWithoutUserInput[]
    createMany?: ChatMemberCreateManyUserInputEnvelope
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
  }

  export type ChatRateLimitCreateNestedManyWithoutUserInput = {
    create?: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput> | ChatRateLimitCreateWithoutUserInput[] | ChatRateLimitUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatRateLimitCreateOrConnectWithoutUserInput | ChatRateLimitCreateOrConnectWithoutUserInput[]
    createMany?: ChatRateLimitCreateManyUserInputEnvelope
    connect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
  }

  export type ClientCreateNestedOneWithoutUserInput = {
    create?: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUserInput
    connect?: ClientWhereUniqueInput
  }

  export type DeviceTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput> | DeviceTokenCreateWithoutUserInput[] | DeviceTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceTokenCreateOrConnectWithoutUserInput | DeviceTokenCreateOrConnectWithoutUserInput[]
    createMany?: DeviceTokenCreateManyUserInputEnvelope
    connect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
  }

  export type EscortCreateNestedOneWithoutUserInput = {
    create?: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
    connectOrCreate?: EscortCreateOrConnectWithoutUserInput
    connect?: EscortWhereUniqueInput
  }

  export type FavoriteCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type IdentityVerificationCreateNestedOneWithoutUserInput = {
    create?: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: IdentityVerificationCreateOrConnectWithoutUserInput
    connect?: IdentityVerificationWhereUniqueInput
  }

  export type LikeCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput> | ReportCreateWithoutAuthorInput[] | ReportUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAuthorInput | ReportCreateOrConnectWithoutAuthorInput[]
    createMany?: ReportCreateManyAuthorInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReportCreateNestedManyWithoutTargetUserInput = {
    create?: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput> | ReportCreateWithoutTargetUserInput[] | ReportUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutTargetUserInput | ReportCreateOrConnectWithoutTargetUserInput[]
    createMany?: ReportCreateManyTargetUserInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type SearchHistoryCreateNestedManyWithoutUserInput = {
    create?: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput> | SearchHistoryCreateWithoutUserInput[] | SearchHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchHistoryCreateOrConnectWithoutUserInput | SearchHistoryCreateOrConnectWithoutUserInput[]
    createMany?: SearchHistoryCreateManyUserInputEnvelope
    connect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
  }

  export type SubscriptionCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type UserBlockCreateNestedManyWithoutBlockedInput = {
    create?: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput> | UserBlockCreateWithoutBlockedInput[] | UserBlockUncheckedCreateWithoutBlockedInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockedInput | UserBlockCreateOrConnectWithoutBlockedInput[]
    createMany?: UserBlockCreateManyBlockedInputEnvelope
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
  }

  export type UserBlockCreateNestedManyWithoutBlockerInput = {
    create?: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput> | UserBlockCreateWithoutBlockerInput[] | UserBlockUncheckedCreateWithoutBlockerInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockerInput | UserBlockCreateOrConnectWithoutBlockerInput[]
    createMany?: UserBlockCreateManyBlockerInputEnvelope
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
  }

  export type UserInteractionCreateNestedManyWithoutTargetUserInput = {
    create?: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput> | UserInteractionCreateWithoutTargetUserInput[] | UserInteractionUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutTargetUserInput | UserInteractionCreateOrConnectWithoutTargetUserInput[]
    createMany?: UserInteractionCreateManyTargetUserInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type UserInteractionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput> | UserInteractionCreateWithoutUserInput[] | UserInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutUserInput | UserInteractionCreateOrConnectWithoutUserInput[]
    createMany?: UserInteractionCreateManyUserInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type UserReputationCreateNestedOneWithoutUserInput = {
    create?: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserReputationCreateOrConnectWithoutUserInput
    connect?: UserReputationWhereUniqueInput
  }

  export type UserSettingsCreateNestedOneWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    connect?: UserSettingsWhereUniqueInput
  }

  export type LocationCreateNestedOneWithoutUsersInput = {
    create?: XOR<LocationCreateWithoutUsersInput, LocationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: LocationCreateOrConnectWithoutUsersInput
    connect?: LocationWhereUniqueInput
  }

  export type AdminUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
    connectOrCreate?: AdminCreateOrConnectWithoutUserInput
    connect?: AdminWhereUniqueInput
  }

  export type AgencyUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    connect?: AgencyWhereUniqueInput
  }

  export type AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput> | AgencyRegistrationRequestCreateWithoutReviewerInput[] | AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput | AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput[]
    createMany?: AgencyRegistrationRequestCreateManyReviewerInputEnvelope
    connect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
  }

  export type AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutUserInput
    connect?: AgencyRegistrationRequestWhereUniqueInput
  }

  export type BanUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput> | BanCreateWithoutUserInput[] | BanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BanCreateOrConnectWithoutUserInput | BanCreateOrConnectWithoutUserInput[]
    createMany?: BanCreateManyUserInputEnvelope
    connect?: BanWhereUniqueInput | BanWhereUniqueInput[]
  }

  export type BoostUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput> | BoostCreateWithoutUserInput[] | BoostUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutUserInput | BoostCreateOrConnectWithoutUserInput[]
    createMany?: BoostCreateManyUserInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type ChatMemberUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput> | ChatMemberCreateWithoutUserInput[] | ChatMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutUserInput | ChatMemberCreateOrConnectWithoutUserInput[]
    createMany?: ChatMemberCreateManyUserInputEnvelope
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
  }

  export type ChatRateLimitUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput> | ChatRateLimitCreateWithoutUserInput[] | ChatRateLimitUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatRateLimitCreateOrConnectWithoutUserInput | ChatRateLimitCreateOrConnectWithoutUserInput[]
    createMany?: ChatRateLimitCreateManyUserInputEnvelope
    connect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
  }

  export type ClientUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUserInput
    connect?: ClientWhereUniqueInput
  }

  export type DeviceTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput> | DeviceTokenCreateWithoutUserInput[] | DeviceTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceTokenCreateOrConnectWithoutUserInput | DeviceTokenCreateOrConnectWithoutUserInput[]
    createMany?: DeviceTokenCreateManyUserInputEnvelope
    connect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
  }

  export type EscortUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
    connectOrCreate?: EscortCreateOrConnectWithoutUserInput
    connect?: EscortWhereUniqueInput
  }

  export type FavoriteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type IdentityVerificationUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: IdentityVerificationCreateOrConnectWithoutUserInput
    connect?: IdentityVerificationWhereUniqueInput
  }

  export type LikeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutReceiverInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput> | ReportCreateWithoutAuthorInput[] | ReportUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAuthorInput | ReportCreateOrConnectWithoutAuthorInput[]
    createMany?: ReportCreateManyAuthorInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutTargetUserInput = {
    create?: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput> | ReportCreateWithoutTargetUserInput[] | ReportUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutTargetUserInput | ReportCreateOrConnectWithoutTargetUserInput[]
    createMany?: ReportCreateManyTargetUserInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type SearchHistoryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput> | SearchHistoryCreateWithoutUserInput[] | SearchHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchHistoryCreateOrConnectWithoutUserInput | SearchHistoryCreateOrConnectWithoutUserInput[]
    createMany?: SearchHistoryCreateManyUserInputEnvelope
    connect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
  }

  export type SubscriptionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type UserBlockUncheckedCreateNestedManyWithoutBlockedInput = {
    create?: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput> | UserBlockCreateWithoutBlockedInput[] | UserBlockUncheckedCreateWithoutBlockedInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockedInput | UserBlockCreateOrConnectWithoutBlockedInput[]
    createMany?: UserBlockCreateManyBlockedInputEnvelope
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
  }

  export type UserBlockUncheckedCreateNestedManyWithoutBlockerInput = {
    create?: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput> | UserBlockCreateWithoutBlockerInput[] | UserBlockUncheckedCreateWithoutBlockerInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockerInput | UserBlockCreateOrConnectWithoutBlockerInput[]
    createMany?: UserBlockCreateManyBlockerInputEnvelope
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
  }

  export type UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput = {
    create?: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput> | UserInteractionCreateWithoutTargetUserInput[] | UserInteractionUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutTargetUserInput | UserInteractionCreateOrConnectWithoutTargetUserInput[]
    createMany?: UserInteractionCreateManyTargetUserInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type UserInteractionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput> | UserInteractionCreateWithoutUserInput[] | UserInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutUserInput | UserInteractionCreateOrConnectWithoutUserInput[]
    createMany?: UserInteractionCreateManyUserInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type UserReputationUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserReputationCreateOrConnectWithoutUserInput
    connect?: UserReputationWhereUniqueInput
  }

  export type UserSettingsUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    connect?: UserSettingsWhereUniqueInput
  }

  export type EnumUserTypeFieldUpdateOperationsInput = {
    set?: $Enums.UserType
  }

  export type EnumAccountStatusFieldUpdateOperationsInput = {
    set?: $Enums.AccountStatus
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type AdminUpdateOneWithoutUserNestedInput = {
    create?: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
    connectOrCreate?: AdminCreateOrConnectWithoutUserInput
    upsert?: AdminUpsertWithoutUserInput
    disconnect?: AdminWhereInput | boolean
    delete?: AdminWhereInput | boolean
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutUserInput, AdminUpdateWithoutUserInput>, AdminUncheckedUpdateWithoutUserInput>
  }

  export type AgencyUpdateOneWithoutUserNestedInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    upsert?: AgencyUpsertWithoutUserInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutUserInput, AgencyUpdateWithoutUserInput>, AgencyUncheckedUpdateWithoutUserInput>
  }

  export type AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput> | AgencyRegistrationRequestCreateWithoutReviewerInput[] | AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput | AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput[]
    upsert?: AgencyRegistrationRequestUpsertWithWhereUniqueWithoutReviewerInput | AgencyRegistrationRequestUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: AgencyRegistrationRequestCreateManyReviewerInputEnvelope
    set?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    disconnect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    delete?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    connect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    update?: AgencyRegistrationRequestUpdateWithWhereUniqueWithoutReviewerInput | AgencyRegistrationRequestUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: AgencyRegistrationRequestUpdateManyWithWhereWithoutReviewerInput | AgencyRegistrationRequestUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: AgencyRegistrationRequestScalarWhereInput | AgencyRegistrationRequestScalarWhereInput[]
  }

  export type AgencyRegistrationRequestUpdateOneWithoutUserNestedInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutUserInput
    upsert?: AgencyRegistrationRequestUpsertWithoutUserInput
    disconnect?: AgencyRegistrationRequestWhereInput | boolean
    delete?: AgencyRegistrationRequestWhereInput | boolean
    connect?: AgencyRegistrationRequestWhereUniqueInput
    update?: XOR<XOR<AgencyRegistrationRequestUpdateToOneWithWhereWithoutUserInput, AgencyRegistrationRequestUpdateWithoutUserInput>, AgencyRegistrationRequestUncheckedUpdateWithoutUserInput>
  }

  export type BanUpdateManyWithoutUserNestedInput = {
    create?: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput> | BanCreateWithoutUserInput[] | BanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BanCreateOrConnectWithoutUserInput | BanCreateOrConnectWithoutUserInput[]
    upsert?: BanUpsertWithWhereUniqueWithoutUserInput | BanUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BanCreateManyUserInputEnvelope
    set?: BanWhereUniqueInput | BanWhereUniqueInput[]
    disconnect?: BanWhereUniqueInput | BanWhereUniqueInput[]
    delete?: BanWhereUniqueInput | BanWhereUniqueInput[]
    connect?: BanWhereUniqueInput | BanWhereUniqueInput[]
    update?: BanUpdateWithWhereUniqueWithoutUserInput | BanUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BanUpdateManyWithWhereWithoutUserInput | BanUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BanScalarWhereInput | BanScalarWhereInput[]
  }

  export type BoostUpdateManyWithoutUserNestedInput = {
    create?: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput> | BoostCreateWithoutUserInput[] | BoostUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutUserInput | BoostCreateOrConnectWithoutUserInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutUserInput | BoostUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BoostCreateManyUserInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutUserInput | BoostUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutUserInput | BoostUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type ChatMemberUpdateManyWithoutUserNestedInput = {
    create?: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput> | ChatMemberCreateWithoutUserInput[] | ChatMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutUserInput | ChatMemberCreateOrConnectWithoutUserInput[]
    upsert?: ChatMemberUpsertWithWhereUniqueWithoutUserInput | ChatMemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ChatMemberCreateManyUserInputEnvelope
    set?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    disconnect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    delete?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    update?: ChatMemberUpdateWithWhereUniqueWithoutUserInput | ChatMemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ChatMemberUpdateManyWithWhereWithoutUserInput | ChatMemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
  }

  export type ChatRateLimitUpdateManyWithoutUserNestedInput = {
    create?: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput> | ChatRateLimitCreateWithoutUserInput[] | ChatRateLimitUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatRateLimitCreateOrConnectWithoutUserInput | ChatRateLimitCreateOrConnectWithoutUserInput[]
    upsert?: ChatRateLimitUpsertWithWhereUniqueWithoutUserInput | ChatRateLimitUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ChatRateLimitCreateManyUserInputEnvelope
    set?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    disconnect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    delete?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    connect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    update?: ChatRateLimitUpdateWithWhereUniqueWithoutUserInput | ChatRateLimitUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ChatRateLimitUpdateManyWithWhereWithoutUserInput | ChatRateLimitUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ChatRateLimitScalarWhereInput | ChatRateLimitScalarWhereInput[]
  }

  export type ClientUpdateOneWithoutUserNestedInput = {
    create?: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUserInput
    upsert?: ClientUpsertWithoutUserInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutUserInput, ClientUpdateWithoutUserInput>, ClientUncheckedUpdateWithoutUserInput>
  }

  export type DeviceTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput> | DeviceTokenCreateWithoutUserInput[] | DeviceTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceTokenCreateOrConnectWithoutUserInput | DeviceTokenCreateOrConnectWithoutUserInput[]
    upsert?: DeviceTokenUpsertWithWhereUniqueWithoutUserInput | DeviceTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceTokenCreateManyUserInputEnvelope
    set?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    disconnect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    delete?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    connect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    update?: DeviceTokenUpdateWithWhereUniqueWithoutUserInput | DeviceTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceTokenUpdateManyWithWhereWithoutUserInput | DeviceTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceTokenScalarWhereInput | DeviceTokenScalarWhereInput[]
  }

  export type EscortUpdateOneWithoutUserNestedInput = {
    create?: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
    connectOrCreate?: EscortCreateOrConnectWithoutUserInput
    upsert?: EscortUpsertWithoutUserInput
    disconnect?: EscortWhereInput | boolean
    delete?: EscortWhereInput | boolean
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutUserInput, EscortUpdateWithoutUserInput>, EscortUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type IdentityVerificationUpdateOneWithoutUserNestedInput = {
    create?: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: IdentityVerificationCreateOrConnectWithoutUserInput
    upsert?: IdentityVerificationUpsertWithoutUserInput
    disconnect?: IdentityVerificationWhereInput | boolean
    delete?: IdentityVerificationWhereInput | boolean
    connect?: IdentityVerificationWhereUniqueInput
    update?: XOR<XOR<IdentityVerificationUpdateToOneWithWhereWithoutUserInput, IdentityVerificationUpdateWithoutUserInput>, IdentityVerificationUncheckedUpdateWithoutUserInput>
  }

  export type LikeUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput> | ReportCreateWithoutAuthorInput[] | ReportUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAuthorInput | ReportCreateOrConnectWithoutAuthorInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutAuthorInput | ReportUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ReportCreateManyAuthorInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutAuthorInput | ReportUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutAuthorInput | ReportUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReportUpdateManyWithoutTargetUserNestedInput = {
    create?: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput> | ReportCreateWithoutTargetUserInput[] | ReportUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutTargetUserInput | ReportCreateOrConnectWithoutTargetUserInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutTargetUserInput | ReportUpsertWithWhereUniqueWithoutTargetUserInput[]
    createMany?: ReportCreateManyTargetUserInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutTargetUserInput | ReportUpdateWithWhereUniqueWithoutTargetUserInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutTargetUserInput | ReportUpdateManyWithWhereWithoutTargetUserInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type SearchHistoryUpdateManyWithoutUserNestedInput = {
    create?: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput> | SearchHistoryCreateWithoutUserInput[] | SearchHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchHistoryCreateOrConnectWithoutUserInput | SearchHistoryCreateOrConnectWithoutUserInput[]
    upsert?: SearchHistoryUpsertWithWhereUniqueWithoutUserInput | SearchHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SearchHistoryCreateManyUserInputEnvelope
    set?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    disconnect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    delete?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    connect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    update?: SearchHistoryUpdateWithWhereUniqueWithoutUserInput | SearchHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SearchHistoryUpdateManyWithWhereWithoutUserInput | SearchHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SearchHistoryScalarWhereInput | SearchHistoryScalarWhereInput[]
  }

  export type SubscriptionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutUserInput | SubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutUserInput | SubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutUserInput | SubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type UserBlockUpdateManyWithoutBlockedNestedInput = {
    create?: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput> | UserBlockCreateWithoutBlockedInput[] | UserBlockUncheckedCreateWithoutBlockedInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockedInput | UserBlockCreateOrConnectWithoutBlockedInput[]
    upsert?: UserBlockUpsertWithWhereUniqueWithoutBlockedInput | UserBlockUpsertWithWhereUniqueWithoutBlockedInput[]
    createMany?: UserBlockCreateManyBlockedInputEnvelope
    set?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    disconnect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    delete?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    update?: UserBlockUpdateWithWhereUniqueWithoutBlockedInput | UserBlockUpdateWithWhereUniqueWithoutBlockedInput[]
    updateMany?: UserBlockUpdateManyWithWhereWithoutBlockedInput | UserBlockUpdateManyWithWhereWithoutBlockedInput[]
    deleteMany?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
  }

  export type UserBlockUpdateManyWithoutBlockerNestedInput = {
    create?: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput> | UserBlockCreateWithoutBlockerInput[] | UserBlockUncheckedCreateWithoutBlockerInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockerInput | UserBlockCreateOrConnectWithoutBlockerInput[]
    upsert?: UserBlockUpsertWithWhereUniqueWithoutBlockerInput | UserBlockUpsertWithWhereUniqueWithoutBlockerInput[]
    createMany?: UserBlockCreateManyBlockerInputEnvelope
    set?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    disconnect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    delete?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    update?: UserBlockUpdateWithWhereUniqueWithoutBlockerInput | UserBlockUpdateWithWhereUniqueWithoutBlockerInput[]
    updateMany?: UserBlockUpdateManyWithWhereWithoutBlockerInput | UserBlockUpdateManyWithWhereWithoutBlockerInput[]
    deleteMany?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
  }

  export type UserInteractionUpdateManyWithoutTargetUserNestedInput = {
    create?: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput> | UserInteractionCreateWithoutTargetUserInput[] | UserInteractionUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutTargetUserInput | UserInteractionCreateOrConnectWithoutTargetUserInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutTargetUserInput | UserInteractionUpsertWithWhereUniqueWithoutTargetUserInput[]
    createMany?: UserInteractionCreateManyTargetUserInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutTargetUserInput | UserInteractionUpdateWithWhereUniqueWithoutTargetUserInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutTargetUserInput | UserInteractionUpdateManyWithWhereWithoutTargetUserInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type UserInteractionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput> | UserInteractionCreateWithoutUserInput[] | UserInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutUserInput | UserInteractionCreateOrConnectWithoutUserInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutUserInput | UserInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserInteractionCreateManyUserInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutUserInput | UserInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutUserInput | UserInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type UserReputationUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserReputationCreateOrConnectWithoutUserInput
    upsert?: UserReputationUpsertWithoutUserInput
    disconnect?: UserReputationWhereInput | boolean
    delete?: UserReputationWhereInput | boolean
    connect?: UserReputationWhereUniqueInput
    update?: XOR<XOR<UserReputationUpdateToOneWithWhereWithoutUserInput, UserReputationUpdateWithoutUserInput>, UserReputationUncheckedUpdateWithoutUserInput>
  }

  export type UserSettingsUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    upsert?: UserSettingsUpsertWithoutUserInput
    disconnect?: UserSettingsWhereInput | boolean
    delete?: UserSettingsWhereInput | boolean
    connect?: UserSettingsWhereUniqueInput
    update?: XOR<XOR<UserSettingsUpdateToOneWithWhereWithoutUserInput, UserSettingsUpdateWithoutUserInput>, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type LocationUpdateOneWithoutUsersNestedInput = {
    create?: XOR<LocationCreateWithoutUsersInput, LocationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: LocationCreateOrConnectWithoutUsersInput
    upsert?: LocationUpsertWithoutUsersInput
    disconnect?: LocationWhereInput | boolean
    delete?: LocationWhereInput | boolean
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutUsersInput, LocationUpdateWithoutUsersInput>, LocationUncheckedUpdateWithoutUsersInput>
  }

  export type AdminUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
    connectOrCreate?: AdminCreateOrConnectWithoutUserInput
    upsert?: AdminUpsertWithoutUserInput
    disconnect?: AdminWhereInput | boolean
    delete?: AdminWhereInput | boolean
    connect?: AdminWhereUniqueInput
    update?: XOR<XOR<AdminUpdateToOneWithWhereWithoutUserInput, AdminUpdateWithoutUserInput>, AdminUncheckedUpdateWithoutUserInput>
  }

  export type AgencyUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutUserInput
    upsert?: AgencyUpsertWithoutUserInput
    disconnect?: AgencyWhereInput | boolean
    delete?: AgencyWhereInput | boolean
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutUserInput, AgencyUpdateWithoutUserInput>, AgencyUncheckedUpdateWithoutUserInput>
  }

  export type AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput> | AgencyRegistrationRequestCreateWithoutReviewerInput[] | AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput[]
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput | AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput[]
    upsert?: AgencyRegistrationRequestUpsertWithWhereUniqueWithoutReviewerInput | AgencyRegistrationRequestUpsertWithWhereUniqueWithoutReviewerInput[]
    createMany?: AgencyRegistrationRequestCreateManyReviewerInputEnvelope
    set?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    disconnect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    delete?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    connect?: AgencyRegistrationRequestWhereUniqueInput | AgencyRegistrationRequestWhereUniqueInput[]
    update?: AgencyRegistrationRequestUpdateWithWhereUniqueWithoutReviewerInput | AgencyRegistrationRequestUpdateWithWhereUniqueWithoutReviewerInput[]
    updateMany?: AgencyRegistrationRequestUpdateManyWithWhereWithoutReviewerInput | AgencyRegistrationRequestUpdateManyWithWhereWithoutReviewerInput[]
    deleteMany?: AgencyRegistrationRequestScalarWhereInput | AgencyRegistrationRequestScalarWhereInput[]
  }

  export type AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
    connectOrCreate?: AgencyRegistrationRequestCreateOrConnectWithoutUserInput
    upsert?: AgencyRegistrationRequestUpsertWithoutUserInput
    disconnect?: AgencyRegistrationRequestWhereInput | boolean
    delete?: AgencyRegistrationRequestWhereInput | boolean
    connect?: AgencyRegistrationRequestWhereUniqueInput
    update?: XOR<XOR<AgencyRegistrationRequestUpdateToOneWithWhereWithoutUserInput, AgencyRegistrationRequestUpdateWithoutUserInput>, AgencyRegistrationRequestUncheckedUpdateWithoutUserInput>
  }

  export type BanUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput> | BanCreateWithoutUserInput[] | BanUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BanCreateOrConnectWithoutUserInput | BanCreateOrConnectWithoutUserInput[]
    upsert?: BanUpsertWithWhereUniqueWithoutUserInput | BanUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BanCreateManyUserInputEnvelope
    set?: BanWhereUniqueInput | BanWhereUniqueInput[]
    disconnect?: BanWhereUniqueInput | BanWhereUniqueInput[]
    delete?: BanWhereUniqueInput | BanWhereUniqueInput[]
    connect?: BanWhereUniqueInput | BanWhereUniqueInput[]
    update?: BanUpdateWithWhereUniqueWithoutUserInput | BanUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BanUpdateManyWithWhereWithoutUserInput | BanUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BanScalarWhereInput | BanScalarWhereInput[]
  }

  export type BoostUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput> | BoostCreateWithoutUserInput[] | BoostUncheckedCreateWithoutUserInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutUserInput | BoostCreateOrConnectWithoutUserInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutUserInput | BoostUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: BoostCreateManyUserInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutUserInput | BoostUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutUserInput | BoostUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type ChatMemberUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput> | ChatMemberCreateWithoutUserInput[] | ChatMemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutUserInput | ChatMemberCreateOrConnectWithoutUserInput[]
    upsert?: ChatMemberUpsertWithWhereUniqueWithoutUserInput | ChatMemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ChatMemberCreateManyUserInputEnvelope
    set?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    disconnect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    delete?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    update?: ChatMemberUpdateWithWhereUniqueWithoutUserInput | ChatMemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ChatMemberUpdateManyWithWhereWithoutUserInput | ChatMemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
  }

  export type ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput> | ChatRateLimitCreateWithoutUserInput[] | ChatRateLimitUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ChatRateLimitCreateOrConnectWithoutUserInput | ChatRateLimitCreateOrConnectWithoutUserInput[]
    upsert?: ChatRateLimitUpsertWithWhereUniqueWithoutUserInput | ChatRateLimitUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ChatRateLimitCreateManyUserInputEnvelope
    set?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    disconnect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    delete?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    connect?: ChatRateLimitWhereUniqueInput | ChatRateLimitWhereUniqueInput[]
    update?: ChatRateLimitUpdateWithWhereUniqueWithoutUserInput | ChatRateLimitUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ChatRateLimitUpdateManyWithWhereWithoutUserInput | ChatRateLimitUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ChatRateLimitScalarWhereInput | ChatRateLimitScalarWhereInput[]
  }

  export type ClientUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
    connectOrCreate?: ClientCreateOrConnectWithoutUserInput
    upsert?: ClientUpsertWithoutUserInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutUserInput, ClientUpdateWithoutUserInput>, ClientUncheckedUpdateWithoutUserInput>
  }

  export type DeviceTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput> | DeviceTokenCreateWithoutUserInput[] | DeviceTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceTokenCreateOrConnectWithoutUserInput | DeviceTokenCreateOrConnectWithoutUserInput[]
    upsert?: DeviceTokenUpsertWithWhereUniqueWithoutUserInput | DeviceTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceTokenCreateManyUserInputEnvelope
    set?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    disconnect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    delete?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    connect?: DeviceTokenWhereUniqueInput | DeviceTokenWhereUniqueInput[]
    update?: DeviceTokenUpdateWithWhereUniqueWithoutUserInput | DeviceTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceTokenUpdateManyWithWhereWithoutUserInput | DeviceTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceTokenScalarWhereInput | DeviceTokenScalarWhereInput[]
  }

  export type EscortUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
    connectOrCreate?: EscortCreateOrConnectWithoutUserInput
    upsert?: EscortUpsertWithoutUserInput
    disconnect?: EscortWhereInput | boolean
    delete?: EscortWhereInput | boolean
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutUserInput, EscortUpdateWithoutUserInput>, EscortUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput> | FavoriteCreateWithoutUserInput[] | FavoriteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutUserInput | FavoriteCreateOrConnectWithoutUserInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutUserInput | FavoriteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FavoriteCreateManyUserInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutUserInput | FavoriteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutUserInput | FavoriteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
    connectOrCreate?: IdentityVerificationCreateOrConnectWithoutUserInput
    upsert?: IdentityVerificationUpsertWithoutUserInput
    disconnect?: IdentityVerificationWhereInput | boolean
    delete?: IdentityVerificationWhereInput | boolean
    connect?: IdentityVerificationWhereUniqueInput
    update?: XOR<XOR<IdentityVerificationUpdateToOneWithWhereWithoutUserInput, IdentityVerificationUpdateWithoutUserInput>, IdentityVerificationUncheckedUpdateWithoutUserInput>
  }

  export type LikeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput> | LikeCreateWithoutUserInput[] | LikeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutUserInput | LikeCreateOrConnectWithoutUserInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutUserInput | LikeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: LikeCreateManyUserInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutUserInput | LikeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutUserInput | LikeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutReceiverNestedInput = {
    create?: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput> | MessageCreateWithoutReceiverInput[] | MessageUncheckedCreateWithoutReceiverInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutReceiverInput | MessageCreateOrConnectWithoutReceiverInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutReceiverInput | MessageUpsertWithWhereUniqueWithoutReceiverInput[]
    createMany?: MessageCreateManyReceiverInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutReceiverInput | MessageUpdateWithWhereUniqueWithoutReceiverInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutReceiverInput | MessageUpdateManyWithWhereWithoutReceiverInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput> | MessageCreateWithoutSenderInput[] | MessageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutSenderInput | MessageCreateOrConnectWithoutSenderInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutSenderInput | MessageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: MessageCreateManySenderInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutSenderInput | MessageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutSenderInput | MessageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput> | ReportCreateWithoutAuthorInput[] | ReportUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutAuthorInput | ReportCreateOrConnectWithoutAuthorInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutAuthorInput | ReportUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ReportCreateManyAuthorInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutAuthorInput | ReportUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutAuthorInput | ReportUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutTargetUserNestedInput = {
    create?: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput> | ReportCreateWithoutTargetUserInput[] | ReportUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutTargetUserInput | ReportCreateOrConnectWithoutTargetUserInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutTargetUserInput | ReportUpsertWithWhereUniqueWithoutTargetUserInput[]
    createMany?: ReportCreateManyTargetUserInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutTargetUserInput | ReportUpdateWithWhereUniqueWithoutTargetUserInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutTargetUserInput | ReportUpdateManyWithWhereWithoutTargetUserInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type SearchHistoryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput> | SearchHistoryCreateWithoutUserInput[] | SearchHistoryUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchHistoryCreateOrConnectWithoutUserInput | SearchHistoryCreateOrConnectWithoutUserInput[]
    upsert?: SearchHistoryUpsertWithWhereUniqueWithoutUserInput | SearchHistoryUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SearchHistoryCreateManyUserInputEnvelope
    set?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    disconnect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    delete?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    connect?: SearchHistoryWhereUniqueInput | SearchHistoryWhereUniqueInput[]
    update?: SearchHistoryUpdateWithWhereUniqueWithoutUserInput | SearchHistoryUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SearchHistoryUpdateManyWithWhereWithoutUserInput | SearchHistoryUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SearchHistoryScalarWhereInput | SearchHistoryScalarWhereInput[]
  }

  export type SubscriptionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput> | SubscriptionCreateWithoutUserInput[] | SubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutUserInput | SubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutUserInput | SubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SubscriptionCreateManyUserInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutUserInput | SubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutUserInput | SubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type UserBlockUncheckedUpdateManyWithoutBlockedNestedInput = {
    create?: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput> | UserBlockCreateWithoutBlockedInput[] | UserBlockUncheckedCreateWithoutBlockedInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockedInput | UserBlockCreateOrConnectWithoutBlockedInput[]
    upsert?: UserBlockUpsertWithWhereUniqueWithoutBlockedInput | UserBlockUpsertWithWhereUniqueWithoutBlockedInput[]
    createMany?: UserBlockCreateManyBlockedInputEnvelope
    set?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    disconnect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    delete?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    update?: UserBlockUpdateWithWhereUniqueWithoutBlockedInput | UserBlockUpdateWithWhereUniqueWithoutBlockedInput[]
    updateMany?: UserBlockUpdateManyWithWhereWithoutBlockedInput | UserBlockUpdateManyWithWhereWithoutBlockedInput[]
    deleteMany?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
  }

  export type UserBlockUncheckedUpdateManyWithoutBlockerNestedInput = {
    create?: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput> | UserBlockCreateWithoutBlockerInput[] | UserBlockUncheckedCreateWithoutBlockerInput[]
    connectOrCreate?: UserBlockCreateOrConnectWithoutBlockerInput | UserBlockCreateOrConnectWithoutBlockerInput[]
    upsert?: UserBlockUpsertWithWhereUniqueWithoutBlockerInput | UserBlockUpsertWithWhereUniqueWithoutBlockerInput[]
    createMany?: UserBlockCreateManyBlockerInputEnvelope
    set?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    disconnect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    delete?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    connect?: UserBlockWhereUniqueInput | UserBlockWhereUniqueInput[]
    update?: UserBlockUpdateWithWhereUniqueWithoutBlockerInput | UserBlockUpdateWithWhereUniqueWithoutBlockerInput[]
    updateMany?: UserBlockUpdateManyWithWhereWithoutBlockerInput | UserBlockUpdateManyWithWhereWithoutBlockerInput[]
    deleteMany?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
  }

  export type UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput = {
    create?: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput> | UserInteractionCreateWithoutTargetUserInput[] | UserInteractionUncheckedCreateWithoutTargetUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutTargetUserInput | UserInteractionCreateOrConnectWithoutTargetUserInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutTargetUserInput | UserInteractionUpsertWithWhereUniqueWithoutTargetUserInput[]
    createMany?: UserInteractionCreateManyTargetUserInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutTargetUserInput | UserInteractionUpdateWithWhereUniqueWithoutTargetUserInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutTargetUserInput | UserInteractionUpdateManyWithWhereWithoutTargetUserInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type UserInteractionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput> | UserInteractionCreateWithoutUserInput[] | UserInteractionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutUserInput | UserInteractionCreateOrConnectWithoutUserInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutUserInput | UserInteractionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserInteractionCreateManyUserInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutUserInput | UserInteractionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutUserInput | UserInteractionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type UserReputationUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserReputationCreateOrConnectWithoutUserInput
    upsert?: UserReputationUpsertWithoutUserInput
    disconnect?: UserReputationWhereInput | boolean
    delete?: UserReputationWhereInput | boolean
    connect?: UserReputationWhereUniqueInput
    update?: XOR<XOR<UserReputationUpdateToOneWithWhereWithoutUserInput, UserReputationUpdateWithoutUserInput>, UserReputationUncheckedUpdateWithoutUserInput>
  }

  export type UserSettingsUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput
    upsert?: UserSettingsUpsertWithoutUserInput
    disconnect?: UserSettingsWhereInput | boolean
    delete?: UserSettingsWhereInput | boolean
    connect?: UserSettingsWhereUniqueInput
    update?: XOR<XOR<UserSettingsUpdateToOneWithWhereWithoutUserInput, UserSettingsUpdateWithoutUserInput>, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type UserCreateNestedOneWithoutReviewedAgencyRequestsInput = {
    create?: XOR<UserCreateWithoutReviewedAgencyRequestsInput, UserUncheckedCreateWithoutReviewedAgencyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedAgencyRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAgencyRegistrationRequestInput = {
    create?: XOR<UserCreateWithoutAgencyRegistrationRequestInput, UserUncheckedCreateWithoutAgencyRegistrationRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyRegistrationRequestInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAgencyRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.AgencyRequestStatus
  }

  export type UserUpdateOneWithoutReviewedAgencyRequestsNestedInput = {
    create?: XOR<UserCreateWithoutReviewedAgencyRequestsInput, UserUncheckedCreateWithoutReviewedAgencyRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewedAgencyRequestsInput
    upsert?: UserUpsertWithoutReviewedAgencyRequestsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewedAgencyRequestsInput, UserUpdateWithoutReviewedAgencyRequestsInput>, UserUncheckedUpdateWithoutReviewedAgencyRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutAgencyRegistrationRequestNestedInput = {
    create?: XOR<UserCreateWithoutAgencyRegistrationRequestInput, UserUncheckedCreateWithoutAgencyRegistrationRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyRegistrationRequestInput
    upsert?: UserUpsertWithoutAgencyRegistrationRequestInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgencyRegistrationRequestInput, UserUpdateWithoutAgencyRegistrationRequestInput>, UserUncheckedUpdateWithoutAgencyRegistrationRequestInput>
  }

  export type UserCreateNestedOneWithoutSettingsInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumContentFilterLevelFieldUpdateOperationsInput = {
    set?: $Enums.ContentFilterLevel
  }

  export type UserUpdateOneRequiredWithoutSettingsNestedInput = {
    create?: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSettingsInput
    upsert?: UserUpsertWithoutSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSettingsInput, UserUpdateWithoutSettingsInput>, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type UserCreateNestedOneWithoutDeviceTokensInput = {
    create?: XOR<UserCreateWithoutDeviceTokensInput, UserUncheckedCreateWithoutDeviceTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeviceTokensInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutDeviceTokensNestedInput = {
    create?: XOR<UserCreateWithoutDeviceTokensInput, UserUncheckedCreateWithoutDeviceTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeviceTokensInput
    upsert?: UserUpsertWithoutDeviceTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeviceTokensInput, UserUpdateWithoutDeviceTokensInput>, UserUncheckedUpdateWithoutDeviceTokensInput>
  }

  export type UserCreateNestedOneWithoutSearchHistoryInput = {
    create?: XOR<UserCreateWithoutSearchHistoryInput, UserUncheckedCreateWithoutSearchHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutSearchHistoryInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSearchHistoryNestedInput = {
    create?: XOR<UserCreateWithoutSearchHistoryInput, UserUncheckedCreateWithoutSearchHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutSearchHistoryInput
    upsert?: UserUpsertWithoutSearchHistoryInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSearchHistoryInput, UserUpdateWithoutSearchHistoryInput>, UserUncheckedUpdateWithoutSearchHistoryInput>
  }

  export type UserCreateNestedOneWithoutBlockedByInput = {
    create?: XOR<UserCreateWithoutBlockedByInput, UserUncheckedCreateWithoutBlockedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlockedByInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBlockedUsersInput = {
    create?: XOR<UserCreateWithoutBlockedUsersInput, UserUncheckedCreateWithoutBlockedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlockedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutBlockedByNestedInput = {
    create?: XOR<UserCreateWithoutBlockedByInput, UserUncheckedCreateWithoutBlockedByInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlockedByInput
    upsert?: UserUpsertWithoutBlockedByInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBlockedByInput, UserUpdateWithoutBlockedByInput>, UserUncheckedUpdateWithoutBlockedByInput>
  }

  export type UserUpdateOneRequiredWithoutBlockedUsersNestedInput = {
    create?: XOR<UserCreateWithoutBlockedUsersInput, UserUncheckedCreateWithoutBlockedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlockedUsersInput
    upsert?: UserUpsertWithoutBlockedUsersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBlockedUsersInput, UserUpdateWithoutBlockedUsersInput>, UserUncheckedUpdateWithoutBlockedUsersInput>
  }

  export type IdentityVerificationCreatedocumentImagesInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutIdentityVerificationInput = {
    create?: XOR<UserCreateWithoutIdentityVerificationInput, UserUncheckedCreateWithoutIdentityVerificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutIdentityVerificationInput
    connect?: UserWhereUniqueInput
  }

  export type IdentityVerificationUpdatedocumentImagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EnumVerificationStatusFieldUpdateOperationsInput = {
    set?: $Enums.VerificationStatus
  }

  export type UserUpdateOneRequiredWithoutIdentityVerificationNestedInput = {
    create?: XOR<UserCreateWithoutIdentityVerificationInput, UserUncheckedCreateWithoutIdentityVerificationInput>
    connectOrCreate?: UserCreateOrConnectWithoutIdentityVerificationInput
    upsert?: UserUpsertWithoutIdentityVerificationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutIdentityVerificationInput, UserUpdateWithoutIdentityVerificationInput>, UserUncheckedUpdateWithoutIdentityVerificationInput>
  }

  export type SubscriptionCreateNestedManyWithoutPlanInput = {
    create?: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput> | SubscriptionCreateWithoutPlanInput[] | SubscriptionUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutPlanInput | SubscriptionCreateOrConnectWithoutPlanInput[]
    createMany?: SubscriptionCreateManyPlanInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type SubscriptionUncheckedCreateNestedManyWithoutPlanInput = {
    create?: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput> | SubscriptionCreateWithoutPlanInput[] | SubscriptionUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutPlanInput | SubscriptionCreateOrConnectWithoutPlanInput[]
    createMany?: SubscriptionCreateManyPlanInputEnvelope
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SubscriptionUpdateManyWithoutPlanNestedInput = {
    create?: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput> | SubscriptionCreateWithoutPlanInput[] | SubscriptionUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutPlanInput | SubscriptionCreateOrConnectWithoutPlanInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutPlanInput | SubscriptionUpsertWithWhereUniqueWithoutPlanInput[]
    createMany?: SubscriptionCreateManyPlanInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutPlanInput | SubscriptionUpdateWithWhereUniqueWithoutPlanInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutPlanInput | SubscriptionUpdateManyWithWhereWithoutPlanInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type SubscriptionUncheckedUpdateManyWithoutPlanNestedInput = {
    create?: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput> | SubscriptionCreateWithoutPlanInput[] | SubscriptionUncheckedCreateWithoutPlanInput[]
    connectOrCreate?: SubscriptionCreateOrConnectWithoutPlanInput | SubscriptionCreateOrConnectWithoutPlanInput[]
    upsert?: SubscriptionUpsertWithWhereUniqueWithoutPlanInput | SubscriptionUpsertWithWhereUniqueWithoutPlanInput[]
    createMany?: SubscriptionCreateManyPlanInputEnvelope
    set?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    disconnect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    delete?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    connect?: SubscriptionWhereUniqueInput | SubscriptionWhereUniqueInput[]
    update?: SubscriptionUpdateWithWhereUniqueWithoutPlanInput | SubscriptionUpdateWithWhereUniqueWithoutPlanInput[]
    updateMany?: SubscriptionUpdateManyWithWhereWithoutPlanInput | SubscriptionUpdateManyWithWhereWithoutPlanInput[]
    deleteMany?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
  }

  export type SubscriptionPlanCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<SubscriptionPlanCreateWithoutSubscriptionsInput, SubscriptionPlanUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: SubscriptionPlanCreateOrConnectWithoutSubscriptionsInput
    connect?: SubscriptionPlanWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSubscriptionsInput = {
    create?: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumSubscriptionStatusFieldUpdateOperationsInput = {
    set?: $Enums.SubscriptionStatus
  }

  export type SubscriptionPlanUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<SubscriptionPlanCreateWithoutSubscriptionsInput, SubscriptionPlanUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: SubscriptionPlanCreateOrConnectWithoutSubscriptionsInput
    upsert?: SubscriptionPlanUpsertWithoutSubscriptionsInput
    connect?: SubscriptionPlanWhereUniqueInput
    update?: XOR<XOR<SubscriptionPlanUpdateToOneWithWhereWithoutSubscriptionsInput, SubscriptionPlanUpdateWithoutSubscriptionsInput>, SubscriptionPlanUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type UserUpdateOneRequiredWithoutSubscriptionsNestedInput = {
    create?: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSubscriptionsInput
    upsert?: UserUpsertWithoutSubscriptionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSubscriptionsInput, UserUpdateWithoutSubscriptionsInput>, UserUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type PostTagCreateNestedManyWithoutTagInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type PostTagUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type EnumTagCategoryFieldUpdateOperationsInput = {
    set?: $Enums.TagCategory
  }

  export type PostTagUpdateManyWithoutTagNestedInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutTagInput | PostTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutTagInput | PostTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutTagInput | PostTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type PostTagUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput> | PostTagCreateWithoutTagInput[] | PostTagUncheckedCreateWithoutTagInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutTagInput | PostTagCreateOrConnectWithoutTagInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutTagInput | PostTagUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: PostTagCreateManyTagInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutTagInput | PostTagUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutTagInput | PostTagUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type PostCreateNestedOneWithoutTagsInput = {
    create?: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutTagsInput
    connect?: PostWhereUniqueInput
  }

  export type TagCreateNestedOneWithoutPostsInput = {
    create?: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    connectOrCreate?: TagCreateOrConnectWithoutPostsInput
    connect?: TagWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutTagsNestedInput = {
    create?: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutTagsInput
    upsert?: PostUpsertWithoutTagsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutTagsInput, PostUpdateWithoutTagsInput>, PostUncheckedUpdateWithoutTagsInput>
  }

  export type TagUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    connectOrCreate?: TagCreateOrConnectWithoutPostsInput
    upsert?: TagUpsertWithoutPostsInput
    connect?: TagWhereUniqueInput
    update?: XOR<XOR<TagUpdateToOneWithWhereWithoutPostsInput, TagUpdateWithoutPostsInput>, TagUncheckedUpdateWithoutPostsInput>
  }

  export type UserCreateNestedOneWithoutAdminInput = {
    create?: XOR<UserCreateWithoutAdminInput, UserUncheckedCreateWithoutAdminInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAdminRoleFieldUpdateOperationsInput = {
    set?: $Enums.AdminRole
  }

  export type UserUpdateOneRequiredWithoutAdminNestedInput = {
    create?: XOR<UserCreateWithoutAdminInput, UserUncheckedCreateWithoutAdminInput>
    connectOrCreate?: UserCreateOrConnectWithoutAdminInput
    upsert?: UserUpsertWithoutAdminInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAdminInput, UserUpdateWithoutAdminInput>, UserUncheckedUpdateWithoutAdminInput>
  }

  export type UserCreateNestedOneWithoutReputationInput = {
    create?: XOR<UserCreateWithoutReputationInput, UserUncheckedCreateWithoutReputationInput>
    connectOrCreate?: UserCreateOrConnectWithoutReputationInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutReputationNestedInput = {
    create?: XOR<UserCreateWithoutReputationInput, UserUncheckedCreateWithoutReputationInput>
    connectOrCreate?: UserCreateOrConnectWithoutReputationInput
    upsert?: UserUpsertWithoutReputationInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReputationInput, UserUpdateWithoutReputationInput>, UserUncheckedUpdateWithoutReputationInput>
  }

  export type EscortCreatelanguagesInput = {
    set: string[]
  }

  export type EscortCreateservicesInput = {
    set: string[]
  }

  export type AgencyInvitationCreateNestedManyWithoutEscortInput = {
    create?: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput> | AgencyInvitationCreateWithoutEscortInput[] | AgencyInvitationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutEscortInput | AgencyInvitationCreateOrConnectWithoutEscortInput[]
    createMany?: AgencyInvitationCreateManyEscortInputEnvelope
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
  }

  export type AgencyMembershipCreateNestedManyWithoutEscortInput = {
    create?: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput> | AgencyMembershipCreateWithoutEscortInput[] | AgencyMembershipUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutEscortInput | AgencyMembershipCreateOrConnectWithoutEscortInput[]
    createMany?: AgencyMembershipCreateManyEscortInputEnvelope
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
  }

  export type ClientReviewCreateNestedManyWithoutEscortInput = {
    create?: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput> | ClientReviewCreateWithoutEscortInput[] | ClientReviewUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutEscortInput | ClientReviewCreateOrConnectWithoutEscortInput[]
    createMany?: ClientReviewCreateManyEscortInputEnvelope
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
  }

  export type EscortVerificationCreateNestedManyWithoutEscortInput = {
    create?: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput> | EscortVerificationCreateWithoutEscortInput[] | EscortVerificationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutEscortInput | EscortVerificationCreateOrConnectWithoutEscortInput[]
    createMany?: EscortVerificationCreateManyEscortInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutEscortInput = {
    create?: XOR<UserCreateWithoutEscortInput, UserUncheckedCreateWithoutEscortInput>
    connectOrCreate?: UserCreateOrConnectWithoutEscortInput
    connect?: UserWhereUniqueInput
  }

  export type ReviewCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput> | ReviewCreateWithoutAuthorInput[] | ReviewUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutAuthorInput | ReviewCreateOrConnectWithoutAuthorInput[]
    createMany?: ReviewCreateManyAuthorInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutTargetInput = {
    create?: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput> | ReviewCreateWithoutTargetInput[] | ReviewUncheckedCreateWithoutTargetInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutTargetInput | ReviewCreateOrConnectWithoutTargetInput[]
    createMany?: ReviewCreateManyTargetInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput = {
    create?: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput> | AgencyInvitationCreateWithoutEscortInput[] | AgencyInvitationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutEscortInput | AgencyInvitationCreateOrConnectWithoutEscortInput[]
    createMany?: AgencyInvitationCreateManyEscortInputEnvelope
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
  }

  export type AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput = {
    create?: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput> | AgencyMembershipCreateWithoutEscortInput[] | AgencyMembershipUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutEscortInput | AgencyMembershipCreateOrConnectWithoutEscortInput[]
    createMany?: AgencyMembershipCreateManyEscortInputEnvelope
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
  }

  export type ClientReviewUncheckedCreateNestedManyWithoutEscortInput = {
    create?: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput> | ClientReviewCreateWithoutEscortInput[] | ClientReviewUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutEscortInput | ClientReviewCreateOrConnectWithoutEscortInput[]
    createMany?: ClientReviewCreateManyEscortInputEnvelope
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
  }

  export type EscortVerificationUncheckedCreateNestedManyWithoutEscortInput = {
    create?: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput> | EscortVerificationCreateWithoutEscortInput[] | EscortVerificationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutEscortInput | EscortVerificationCreateOrConnectWithoutEscortInput[]
    createMany?: EscortVerificationCreateManyEscortInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput> | ReviewCreateWithoutAuthorInput[] | ReviewUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutAuthorInput | ReviewCreateOrConnectWithoutAuthorInput[]
    createMany?: ReviewCreateManyAuthorInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutTargetInput = {
    create?: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput> | ReviewCreateWithoutTargetInput[] | ReviewUncheckedCreateWithoutTargetInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutTargetInput | ReviewCreateOrConnectWithoutTargetInput[]
    createMany?: ReviewCreateManyTargetInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type EscortUpdatelanguagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type EscortUpdateservicesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type AgencyInvitationUpdateManyWithoutEscortNestedInput = {
    create?: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput> | AgencyInvitationCreateWithoutEscortInput[] | AgencyInvitationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutEscortInput | AgencyInvitationCreateOrConnectWithoutEscortInput[]
    upsert?: AgencyInvitationUpsertWithWhereUniqueWithoutEscortInput | AgencyInvitationUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: AgencyInvitationCreateManyEscortInputEnvelope
    set?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    disconnect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    delete?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    update?: AgencyInvitationUpdateWithWhereUniqueWithoutEscortInput | AgencyInvitationUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: AgencyInvitationUpdateManyWithWhereWithoutEscortInput | AgencyInvitationUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
  }

  export type AgencyMembershipUpdateManyWithoutEscortNestedInput = {
    create?: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput> | AgencyMembershipCreateWithoutEscortInput[] | AgencyMembershipUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutEscortInput | AgencyMembershipCreateOrConnectWithoutEscortInput[]
    upsert?: AgencyMembershipUpsertWithWhereUniqueWithoutEscortInput | AgencyMembershipUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: AgencyMembershipCreateManyEscortInputEnvelope
    set?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    disconnect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    delete?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    update?: AgencyMembershipUpdateWithWhereUniqueWithoutEscortInput | AgencyMembershipUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: AgencyMembershipUpdateManyWithWhereWithoutEscortInput | AgencyMembershipUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
  }

  export type ClientReviewUpdateManyWithoutEscortNestedInput = {
    create?: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput> | ClientReviewCreateWithoutEscortInput[] | ClientReviewUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutEscortInput | ClientReviewCreateOrConnectWithoutEscortInput[]
    upsert?: ClientReviewUpsertWithWhereUniqueWithoutEscortInput | ClientReviewUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: ClientReviewCreateManyEscortInputEnvelope
    set?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    disconnect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    delete?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    update?: ClientReviewUpdateWithWhereUniqueWithoutEscortInput | ClientReviewUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: ClientReviewUpdateManyWithWhereWithoutEscortInput | ClientReviewUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
  }

  export type EscortVerificationUpdateManyWithoutEscortNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput> | EscortVerificationCreateWithoutEscortInput[] | EscortVerificationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutEscortInput | EscortVerificationCreateOrConnectWithoutEscortInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutEscortInput | EscortVerificationUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: EscortVerificationCreateManyEscortInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutEscortInput | EscortVerificationUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutEscortInput | EscortVerificationUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutEscortNestedInput = {
    create?: XOR<UserCreateWithoutEscortInput, UserUncheckedCreateWithoutEscortInput>
    connectOrCreate?: UserCreateOrConnectWithoutEscortInput
    upsert?: UserUpsertWithoutEscortInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEscortInput, UserUpdateWithoutEscortInput>, UserUncheckedUpdateWithoutEscortInput>
  }

  export type ReviewUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput> | ReviewCreateWithoutAuthorInput[] | ReviewUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutAuthorInput | ReviewCreateOrConnectWithoutAuthorInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutAuthorInput | ReviewUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ReviewCreateManyAuthorInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutAuthorInput | ReviewUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutAuthorInput | ReviewUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutTargetNestedInput = {
    create?: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput> | ReviewCreateWithoutTargetInput[] | ReviewUncheckedCreateWithoutTargetInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutTargetInput | ReviewCreateOrConnectWithoutTargetInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutTargetInput | ReviewUpsertWithWhereUniqueWithoutTargetInput[]
    createMany?: ReviewCreateManyTargetInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutTargetInput | ReviewUpdateWithWhereUniqueWithoutTargetInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutTargetInput | ReviewUpdateManyWithWhereWithoutTargetInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput = {
    create?: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput> | AgencyInvitationCreateWithoutEscortInput[] | AgencyInvitationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutEscortInput | AgencyInvitationCreateOrConnectWithoutEscortInput[]
    upsert?: AgencyInvitationUpsertWithWhereUniqueWithoutEscortInput | AgencyInvitationUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: AgencyInvitationCreateManyEscortInputEnvelope
    set?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    disconnect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    delete?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    update?: AgencyInvitationUpdateWithWhereUniqueWithoutEscortInput | AgencyInvitationUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: AgencyInvitationUpdateManyWithWhereWithoutEscortInput | AgencyInvitationUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
  }

  export type AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput = {
    create?: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput> | AgencyMembershipCreateWithoutEscortInput[] | AgencyMembershipUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutEscortInput | AgencyMembershipCreateOrConnectWithoutEscortInput[]
    upsert?: AgencyMembershipUpsertWithWhereUniqueWithoutEscortInput | AgencyMembershipUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: AgencyMembershipCreateManyEscortInputEnvelope
    set?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    disconnect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    delete?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    update?: AgencyMembershipUpdateWithWhereUniqueWithoutEscortInput | AgencyMembershipUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: AgencyMembershipUpdateManyWithWhereWithoutEscortInput | AgencyMembershipUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
  }

  export type ClientReviewUncheckedUpdateManyWithoutEscortNestedInput = {
    create?: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput> | ClientReviewCreateWithoutEscortInput[] | ClientReviewUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutEscortInput | ClientReviewCreateOrConnectWithoutEscortInput[]
    upsert?: ClientReviewUpsertWithWhereUniqueWithoutEscortInput | ClientReviewUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: ClientReviewCreateManyEscortInputEnvelope
    set?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    disconnect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    delete?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    update?: ClientReviewUpdateWithWhereUniqueWithoutEscortInput | ClientReviewUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: ClientReviewUpdateManyWithWhereWithoutEscortInput | ClientReviewUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
  }

  export type EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput> | EscortVerificationCreateWithoutEscortInput[] | EscortVerificationUncheckedCreateWithoutEscortInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutEscortInput | EscortVerificationCreateOrConnectWithoutEscortInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutEscortInput | EscortVerificationUpsertWithWhereUniqueWithoutEscortInput[]
    createMany?: EscortVerificationCreateManyEscortInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutEscortInput | EscortVerificationUpdateWithWhereUniqueWithoutEscortInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutEscortInput | EscortVerificationUpdateManyWithWhereWithoutEscortInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput> | ReviewCreateWithoutAuthorInput[] | ReviewUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutAuthorInput | ReviewCreateOrConnectWithoutAuthorInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutAuthorInput | ReviewUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ReviewCreateManyAuthorInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutAuthorInput | ReviewUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutAuthorInput | ReviewUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutTargetNestedInput = {
    create?: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput> | ReviewCreateWithoutTargetInput[] | ReviewUncheckedCreateWithoutTargetInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutTargetInput | ReviewCreateOrConnectWithoutTargetInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutTargetInput | ReviewUpsertWithWhereUniqueWithoutTargetInput[]
    createMany?: ReviewCreateManyTargetInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutTargetInput | ReviewUpdateWithWhereUniqueWithoutTargetInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutTargetInput | ReviewUpdateManyWithWhereWithoutTargetInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAgencyInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput
    connect?: UserWhereUniqueInput
  }

  export type AgencyInvitationCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput> | AgencyInvitationCreateWithoutAgencyInput[] | AgencyInvitationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutAgencyInput | AgencyInvitationCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyInvitationCreateManyAgencyInputEnvelope
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
  }

  export type AgencyMembershipCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput> | AgencyMembershipCreateWithoutAgencyInput[] | AgencyMembershipUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutAgencyInput | AgencyMembershipCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyMembershipCreateManyAgencyInputEnvelope
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
  }

  export type EscortVerificationCreateNestedManyWithoutAgencyInput = {
    create?: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput> | EscortVerificationCreateWithoutAgencyInput[] | EscortVerificationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutAgencyInput | EscortVerificationCreateOrConnectWithoutAgencyInput[]
    createMany?: EscortVerificationCreateManyAgencyInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type AgencyInvitationUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput> | AgencyInvitationCreateWithoutAgencyInput[] | AgencyInvitationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutAgencyInput | AgencyInvitationCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyInvitationCreateManyAgencyInputEnvelope
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
  }

  export type AgencyMembershipUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput> | AgencyMembershipCreateWithoutAgencyInput[] | AgencyMembershipUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutAgencyInput | AgencyMembershipCreateOrConnectWithoutAgencyInput[]
    createMany?: AgencyMembershipCreateManyAgencyInputEnvelope
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
  }

  export type EscortVerificationUncheckedCreateNestedManyWithoutAgencyInput = {
    create?: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput> | EscortVerificationCreateWithoutAgencyInput[] | EscortVerificationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutAgencyInput | EscortVerificationCreateOrConnectWithoutAgencyInput[]
    createMany?: EscortVerificationCreateManyAgencyInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutAgencyNestedInput = {
    create?: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgencyInput
    upsert?: UserUpsertWithoutAgencyInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgencyInput, UserUpdateWithoutAgencyInput>, UserUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyInvitationUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput> | AgencyInvitationCreateWithoutAgencyInput[] | AgencyInvitationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutAgencyInput | AgencyInvitationCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyInvitationUpsertWithWhereUniqueWithoutAgencyInput | AgencyInvitationUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyInvitationCreateManyAgencyInputEnvelope
    set?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    disconnect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    delete?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    update?: AgencyInvitationUpdateWithWhereUniqueWithoutAgencyInput | AgencyInvitationUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyInvitationUpdateManyWithWhereWithoutAgencyInput | AgencyInvitationUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
  }

  export type AgencyMembershipUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput> | AgencyMembershipCreateWithoutAgencyInput[] | AgencyMembershipUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutAgencyInput | AgencyMembershipCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyMembershipUpsertWithWhereUniqueWithoutAgencyInput | AgencyMembershipUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyMembershipCreateManyAgencyInputEnvelope
    set?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    disconnect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    delete?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    update?: AgencyMembershipUpdateWithWhereUniqueWithoutAgencyInput | AgencyMembershipUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyMembershipUpdateManyWithWhereWithoutAgencyInput | AgencyMembershipUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
  }

  export type EscortVerificationUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput> | EscortVerificationCreateWithoutAgencyInput[] | EscortVerificationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutAgencyInput | EscortVerificationCreateOrConnectWithoutAgencyInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutAgencyInput | EscortVerificationUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: EscortVerificationCreateManyAgencyInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutAgencyInput | EscortVerificationUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutAgencyInput | EscortVerificationUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type AgencyInvitationUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput> | AgencyInvitationCreateWithoutAgencyInput[] | AgencyInvitationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyInvitationCreateOrConnectWithoutAgencyInput | AgencyInvitationCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyInvitationUpsertWithWhereUniqueWithoutAgencyInput | AgencyInvitationUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyInvitationCreateManyAgencyInputEnvelope
    set?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    disconnect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    delete?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    connect?: AgencyInvitationWhereUniqueInput | AgencyInvitationWhereUniqueInput[]
    update?: AgencyInvitationUpdateWithWhereUniqueWithoutAgencyInput | AgencyInvitationUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyInvitationUpdateManyWithWhereWithoutAgencyInput | AgencyInvitationUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
  }

  export type AgencyMembershipUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput> | AgencyMembershipCreateWithoutAgencyInput[] | AgencyMembershipUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: AgencyMembershipCreateOrConnectWithoutAgencyInput | AgencyMembershipCreateOrConnectWithoutAgencyInput[]
    upsert?: AgencyMembershipUpsertWithWhereUniqueWithoutAgencyInput | AgencyMembershipUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: AgencyMembershipCreateManyAgencyInputEnvelope
    set?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    disconnect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    delete?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    connect?: AgencyMembershipWhereUniqueInput | AgencyMembershipWhereUniqueInput[]
    update?: AgencyMembershipUpdateWithWhereUniqueWithoutAgencyInput | AgencyMembershipUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: AgencyMembershipUpdateManyWithWhereWithoutAgencyInput | AgencyMembershipUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
  }

  export type EscortVerificationUncheckedUpdateManyWithoutAgencyNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput> | EscortVerificationCreateWithoutAgencyInput[] | EscortVerificationUncheckedCreateWithoutAgencyInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutAgencyInput | EscortVerificationCreateOrConnectWithoutAgencyInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutAgencyInput | EscortVerificationUpsertWithWhereUniqueWithoutAgencyInput[]
    createMany?: EscortVerificationCreateManyAgencyInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutAgencyInput | EscortVerificationUpdateWithWhereUniqueWithoutAgencyInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutAgencyInput | EscortVerificationUpdateManyWithWhereWithoutAgencyInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type ClientReviewCreateNestedManyWithoutClientInput = {
    create?: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput> | ClientReviewCreateWithoutClientInput[] | ClientReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutClientInput | ClientReviewCreateOrConnectWithoutClientInput[]
    createMany?: ClientReviewCreateManyClientInputEnvelope
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutClientInput = {
    create?: XOR<UserCreateWithoutClientInput, UserUncheckedCreateWithoutClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientInput
    connect?: UserWhereUniqueInput
  }

  export type PaymentCreateNestedManyWithoutClientInput = {
    create?: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput> | PaymentCreateWithoutClientInput[] | PaymentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutClientInput | PaymentCreateOrConnectWithoutClientInput[]
    createMany?: PaymentCreateManyClientInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PointTransactionCreateNestedManyWithoutClientInput = {
    create?: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput> | PointTransactionCreateWithoutClientInput[] | PointTransactionUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointTransactionCreateOrConnectWithoutClientInput | PointTransactionCreateOrConnectWithoutClientInput[]
    createMany?: PointTransactionCreateManyClientInputEnvelope
    connect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
  }

  export type PointsHistoryCreateNestedManyWithoutClientInput = {
    create?: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput> | PointsHistoryCreateWithoutClientInput[] | PointsHistoryUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsHistoryCreateOrConnectWithoutClientInput | PointsHistoryCreateOrConnectWithoutClientInput[]
    createMany?: PointsHistoryCreateManyClientInputEnvelope
    connect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
  }

  export type PointsPurchaseCreateNestedManyWithoutClientInput = {
    create?: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput> | PointsPurchaseCreateWithoutClientInput[] | PointsPurchaseUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutClientInput | PointsPurchaseCreateOrConnectWithoutClientInput[]
    createMany?: PointsPurchaseCreateManyClientInputEnvelope
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
  }

  export type PremiumActivationCreateNestedManyWithoutClientInput = {
    create?: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput> | PremiumActivationCreateWithoutClientInput[] | PremiumActivationUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PremiumActivationCreateOrConnectWithoutClientInput | PremiumActivationCreateOrConnectWithoutClientInput[]
    createMany?: PremiumActivationCreateManyClientInputEnvelope
    connect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
  }

  export type ClientReviewUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput> | ClientReviewCreateWithoutClientInput[] | ClientReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutClientInput | ClientReviewCreateOrConnectWithoutClientInput[]
    createMany?: ClientReviewCreateManyClientInputEnvelope
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
  }

  export type PaymentUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput> | PaymentCreateWithoutClientInput[] | PaymentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutClientInput | PaymentCreateOrConnectWithoutClientInput[]
    createMany?: PaymentCreateManyClientInputEnvelope
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
  }

  export type PointTransactionUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput> | PointTransactionCreateWithoutClientInput[] | PointTransactionUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointTransactionCreateOrConnectWithoutClientInput | PointTransactionCreateOrConnectWithoutClientInput[]
    createMany?: PointTransactionCreateManyClientInputEnvelope
    connect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
  }

  export type PointsHistoryUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput> | PointsHistoryCreateWithoutClientInput[] | PointsHistoryUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsHistoryCreateOrConnectWithoutClientInput | PointsHistoryCreateOrConnectWithoutClientInput[]
    createMany?: PointsHistoryCreateManyClientInputEnvelope
    connect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
  }

  export type PointsPurchaseUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput> | PointsPurchaseCreateWithoutClientInput[] | PointsPurchaseUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutClientInput | PointsPurchaseCreateOrConnectWithoutClientInput[]
    createMany?: PointsPurchaseCreateManyClientInputEnvelope
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
  }

  export type PremiumActivationUncheckedCreateNestedManyWithoutClientInput = {
    create?: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput> | PremiumActivationCreateWithoutClientInput[] | PremiumActivationUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PremiumActivationCreateOrConnectWithoutClientInput | PremiumActivationCreateOrConnectWithoutClientInput[]
    createMany?: PremiumActivationCreateManyClientInputEnvelope
    connect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
  }

  export type EnumPremiumTierFieldUpdateOperationsInput = {
    set?: $Enums.PremiumTier
  }

  export type ClientReviewUpdateManyWithoutClientNestedInput = {
    create?: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput> | ClientReviewCreateWithoutClientInput[] | ClientReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutClientInput | ClientReviewCreateOrConnectWithoutClientInput[]
    upsert?: ClientReviewUpsertWithWhereUniqueWithoutClientInput | ClientReviewUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ClientReviewCreateManyClientInputEnvelope
    set?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    disconnect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    delete?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    update?: ClientReviewUpdateWithWhereUniqueWithoutClientInput | ClientReviewUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ClientReviewUpdateManyWithWhereWithoutClientInput | ClientReviewUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutClientNestedInput = {
    create?: XOR<UserCreateWithoutClientInput, UserUncheckedCreateWithoutClientInput>
    connectOrCreate?: UserCreateOrConnectWithoutClientInput
    upsert?: UserUpsertWithoutClientInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutClientInput, UserUpdateWithoutClientInput>, UserUncheckedUpdateWithoutClientInput>
  }

  export type PaymentUpdateManyWithoutClientNestedInput = {
    create?: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput> | PaymentCreateWithoutClientInput[] | PaymentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutClientInput | PaymentCreateOrConnectWithoutClientInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutClientInput | PaymentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PaymentCreateManyClientInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutClientInput | PaymentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutClientInput | PaymentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PointTransactionUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput> | PointTransactionCreateWithoutClientInput[] | PointTransactionUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointTransactionCreateOrConnectWithoutClientInput | PointTransactionCreateOrConnectWithoutClientInput[]
    upsert?: PointTransactionUpsertWithWhereUniqueWithoutClientInput | PointTransactionUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointTransactionCreateManyClientInputEnvelope
    set?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    disconnect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    delete?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    connect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    update?: PointTransactionUpdateWithWhereUniqueWithoutClientInput | PointTransactionUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointTransactionUpdateManyWithWhereWithoutClientInput | PointTransactionUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointTransactionScalarWhereInput | PointTransactionScalarWhereInput[]
  }

  export type PointsHistoryUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput> | PointsHistoryCreateWithoutClientInput[] | PointsHistoryUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsHistoryCreateOrConnectWithoutClientInput | PointsHistoryCreateOrConnectWithoutClientInput[]
    upsert?: PointsHistoryUpsertWithWhereUniqueWithoutClientInput | PointsHistoryUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointsHistoryCreateManyClientInputEnvelope
    set?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    disconnect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    delete?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    connect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    update?: PointsHistoryUpdateWithWhereUniqueWithoutClientInput | PointsHistoryUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointsHistoryUpdateManyWithWhereWithoutClientInput | PointsHistoryUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointsHistoryScalarWhereInput | PointsHistoryScalarWhereInput[]
  }

  export type PointsPurchaseUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput> | PointsPurchaseCreateWithoutClientInput[] | PointsPurchaseUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutClientInput | PointsPurchaseCreateOrConnectWithoutClientInput[]
    upsert?: PointsPurchaseUpsertWithWhereUniqueWithoutClientInput | PointsPurchaseUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointsPurchaseCreateManyClientInputEnvelope
    set?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    disconnect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    delete?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    update?: PointsPurchaseUpdateWithWhereUniqueWithoutClientInput | PointsPurchaseUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointsPurchaseUpdateManyWithWhereWithoutClientInput | PointsPurchaseUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
  }

  export type PremiumActivationUpdateManyWithoutClientNestedInput = {
    create?: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput> | PremiumActivationCreateWithoutClientInput[] | PremiumActivationUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PremiumActivationCreateOrConnectWithoutClientInput | PremiumActivationCreateOrConnectWithoutClientInput[]
    upsert?: PremiumActivationUpsertWithWhereUniqueWithoutClientInput | PremiumActivationUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PremiumActivationCreateManyClientInputEnvelope
    set?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    disconnect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    delete?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    connect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    update?: PremiumActivationUpdateWithWhereUniqueWithoutClientInput | PremiumActivationUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PremiumActivationUpdateManyWithWhereWithoutClientInput | PremiumActivationUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PremiumActivationScalarWhereInput | PremiumActivationScalarWhereInput[]
  }

  export type ClientReviewUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput> | ClientReviewCreateWithoutClientInput[] | ClientReviewUncheckedCreateWithoutClientInput[]
    connectOrCreate?: ClientReviewCreateOrConnectWithoutClientInput | ClientReviewCreateOrConnectWithoutClientInput[]
    upsert?: ClientReviewUpsertWithWhereUniqueWithoutClientInput | ClientReviewUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: ClientReviewCreateManyClientInputEnvelope
    set?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    disconnect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    delete?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    connect?: ClientReviewWhereUniqueInput | ClientReviewWhereUniqueInput[]
    update?: ClientReviewUpdateWithWhereUniqueWithoutClientInput | ClientReviewUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: ClientReviewUpdateManyWithWhereWithoutClientInput | ClientReviewUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
  }

  export type PaymentUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput> | PaymentCreateWithoutClientInput[] | PaymentUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PaymentCreateOrConnectWithoutClientInput | PaymentCreateOrConnectWithoutClientInput[]
    upsert?: PaymentUpsertWithWhereUniqueWithoutClientInput | PaymentUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PaymentCreateManyClientInputEnvelope
    set?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    disconnect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    delete?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    connect?: PaymentWhereUniqueInput | PaymentWhereUniqueInput[]
    update?: PaymentUpdateWithWhereUniqueWithoutClientInput | PaymentUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PaymentUpdateManyWithWhereWithoutClientInput | PaymentUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
  }

  export type PointTransactionUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput> | PointTransactionCreateWithoutClientInput[] | PointTransactionUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointTransactionCreateOrConnectWithoutClientInput | PointTransactionCreateOrConnectWithoutClientInput[]
    upsert?: PointTransactionUpsertWithWhereUniqueWithoutClientInput | PointTransactionUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointTransactionCreateManyClientInputEnvelope
    set?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    disconnect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    delete?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    connect?: PointTransactionWhereUniqueInput | PointTransactionWhereUniqueInput[]
    update?: PointTransactionUpdateWithWhereUniqueWithoutClientInput | PointTransactionUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointTransactionUpdateManyWithWhereWithoutClientInput | PointTransactionUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointTransactionScalarWhereInput | PointTransactionScalarWhereInput[]
  }

  export type PointsHistoryUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput> | PointsHistoryCreateWithoutClientInput[] | PointsHistoryUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsHistoryCreateOrConnectWithoutClientInput | PointsHistoryCreateOrConnectWithoutClientInput[]
    upsert?: PointsHistoryUpsertWithWhereUniqueWithoutClientInput | PointsHistoryUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointsHistoryCreateManyClientInputEnvelope
    set?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    disconnect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    delete?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    connect?: PointsHistoryWhereUniqueInput | PointsHistoryWhereUniqueInput[]
    update?: PointsHistoryUpdateWithWhereUniqueWithoutClientInput | PointsHistoryUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointsHistoryUpdateManyWithWhereWithoutClientInput | PointsHistoryUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointsHistoryScalarWhereInput | PointsHistoryScalarWhereInput[]
  }

  export type PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput> | PointsPurchaseCreateWithoutClientInput[] | PointsPurchaseUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutClientInput | PointsPurchaseCreateOrConnectWithoutClientInput[]
    upsert?: PointsPurchaseUpsertWithWhereUniqueWithoutClientInput | PointsPurchaseUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PointsPurchaseCreateManyClientInputEnvelope
    set?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    disconnect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    delete?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    update?: PointsPurchaseUpdateWithWhereUniqueWithoutClientInput | PointsPurchaseUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PointsPurchaseUpdateManyWithWhereWithoutClientInput | PointsPurchaseUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
  }

  export type PremiumActivationUncheckedUpdateManyWithoutClientNestedInput = {
    create?: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput> | PremiumActivationCreateWithoutClientInput[] | PremiumActivationUncheckedCreateWithoutClientInput[]
    connectOrCreate?: PremiumActivationCreateOrConnectWithoutClientInput | PremiumActivationCreateOrConnectWithoutClientInput[]
    upsert?: PremiumActivationUpsertWithWhereUniqueWithoutClientInput | PremiumActivationUpsertWithWhereUniqueWithoutClientInput[]
    createMany?: PremiumActivationCreateManyClientInputEnvelope
    set?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    disconnect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    delete?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    connect?: PremiumActivationWhereUniqueInput | PremiumActivationWhereUniqueInput[]
    update?: PremiumActivationUpdateWithWhereUniqueWithoutClientInput | PremiumActivationUpdateWithWhereUniqueWithoutClientInput[]
    updateMany?: PremiumActivationUpdateManyWithWhereWithoutClientInput | PremiumActivationUpdateManyWithWhereWithoutClientInput[]
    deleteMany?: PremiumActivationScalarWhereInput | PremiumActivationScalarWhereInput[]
  }

  export type PointsPurchaseCreateNestedManyWithoutPackageInput = {
    create?: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput> | PointsPurchaseCreateWithoutPackageInput[] | PointsPurchaseUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutPackageInput | PointsPurchaseCreateOrConnectWithoutPackageInput[]
    createMany?: PointsPurchaseCreateManyPackageInputEnvelope
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
  }

  export type PointsPurchaseUncheckedCreateNestedManyWithoutPackageInput = {
    create?: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput> | PointsPurchaseCreateWithoutPackageInput[] | PointsPurchaseUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutPackageInput | PointsPurchaseCreateOrConnectWithoutPackageInput[]
    createMany?: PointsPurchaseCreateManyPackageInputEnvelope
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
  }

  export type PointsPurchaseUpdateManyWithoutPackageNestedInput = {
    create?: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput> | PointsPurchaseCreateWithoutPackageInput[] | PointsPurchaseUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutPackageInput | PointsPurchaseCreateOrConnectWithoutPackageInput[]
    upsert?: PointsPurchaseUpsertWithWhereUniqueWithoutPackageInput | PointsPurchaseUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: PointsPurchaseCreateManyPackageInputEnvelope
    set?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    disconnect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    delete?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    update?: PointsPurchaseUpdateWithWhereUniqueWithoutPackageInput | PointsPurchaseUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: PointsPurchaseUpdateManyWithWhereWithoutPackageInput | PointsPurchaseUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
  }

  export type PointsPurchaseUncheckedUpdateManyWithoutPackageNestedInput = {
    create?: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput> | PointsPurchaseCreateWithoutPackageInput[] | PointsPurchaseUncheckedCreateWithoutPackageInput[]
    connectOrCreate?: PointsPurchaseCreateOrConnectWithoutPackageInput | PointsPurchaseCreateOrConnectWithoutPackageInput[]
    upsert?: PointsPurchaseUpsertWithWhereUniqueWithoutPackageInput | PointsPurchaseUpsertWithWhereUniqueWithoutPackageInput[]
    createMany?: PointsPurchaseCreateManyPackageInputEnvelope
    set?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    disconnect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    delete?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    connect?: PointsPurchaseWhereUniqueInput | PointsPurchaseWhereUniqueInput[]
    update?: PointsPurchaseUpdateWithWhereUniqueWithoutPackageInput | PointsPurchaseUpdateWithWhereUniqueWithoutPackageInput[]
    updateMany?: PointsPurchaseUpdateManyWithWhereWithoutPackageInput | PointsPurchaseUpdateManyWithWhereWithoutPackageInput[]
    deleteMany?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
  }

  export type ClientCreateNestedOneWithoutPointsPurchasesInput = {
    create?: XOR<ClientCreateWithoutPointsPurchasesInput, ClientUncheckedCreateWithoutPointsPurchasesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointsPurchasesInput
    connect?: ClientWhereUniqueInput
  }

  export type PointsPackageCreateNestedOneWithoutPurchasesInput = {
    create?: XOR<PointsPackageCreateWithoutPurchasesInput, PointsPackageUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: PointsPackageCreateOrConnectWithoutPurchasesInput
    connect?: PointsPackageWhereUniqueInput
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type ClientUpdateOneRequiredWithoutPointsPurchasesNestedInput = {
    create?: XOR<ClientCreateWithoutPointsPurchasesInput, ClientUncheckedCreateWithoutPointsPurchasesInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointsPurchasesInput
    upsert?: ClientUpsertWithoutPointsPurchasesInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPointsPurchasesInput, ClientUpdateWithoutPointsPurchasesInput>, ClientUncheckedUpdateWithoutPointsPurchasesInput>
  }

  export type PointsPackageUpdateOneRequiredWithoutPurchasesNestedInput = {
    create?: XOR<PointsPackageCreateWithoutPurchasesInput, PointsPackageUncheckedCreateWithoutPurchasesInput>
    connectOrCreate?: PointsPackageCreateOrConnectWithoutPurchasesInput
    upsert?: PointsPackageUpsertWithoutPurchasesInput
    connect?: PointsPackageWhereUniqueInput
    update?: XOR<XOR<PointsPackageUpdateToOneWithWhereWithoutPurchasesInput, PointsPackageUpdateWithoutPurchasesInput>, PointsPackageUncheckedUpdateWithoutPurchasesInput>
  }

  export type ClientCreateNestedOneWithoutPointTransactionsInput = {
    create?: XOR<ClientCreateWithoutPointTransactionsInput, ClientUncheckedCreateWithoutPointTransactionsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointTransactionsInput
    connect?: ClientWhereUniqueInput
  }

  export type EnumPointTransactionTypeFieldUpdateOperationsInput = {
    set?: $Enums.PointTransactionType
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ClientUpdateOneRequiredWithoutPointTransactionsNestedInput = {
    create?: XOR<ClientCreateWithoutPointTransactionsInput, ClientUncheckedCreateWithoutPointTransactionsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointTransactionsInput
    upsert?: ClientUpsertWithoutPointTransactionsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPointTransactionsInput, ClientUpdateWithoutPointTransactionsInput>, ClientUncheckedUpdateWithoutPointTransactionsInput>
  }

  export type ClientCreateNestedOneWithoutPointsHistoryInput = {
    create?: XOR<ClientCreateWithoutPointsHistoryInput, ClientUncheckedCreateWithoutPointsHistoryInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointsHistoryInput
    connect?: ClientWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutPointsHistoryNestedInput = {
    create?: XOR<ClientCreateWithoutPointsHistoryInput, ClientUncheckedCreateWithoutPointsHistoryInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPointsHistoryInput
    upsert?: ClientUpsertWithoutPointsHistoryInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPointsHistoryInput, ClientUpdateWithoutPointsHistoryInput>, ClientUncheckedUpdateWithoutPointsHistoryInput>
  }

  export type ClientCreateNestedOneWithoutPremiumActivationsInput = {
    create?: XOR<ClientCreateWithoutPremiumActivationsInput, ClientUncheckedCreateWithoutPremiumActivationsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPremiumActivationsInput
    connect?: ClientWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutPremiumActivationsNestedInput = {
    create?: XOR<ClientCreateWithoutPremiumActivationsInput, ClientUncheckedCreateWithoutPremiumActivationsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPremiumActivationsInput
    upsert?: ClientUpsertWithoutPremiumActivationsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPremiumActivationsInput, ClientUpdateWithoutPremiumActivationsInput>, ClientUncheckedUpdateWithoutPremiumActivationsInput>
  }

  export type ClientCreateNestedOneWithoutClientReviewsInput = {
    create?: XOR<ClientCreateWithoutClientReviewsInput, ClientUncheckedCreateWithoutClientReviewsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutClientReviewsInput
    connect?: ClientWhereUniqueInput
  }

  export type EscortCreateNestedOneWithoutClientReviewsInput = {
    create?: XOR<EscortCreateWithoutClientReviewsInput, EscortUncheckedCreateWithoutClientReviewsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutClientReviewsInput
    connect?: EscortWhereUniqueInput
  }

  export type ClientUpdateOneRequiredWithoutClientReviewsNestedInput = {
    create?: XOR<ClientCreateWithoutClientReviewsInput, ClientUncheckedCreateWithoutClientReviewsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutClientReviewsInput
    upsert?: ClientUpsertWithoutClientReviewsInput
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutClientReviewsInput, ClientUpdateWithoutClientReviewsInput>, ClientUncheckedUpdateWithoutClientReviewsInput>
  }

  export type EscortUpdateOneRequiredWithoutClientReviewsNestedInput = {
    create?: XOR<EscortCreateWithoutClientReviewsInput, EscortUncheckedCreateWithoutClientReviewsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutClientReviewsInput
    upsert?: EscortUpsertWithoutClientReviewsInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutClientReviewsInput, EscortUpdateWithoutClientReviewsInput>, EscortUncheckedUpdateWithoutClientReviewsInput>
  }

  export type BanAppealCreateNestedManyWithoutBanInput = {
    create?: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput> | BanAppealCreateWithoutBanInput[] | BanAppealUncheckedCreateWithoutBanInput[]
    connectOrCreate?: BanAppealCreateOrConnectWithoutBanInput | BanAppealCreateOrConnectWithoutBanInput[]
    createMany?: BanAppealCreateManyBanInputEnvelope
    connect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutBanHistoryInput = {
    create?: XOR<UserCreateWithoutBanHistoryInput, UserUncheckedCreateWithoutBanHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutBanHistoryInput
    connect?: UserWhereUniqueInput
  }

  export type BanAppealUncheckedCreateNestedManyWithoutBanInput = {
    create?: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput> | BanAppealCreateWithoutBanInput[] | BanAppealUncheckedCreateWithoutBanInput[]
    connectOrCreate?: BanAppealCreateOrConnectWithoutBanInput | BanAppealCreateOrConnectWithoutBanInput[]
    createMany?: BanAppealCreateManyBanInputEnvelope
    connect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
  }

  export type EnumBanSeverityFieldUpdateOperationsInput = {
    set?: $Enums.BanSeverity
  }

  export type BanAppealUpdateManyWithoutBanNestedInput = {
    create?: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput> | BanAppealCreateWithoutBanInput[] | BanAppealUncheckedCreateWithoutBanInput[]
    connectOrCreate?: BanAppealCreateOrConnectWithoutBanInput | BanAppealCreateOrConnectWithoutBanInput[]
    upsert?: BanAppealUpsertWithWhereUniqueWithoutBanInput | BanAppealUpsertWithWhereUniqueWithoutBanInput[]
    createMany?: BanAppealCreateManyBanInputEnvelope
    set?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    disconnect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    delete?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    connect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    update?: BanAppealUpdateWithWhereUniqueWithoutBanInput | BanAppealUpdateWithWhereUniqueWithoutBanInput[]
    updateMany?: BanAppealUpdateManyWithWhereWithoutBanInput | BanAppealUpdateManyWithWhereWithoutBanInput[]
    deleteMany?: BanAppealScalarWhereInput | BanAppealScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutBanHistoryNestedInput = {
    create?: XOR<UserCreateWithoutBanHistoryInput, UserUncheckedCreateWithoutBanHistoryInput>
    connectOrCreate?: UserCreateOrConnectWithoutBanHistoryInput
    upsert?: UserUpsertWithoutBanHistoryInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBanHistoryInput, UserUpdateWithoutBanHistoryInput>, UserUncheckedUpdateWithoutBanHistoryInput>
  }

  export type BanAppealUncheckedUpdateManyWithoutBanNestedInput = {
    create?: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput> | BanAppealCreateWithoutBanInput[] | BanAppealUncheckedCreateWithoutBanInput[]
    connectOrCreate?: BanAppealCreateOrConnectWithoutBanInput | BanAppealCreateOrConnectWithoutBanInput[]
    upsert?: BanAppealUpsertWithWhereUniqueWithoutBanInput | BanAppealUpsertWithWhereUniqueWithoutBanInput[]
    createMany?: BanAppealCreateManyBanInputEnvelope
    set?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    disconnect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    delete?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    connect?: BanAppealWhereUniqueInput | BanAppealWhereUniqueInput[]
    update?: BanAppealUpdateWithWhereUniqueWithoutBanInput | BanAppealUpdateWithWhereUniqueWithoutBanInput[]
    updateMany?: BanAppealUpdateManyWithWhereWithoutBanInput | BanAppealUpdateManyWithWhereWithoutBanInput[]
    deleteMany?: BanAppealScalarWhereInput | BanAppealScalarWhereInput[]
  }

  export type BanCreateNestedOneWithoutAppealsInput = {
    create?: XOR<BanCreateWithoutAppealsInput, BanUncheckedCreateWithoutAppealsInput>
    connectOrCreate?: BanCreateOrConnectWithoutAppealsInput
    connect?: BanWhereUniqueInput
  }

  export type EnumAppealStatusFieldUpdateOperationsInput = {
    set?: $Enums.AppealStatus
  }

  export type BanUpdateOneRequiredWithoutAppealsNestedInput = {
    create?: XOR<BanCreateWithoutAppealsInput, BanUncheckedCreateWithoutAppealsInput>
    connectOrCreate?: BanCreateOrConnectWithoutAppealsInput
    upsert?: BanUpsertWithoutAppealsInput
    connect?: BanWhereUniqueInput
    update?: XOR<XOR<BanUpdateToOneWithWhereWithoutAppealsInput, BanUpdateWithoutAppealsInput>, BanUncheckedUpdateWithoutAppealsInput>
  }

  export type PostCreateNestedOneWithoutInteractionsInput = {
    create?: XOR<PostCreateWithoutInteractionsInput, PostUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: PostCreateOrConnectWithoutInteractionsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedInteractionsInput = {
    create?: XOR<UserCreateWithoutReceivedInteractionsInput, UserUncheckedCreateWithoutReceivedInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedInteractionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInteractionsInput = {
    create?: XOR<UserCreateWithoutInteractionsInput, UserUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInteractionsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumInteractionTypeFieldUpdateOperationsInput = {
    set?: $Enums.InteractionType
  }

  export type PostUpdateOneWithoutInteractionsNestedInput = {
    create?: XOR<PostCreateWithoutInteractionsInput, PostUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: PostCreateOrConnectWithoutInteractionsInput
    upsert?: PostUpsertWithoutInteractionsInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutInteractionsInput, PostUpdateWithoutInteractionsInput>, PostUncheckedUpdateWithoutInteractionsInput>
  }

  export type UserUpdateOneWithoutReceivedInteractionsNestedInput = {
    create?: XOR<UserCreateWithoutReceivedInteractionsInput, UserUncheckedCreateWithoutReceivedInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedInteractionsInput
    upsert?: UserUpsertWithoutReceivedInteractionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedInteractionsInput, UserUpdateWithoutReceivedInteractionsInput>, UserUncheckedUpdateWithoutReceivedInteractionsInput>
  }

  export type UserUpdateOneRequiredWithoutInteractionsNestedInput = {
    create?: XOR<UserCreateWithoutInteractionsInput, UserUncheckedCreateWithoutInteractionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInteractionsInput
    upsert?: UserUpsertWithoutInteractionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInteractionsInput, UserUpdateWithoutInteractionsInput>, UserUncheckedUpdateWithoutInteractionsInput>
  }

  export type UserCreateNestedOneWithoutChatRateLimitsInput = {
    create?: XOR<UserCreateWithoutChatRateLimitsInput, UserUncheckedCreateWithoutChatRateLimitsInput>
    connectOrCreate?: UserCreateOrConnectWithoutChatRateLimitsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumRateLimitTypeFieldUpdateOperationsInput = {
    set?: $Enums.RateLimitType
  }

  export type UserUpdateOneRequiredWithoutChatRateLimitsNestedInput = {
    create?: XOR<UserCreateWithoutChatRateLimitsInput, UserUncheckedCreateWithoutChatRateLimitsInput>
    connectOrCreate?: UserCreateOrConnectWithoutChatRateLimitsInput
    upsert?: UserUpsertWithoutChatRateLimitsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChatRateLimitsInput, UserUpdateWithoutChatRateLimitsInput>, UserUncheckedUpdateWithoutChatRateLimitsInput>
  }

  export type AgencyCreateNestedOneWithoutMembershipsInput = {
    create?: XOR<AgencyCreateWithoutMembershipsInput, AgencyUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMembershipsInput
    connect?: AgencyWhereUniqueInput
  }

  export type EscortCreateNestedOneWithoutAgencyMembershipsInput = {
    create?: XOR<EscortCreateWithoutAgencyMembershipsInput, EscortUncheckedCreateWithoutAgencyMembershipsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutAgencyMembershipsInput
    connect?: EscortWhereUniqueInput
  }

  export type EnumMembershipStatusFieldUpdateOperationsInput = {
    set?: $Enums.MembershipStatus
  }

  export type EnumAgencyRoleFieldUpdateOperationsInput = {
    set?: $Enums.AgencyRole
  }

  export type AgencyUpdateOneRequiredWithoutMembershipsNestedInput = {
    create?: XOR<AgencyCreateWithoutMembershipsInput, AgencyUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutMembershipsInput
    upsert?: AgencyUpsertWithoutMembershipsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutMembershipsInput, AgencyUpdateWithoutMembershipsInput>, AgencyUncheckedUpdateWithoutMembershipsInput>
  }

  export type EscortUpdateOneRequiredWithoutAgencyMembershipsNestedInput = {
    create?: XOR<EscortCreateWithoutAgencyMembershipsInput, EscortUncheckedCreateWithoutAgencyMembershipsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutAgencyMembershipsInput
    upsert?: EscortUpsertWithoutAgencyMembershipsInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutAgencyMembershipsInput, EscortUpdateWithoutAgencyMembershipsInput>, EscortUncheckedUpdateWithoutAgencyMembershipsInput>
  }

  export type AgencyCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<AgencyCreateWithoutInvitationsInput, AgencyUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInvitationsInput
    connect?: AgencyWhereUniqueInput
  }

  export type EscortCreateNestedOneWithoutAgencyInvitationsInput = {
    create?: XOR<EscortCreateWithoutAgencyInvitationsInput, EscortUncheckedCreateWithoutAgencyInvitationsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutAgencyInvitationsInput
    connect?: EscortWhereUniqueInput
  }

  export type EnumInvitationStatusFieldUpdateOperationsInput = {
    set?: $Enums.InvitationStatus
  }

  export type AgencyUpdateOneRequiredWithoutInvitationsNestedInput = {
    create?: XOR<AgencyCreateWithoutInvitationsInput, AgencyUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutInvitationsInput
    upsert?: AgencyUpsertWithoutInvitationsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutInvitationsInput, AgencyUpdateWithoutInvitationsInput>, AgencyUncheckedUpdateWithoutInvitationsInput>
  }

  export type EscortUpdateOneRequiredWithoutAgencyInvitationsNestedInput = {
    create?: XOR<EscortCreateWithoutAgencyInvitationsInput, EscortUncheckedCreateWithoutAgencyInvitationsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutAgencyInvitationsInput
    upsert?: EscortUpsertWithoutAgencyInvitationsInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutAgencyInvitationsInput, EscortUpdateWithoutAgencyInvitationsInput>, EscortUncheckedUpdateWithoutAgencyInvitationsInput>
  }

  export type AgencyCreateNestedOneWithoutVerificationsInput = {
    create?: XOR<AgencyCreateWithoutVerificationsInput, AgencyUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVerificationsInput
    connect?: AgencyWhereUniqueInput
  }

  export type EscortCreateNestedOneWithoutVerificationsInput = {
    create?: XOR<EscortCreateWithoutVerificationsInput, EscortUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutVerificationsInput
    connect?: EscortWhereUniqueInput
  }

  export type VerificationPricingCreateNestedOneWithoutVerificationsInput = {
    create?: XOR<VerificationPricingCreateWithoutVerificationsInput, VerificationPricingUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: VerificationPricingCreateOrConnectWithoutVerificationsInput
    connect?: VerificationPricingWhereUniqueInput
  }

  export type AgencyUpdateOneRequiredWithoutVerificationsNestedInput = {
    create?: XOR<AgencyCreateWithoutVerificationsInput, AgencyUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: AgencyCreateOrConnectWithoutVerificationsInput
    upsert?: AgencyUpsertWithoutVerificationsInput
    connect?: AgencyWhereUniqueInput
    update?: XOR<XOR<AgencyUpdateToOneWithWhereWithoutVerificationsInput, AgencyUpdateWithoutVerificationsInput>, AgencyUncheckedUpdateWithoutVerificationsInput>
  }

  export type EscortUpdateOneRequiredWithoutVerificationsNestedInput = {
    create?: XOR<EscortCreateWithoutVerificationsInput, EscortUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutVerificationsInput
    upsert?: EscortUpsertWithoutVerificationsInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutVerificationsInput, EscortUpdateWithoutVerificationsInput>, EscortUncheckedUpdateWithoutVerificationsInput>
  }

  export type VerificationPricingUpdateOneRequiredWithoutVerificationsNestedInput = {
    create?: XOR<VerificationPricingCreateWithoutVerificationsInput, VerificationPricingUncheckedCreateWithoutVerificationsInput>
    connectOrCreate?: VerificationPricingCreateOrConnectWithoutVerificationsInput
    upsert?: VerificationPricingUpsertWithoutVerificationsInput
    connect?: VerificationPricingWhereUniqueInput
    update?: XOR<XOR<VerificationPricingUpdateToOneWithWhereWithoutVerificationsInput, VerificationPricingUpdateWithoutVerificationsInput>, VerificationPricingUncheckedUpdateWithoutVerificationsInput>
  }

  export type EscortVerificationCreateNestedManyWithoutPricingInput = {
    create?: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput> | EscortVerificationCreateWithoutPricingInput[] | EscortVerificationUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutPricingInput | EscortVerificationCreateOrConnectWithoutPricingInput[]
    createMany?: EscortVerificationCreateManyPricingInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type EscortVerificationUncheckedCreateNestedManyWithoutPricingInput = {
    create?: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput> | EscortVerificationCreateWithoutPricingInput[] | EscortVerificationUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutPricingInput | EscortVerificationCreateOrConnectWithoutPricingInput[]
    createMany?: EscortVerificationCreateManyPricingInputEnvelope
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
  }

  export type EscortVerificationUpdateManyWithoutPricingNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput> | EscortVerificationCreateWithoutPricingInput[] | EscortVerificationUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutPricingInput | EscortVerificationCreateOrConnectWithoutPricingInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutPricingInput | EscortVerificationUpsertWithWhereUniqueWithoutPricingInput[]
    createMany?: EscortVerificationCreateManyPricingInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutPricingInput | EscortVerificationUpdateWithWhereUniqueWithoutPricingInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutPricingInput | EscortVerificationUpdateManyWithWhereWithoutPricingInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type EscortVerificationUncheckedUpdateManyWithoutPricingNestedInput = {
    create?: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput> | EscortVerificationCreateWithoutPricingInput[] | EscortVerificationUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: EscortVerificationCreateOrConnectWithoutPricingInput | EscortVerificationCreateOrConnectWithoutPricingInput[]
    upsert?: EscortVerificationUpsertWithWhereUniqueWithoutPricingInput | EscortVerificationUpsertWithWhereUniqueWithoutPricingInput[]
    createMany?: EscortVerificationCreateManyPricingInputEnvelope
    set?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    disconnect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    delete?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    connect?: EscortVerificationWhereUniqueInput | EscortVerificationWhereUniqueInput[]
    update?: EscortVerificationUpdateWithWhereUniqueWithoutPricingInput | EscortVerificationUpdateWithWhereUniqueWithoutPricingInput[]
    updateMany?: EscortVerificationUpdateManyWithWhereWithoutPricingInput | EscortVerificationUpdateManyWithWhereWithoutPricingInput[]
    deleteMany?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
  }

  export type BoostCreateNestedManyWithoutPricingInput = {
    create?: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput> | BoostCreateWithoutPricingInput[] | BoostUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPricingInput | BoostCreateOrConnectWithoutPricingInput[]
    createMany?: BoostCreateManyPricingInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type BoostUncheckedCreateNestedManyWithoutPricingInput = {
    create?: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput> | BoostCreateWithoutPricingInput[] | BoostUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPricingInput | BoostCreateOrConnectWithoutPricingInput[]
    createMany?: BoostCreateManyPricingInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type EnumBoostTypeFieldUpdateOperationsInput = {
    set?: $Enums.BoostType
  }

  export type BoostUpdateManyWithoutPricingNestedInput = {
    create?: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput> | BoostCreateWithoutPricingInput[] | BoostUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPricingInput | BoostCreateOrConnectWithoutPricingInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutPricingInput | BoostUpsertWithWhereUniqueWithoutPricingInput[]
    createMany?: BoostCreateManyPricingInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutPricingInput | BoostUpdateWithWhereUniqueWithoutPricingInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutPricingInput | BoostUpdateManyWithWhereWithoutPricingInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type BoostUncheckedUpdateManyWithoutPricingNestedInput = {
    create?: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput> | BoostCreateWithoutPricingInput[] | BoostUncheckedCreateWithoutPricingInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPricingInput | BoostCreateOrConnectWithoutPricingInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutPricingInput | BoostUpsertWithWhereUniqueWithoutPricingInput[]
    createMany?: BoostCreateManyPricingInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutPricingInput | BoostUpdateWithWhereUniqueWithoutPricingInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutPricingInput | BoostUpdateManyWithWhereWithoutPricingInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type PostCreateimagesInput = {
    set: string[]
  }

  export type PostCreateservicesInput = {
    set: string[]
  }

  export type BoostCreateNestedManyWithoutPostInput = {
    create?: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput> | BoostCreateWithoutPostInput[] | BoostUncheckedCreateWithoutPostInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPostInput | BoostCreateOrConnectWithoutPostInput[]
    createMany?: BoostCreateManyPostInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type FavoriteCreateNestedManyWithoutPostInput = {
    create?: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput> | FavoriteCreateWithoutPostInput[] | FavoriteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPostInput | FavoriteCreateOrConnectWithoutPostInput[]
    createMany?: FavoriteCreateManyPostInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type LikeCreateNestedManyWithoutPostInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostTagCreateNestedManyWithoutPostInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutPostsInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    connect?: UserWhereUniqueInput
  }

  export type LocationCreateNestedOneWithoutPostsInput = {
    create?: XOR<LocationCreateWithoutPostsInput, LocationUncheckedCreateWithoutPostsInput>
    connectOrCreate?: LocationCreateOrConnectWithoutPostsInput
    connect?: LocationWhereUniqueInput
  }

  export type ReportCreateNestedManyWithoutPostInput = {
    create?: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput> | ReportCreateWithoutPostInput[] | ReportUncheckedCreateWithoutPostInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutPostInput | ReportCreateOrConnectWithoutPostInput[]
    createMany?: ReportCreateManyPostInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type TrendingHistoryCreateNestedManyWithoutPostInput = {
    create?: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput> | TrendingHistoryCreateWithoutPostInput[] | TrendingHistoryUncheckedCreateWithoutPostInput[]
    connectOrCreate?: TrendingHistoryCreateOrConnectWithoutPostInput | TrendingHistoryCreateOrConnectWithoutPostInput[]
    createMany?: TrendingHistoryCreateManyPostInputEnvelope
    connect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
  }

  export type UserInteractionCreateNestedManyWithoutPostInput = {
    create?: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput> | UserInteractionCreateWithoutPostInput[] | UserInteractionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutPostInput | UserInteractionCreateOrConnectWithoutPostInput[]
    createMany?: UserInteractionCreateManyPostInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type BoostUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput> | BoostCreateWithoutPostInput[] | BoostUncheckedCreateWithoutPostInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPostInput | BoostCreateOrConnectWithoutPostInput[]
    createMany?: BoostCreateManyPostInputEnvelope
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
  }

  export type FavoriteUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput> | FavoriteCreateWithoutPostInput[] | FavoriteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPostInput | FavoriteCreateOrConnectWithoutPostInput[]
    createMany?: FavoriteCreateManyPostInputEnvelope
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
  }

  export type LikeUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
  }

  export type PostTagUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
  }

  export type ReportUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput> | ReportCreateWithoutPostInput[] | ReportUncheckedCreateWithoutPostInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutPostInput | ReportCreateOrConnectWithoutPostInput[]
    createMany?: ReportCreateManyPostInputEnvelope
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
  }

  export type TrendingHistoryUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput> | TrendingHistoryCreateWithoutPostInput[] | TrendingHistoryUncheckedCreateWithoutPostInput[]
    connectOrCreate?: TrendingHistoryCreateOrConnectWithoutPostInput | TrendingHistoryCreateOrConnectWithoutPostInput[]
    createMany?: TrendingHistoryCreateManyPostInputEnvelope
    connect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
  }

  export type UserInteractionUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput> | UserInteractionCreateWithoutPostInput[] | UserInteractionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutPostInput | UserInteractionCreateOrConnectWithoutPostInput[]
    createMany?: UserInteractionCreateManyPostInputEnvelope
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
  }

  export type PostUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type PostUpdateservicesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BoostUpdateManyWithoutPostNestedInput = {
    create?: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput> | BoostCreateWithoutPostInput[] | BoostUncheckedCreateWithoutPostInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPostInput | BoostCreateOrConnectWithoutPostInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutPostInput | BoostUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: BoostCreateManyPostInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutPostInput | BoostUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutPostInput | BoostUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type FavoriteUpdateManyWithoutPostNestedInput = {
    create?: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput> | FavoriteCreateWithoutPostInput[] | FavoriteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPostInput | FavoriteCreateOrConnectWithoutPostInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutPostInput | FavoriteUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: FavoriteCreateManyPostInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutPostInput | FavoriteUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutPostInput | FavoriteUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type LikeUpdateManyWithoutPostNestedInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutPostInput | LikeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutPostInput | LikeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutPostInput | LikeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostTagUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutPostInput | PostTagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutPostInput | PostTagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutPostInput | PostTagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    upsert?: UserUpsertWithoutPostsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPostsInput, UserUpdateWithoutPostsInput>, UserUncheckedUpdateWithoutPostsInput>
  }

  export type LocationUpdateOneWithoutPostsNestedInput = {
    create?: XOR<LocationCreateWithoutPostsInput, LocationUncheckedCreateWithoutPostsInput>
    connectOrCreate?: LocationCreateOrConnectWithoutPostsInput
    upsert?: LocationUpsertWithoutPostsInput
    disconnect?: LocationWhereInput | boolean
    delete?: LocationWhereInput | boolean
    connect?: LocationWhereUniqueInput
    update?: XOR<XOR<LocationUpdateToOneWithWhereWithoutPostsInput, LocationUpdateWithoutPostsInput>, LocationUncheckedUpdateWithoutPostsInput>
  }

  export type ReportUpdateManyWithoutPostNestedInput = {
    create?: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput> | ReportCreateWithoutPostInput[] | ReportUncheckedCreateWithoutPostInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutPostInput | ReportCreateOrConnectWithoutPostInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutPostInput | ReportUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: ReportCreateManyPostInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutPostInput | ReportUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutPostInput | ReportUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type TrendingHistoryUpdateManyWithoutPostNestedInput = {
    create?: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput> | TrendingHistoryCreateWithoutPostInput[] | TrendingHistoryUncheckedCreateWithoutPostInput[]
    connectOrCreate?: TrendingHistoryCreateOrConnectWithoutPostInput | TrendingHistoryCreateOrConnectWithoutPostInput[]
    upsert?: TrendingHistoryUpsertWithWhereUniqueWithoutPostInput | TrendingHistoryUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: TrendingHistoryCreateManyPostInputEnvelope
    set?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    disconnect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    delete?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    connect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    update?: TrendingHistoryUpdateWithWhereUniqueWithoutPostInput | TrendingHistoryUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: TrendingHistoryUpdateManyWithWhereWithoutPostInput | TrendingHistoryUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: TrendingHistoryScalarWhereInput | TrendingHistoryScalarWhereInput[]
  }

  export type UserInteractionUpdateManyWithoutPostNestedInput = {
    create?: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput> | UserInteractionCreateWithoutPostInput[] | UserInteractionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutPostInput | UserInteractionCreateOrConnectWithoutPostInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutPostInput | UserInteractionUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: UserInteractionCreateManyPostInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutPostInput | UserInteractionUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutPostInput | UserInteractionUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type BoostUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput> | BoostCreateWithoutPostInput[] | BoostUncheckedCreateWithoutPostInput[]
    connectOrCreate?: BoostCreateOrConnectWithoutPostInput | BoostCreateOrConnectWithoutPostInput[]
    upsert?: BoostUpsertWithWhereUniqueWithoutPostInput | BoostUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: BoostCreateManyPostInputEnvelope
    set?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    disconnect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    delete?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    connect?: BoostWhereUniqueInput | BoostWhereUniqueInput[]
    update?: BoostUpdateWithWhereUniqueWithoutPostInput | BoostUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: BoostUpdateManyWithWhereWithoutPostInput | BoostUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: BoostScalarWhereInput | BoostScalarWhereInput[]
  }

  export type FavoriteUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput> | FavoriteCreateWithoutPostInput[] | FavoriteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: FavoriteCreateOrConnectWithoutPostInput | FavoriteCreateOrConnectWithoutPostInput[]
    upsert?: FavoriteUpsertWithWhereUniqueWithoutPostInput | FavoriteUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: FavoriteCreateManyPostInputEnvelope
    set?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    disconnect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    delete?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    connect?: FavoriteWhereUniqueInput | FavoriteWhereUniqueInput[]
    update?: FavoriteUpdateWithWhereUniqueWithoutPostInput | FavoriteUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: FavoriteUpdateManyWithWhereWithoutPostInput | FavoriteUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
  }

  export type LikeUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput> | LikeCreateWithoutPostInput[] | LikeUncheckedCreateWithoutPostInput[]
    connectOrCreate?: LikeCreateOrConnectWithoutPostInput | LikeCreateOrConnectWithoutPostInput[]
    upsert?: LikeUpsertWithWhereUniqueWithoutPostInput | LikeUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: LikeCreateManyPostInputEnvelope
    set?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    disconnect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    delete?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    connect?: LikeWhereUniqueInput | LikeWhereUniqueInput[]
    update?: LikeUpdateWithWhereUniqueWithoutPostInput | LikeUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: LikeUpdateManyWithWhereWithoutPostInput | LikeUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: LikeScalarWhereInput | LikeScalarWhereInput[]
  }

  export type PostTagUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput> | PostTagCreateWithoutPostInput[] | PostTagUncheckedCreateWithoutPostInput[]
    connectOrCreate?: PostTagCreateOrConnectWithoutPostInput | PostTagCreateOrConnectWithoutPostInput[]
    upsert?: PostTagUpsertWithWhereUniqueWithoutPostInput | PostTagUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: PostTagCreateManyPostInputEnvelope
    set?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    disconnect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    delete?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    connect?: PostTagWhereUniqueInput | PostTagWhereUniqueInput[]
    update?: PostTagUpdateWithWhereUniqueWithoutPostInput | PostTagUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: PostTagUpdateManyWithWhereWithoutPostInput | PostTagUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
  }

  export type ReportUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput> | ReportCreateWithoutPostInput[] | ReportUncheckedCreateWithoutPostInput[]
    connectOrCreate?: ReportCreateOrConnectWithoutPostInput | ReportCreateOrConnectWithoutPostInput[]
    upsert?: ReportUpsertWithWhereUniqueWithoutPostInput | ReportUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: ReportCreateManyPostInputEnvelope
    set?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    disconnect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    delete?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    connect?: ReportWhereUniqueInput | ReportWhereUniqueInput[]
    update?: ReportUpdateWithWhereUniqueWithoutPostInput | ReportUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: ReportUpdateManyWithWhereWithoutPostInput | ReportUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: ReportScalarWhereInput | ReportScalarWhereInput[]
  }

  export type TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput> | TrendingHistoryCreateWithoutPostInput[] | TrendingHistoryUncheckedCreateWithoutPostInput[]
    connectOrCreate?: TrendingHistoryCreateOrConnectWithoutPostInput | TrendingHistoryCreateOrConnectWithoutPostInput[]
    upsert?: TrendingHistoryUpsertWithWhereUniqueWithoutPostInput | TrendingHistoryUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: TrendingHistoryCreateManyPostInputEnvelope
    set?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    disconnect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    delete?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    connect?: TrendingHistoryWhereUniqueInput | TrendingHistoryWhereUniqueInput[]
    update?: TrendingHistoryUpdateWithWhereUniqueWithoutPostInput | TrendingHistoryUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: TrendingHistoryUpdateManyWithWhereWithoutPostInput | TrendingHistoryUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: TrendingHistoryScalarWhereInput | TrendingHistoryScalarWhereInput[]
  }

  export type UserInteractionUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput> | UserInteractionCreateWithoutPostInput[] | UserInteractionUncheckedCreateWithoutPostInput[]
    connectOrCreate?: UserInteractionCreateOrConnectWithoutPostInput | UserInteractionCreateOrConnectWithoutPostInput[]
    upsert?: UserInteractionUpsertWithWhereUniqueWithoutPostInput | UserInteractionUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: UserInteractionCreateManyPostInputEnvelope
    set?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    disconnect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    delete?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    connect?: UserInteractionWhereUniqueInput | UserInteractionWhereUniqueInput[]
    update?: UserInteractionUpdateWithWhereUniqueWithoutPostInput | UserInteractionUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: UserInteractionUpdateManyWithWhereWithoutPostInput | UserInteractionUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
  }

  export type PostCreateNestedOneWithoutTrendingHistoryInput = {
    create?: XOR<PostCreateWithoutTrendingHistoryInput, PostUncheckedCreateWithoutTrendingHistoryInput>
    connectOrCreate?: PostCreateOrConnectWithoutTrendingHistoryInput
    connect?: PostWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutTrendingHistoryNestedInput = {
    create?: XOR<PostCreateWithoutTrendingHistoryInput, PostUncheckedCreateWithoutTrendingHistoryInput>
    connectOrCreate?: PostCreateOrConnectWithoutTrendingHistoryInput
    upsert?: PostUpsertWithoutTrendingHistoryInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutTrendingHistoryInput, PostUpdateWithoutTrendingHistoryInput>, PostUncheckedUpdateWithoutTrendingHistoryInput>
  }

  export type ChatMemberCreateNestedManyWithoutChatInput = {
    create?: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput> | ChatMemberCreateWithoutChatInput[] | ChatMemberUncheckedCreateWithoutChatInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutChatInput | ChatMemberCreateOrConnectWithoutChatInput[]
    createMany?: ChatMemberCreateManyChatInputEnvelope
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutChatInput = {
    create?: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput> | MessageCreateWithoutChatInput[] | MessageUncheckedCreateWithoutChatInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutChatInput | MessageCreateOrConnectWithoutChatInput[]
    createMany?: MessageCreateManyChatInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type ChatMemberUncheckedCreateNestedManyWithoutChatInput = {
    create?: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput> | ChatMemberCreateWithoutChatInput[] | ChatMemberUncheckedCreateWithoutChatInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutChatInput | ChatMemberCreateOrConnectWithoutChatInput[]
    createMany?: ChatMemberCreateManyChatInputEnvelope
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutChatInput = {
    create?: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput> | MessageCreateWithoutChatInput[] | MessageUncheckedCreateWithoutChatInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutChatInput | MessageCreateOrConnectWithoutChatInput[]
    createMany?: MessageCreateManyChatInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type EnumDisputeStatusFieldUpdateOperationsInput = {
    set?: $Enums.DisputeStatus
  }

  export type ChatMemberUpdateManyWithoutChatNestedInput = {
    create?: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput> | ChatMemberCreateWithoutChatInput[] | ChatMemberUncheckedCreateWithoutChatInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutChatInput | ChatMemberCreateOrConnectWithoutChatInput[]
    upsert?: ChatMemberUpsertWithWhereUniqueWithoutChatInput | ChatMemberUpsertWithWhereUniqueWithoutChatInput[]
    createMany?: ChatMemberCreateManyChatInputEnvelope
    set?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    disconnect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    delete?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    update?: ChatMemberUpdateWithWhereUniqueWithoutChatInput | ChatMemberUpdateWithWhereUniqueWithoutChatInput[]
    updateMany?: ChatMemberUpdateManyWithWhereWithoutChatInput | ChatMemberUpdateManyWithWhereWithoutChatInput[]
    deleteMany?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutChatNestedInput = {
    create?: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput> | MessageCreateWithoutChatInput[] | MessageUncheckedCreateWithoutChatInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutChatInput | MessageCreateOrConnectWithoutChatInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutChatInput | MessageUpsertWithWhereUniqueWithoutChatInput[]
    createMany?: MessageCreateManyChatInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutChatInput | MessageUpdateWithWhereUniqueWithoutChatInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutChatInput | MessageUpdateManyWithWhereWithoutChatInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ChatMemberUncheckedUpdateManyWithoutChatNestedInput = {
    create?: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput> | ChatMemberCreateWithoutChatInput[] | ChatMemberUncheckedCreateWithoutChatInput[]
    connectOrCreate?: ChatMemberCreateOrConnectWithoutChatInput | ChatMemberCreateOrConnectWithoutChatInput[]
    upsert?: ChatMemberUpsertWithWhereUniqueWithoutChatInput | ChatMemberUpsertWithWhereUniqueWithoutChatInput[]
    createMany?: ChatMemberCreateManyChatInputEnvelope
    set?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    disconnect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    delete?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    connect?: ChatMemberWhereUniqueInput | ChatMemberWhereUniqueInput[]
    update?: ChatMemberUpdateWithWhereUniqueWithoutChatInput | ChatMemberUpdateWithWhereUniqueWithoutChatInput[]
    updateMany?: ChatMemberUpdateManyWithWhereWithoutChatInput | ChatMemberUpdateManyWithWhereWithoutChatInput[]
    deleteMany?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutChatNestedInput = {
    create?: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput> | MessageCreateWithoutChatInput[] | MessageUncheckedCreateWithoutChatInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutChatInput | MessageCreateOrConnectWithoutChatInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutChatInput | MessageUpsertWithWhereUniqueWithoutChatInput[]
    createMany?: MessageCreateManyChatInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutChatInput | MessageUpdateWithWhereUniqueWithoutChatInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutChatInput | MessageUpdateManyWithWhereWithoutChatInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type ChatCreateNestedOneWithoutMembersInput = {
    create?: XOR<ChatCreateWithoutMembersInput, ChatUncheckedCreateWithoutMembersInput>
    connectOrCreate?: ChatCreateOrConnectWithoutMembersInput
    connect?: ChatWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutChatMembersInput = {
    create?: XOR<UserCreateWithoutChatMembersInput, UserUncheckedCreateWithoutChatMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutChatMembersInput
    connect?: UserWhereUniqueInput
  }

  export type EnumChatRoleFieldUpdateOperationsInput = {
    set?: $Enums.ChatRole
  }

  export type ChatUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<ChatCreateWithoutMembersInput, ChatUncheckedCreateWithoutMembersInput>
    connectOrCreate?: ChatCreateOrConnectWithoutMembersInput
    upsert?: ChatUpsertWithoutMembersInput
    connect?: ChatWhereUniqueInput
    update?: XOR<XOR<ChatUpdateToOneWithWhereWithoutMembersInput, ChatUpdateWithoutMembersInput>, ChatUncheckedUpdateWithoutMembersInput>
  }

  export type UserUpdateOneRequiredWithoutChatMembersNestedInput = {
    create?: XOR<UserCreateWithoutChatMembersInput, UserUncheckedCreateWithoutChatMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutChatMembersInput
    upsert?: UserUpsertWithoutChatMembersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutChatMembersInput, UserUpdateWithoutChatMembersInput>, UserUncheckedUpdateWithoutChatMembersInput>
  }

  export type ChatCreateNestedOneWithoutMessagesInput = {
    create?: XOR<ChatCreateWithoutMessagesInput, ChatUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ChatCreateOrConnectWithoutMessagesInput
    connect?: ChatWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type EnumMessageTypeFieldUpdateOperationsInput = {
    set?: $Enums.MessageType
  }

  export type ChatUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<ChatCreateWithoutMessagesInput, ChatUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: ChatCreateOrConnectWithoutMessagesInput
    upsert?: ChatUpsertWithoutMessagesInput
    connect?: ChatWhereUniqueInput
    update?: XOR<XOR<ChatUpdateToOneWithWhereWithoutMessagesInput, ChatUpdateWithoutMessagesInput>, ChatUncheckedUpdateWithoutMessagesInput>
  }

  export type UserUpdateOneWithoutReceivedMessagesNestedInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    upsert?: UserUpsertWithoutReceivedMessagesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedMessagesInput, UserUpdateWithoutReceivedMessagesInput>, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type PostCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<PostCreateWithoutFavoritesInput, PostUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: PostCreateOrConnectWithoutFavoritesInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFavoritesInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    connect?: UserWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<PostCreateWithoutFavoritesInput, PostUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: PostCreateOrConnectWithoutFavoritesInput
    upsert?: PostUpsertWithoutFavoritesInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutFavoritesInput, PostUpdateWithoutFavoritesInput>, PostUncheckedUpdateWithoutFavoritesInput>
  }

  export type UserUpdateOneRequiredWithoutFavoritesNestedInput = {
    create?: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFavoritesInput
    upsert?: UserUpsertWithoutFavoritesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFavoritesInput, UserUpdateWithoutFavoritesInput>, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type PostCreateNestedOneWithoutLikesInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutLikesInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    connect?: UserWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    upsert?: PostUpsertWithoutLikesInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutLikesInput, PostUpdateWithoutLikesInput>, PostUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    connectOrCreate?: UserCreateOrConnectWithoutLikesInput
    upsert?: UserUpsertWithoutLikesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutLikesInput, UserUpdateWithoutLikesInput>, UserUncheckedUpdateWithoutLikesInput>
  }

  export type EscortCreateNestedOneWithoutReviewsGivenInput = {
    create?: XOR<EscortCreateWithoutReviewsGivenInput, EscortUncheckedCreateWithoutReviewsGivenInput>
    connectOrCreate?: EscortCreateOrConnectWithoutReviewsGivenInput
    connect?: EscortWhereUniqueInput
  }

  export type EscortCreateNestedOneWithoutReviewsInput = {
    create?: XOR<EscortCreateWithoutReviewsInput, EscortUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutReviewsInput
    connect?: EscortWhereUniqueInput
  }

  export type EscortUpdateOneRequiredWithoutReviewsGivenNestedInput = {
    create?: XOR<EscortCreateWithoutReviewsGivenInput, EscortUncheckedCreateWithoutReviewsGivenInput>
    connectOrCreate?: EscortCreateOrConnectWithoutReviewsGivenInput
    upsert?: EscortUpsertWithoutReviewsGivenInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutReviewsGivenInput, EscortUpdateWithoutReviewsGivenInput>, EscortUncheckedUpdateWithoutReviewsGivenInput>
  }

  export type EscortUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<EscortCreateWithoutReviewsInput, EscortUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: EscortCreateOrConnectWithoutReviewsInput
    upsert?: EscortUpsertWithoutReviewsInput
    connect?: EscortWhereUniqueInput
    update?: XOR<XOR<EscortUpdateToOneWithWhereWithoutReviewsInput, EscortUpdateWithoutReviewsInput>, EscortUncheckedUpdateWithoutReviewsInput>
  }

  export type UserCreateNestedOneWithoutReportsInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    connect?: UserWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutReportsInput = {
    create?: XOR<PostCreateWithoutReportsInput, PostUncheckedCreateWithoutReportsInput>
    connectOrCreate?: PostCreateOrConnectWithoutReportsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReportsReceivedInput = {
    create?: XOR<UserCreateWithoutReportsReceivedInput, UserUncheckedCreateWithoutReportsReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsReceivedInput
    connect?: UserWhereUniqueInput
  }

  export type EnumReportReasonFieldUpdateOperationsInput = {
    set?: $Enums.ReportReason
  }

  export type EnumReportStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReportStatus
  }

  export type EnumReportSeverityFieldUpdateOperationsInput = {
    set?: $Enums.ReportSeverity
  }

  export type UserUpdateOneRequiredWithoutReportsNestedInput = {
    create?: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsInput
    upsert?: UserUpsertWithoutReportsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportsInput, UserUpdateWithoutReportsInput>, UserUncheckedUpdateWithoutReportsInput>
  }

  export type PostUpdateOneWithoutReportsNestedInput = {
    create?: XOR<PostCreateWithoutReportsInput, PostUncheckedCreateWithoutReportsInput>
    connectOrCreate?: PostCreateOrConnectWithoutReportsInput
    upsert?: PostUpsertWithoutReportsInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutReportsInput, PostUpdateWithoutReportsInput>, PostUncheckedUpdateWithoutReportsInput>
  }

  export type UserUpdateOneWithoutReportsReceivedNestedInput = {
    create?: XOR<UserCreateWithoutReportsReceivedInput, UserUncheckedCreateWithoutReportsReceivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutReportsReceivedInput
    upsert?: UserUpsertWithoutReportsReceivedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReportsReceivedInput, UserUpdateWithoutReportsReceivedInput>, UserUncheckedUpdateWithoutReportsReceivedInput>
  }

  export type NotificationCreatedeliveryMethodInput = {
    set: string[]
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type EnumNotificationPriorityFieldUpdateOperationsInput = {
    set?: $Enums.NotificationPriority
  }

  export type NotificationUpdatedeliveryMethodInput = {
    set?: string[]
    push?: string | string[]
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type ClientCreateNestedOneWithoutPaymentsInput = {
    create?: XOR<ClientCreateWithoutPaymentsInput, ClientUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPaymentsInput
    connect?: ClientWhereUniqueInput
  }

  export type EnumPaymentTypeFieldUpdateOperationsInput = {
    set?: $Enums.PaymentType
  }

  export type ClientUpdateOneWithoutPaymentsNestedInput = {
    create?: XOR<ClientCreateWithoutPaymentsInput, ClientUncheckedCreateWithoutPaymentsInput>
    connectOrCreate?: ClientCreateOrConnectWithoutPaymentsInput
    upsert?: ClientUpsertWithoutPaymentsInput
    disconnect?: ClientWhereInput | boolean
    delete?: ClientWhereInput | boolean
    connect?: ClientWhereUniqueInput
    update?: XOR<XOR<ClientUpdateToOneWithWhereWithoutPaymentsInput, ClientUpdateWithoutPaymentsInput>, ClientUncheckedUpdateWithoutPaymentsInput>
  }

  export type PostCreateNestedOneWithoutBoostsInput = {
    create?: XOR<PostCreateWithoutBoostsInput, PostUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: PostCreateOrConnectWithoutBoostsInput
    connect?: PostWhereUniqueInput
  }

  export type BoostPricingCreateNestedOneWithoutBoostsInput = {
    create?: XOR<BoostPricingCreateWithoutBoostsInput, BoostPricingUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: BoostPricingCreateOrConnectWithoutBoostsInput
    connect?: BoostPricingWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutBoostsInput = {
    create?: XOR<UserCreateWithoutBoostsInput, UserUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBoostsInput
    connect?: UserWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutBoostsNestedInput = {
    create?: XOR<PostCreateWithoutBoostsInput, PostUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: PostCreateOrConnectWithoutBoostsInput
    upsert?: PostUpsertWithoutBoostsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutBoostsInput, PostUpdateWithoutBoostsInput>, PostUncheckedUpdateWithoutBoostsInput>
  }

  export type BoostPricingUpdateOneRequiredWithoutBoostsNestedInput = {
    create?: XOR<BoostPricingCreateWithoutBoostsInput, BoostPricingUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: BoostPricingCreateOrConnectWithoutBoostsInput
    upsert?: BoostPricingUpsertWithoutBoostsInput
    connect?: BoostPricingWhereUniqueInput
    update?: XOR<XOR<BoostPricingUpdateToOneWithWhereWithoutBoostsInput, BoostPricingUpdateWithoutBoostsInput>, BoostPricingUncheckedUpdateWithoutBoostsInput>
  }

  export type UserUpdateOneRequiredWithoutBoostsNestedInput = {
    create?: XOR<UserCreateWithoutBoostsInput, UserUncheckedCreateWithoutBoostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBoostsInput
    upsert?: UserUpsertWithoutBoostsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBoostsInput, UserUpdateWithoutBoostsInput>, UserUncheckedUpdateWithoutBoostsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type NestedEnumAccountStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusFilter<$PrismaModel> | $Enums.AccountStatus
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }

  export type NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AccountStatus | EnumAccountStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AccountStatus[] | ListEnumAccountStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAccountStatusWithAggregatesFilter<$PrismaModel> | $Enums.AccountStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAccountStatusFilter<$PrismaModel>
    _max?: NestedEnumAccountStatusFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumAgencyRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRequestStatus | EnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRequestStatusFilter<$PrismaModel> | $Enums.AgencyRequestStatus
  }

  export type NestedEnumAgencyRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRequestStatus | EnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRequestStatus[] | ListEnumAgencyRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.AgencyRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumAgencyRequestStatusFilter<$PrismaModel>
  }

  export type NestedEnumContentFilterLevelFilter<$PrismaModel = never> = {
    equals?: $Enums.ContentFilterLevel | EnumContentFilterLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumContentFilterLevelFilter<$PrismaModel> | $Enums.ContentFilterLevel
  }

  export type NestedEnumContentFilterLevelWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ContentFilterLevel | EnumContentFilterLevelFieldRefInput<$PrismaModel>
    in?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    notIn?: $Enums.ContentFilterLevel[] | ListEnumContentFilterLevelFieldRefInput<$PrismaModel>
    not?: NestedEnumContentFilterLevelWithAggregatesFilter<$PrismaModel> | $Enums.ContentFilterLevel
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumContentFilterLevelFilter<$PrismaModel>
    _max?: NestedEnumContentFilterLevelFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumVerificationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusFilter<$PrismaModel> | $Enums.VerificationStatus
  }

  export type NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationStatus | EnumVerificationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationStatus[] | ListEnumVerificationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationStatusWithAggregatesFilter<$PrismaModel> | $Enums.VerificationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationStatusFilter<$PrismaModel>
    _max?: NestedEnumVerificationStatusFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumSubscriptionStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusFilter<$PrismaModel> | $Enums.SubscriptionStatus
  }

  export type NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SubscriptionStatus | EnumSubscriptionStatusFieldRefInput<$PrismaModel>
    in?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.SubscriptionStatus[] | ListEnumSubscriptionStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumSubscriptionStatusWithAggregatesFilter<$PrismaModel> | $Enums.SubscriptionStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
    _max?: NestedEnumSubscriptionStatusFilter<$PrismaModel>
  }

  export type NestedEnumTagCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.TagCategory | EnumTagCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumTagCategoryFilter<$PrismaModel> | $Enums.TagCategory
  }

  export type NestedEnumTagCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TagCategory | EnumTagCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.TagCategory[] | ListEnumTagCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumTagCategoryWithAggregatesFilter<$PrismaModel> | $Enums.TagCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTagCategoryFilter<$PrismaModel>
    _max?: NestedEnumTagCategoryFilter<$PrismaModel>
  }

  export type NestedEnumAdminRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminRole | EnumAdminRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminRoleFilter<$PrismaModel> | $Enums.AdminRole
  }

  export type NestedEnumAdminRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AdminRole | EnumAdminRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AdminRole[] | ListEnumAdminRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAdminRoleWithAggregatesFilter<$PrismaModel> | $Enums.AdminRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAdminRoleFilter<$PrismaModel>
    _max?: NestedEnumAdminRoleFilter<$PrismaModel>
  }

  export type NestedEnumPremiumTierFilter<$PrismaModel = never> = {
    equals?: $Enums.PremiumTier | EnumPremiumTierFieldRefInput<$PrismaModel>
    in?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPremiumTierFilter<$PrismaModel> | $Enums.PremiumTier
  }

  export type NestedEnumPremiumTierWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PremiumTier | EnumPremiumTierFieldRefInput<$PrismaModel>
    in?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    notIn?: $Enums.PremiumTier[] | ListEnumPremiumTierFieldRefInput<$PrismaModel>
    not?: NestedEnumPremiumTierWithAggregatesFilter<$PrismaModel> | $Enums.PremiumTier
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPremiumTierFilter<$PrismaModel>
    _max?: NestedEnumPremiumTierFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumPointTransactionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PointTransactionType | EnumPointTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPointTransactionTypeFilter<$PrismaModel> | $Enums.PointTransactionType
  }

  export type NestedEnumPointTransactionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PointTransactionType | EnumPointTransactionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PointTransactionType[] | ListEnumPointTransactionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPointTransactionTypeWithAggregatesFilter<$PrismaModel> | $Enums.PointTransactionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPointTransactionTypeFilter<$PrismaModel>
    _max?: NestedEnumPointTransactionTypeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumBanSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.BanSeverity | EnumBanSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumBanSeverityFilter<$PrismaModel> | $Enums.BanSeverity
  }

  export type NestedEnumBanSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BanSeverity | EnumBanSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.BanSeverity[] | ListEnumBanSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumBanSeverityWithAggregatesFilter<$PrismaModel> | $Enums.BanSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBanSeverityFilter<$PrismaModel>
    _max?: NestedEnumBanSeverityFilter<$PrismaModel>
  }

  export type NestedEnumAppealStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AppealStatus | EnumAppealStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAppealStatusFilter<$PrismaModel> | $Enums.AppealStatus
  }

  export type NestedEnumAppealStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AppealStatus | EnumAppealStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AppealStatus[] | ListEnumAppealStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAppealStatusWithAggregatesFilter<$PrismaModel> | $Enums.AppealStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAppealStatusFilter<$PrismaModel>
    _max?: NestedEnumAppealStatusFilter<$PrismaModel>
  }

  export type NestedEnumInteractionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeFilter<$PrismaModel> | $Enums.InteractionType
  }

  export type NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InteractionType | EnumInteractionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.InteractionType[] | ListEnumInteractionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumInteractionTypeWithAggregatesFilter<$PrismaModel> | $Enums.InteractionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInteractionTypeFilter<$PrismaModel>
    _max?: NestedEnumInteractionTypeFilter<$PrismaModel>
  }

  export type NestedEnumRateLimitTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.RateLimitType | EnumRateLimitTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRateLimitTypeFilter<$PrismaModel> | $Enums.RateLimitType
  }

  export type NestedEnumRateLimitTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.RateLimitType | EnumRateLimitTypeFieldRefInput<$PrismaModel>
    in?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.RateLimitType[] | ListEnumRateLimitTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumRateLimitTypeWithAggregatesFilter<$PrismaModel> | $Enums.RateLimitType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRateLimitTypeFilter<$PrismaModel>
    _max?: NestedEnumRateLimitTypeFilter<$PrismaModel>
  }

  export type NestedEnumMembershipStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipStatus | EnumMembershipStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipStatusFilter<$PrismaModel> | $Enums.MembershipStatus
  }

  export type NestedEnumAgencyRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRole | EnumAgencyRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRoleFilter<$PrismaModel> | $Enums.AgencyRole
  }

  export type NestedEnumMembershipStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipStatus | EnumMembershipStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipStatus[] | ListEnumMembershipStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipStatusWithAggregatesFilter<$PrismaModel> | $Enums.MembershipStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMembershipStatusFilter<$PrismaModel>
    _max?: NestedEnumMembershipStatusFilter<$PrismaModel>
  }

  export type NestedEnumAgencyRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgencyRole | EnumAgencyRoleFieldRefInput<$PrismaModel>
    in?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.AgencyRole[] | ListEnumAgencyRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumAgencyRoleWithAggregatesFilter<$PrismaModel> | $Enums.AgencyRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAgencyRoleFilter<$PrismaModel>
    _max?: NestedEnumAgencyRoleFilter<$PrismaModel>
  }

  export type NestedEnumInvitationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusFilter<$PrismaModel> | $Enums.InvitationStatus
  }

  export type NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.InvitationStatus | EnumInvitationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.InvitationStatus[] | ListEnumInvitationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumInvitationStatusWithAggregatesFilter<$PrismaModel> | $Enums.InvitationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumInvitationStatusFilter<$PrismaModel>
    _max?: NestedEnumInvitationStatusFilter<$PrismaModel>
  }

  export type NestedEnumBoostTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BoostType | EnumBoostTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBoostTypeFilter<$PrismaModel> | $Enums.BoostType
  }

  export type NestedEnumBoostTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BoostType | EnumBoostTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BoostType[] | ListEnumBoostTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBoostTypeWithAggregatesFilter<$PrismaModel> | $Enums.BoostType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBoostTypeFilter<$PrismaModel>
    _max?: NestedEnumBoostTypeFilter<$PrismaModel>
  }

  export type NestedEnumDisputeStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisputeStatus | EnumDisputeStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisputeStatusFilter<$PrismaModel> | $Enums.DisputeStatus
  }

  export type NestedEnumDisputeStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisputeStatus | EnumDisputeStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisputeStatus[] | ListEnumDisputeStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisputeStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisputeStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisputeStatusFilter<$PrismaModel>
    _max?: NestedEnumDisputeStatusFilter<$PrismaModel>
  }

  export type NestedEnumChatRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.ChatRole | EnumChatRoleFieldRefInput<$PrismaModel>
    in?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumChatRoleFilter<$PrismaModel> | $Enums.ChatRole
  }

  export type NestedEnumChatRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ChatRole | EnumChatRoleFieldRefInput<$PrismaModel>
    in?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.ChatRole[] | ListEnumChatRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumChatRoleWithAggregatesFilter<$PrismaModel> | $Enums.ChatRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumChatRoleFilter<$PrismaModel>
    _max?: NestedEnumChatRoleFilter<$PrismaModel>
  }

  export type NestedEnumMessageTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeFilter<$PrismaModel> | $Enums.MessageType
  }

  export type NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MessageType | EnumMessageTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MessageType[] | ListEnumMessageTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMessageTypeWithAggregatesFilter<$PrismaModel> | $Enums.MessageType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMessageTypeFilter<$PrismaModel>
    _max?: NestedEnumMessageTypeFilter<$PrismaModel>
  }

  export type NestedEnumReportReasonFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportReason | EnumReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumReportReasonFilter<$PrismaModel> | $Enums.ReportReason
  }

  export type NestedEnumReportStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusFilter<$PrismaModel> | $Enums.ReportStatus
  }

  export type NestedEnumReportSeverityFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportSeverity | EnumReportSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumReportSeverityFilter<$PrismaModel> | $Enums.ReportSeverity
  }

  export type NestedEnumReportReasonWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportReason | EnumReportReasonFieldRefInput<$PrismaModel>
    in?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportReason[] | ListEnumReportReasonFieldRefInput<$PrismaModel>
    not?: NestedEnumReportReasonWithAggregatesFilter<$PrismaModel> | $Enums.ReportReason
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportReasonFilter<$PrismaModel>
    _max?: NestedEnumReportReasonFilter<$PrismaModel>
  }

  export type NestedEnumReportStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportStatus | EnumReportStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportStatus[] | ListEnumReportStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReportStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReportStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportStatusFilter<$PrismaModel>
    _max?: NestedEnumReportStatusFilter<$PrismaModel>
  }

  export type NestedEnumReportSeverityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReportSeverity | EnumReportSeverityFieldRefInput<$PrismaModel>
    in?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReportSeverity[] | ListEnumReportSeverityFieldRefInput<$PrismaModel>
    not?: NestedEnumReportSeverityWithAggregatesFilter<$PrismaModel> | $Enums.ReportSeverity
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReportSeverityFilter<$PrismaModel>
    _max?: NestedEnumReportSeverityFilter<$PrismaModel>
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationPriority | EnumNotificationPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationPriorityFilter<$PrismaModel> | $Enums.NotificationPriority
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type NestedEnumNotificationPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationPriority | EnumNotificationPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationPriority[] | ListEnumNotificationPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationPriorityWithAggregatesFilter<$PrismaModel> | $Enums.NotificationPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationPriorityFilter<$PrismaModel>
    _max?: NestedEnumNotificationPriorityFilter<$PrismaModel>
  }

  export type NestedEnumPaymentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeFilter<$PrismaModel> | $Enums.PaymentType
  }

  export type NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentType | EnumPaymentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentType[] | ListEnumPaymentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PaymentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentTypeFilter<$PrismaModel>
    _max?: NestedEnumPaymentTypeFilter<$PrismaModel>
  }

  export type PostCreateWithoutLocationRefInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutLocationRefInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutLocationRefInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput>
  }

  export type PostCreateManyLocationRefInputEnvelope = {
    data: PostCreateManyLocationRefInput | PostCreateManyLocationRefInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutLocationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
  }

  export type UserUncheckedCreateWithoutLocationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLocationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput>
  }

  export type UserCreateManyLocationInputEnvelope = {
    data: UserCreateManyLocationInput | UserCreateManyLocationInput[]
    skipDuplicates?: boolean
  }

  export type PostUpsertWithWhereUniqueWithoutLocationRefInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutLocationRefInput, PostUncheckedUpdateWithoutLocationRefInput>
    create: XOR<PostCreateWithoutLocationRefInput, PostUncheckedCreateWithoutLocationRefInput>
  }

  export type PostUpdateWithWhereUniqueWithoutLocationRefInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutLocationRefInput, PostUncheckedUpdateWithoutLocationRefInput>
  }

  export type PostUpdateManyWithWhereWithoutLocationRefInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutLocationRefInput>
  }

  export type PostScalarWhereInput = {
    AND?: PostScalarWhereInput | PostScalarWhereInput[]
    OR?: PostScalarWhereInput[]
    NOT?: PostScalarWhereInput | PostScalarWhereInput[]
    id?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    description?: StringFilter<"Post"> | string
    images?: StringNullableListFilter<"Post">
    phone?: StringFilter<"Post"> | string
    isActive?: BoolFilter<"Post"> | boolean
    views?: IntFilter<"Post"> | number
    viewsToday?: IntFilter<"Post"> | number
    clicks?: IntFilter<"Post"> | number
    clicksToday?: IntFilter<"Post"> | number
    score?: FloatFilter<"Post"> | number
    engagementRate?: FloatFilter<"Post"> | number
    lastBoosted?: DateTimeNullableFilter<"Post"> | Date | string | null
    locationId?: StringNullableFilter<"Post"> | string | null
    rates?: JsonNullableFilter<"Post">
    availability?: JsonNullableFilter<"Post">
    trendingScore?: FloatFilter<"Post"> | number
    isTrending?: BoolFilter<"Post"> | boolean
    isFeatured?: BoolFilter<"Post"> | boolean
    discoveryScore?: FloatFilter<"Post"> | number
    qualityScore?: FloatFilter<"Post"> | number
    lastScoreUpdate?: DateTimeFilter<"Post"> | Date | string
    isPrivate?: BoolFilter<"Post"> | boolean
    premiumOnly?: BoolFilter<"Post"> | boolean
    uniqueViews?: IntFilter<"Post"> | number
    totalTime?: IntFilter<"Post"> | number
    bounceRate?: FloatFilter<"Post"> | number
    whatsappClicks?: IntFilter<"Post"> | number
    hasActiveBoost?: BoolFilter<"Post"> | boolean
    boostEndsAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    createdAt?: DateTimeFilter<"Post"> | Date | string
    updatedAt?: DateTimeFilter<"Post"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    expiresAt?: DateTimeNullableFilter<"Post"> | Date | string | null
    authorId?: StringFilter<"Post"> | string
    age?: IntNullableFilter<"Post"> | number | null
    location?: StringNullableFilter<"Post"> | string | null
    services?: StringNullableListFilter<"Post">
    sexo?: StringNullableFilter<"Post"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutLocationInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutLocationInput, UserUncheckedUpdateWithoutLocationInput>
    create: XOR<UserCreateWithoutLocationInput, UserUncheckedCreateWithoutLocationInput>
  }

  export type UserUpdateWithWhereUniqueWithoutLocationInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutLocationInput, UserUncheckedUpdateWithoutLocationInput>
  }

  export type UserUpdateManyWithWhereWithoutLocationInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutLocationInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    website?: StringNullableFilter<"User"> | string | null
    userType?: EnumUserTypeFilter<"User"> | $Enums.UserType
    accountStatus?: EnumAccountStatusFilter<"User"> | $Enums.AccountStatus
    canLogin?: BoolFilter<"User"> | boolean
    isActive?: BoolFilter<"User"> | boolean
    isBanned?: BoolFilter<"User"> | boolean
    banReason?: StringNullableFilter<"User"> | string | null
    profileViews?: IntFilter<"User"> | number
    passwordResetToken?: StringNullableFilter<"User"> | string | null
    passwordResetExpiry?: DateTimeNullableFilter<"User"> | Date | string | null
    emailVerificationToken?: StringNullableFilter<"User"> | string | null
    emailVerified?: BoolFilter<"User"> | boolean
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    locationId?: StringNullableFilter<"User"> | string | null
    timezone?: StringNullableFilter<"User"> | string | null
    language?: StringNullableFilter<"User"> | string | null
    lastLoginIP?: StringNullableFilter<"User"> | string | null
    lastDailyReset?: DateTimeFilter<"User"> | Date | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    lastLogin?: DateTimeNullableFilter<"User"> | Date | string | null
    lastActiveAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletionReason?: StringNullableFilter<"User"> | string | null
    googleId?: StringNullableFilter<"User"> | string | null
  }

  export type AdminCreateWithoutUserInput = {
    id?: string
    role?: $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: number
    totalReports?: number
    totalVerifications?: number
    totalAgencyApprovals?: number
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminUncheckedCreateWithoutUserInput = {
    id?: string
    role?: $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: number
    totalReports?: number
    totalVerifications?: number
    totalAgencyApprovals?: number
    canDeletePosts?: boolean
    canBanUsers?: boolean
    canModifyPrices?: boolean
    canAccessMetrics?: boolean
    canApproveAgencies?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdminCreateOrConnectWithoutUserInput = {
    where: AdminWhereUniqueInput
    create: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
  }

  export type AgencyCreateWithoutUserInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    invitations?: AgencyInvitationCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutUserInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    invitations?: AgencyInvitationUncheckedCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipUncheckedCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutUserInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
  }

  export type AgencyRegistrationRequestCreateWithoutReviewerInput = {
    id?: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    status?: $Enums.AgencyRequestStatus
    user: UserCreateNestedOneWithoutAgencyRegistrationRequestInput
  }

  export type AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput = {
    id?: string
    userId: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    status?: $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestCreateOrConnectWithoutReviewerInput = {
    where: AgencyRegistrationRequestWhereUniqueInput
    create: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput>
  }

  export type AgencyRegistrationRequestCreateManyReviewerInputEnvelope = {
    data: AgencyRegistrationRequestCreateManyReviewerInput | AgencyRegistrationRequestCreateManyReviewerInput[]
    skipDuplicates?: boolean
  }

  export type AgencyRegistrationRequestCreateWithoutUserInput = {
    id?: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    status?: $Enums.AgencyRequestStatus
    reviewer?: UserCreateNestedOneWithoutReviewedAgencyRequestsInput
  }

  export type AgencyRegistrationRequestUncheckedCreateWithoutUserInput = {
    id?: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    status?: $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestCreateOrConnectWithoutUserInput = {
    where: AgencyRegistrationRequestWhereUniqueInput
    create: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
  }

  export type BanCreateWithoutUserInput = {
    id?: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    appeals?: BanAppealCreateNestedManyWithoutBanInput
  }

  export type BanUncheckedCreateWithoutUserInput = {
    id?: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    appeals?: BanAppealUncheckedCreateNestedManyWithoutBanInput
  }

  export type BanCreateOrConnectWithoutUserInput = {
    where: BanWhereUniqueInput
    create: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput>
  }

  export type BanCreateManyUserInputEnvelope = {
    data: BanCreateManyUserInput | BanCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BoostCreateWithoutUserInput = {
    id?: string
    isActive?: boolean
    amount?: number
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    post: PostCreateNestedOneWithoutBoostsInput
    pricing: BoostPricingCreateNestedOneWithoutBoostsInput
  }

  export type BoostUncheckedCreateWithoutUserInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostCreateOrConnectWithoutUserInput = {
    where: BoostWhereUniqueInput
    create: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput>
  }

  export type BoostCreateManyUserInputEnvelope = {
    data: BoostCreateManyUserInput | BoostCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ChatMemberCreateWithoutUserInput = {
    id?: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
    chat: ChatCreateNestedOneWithoutMembersInput
  }

  export type ChatMemberUncheckedCreateWithoutUserInput = {
    id?: string
    chatId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type ChatMemberCreateOrConnectWithoutUserInput = {
    where: ChatMemberWhereUniqueInput
    create: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput>
  }

  export type ChatMemberCreateManyUserInputEnvelope = {
    data: ChatMemberCreateManyUserInput | ChatMemberCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ChatRateLimitCreateWithoutUserInput = {
    id?: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
  }

  export type ChatRateLimitUncheckedCreateWithoutUserInput = {
    id?: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
  }

  export type ChatRateLimitCreateOrConnectWithoutUserInput = {
    where: ChatRateLimitWhereUniqueInput
    create: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput>
  }

  export type ChatRateLimitCreateManyUserInputEnvelope = {
    data: ChatRateLimitCreateManyUserInput | ChatRateLimitCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ClientCreateWithoutUserInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutUserInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutUserInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
  }

  export type DeviceTokenCreateWithoutUserInput = {
    id?: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type DeviceTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type DeviceTokenCreateOrConnectWithoutUserInput = {
    where: DeviceTokenWhereUniqueInput
    create: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput>
  }

  export type DeviceTokenCreateManyUserInputEnvelope = {
    data: DeviceTokenCreateManyUserInput | DeviceTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type EscortCreateWithoutUserInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutUserInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutUserInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
  }

  export type FavoriteCreateWithoutUserInput = {
    id?: string
    isNotified?: boolean
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type FavoriteCreateOrConnectWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteCreateManyUserInputEnvelope = {
    data: FavoriteCreateManyUserInput | FavoriteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type IdentityVerificationCreateWithoutUserInput = {
    id?: string
    documentType: string
    documentNumber: string
    documentImages?: IdentityVerificationCreatedocumentImagesInput | string[]
    selfieImage?: string | null
    status?: $Enums.VerificationStatus
    verifiedBy?: string | null
    rejectionReason?: string | null
    notes?: string | null
    submittedAt?: Date | string
    completedAt?: Date | string | null
    expiresAt?: Date | string | null
  }

  export type IdentityVerificationUncheckedCreateWithoutUserInput = {
    id?: string
    documentType: string
    documentNumber: string
    documentImages?: IdentityVerificationCreatedocumentImagesInput | string[]
    selfieImage?: string | null
    status?: $Enums.VerificationStatus
    verifiedBy?: string | null
    rejectionReason?: string | null
    notes?: string | null
    submittedAt?: Date | string
    completedAt?: Date | string | null
    expiresAt?: Date | string | null
  }

  export type IdentityVerificationCreateOrConnectWithoutUserInput = {
    where: IdentityVerificationWhereUniqueInput
    create: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
  }

  export type LikeCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutUserInput = {
    id?: string
    postId: string
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutUserInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeCreateManyUserInputEnvelope = {
    data: LikeCreateManyUserInput | LikeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutReceiverInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    chat: ChatCreateNestedOneWithoutMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutReceiverInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    chatId: string
  }

  export type MessageCreateOrConnectWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageCreateManyReceiverInputEnvelope = {
    data: MessageCreateManyReceiverInput | MessageCreateManyReceiverInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutSenderInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    chat: ChatCreateNestedOneWithoutMessagesInput
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutSenderInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    receiverId?: string | null
    chatId: string
  }

  export type MessageCreateOrConnectWithoutSenderInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageCreateManySenderInputEnvelope = {
    data: MessageCreateManySenderInput | MessageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutAuthorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostCreateManyAuthorInputEnvelope = {
    data: PostCreateManyAuthorInput | PostCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutAuthorInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    post?: PostCreateNestedOneWithoutReportsInput
    targetUser?: UserCreateNestedOneWithoutReportsReceivedInput
  }

  export type ReportUncheckedCreateWithoutAuthorInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    targetUserId?: string | null
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportCreateOrConnectWithoutAuthorInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput>
  }

  export type ReportCreateManyAuthorInputEnvelope = {
    data: ReportCreateManyAuthorInput | ReportCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type ReportCreateWithoutTargetUserInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    author: UserCreateNestedOneWithoutReportsInput
    post?: PostCreateNestedOneWithoutReportsInput
  }

  export type ReportUncheckedCreateWithoutTargetUserInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportCreateOrConnectWithoutTargetUserInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput>
  }

  export type ReportCreateManyTargetUserInputEnvelope = {
    data: ReportCreateManyTargetUserInput | ReportCreateManyTargetUserInput[]
    skipDuplicates?: boolean
  }

  export type SearchHistoryCreateWithoutUserInput = {
    id?: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
  }

  export type SearchHistoryUncheckedCreateWithoutUserInput = {
    id?: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
  }

  export type SearchHistoryCreateOrConnectWithoutUserInput = {
    where: SearchHistoryWhereUniqueInput
    create: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput>
  }

  export type SearchHistoryCreateManyUserInputEnvelope = {
    data: SearchHistoryCreateManyUserInput | SearchHistoryCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionCreateWithoutUserInput = {
    id?: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    plan: SubscriptionPlanCreateNestedOneWithoutSubscriptionsInput
  }

  export type SubscriptionUncheckedCreateWithoutUserInput = {
    id?: string
    planId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionCreateOrConnectWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
  }

  export type SubscriptionCreateManyUserInputEnvelope = {
    data: SubscriptionCreateManyUserInput | SubscriptionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserBlockCreateWithoutBlockedInput = {
    id?: string
    reason?: string | null
    createdAt?: Date | string
    blocker: UserCreateNestedOneWithoutBlockedUsersInput
  }

  export type UserBlockUncheckedCreateWithoutBlockedInput = {
    id?: string
    blockerId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserBlockCreateOrConnectWithoutBlockedInput = {
    where: UserBlockWhereUniqueInput
    create: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput>
  }

  export type UserBlockCreateManyBlockedInputEnvelope = {
    data: UserBlockCreateManyBlockedInput | UserBlockCreateManyBlockedInput[]
    skipDuplicates?: boolean
  }

  export type UserBlockCreateWithoutBlockerInput = {
    id?: string
    reason?: string | null
    createdAt?: Date | string
    blocked: UserCreateNestedOneWithoutBlockedByInput
  }

  export type UserBlockUncheckedCreateWithoutBlockerInput = {
    id?: string
    blockedId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserBlockCreateOrConnectWithoutBlockerInput = {
    where: UserBlockWhereUniqueInput
    create: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput>
  }

  export type UserBlockCreateManyBlockerInputEnvelope = {
    data: UserBlockCreateManyBlockerInput | UserBlockCreateManyBlockerInput[]
    skipDuplicates?: boolean
  }

  export type UserInteractionCreateWithoutTargetUserInput = {
    id?: string
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
    post?: PostCreateNestedOneWithoutInteractionsInput
    user: UserCreateNestedOneWithoutInteractionsInput
  }

  export type UserInteractionUncheckedCreateWithoutTargetUserInput = {
    id?: string
    userId: string
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionCreateOrConnectWithoutTargetUserInput = {
    where: UserInteractionWhereUniqueInput
    create: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput>
  }

  export type UserInteractionCreateManyTargetUserInputEnvelope = {
    data: UserInteractionCreateManyTargetUserInput | UserInteractionCreateManyTargetUserInput[]
    skipDuplicates?: boolean
  }

  export type UserInteractionCreateWithoutUserInput = {
    id?: string
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
    post?: PostCreateNestedOneWithoutInteractionsInput
    targetUser?: UserCreateNestedOneWithoutReceivedInteractionsInput
  }

  export type UserInteractionUncheckedCreateWithoutUserInput = {
    id?: string
    targetUserId?: string | null
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionCreateOrConnectWithoutUserInput = {
    where: UserInteractionWhereUniqueInput
    create: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput>
  }

  export type UserInteractionCreateManyUserInputEnvelope = {
    data: UserInteractionCreateManyUserInput | UserInteractionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserReputationCreateWithoutUserInput = {
    id?: string
    overallScore?: number
    responseRate?: number
    averageResponseTime?: number | null
    profileCompleteness?: number
    trustScore?: number
    totalViews?: number
    totalLikes?: number
    totalMessages?: number
    totalFavorites?: number
    discoveryScore?: number
    trendingScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    spamScore?: number
    reportScore?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserReputationUncheckedCreateWithoutUserInput = {
    id?: string
    overallScore?: number
    responseRate?: number
    averageResponseTime?: number | null
    profileCompleteness?: number
    trustScore?: number
    totalViews?: number
    totalLikes?: number
    totalMessages?: number
    totalFavorites?: number
    discoveryScore?: number
    trendingScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    spamScore?: number
    reportScore?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserReputationCreateOrConnectWithoutUserInput = {
    where: UserReputationWhereUniqueInput
    create: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
  }

  export type UserSettingsCreateWithoutUserInput = {
    id?: string
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: $Enums.ContentFilterLevel
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsUncheckedCreateWithoutUserInput = {
    id?: string
    emailNotifications?: boolean
    pushNotifications?: boolean
    messageNotifications?: boolean
    likeNotifications?: boolean
    boostNotifications?: boolean
    profileReminders?: boolean
    verificationReminders?: boolean
    showOnline?: boolean
    showLastSeen?: boolean
    allowDirectMessages?: boolean
    showPhoneNumber?: boolean
    showInDiscovery?: boolean
    showInTrending?: boolean
    showInSearch?: boolean
    contentFilter?: $Enums.ContentFilterLevel
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSettingsCreateOrConnectWithoutUserInput = {
    where: UserSettingsWhereUniqueInput
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
  }

  export type LocationCreateWithoutUsersInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    posts?: PostCreateNestedManyWithoutLocationRefInput
  }

  export type LocationUncheckedCreateWithoutUsersInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    posts?: PostUncheckedCreateNestedManyWithoutLocationRefInput
  }

  export type LocationCreateOrConnectWithoutUsersInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutUsersInput, LocationUncheckedCreateWithoutUsersInput>
  }

  export type AdminUpsertWithoutUserInput = {
    update: XOR<AdminUpdateWithoutUserInput, AdminUncheckedUpdateWithoutUserInput>
    create: XOR<AdminCreateWithoutUserInput, AdminUncheckedCreateWithoutUserInput>
    where?: AdminWhereInput
  }

  export type AdminUpdateToOneWithWhereWithoutUserInput = {
    where?: AdminWhereInput
    data: XOR<AdminUpdateWithoutUserInput, AdminUncheckedUpdateWithoutUserInput>
  }

  export type AdminUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdminUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumAdminRoleFieldUpdateOperationsInput | $Enums.AdminRole
    permissions?: NullableJsonNullValueInput | InputJsonValue
    totalBans?: IntFieldUpdateOperationsInput | number
    totalReports?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    totalAgencyApprovals?: IntFieldUpdateOperationsInput | number
    canDeletePosts?: BoolFieldUpdateOperationsInput | boolean
    canBanUsers?: BoolFieldUpdateOperationsInput | boolean
    canModifyPrices?: BoolFieldUpdateOperationsInput | boolean
    canAccessMetrics?: BoolFieldUpdateOperationsInput | boolean
    canApproveAgencies?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyUpsertWithoutUserInput = {
    update: XOR<AgencyUpdateWithoutUserInput, AgencyUncheckedUpdateWithoutUserInput>
    create: XOR<AgencyCreateWithoutUserInput, AgencyUncheckedCreateWithoutUserInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutUserInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutUserInput, AgencyUncheckedUpdateWithoutUserInput>
  }

  export type AgencyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    invitations?: AgencyInvitationUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    invitations?: AgencyInvitationUncheckedUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUncheckedUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyRegistrationRequestUpsertWithWhereUniqueWithoutReviewerInput = {
    where: AgencyRegistrationRequestWhereUniqueInput
    update: XOR<AgencyRegistrationRequestUpdateWithoutReviewerInput, AgencyRegistrationRequestUncheckedUpdateWithoutReviewerInput>
    create: XOR<AgencyRegistrationRequestCreateWithoutReviewerInput, AgencyRegistrationRequestUncheckedCreateWithoutReviewerInput>
  }

  export type AgencyRegistrationRequestUpdateWithWhereUniqueWithoutReviewerInput = {
    where: AgencyRegistrationRequestWhereUniqueInput
    data: XOR<AgencyRegistrationRequestUpdateWithoutReviewerInput, AgencyRegistrationRequestUncheckedUpdateWithoutReviewerInput>
  }

  export type AgencyRegistrationRequestUpdateManyWithWhereWithoutReviewerInput = {
    where: AgencyRegistrationRequestScalarWhereInput
    data: XOR<AgencyRegistrationRequestUpdateManyMutationInput, AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerInput>
  }

  export type AgencyRegistrationRequestScalarWhereInput = {
    AND?: AgencyRegistrationRequestScalarWhereInput | AgencyRegistrationRequestScalarWhereInput[]
    OR?: AgencyRegistrationRequestScalarWhereInput[]
    NOT?: AgencyRegistrationRequestScalarWhereInput | AgencyRegistrationRequestScalarWhereInput[]
    id?: StringFilter<"AgencyRegistrationRequest"> | string
    userId?: StringFilter<"AgencyRegistrationRequest"> | string
    fullName?: StringFilter<"AgencyRegistrationRequest"> | string
    documentNumber?: StringFilter<"AgencyRegistrationRequest"> | string
    businessPhone?: StringFilter<"AgencyRegistrationRequest"> | string
    businessEmail?: StringFilter<"AgencyRegistrationRequest"> | string
    documentFrontImage?: StringFilter<"AgencyRegistrationRequest"> | string
    documentBackImage?: StringFilter<"AgencyRegistrationRequest"> | string
    reviewNotes?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    submittedAt?: DateTimeFilter<"AgencyRegistrationRequest"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"AgencyRegistrationRequest"> | Date | string | null
    reviewedBy?: StringNullableFilter<"AgencyRegistrationRequest"> | string | null
    status?: EnumAgencyRequestStatusFilter<"AgencyRegistrationRequest"> | $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestUpsertWithoutUserInput = {
    update: XOR<AgencyRegistrationRequestUpdateWithoutUserInput, AgencyRegistrationRequestUncheckedUpdateWithoutUserInput>
    create: XOR<AgencyRegistrationRequestCreateWithoutUserInput, AgencyRegistrationRequestUncheckedCreateWithoutUserInput>
    where?: AgencyRegistrationRequestWhereInput
  }

  export type AgencyRegistrationRequestUpdateToOneWithWhereWithoutUserInput = {
    where?: AgencyRegistrationRequestWhereInput
    data: XOR<AgencyRegistrationRequestUpdateWithoutUserInput, AgencyRegistrationRequestUncheckedUpdateWithoutUserInput>
  }

  export type AgencyRegistrationRequestUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
    reviewer?: UserUpdateOneWithoutReviewedAgencyRequestsNestedInput
  }

  export type AgencyRegistrationRequestUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type BanUpsertWithWhereUniqueWithoutUserInput = {
    where: BanWhereUniqueInput
    update: XOR<BanUpdateWithoutUserInput, BanUncheckedUpdateWithoutUserInput>
    create: XOR<BanCreateWithoutUserInput, BanUncheckedCreateWithoutUserInput>
  }

  export type BanUpdateWithWhereUniqueWithoutUserInput = {
    where: BanWhereUniqueInput
    data: XOR<BanUpdateWithoutUserInput, BanUncheckedUpdateWithoutUserInput>
  }

  export type BanUpdateManyWithWhereWithoutUserInput = {
    where: BanScalarWhereInput
    data: XOR<BanUpdateManyMutationInput, BanUncheckedUpdateManyWithoutUserInput>
  }

  export type BanScalarWhereInput = {
    AND?: BanScalarWhereInput | BanScalarWhereInput[]
    OR?: BanScalarWhereInput[]
    NOT?: BanScalarWhereInput | BanScalarWhereInput[]
    id?: StringFilter<"Ban"> | string
    userId?: StringFilter<"Ban"> | string
    reason?: StringFilter<"Ban"> | string
    bannedBy?: StringFilter<"Ban"> | string
    adminId?: StringNullableFilter<"Ban"> | string | null
    isActive?: BoolFilter<"Ban"> | boolean
    expiresAt?: DateTimeNullableFilter<"Ban"> | Date | string | null
    severity?: EnumBanSeverityFilter<"Ban"> | $Enums.BanSeverity
    evidence?: JsonNullableFilter<"Ban">
    createdAt?: DateTimeFilter<"Ban"> | Date | string
    updatedAt?: DateTimeFilter<"Ban"> | Date | string
  }

  export type BoostUpsertWithWhereUniqueWithoutUserInput = {
    where: BoostWhereUniqueInput
    update: XOR<BoostUpdateWithoutUserInput, BoostUncheckedUpdateWithoutUserInput>
    create: XOR<BoostCreateWithoutUserInput, BoostUncheckedCreateWithoutUserInput>
  }

  export type BoostUpdateWithWhereUniqueWithoutUserInput = {
    where: BoostWhereUniqueInput
    data: XOR<BoostUpdateWithoutUserInput, BoostUncheckedUpdateWithoutUserInput>
  }

  export type BoostUpdateManyWithWhereWithoutUserInput = {
    where: BoostScalarWhereInput
    data: XOR<BoostUpdateManyMutationInput, BoostUncheckedUpdateManyWithoutUserInput>
  }

  export type BoostScalarWhereInput = {
    AND?: BoostScalarWhereInput | BoostScalarWhereInput[]
    OR?: BoostScalarWhereInput[]
    NOT?: BoostScalarWhereInput | BoostScalarWhereInput[]
    id?: StringFilter<"Boost"> | string
    pricingId?: StringFilter<"Boost"> | string
    isActive?: BoolFilter<"Boost"> | boolean
    amount?: FloatFilter<"Boost"> | number
    userId?: StringFilter<"Boost"> | string
    postId?: StringFilter<"Boost"> | string
    viewsBefore?: IntFilter<"Boost"> | number
    viewsAfter?: IntFilter<"Boost"> | number
    clicksBefore?: IntFilter<"Boost"> | number
    clicksAfter?: IntFilter<"Boost"> | number
    engagementBefore?: FloatFilter<"Boost"> | number
    engagementAfter?: FloatFilter<"Boost"> | number
    conversionRate?: FloatFilter<"Boost"> | number
    targetAudience?: JsonNullableFilter<"Boost">
    geography?: StringNullableFilter<"Boost"> | string | null
    stackLevel?: IntFilter<"Boost"> | number
    isStackBoost?: BoolFilter<"Boost"> | boolean
    createdAt?: DateTimeFilter<"Boost"> | Date | string
    expiresAt?: DateTimeFilter<"Boost"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Boost"> | Date | string | null
  }

  export type ChatMemberUpsertWithWhereUniqueWithoutUserInput = {
    where: ChatMemberWhereUniqueInput
    update: XOR<ChatMemberUpdateWithoutUserInput, ChatMemberUncheckedUpdateWithoutUserInput>
    create: XOR<ChatMemberCreateWithoutUserInput, ChatMemberUncheckedCreateWithoutUserInput>
  }

  export type ChatMemberUpdateWithWhereUniqueWithoutUserInput = {
    where: ChatMemberWhereUniqueInput
    data: XOR<ChatMemberUpdateWithoutUserInput, ChatMemberUncheckedUpdateWithoutUserInput>
  }

  export type ChatMemberUpdateManyWithWhereWithoutUserInput = {
    where: ChatMemberScalarWhereInput
    data: XOR<ChatMemberUpdateManyMutationInput, ChatMemberUncheckedUpdateManyWithoutUserInput>
  }

  export type ChatMemberScalarWhereInput = {
    AND?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
    OR?: ChatMemberScalarWhereInput[]
    NOT?: ChatMemberScalarWhereInput | ChatMemberScalarWhereInput[]
    id?: StringFilter<"ChatMember"> | string
    userId?: StringFilter<"ChatMember"> | string
    chatId?: StringFilter<"ChatMember"> | string
    joinedAt?: DateTimeFilter<"ChatMember"> | Date | string
    lastRead?: DateTimeFilter<"ChatMember"> | Date | string
    isMuted?: BoolFilter<"ChatMember"> | boolean
    role?: EnumChatRoleFilter<"ChatMember"> | $Enums.ChatRole
    messageCount?: IntFilter<"ChatMember"> | number
    maxMessages?: IntFilter<"ChatMember"> | number
    canAddMembers?: BoolFilter<"ChatMember"> | boolean
    canDeleteMessages?: BoolFilter<"ChatMember"> | boolean
    canManageChat?: BoolFilter<"ChatMember"> | boolean
    messagesCount?: IntFilter<"ChatMember"> | number
  }

  export type ChatRateLimitUpsertWithWhereUniqueWithoutUserInput = {
    where: ChatRateLimitWhereUniqueInput
    update: XOR<ChatRateLimitUpdateWithoutUserInput, ChatRateLimitUncheckedUpdateWithoutUserInput>
    create: XOR<ChatRateLimitCreateWithoutUserInput, ChatRateLimitUncheckedCreateWithoutUserInput>
  }

  export type ChatRateLimitUpdateWithWhereUniqueWithoutUserInput = {
    where: ChatRateLimitWhereUniqueInput
    data: XOR<ChatRateLimitUpdateWithoutUserInput, ChatRateLimitUncheckedUpdateWithoutUserInput>
  }

  export type ChatRateLimitUpdateManyWithWhereWithoutUserInput = {
    where: ChatRateLimitScalarWhereInput
    data: XOR<ChatRateLimitUpdateManyMutationInput, ChatRateLimitUncheckedUpdateManyWithoutUserInput>
  }

  export type ChatRateLimitScalarWhereInput = {
    AND?: ChatRateLimitScalarWhereInput | ChatRateLimitScalarWhereInput[]
    OR?: ChatRateLimitScalarWhereInput[]
    NOT?: ChatRateLimitScalarWhereInput | ChatRateLimitScalarWhereInput[]
    id?: StringFilter<"ChatRateLimit"> | string
    userId?: StringFilter<"ChatRateLimit"> | string
    count?: IntFilter<"ChatRateLimit"> | number
    windowStart?: DateTimeFilter<"ChatRateLimit"> | Date | string
    limitType?: EnumRateLimitTypeFilter<"ChatRateLimit"> | $Enums.RateLimitType
  }

  export type ClientUpsertWithoutUserInput = {
    update: XOR<ClientUpdateWithoutUserInput, ClientUncheckedUpdateWithoutUserInput>
    create: XOR<ClientCreateWithoutUserInput, ClientUncheckedCreateWithoutUserInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutUserInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutUserInput, ClientUncheckedUpdateWithoutUserInput>
  }

  export type ClientUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type DeviceTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: DeviceTokenWhereUniqueInput
    update: XOR<DeviceTokenUpdateWithoutUserInput, DeviceTokenUncheckedUpdateWithoutUserInput>
    create: XOR<DeviceTokenCreateWithoutUserInput, DeviceTokenUncheckedCreateWithoutUserInput>
  }

  export type DeviceTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: DeviceTokenWhereUniqueInput
    data: XOR<DeviceTokenUpdateWithoutUserInput, DeviceTokenUncheckedUpdateWithoutUserInput>
  }

  export type DeviceTokenUpdateManyWithWhereWithoutUserInput = {
    where: DeviceTokenScalarWhereInput
    data: XOR<DeviceTokenUpdateManyMutationInput, DeviceTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type DeviceTokenScalarWhereInput = {
    AND?: DeviceTokenScalarWhereInput | DeviceTokenScalarWhereInput[]
    OR?: DeviceTokenScalarWhereInput[]
    NOT?: DeviceTokenScalarWhereInput | DeviceTokenScalarWhereInput[]
    id?: StringFilter<"DeviceToken"> | string
    userId?: StringFilter<"DeviceToken"> | string
    token?: StringFilter<"DeviceToken"> | string
    platform?: StringFilter<"DeviceToken"> | string
    deviceInfo?: JsonNullableFilter<"DeviceToken">
    isActive?: BoolFilter<"DeviceToken"> | boolean
    createdAt?: DateTimeFilter<"DeviceToken"> | Date | string
    updatedAt?: DateTimeFilter<"DeviceToken"> | Date | string
    lastUsedAt?: DateTimeFilter<"DeviceToken"> | Date | string
  }

  export type EscortUpsertWithoutUserInput = {
    update: XOR<EscortUpdateWithoutUserInput, EscortUncheckedUpdateWithoutUserInput>
    create: XOR<EscortCreateWithoutUserInput, EscortUncheckedCreateWithoutUserInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutUserInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutUserInput, EscortUncheckedUpdateWithoutUserInput>
  }

  export type EscortUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type FavoriteUpsertWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
    create: XOR<FavoriteCreateWithoutUserInput, FavoriteUncheckedCreateWithoutUserInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutUserInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutUserInput, FavoriteUncheckedUpdateWithoutUserInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutUserInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutUserInput>
  }

  export type FavoriteScalarWhereInput = {
    AND?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    OR?: FavoriteScalarWhereInput[]
    NOT?: FavoriteScalarWhereInput | FavoriteScalarWhereInput[]
    id?: StringFilter<"Favorite"> | string
    userId?: StringFilter<"Favorite"> | string
    postId?: StringFilter<"Favorite"> | string
    isNotified?: BoolFilter<"Favorite"> | boolean
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
  }

  export type IdentityVerificationUpsertWithoutUserInput = {
    update: XOR<IdentityVerificationUpdateWithoutUserInput, IdentityVerificationUncheckedUpdateWithoutUserInput>
    create: XOR<IdentityVerificationCreateWithoutUserInput, IdentityVerificationUncheckedCreateWithoutUserInput>
    where?: IdentityVerificationWhereInput
  }

  export type IdentityVerificationUpdateToOneWithWhereWithoutUserInput = {
    where?: IdentityVerificationWhereInput
    data: XOR<IdentityVerificationUpdateWithoutUserInput, IdentityVerificationUncheckedUpdateWithoutUserInput>
  }

  export type IdentityVerificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IdentityVerificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    documentType?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    documentImages?: IdentityVerificationUpdatedocumentImagesInput | string[]
    selfieImage?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LikeUpsertWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
    create: XOR<LikeCreateWithoutUserInput, LikeUncheckedCreateWithoutUserInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutUserInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutUserInput, LikeUncheckedUpdateWithoutUserInput>
  }

  export type LikeUpdateManyWithWhereWithoutUserInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutUserInput>
  }

  export type LikeScalarWhereInput = {
    AND?: LikeScalarWhereInput | LikeScalarWhereInput[]
    OR?: LikeScalarWhereInput[]
    NOT?: LikeScalarWhereInput | LikeScalarWhereInput[]
    id?: StringFilter<"Like"> | string
    userId?: StringFilter<"Like"> | string
    postId?: StringFilter<"Like"> | string
    createdAt?: DateTimeFilter<"Like"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
    create: XOR<MessageCreateWithoutReceiverInput, MessageUncheckedCreateWithoutReceiverInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutReceiverInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutReceiverInput, MessageUncheckedUpdateWithoutReceiverInput>
  }

  export type MessageUpdateManyWithWhereWithoutReceiverInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutReceiverInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: StringFilter<"Message"> | string
    content?: StringNullableFilter<"Message"> | string | null
    messageType?: EnumMessageTypeFilter<"Message"> | $Enums.MessageType
    fileUrl?: StringNullableFilter<"Message"> | string | null
    fileName?: StringNullableFilter<"Message"> | string | null
    fileSize?: IntNullableFilter<"Message"> | number | null
    mimeType?: StringNullableFilter<"Message"> | string | null
    isRead?: BoolFilter<"Message"> | boolean
    costPoints?: IntNullableFilter<"Message"> | number | null
    isPremiumMessage?: BoolFilter<"Message"> | boolean
    isEdited?: BoolFilter<"Message"> | boolean
    editedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    isForwarded?: BoolFilter<"Message"> | boolean
    replyToId?: StringNullableFilter<"Message"> | string | null
    isEncrypted?: BoolFilter<"Message"> | boolean
    expiresAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    updatedAt?: DateTimeFilter<"Message"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    senderId?: StringFilter<"Message"> | string
    receiverId?: StringNullableFilter<"Message"> | string | null
    chatId?: StringFilter<"Message"> | string
  }

  export type MessageUpsertWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
    create: XOR<MessageCreateWithoutSenderInput, MessageUncheckedCreateWithoutSenderInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutSenderInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutSenderInput, MessageUncheckedUpdateWithoutSenderInput>
  }

  export type MessageUpdateManyWithWhereWithoutSenderInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutSenderInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    title?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    isRead?: BoolFilter<"Notification"> | boolean
    data?: JsonNullableFilter<"Notification">
    priority?: EnumNotificationPriorityFilter<"Notification"> | $Enums.NotificationPriority
    expiresAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    isSent?: BoolFilter<"Notification"> | boolean
    sentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    deliveryMethod?: StringNullableListFilter<"Notification">
    isEmailSent?: BoolFilter<"Notification"> | boolean
    emailSentAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
    actionUrl?: StringNullableFilter<"Notification"> | string | null
    actionText?: StringNullableFilter<"Notification"> | string | null
    userId?: StringFilter<"Notification"> | string
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Notification"> | Date | string | null
  }

  export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
  }

  export type PostUpdateManyWithWhereWithoutAuthorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutAuthorInput>
  }

  export type ReportUpsertWithWhereUniqueWithoutAuthorInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutAuthorInput, ReportUncheckedUpdateWithoutAuthorInput>
    create: XOR<ReportCreateWithoutAuthorInput, ReportUncheckedCreateWithoutAuthorInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutAuthorInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutAuthorInput, ReportUncheckedUpdateWithoutAuthorInput>
  }

  export type ReportUpdateManyWithWhereWithoutAuthorInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutAuthorInput>
  }

  export type ReportScalarWhereInput = {
    AND?: ReportScalarWhereInput | ReportScalarWhereInput[]
    OR?: ReportScalarWhereInput[]
    NOT?: ReportScalarWhereInput | ReportScalarWhereInput[]
    id?: StringFilter<"Report"> | string
    reason?: EnumReportReasonFilter<"Report"> | $Enums.ReportReason
    description?: StringNullableFilter<"Report"> | string | null
    status?: EnumReportStatusFilter<"Report"> | $Enums.ReportStatus
    evidence?: JsonNullableFilter<"Report">
    category?: StringNullableFilter<"Report"> | string | null
    severity?: EnumReportSeverityFilter<"Report"> | $Enums.ReportSeverity
    resolution?: StringNullableFilter<"Report"> | string | null
    resolvedBy?: StringNullableFilter<"Report"> | string | null
    resolvedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
    actionTaken?: StringNullableFilter<"Report"> | string | null
    authorId?: StringFilter<"Report"> | string
    targetUserId?: StringNullableFilter<"Report"> | string | null
    postId?: StringNullableFilter<"Report"> | string | null
    createdAt?: DateTimeFilter<"Report"> | Date | string
    updatedAt?: DateTimeFilter<"Report"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Report"> | Date | string | null
  }

  export type ReportUpsertWithWhereUniqueWithoutTargetUserInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutTargetUserInput, ReportUncheckedUpdateWithoutTargetUserInput>
    create: XOR<ReportCreateWithoutTargetUserInput, ReportUncheckedCreateWithoutTargetUserInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutTargetUserInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutTargetUserInput, ReportUncheckedUpdateWithoutTargetUserInput>
  }

  export type ReportUpdateManyWithWhereWithoutTargetUserInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutTargetUserInput>
  }

  export type SearchHistoryUpsertWithWhereUniqueWithoutUserInput = {
    where: SearchHistoryWhereUniqueInput
    update: XOR<SearchHistoryUpdateWithoutUserInput, SearchHistoryUncheckedUpdateWithoutUserInput>
    create: XOR<SearchHistoryCreateWithoutUserInput, SearchHistoryUncheckedCreateWithoutUserInput>
  }

  export type SearchHistoryUpdateWithWhereUniqueWithoutUserInput = {
    where: SearchHistoryWhereUniqueInput
    data: XOR<SearchHistoryUpdateWithoutUserInput, SearchHistoryUncheckedUpdateWithoutUserInput>
  }

  export type SearchHistoryUpdateManyWithWhereWithoutUserInput = {
    where: SearchHistoryScalarWhereInput
    data: XOR<SearchHistoryUpdateManyMutationInput, SearchHistoryUncheckedUpdateManyWithoutUserInput>
  }

  export type SearchHistoryScalarWhereInput = {
    AND?: SearchHistoryScalarWhereInput | SearchHistoryScalarWhereInput[]
    OR?: SearchHistoryScalarWhereInput[]
    NOT?: SearchHistoryScalarWhereInput | SearchHistoryScalarWhereInput[]
    id?: StringFilter<"SearchHistory"> | string
    userId?: StringFilter<"SearchHistory"> | string
    query?: StringFilter<"SearchHistory"> | string
    filters?: JsonNullableFilter<"SearchHistory">
    results?: IntFilter<"SearchHistory"> | number
    clicked?: BoolFilter<"SearchHistory"> | boolean
    createdAt?: DateTimeFilter<"SearchHistory"> | Date | string
  }

  export type SubscriptionUpsertWithWhereUniqueWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    update: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
    create: XOR<SubscriptionCreateWithoutUserInput, SubscriptionUncheckedCreateWithoutUserInput>
  }

  export type SubscriptionUpdateWithWhereUniqueWithoutUserInput = {
    where: SubscriptionWhereUniqueInput
    data: XOR<SubscriptionUpdateWithoutUserInput, SubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type SubscriptionUpdateManyWithWhereWithoutUserInput = {
    where: SubscriptionScalarWhereInput
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyWithoutUserInput>
  }

  export type SubscriptionScalarWhereInput = {
    AND?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    OR?: SubscriptionScalarWhereInput[]
    NOT?: SubscriptionScalarWhereInput | SubscriptionScalarWhereInput[]
    id?: StringFilter<"Subscription"> | string
    userId?: StringFilter<"Subscription"> | string
    planId?: StringFilter<"Subscription"> | string
    status?: EnumSubscriptionStatusFilter<"Subscription"> | $Enums.SubscriptionStatus
    stripeSubscriptionId?: StringNullableFilter<"Subscription"> | string | null
    currentPeriodStart?: DateTimeFilter<"Subscription"> | Date | string
    currentPeriodEnd?: DateTimeFilter<"Subscription"> | Date | string
    postsUsed?: IntFilter<"Subscription"> | number
    imagesUsed?: IntFilter<"Subscription"> | number
    boostsUsed?: IntFilter<"Subscription"> | number
    startsAt?: DateTimeFilter<"Subscription"> | Date | string
    endsAt?: DateTimeFilter<"Subscription"> | Date | string
    cancelledAt?: DateTimeNullableFilter<"Subscription"> | Date | string | null
    createdAt?: DateTimeFilter<"Subscription"> | Date | string
    updatedAt?: DateTimeFilter<"Subscription"> | Date | string
  }

  export type UserBlockUpsertWithWhereUniqueWithoutBlockedInput = {
    where: UserBlockWhereUniqueInput
    update: XOR<UserBlockUpdateWithoutBlockedInput, UserBlockUncheckedUpdateWithoutBlockedInput>
    create: XOR<UserBlockCreateWithoutBlockedInput, UserBlockUncheckedCreateWithoutBlockedInput>
  }

  export type UserBlockUpdateWithWhereUniqueWithoutBlockedInput = {
    where: UserBlockWhereUniqueInput
    data: XOR<UserBlockUpdateWithoutBlockedInput, UserBlockUncheckedUpdateWithoutBlockedInput>
  }

  export type UserBlockUpdateManyWithWhereWithoutBlockedInput = {
    where: UserBlockScalarWhereInput
    data: XOR<UserBlockUpdateManyMutationInput, UserBlockUncheckedUpdateManyWithoutBlockedInput>
  }

  export type UserBlockScalarWhereInput = {
    AND?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
    OR?: UserBlockScalarWhereInput[]
    NOT?: UserBlockScalarWhereInput | UserBlockScalarWhereInput[]
    id?: StringFilter<"UserBlock"> | string
    blockerId?: StringFilter<"UserBlock"> | string
    blockedId?: StringFilter<"UserBlock"> | string
    reason?: StringNullableFilter<"UserBlock"> | string | null
    createdAt?: DateTimeFilter<"UserBlock"> | Date | string
  }

  export type UserBlockUpsertWithWhereUniqueWithoutBlockerInput = {
    where: UserBlockWhereUniqueInput
    update: XOR<UserBlockUpdateWithoutBlockerInput, UserBlockUncheckedUpdateWithoutBlockerInput>
    create: XOR<UserBlockCreateWithoutBlockerInput, UserBlockUncheckedCreateWithoutBlockerInput>
  }

  export type UserBlockUpdateWithWhereUniqueWithoutBlockerInput = {
    where: UserBlockWhereUniqueInput
    data: XOR<UserBlockUpdateWithoutBlockerInput, UserBlockUncheckedUpdateWithoutBlockerInput>
  }

  export type UserBlockUpdateManyWithWhereWithoutBlockerInput = {
    where: UserBlockScalarWhereInput
    data: XOR<UserBlockUpdateManyMutationInput, UserBlockUncheckedUpdateManyWithoutBlockerInput>
  }

  export type UserInteractionUpsertWithWhereUniqueWithoutTargetUserInput = {
    where: UserInteractionWhereUniqueInput
    update: XOR<UserInteractionUpdateWithoutTargetUserInput, UserInteractionUncheckedUpdateWithoutTargetUserInput>
    create: XOR<UserInteractionCreateWithoutTargetUserInput, UserInteractionUncheckedCreateWithoutTargetUserInput>
  }

  export type UserInteractionUpdateWithWhereUniqueWithoutTargetUserInput = {
    where: UserInteractionWhereUniqueInput
    data: XOR<UserInteractionUpdateWithoutTargetUserInput, UserInteractionUncheckedUpdateWithoutTargetUserInput>
  }

  export type UserInteractionUpdateManyWithWhereWithoutTargetUserInput = {
    where: UserInteractionScalarWhereInput
    data: XOR<UserInteractionUpdateManyMutationInput, UserInteractionUncheckedUpdateManyWithoutTargetUserInput>
  }

  export type UserInteractionScalarWhereInput = {
    AND?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
    OR?: UserInteractionScalarWhereInput[]
    NOT?: UserInteractionScalarWhereInput | UserInteractionScalarWhereInput[]
    id?: StringFilter<"UserInteraction"> | string
    userId?: StringFilter<"UserInteraction"> | string
    targetUserId?: StringNullableFilter<"UserInteraction"> | string | null
    postId?: StringNullableFilter<"UserInteraction"> | string | null
    type?: EnumInteractionTypeFilter<"UserInteraction"> | $Enums.InteractionType
    weight?: FloatFilter<"UserInteraction"> | number
    duration?: IntNullableFilter<"UserInteraction"> | number | null
    whatsappOpened?: BoolFilter<"UserInteraction"> | boolean
    deviceType?: StringNullableFilter<"UserInteraction"> | string | null
    source?: StringNullableFilter<"UserInteraction"> | string | null
    location?: StringNullableFilter<"UserInteraction"> | string | null
    sessionId?: StringNullableFilter<"UserInteraction"> | string | null
    userAgent?: StringNullableFilter<"UserInteraction"> | string | null
    metadata?: StringNullableFilter<"UserInteraction"> | string | null
    createdAt?: DateTimeFilter<"UserInteraction"> | Date | string
  }

  export type UserInteractionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserInteractionWhereUniqueInput
    update: XOR<UserInteractionUpdateWithoutUserInput, UserInteractionUncheckedUpdateWithoutUserInput>
    create: XOR<UserInteractionCreateWithoutUserInput, UserInteractionUncheckedCreateWithoutUserInput>
  }

  export type UserInteractionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserInteractionWhereUniqueInput
    data: XOR<UserInteractionUpdateWithoutUserInput, UserInteractionUncheckedUpdateWithoutUserInput>
  }

  export type UserInteractionUpdateManyWithWhereWithoutUserInput = {
    where: UserInteractionScalarWhereInput
    data: XOR<UserInteractionUpdateManyMutationInput, UserInteractionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserReputationUpsertWithoutUserInput = {
    update: XOR<UserReputationUpdateWithoutUserInput, UserReputationUncheckedUpdateWithoutUserInput>
    create: XOR<UserReputationCreateWithoutUserInput, UserReputationUncheckedCreateWithoutUserInput>
    where?: UserReputationWhereInput
  }

  export type UserReputationUpdateToOneWithWhereWithoutUserInput = {
    where?: UserReputationWhereInput
    data: XOR<UserReputationUpdateWithoutUserInput, UserReputationUncheckedUpdateWithoutUserInput>
  }

  export type UserReputationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserReputationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    overallScore?: FloatFieldUpdateOperationsInput | number
    responseRate?: FloatFieldUpdateOperationsInput | number
    averageResponseTime?: NullableIntFieldUpdateOperationsInput | number | null
    profileCompleteness?: FloatFieldUpdateOperationsInput | number
    trustScore?: FloatFieldUpdateOperationsInput | number
    totalViews?: IntFieldUpdateOperationsInput | number
    totalLikes?: IntFieldUpdateOperationsInput | number
    totalMessages?: IntFieldUpdateOperationsInput | number
    totalFavorites?: IntFieldUpdateOperationsInput | number
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    trendingScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    spamScore?: FloatFieldUpdateOperationsInput | number
    reportScore?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsUpsertWithoutUserInput = {
    update: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
    where?: UserSettingsWhereInput
  }

  export type UserSettingsUpdateToOneWithWhereWithoutUserInput = {
    where?: UserSettingsWhereInput
    data: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type UserSettingsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSettingsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    emailNotifications?: BoolFieldUpdateOperationsInput | boolean
    pushNotifications?: BoolFieldUpdateOperationsInput | boolean
    messageNotifications?: BoolFieldUpdateOperationsInput | boolean
    likeNotifications?: BoolFieldUpdateOperationsInput | boolean
    boostNotifications?: BoolFieldUpdateOperationsInput | boolean
    profileReminders?: BoolFieldUpdateOperationsInput | boolean
    verificationReminders?: BoolFieldUpdateOperationsInput | boolean
    showOnline?: BoolFieldUpdateOperationsInput | boolean
    showLastSeen?: BoolFieldUpdateOperationsInput | boolean
    allowDirectMessages?: BoolFieldUpdateOperationsInput | boolean
    showPhoneNumber?: BoolFieldUpdateOperationsInput | boolean
    showInDiscovery?: BoolFieldUpdateOperationsInput | boolean
    showInTrending?: BoolFieldUpdateOperationsInput | boolean
    showInSearch?: BoolFieldUpdateOperationsInput | boolean
    contentFilter?: EnumContentFilterLevelFieldUpdateOperationsInput | $Enums.ContentFilterLevel
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LocationUpsertWithoutUsersInput = {
    update: XOR<LocationUpdateWithoutUsersInput, LocationUncheckedUpdateWithoutUsersInput>
    create: XOR<LocationCreateWithoutUsersInput, LocationUncheckedCreateWithoutUsersInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutUsersInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutUsersInput, LocationUncheckedUpdateWithoutUsersInput>
  }

  export type LocationUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    posts?: PostUpdateManyWithoutLocationRefNestedInput
  }

  export type LocationUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    posts?: PostUncheckedUpdateManyWithoutLocationRefNestedInput
  }

  export type UserCreateWithoutReviewedAgencyRequestsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReviewedAgencyRequestsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReviewedAgencyRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewedAgencyRequestsInput, UserUncheckedCreateWithoutReviewedAgencyRequestsInput>
  }

  export type UserCreateWithoutAgencyRegistrationRequestInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutAgencyRegistrationRequestInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgencyRegistrationRequestInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyRegistrationRequestInput, UserUncheckedCreateWithoutAgencyRegistrationRequestInput>
  }

  export type UserUpsertWithoutReviewedAgencyRequestsInput = {
    update: XOR<UserUpdateWithoutReviewedAgencyRequestsInput, UserUncheckedUpdateWithoutReviewedAgencyRequestsInput>
    create: XOR<UserCreateWithoutReviewedAgencyRequestsInput, UserUncheckedCreateWithoutReviewedAgencyRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewedAgencyRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewedAgencyRequestsInput, UserUncheckedUpdateWithoutReviewedAgencyRequestsInput>
  }

  export type UserUpdateWithoutReviewedAgencyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewedAgencyRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutAgencyRegistrationRequestInput = {
    update: XOR<UserUpdateWithoutAgencyRegistrationRequestInput, UserUncheckedUpdateWithoutAgencyRegistrationRequestInput>
    create: XOR<UserCreateWithoutAgencyRegistrationRequestInput, UserUncheckedCreateWithoutAgencyRegistrationRequestInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgencyRegistrationRequestInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgencyRegistrationRequestInput, UserUncheckedUpdateWithoutAgencyRegistrationRequestInput>
  }

  export type UserUpdateWithoutAgencyRegistrationRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyRegistrationRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutSettingsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSettingsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
  }

  export type UserUpsertWithoutSettingsInput = {
    update: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
    create: XOR<UserCreateWithoutSettingsInput, UserUncheckedCreateWithoutSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSettingsInput, UserUncheckedUpdateWithoutSettingsInput>
  }

  export type UserUpdateWithoutSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutDeviceTokensInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutDeviceTokensInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutDeviceTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeviceTokensInput, UserUncheckedCreateWithoutDeviceTokensInput>
  }

  export type UserUpsertWithoutDeviceTokensInput = {
    update: XOR<UserUpdateWithoutDeviceTokensInput, UserUncheckedUpdateWithoutDeviceTokensInput>
    create: XOR<UserCreateWithoutDeviceTokensInput, UserUncheckedCreateWithoutDeviceTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeviceTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeviceTokensInput, UserUncheckedUpdateWithoutDeviceTokensInput>
  }

  export type UserUpdateWithoutDeviceTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutDeviceTokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutSearchHistoryInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSearchHistoryInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSearchHistoryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSearchHistoryInput, UserUncheckedCreateWithoutSearchHistoryInput>
  }

  export type UserUpsertWithoutSearchHistoryInput = {
    update: XOR<UserUpdateWithoutSearchHistoryInput, UserUncheckedUpdateWithoutSearchHistoryInput>
    create: XOR<UserCreateWithoutSearchHistoryInput, UserUncheckedCreateWithoutSearchHistoryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSearchHistoryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSearchHistoryInput, UserUncheckedUpdateWithoutSearchHistoryInput>
  }

  export type UserUpdateWithoutSearchHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSearchHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutBlockedByInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutBlockedByInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBlockedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBlockedByInput, UserUncheckedCreateWithoutBlockedByInput>
  }

  export type UserCreateWithoutBlockedUsersInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutBlockedUsersInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBlockedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBlockedUsersInput, UserUncheckedCreateWithoutBlockedUsersInput>
  }

  export type UserUpsertWithoutBlockedByInput = {
    update: XOR<UserUpdateWithoutBlockedByInput, UserUncheckedUpdateWithoutBlockedByInput>
    create: XOR<UserCreateWithoutBlockedByInput, UserUncheckedCreateWithoutBlockedByInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBlockedByInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBlockedByInput, UserUncheckedUpdateWithoutBlockedByInput>
  }

  export type UserUpdateWithoutBlockedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBlockedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutBlockedUsersInput = {
    update: XOR<UserUpdateWithoutBlockedUsersInput, UserUncheckedUpdateWithoutBlockedUsersInput>
    create: XOR<UserCreateWithoutBlockedUsersInput, UserUncheckedCreateWithoutBlockedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBlockedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBlockedUsersInput, UserUncheckedUpdateWithoutBlockedUsersInput>
  }

  export type UserUpdateWithoutBlockedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBlockedUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutIdentityVerificationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutIdentityVerificationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutIdentityVerificationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutIdentityVerificationInput, UserUncheckedCreateWithoutIdentityVerificationInput>
  }

  export type UserUpsertWithoutIdentityVerificationInput = {
    update: XOR<UserUpdateWithoutIdentityVerificationInput, UserUncheckedUpdateWithoutIdentityVerificationInput>
    create: XOR<UserCreateWithoutIdentityVerificationInput, UserUncheckedCreateWithoutIdentityVerificationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutIdentityVerificationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutIdentityVerificationInput, UserUncheckedUpdateWithoutIdentityVerificationInput>
  }

  export type UserUpdateWithoutIdentityVerificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutIdentityVerificationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type SubscriptionCreateWithoutPlanInput = {
    id?: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSubscriptionsInput
  }

  export type SubscriptionUncheckedCreateWithoutPlanInput = {
    id?: string
    userId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionCreateOrConnectWithoutPlanInput = {
    where: SubscriptionWhereUniqueInput
    create: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput>
  }

  export type SubscriptionCreateManyPlanInputEnvelope = {
    data: SubscriptionCreateManyPlanInput | SubscriptionCreateManyPlanInput[]
    skipDuplicates?: boolean
  }

  export type SubscriptionUpsertWithWhereUniqueWithoutPlanInput = {
    where: SubscriptionWhereUniqueInput
    update: XOR<SubscriptionUpdateWithoutPlanInput, SubscriptionUncheckedUpdateWithoutPlanInput>
    create: XOR<SubscriptionCreateWithoutPlanInput, SubscriptionUncheckedCreateWithoutPlanInput>
  }

  export type SubscriptionUpdateWithWhereUniqueWithoutPlanInput = {
    where: SubscriptionWhereUniqueInput
    data: XOR<SubscriptionUpdateWithoutPlanInput, SubscriptionUncheckedUpdateWithoutPlanInput>
  }

  export type SubscriptionUpdateManyWithWhereWithoutPlanInput = {
    where: SubscriptionScalarWhereInput
    data: XOR<SubscriptionUpdateManyMutationInput, SubscriptionUncheckedUpdateManyWithoutPlanInput>
  }

  export type SubscriptionPlanCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    userType: $Enums.UserType
    priority?: number
    maxPosts?: number | null
    maxImages?: number | null
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionPlanUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    name: string
    description: string
    price: number
    duration: number
    features: JsonNullValueInput | InputJsonValue
    isActive?: boolean
    userType: $Enums.UserType
    priority?: number
    maxPosts?: number | null
    maxImages?: number | null
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionPlanCreateOrConnectWithoutSubscriptionsInput = {
    where: SubscriptionPlanWhereUniqueInput
    create: XOR<SubscriptionPlanCreateWithoutSubscriptionsInput, SubscriptionPlanUncheckedCreateWithoutSubscriptionsInput>
  }

  export type UserCreateWithoutSubscriptionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSubscriptionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSubscriptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
  }

  export type SubscriptionPlanUpsertWithoutSubscriptionsInput = {
    update: XOR<SubscriptionPlanUpdateWithoutSubscriptionsInput, SubscriptionPlanUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<SubscriptionPlanCreateWithoutSubscriptionsInput, SubscriptionPlanUncheckedCreateWithoutSubscriptionsInput>
    where?: SubscriptionPlanWhereInput
  }

  export type SubscriptionPlanUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: SubscriptionPlanWhereInput
    data: XOR<SubscriptionPlanUpdateWithoutSubscriptionsInput, SubscriptionPlanUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type SubscriptionPlanUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionPlanUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    duration?: IntFieldUpdateOperationsInput | number
    features?: JsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    priority?: IntFieldUpdateOperationsInput | number
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    maxImages?: NullableIntFieldUpdateOperationsInput | number | null
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutSubscriptionsInput = {
    update: XOR<UserUpdateWithoutSubscriptionsInput, UserUncheckedUpdateWithoutSubscriptionsInput>
    create: XOR<UserCreateWithoutSubscriptionsInput, UserUncheckedCreateWithoutSubscriptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSubscriptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSubscriptionsInput, UserUncheckedUpdateWithoutSubscriptionsInput>
  }

  export type UserUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSubscriptionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PostTagCreateWithoutTagInput = {
    id?: string
    createdAt?: Date | string
    post: PostCreateNestedOneWithoutTagsInput
  }

  export type PostTagUncheckedCreateWithoutTagInput = {
    id?: string
    postId: string
    createdAt?: Date | string
  }

  export type PostTagCreateOrConnectWithoutTagInput = {
    where: PostTagWhereUniqueInput
    create: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput>
  }

  export type PostTagCreateManyTagInputEnvelope = {
    data: PostTagCreateManyTagInput | PostTagCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type PostTagUpsertWithWhereUniqueWithoutTagInput = {
    where: PostTagWhereUniqueInput
    update: XOR<PostTagUpdateWithoutTagInput, PostTagUncheckedUpdateWithoutTagInput>
    create: XOR<PostTagCreateWithoutTagInput, PostTagUncheckedCreateWithoutTagInput>
  }

  export type PostTagUpdateWithWhereUniqueWithoutTagInput = {
    where: PostTagWhereUniqueInput
    data: XOR<PostTagUpdateWithoutTagInput, PostTagUncheckedUpdateWithoutTagInput>
  }

  export type PostTagUpdateManyWithWhereWithoutTagInput = {
    where: PostTagScalarWhereInput
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyWithoutTagInput>
  }

  export type PostTagScalarWhereInput = {
    AND?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
    OR?: PostTagScalarWhereInput[]
    NOT?: PostTagScalarWhereInput | PostTagScalarWhereInput[]
    id?: StringFilter<"PostTag"> | string
    postId?: StringFilter<"PostTag"> | string
    tagId?: StringFilter<"PostTag"> | string
    createdAt?: DateTimeFilter<"PostTag"> | Date | string
  }

  export type PostCreateWithoutTagsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutTagsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutTagsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
  }

  export type TagCreateWithoutPostsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    color?: string | null
    icon?: string | null
    isActive?: boolean
    usageCount?: number
    category?: $Enums.TagCategory
    priority?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TagUncheckedCreateWithoutPostsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    color?: string | null
    icon?: string | null
    isActive?: boolean
    usageCount?: number
    category?: $Enums.TagCategory
    priority?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TagCreateOrConnectWithoutPostsInput = {
    where: TagWhereUniqueInput
    create: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
  }

  export type PostUpsertWithoutTagsInput = {
    update: XOR<PostUpdateWithoutTagsInput, PostUncheckedUpdateWithoutTagsInput>
    create: XOR<PostCreateWithoutTagsInput, PostUncheckedCreateWithoutTagsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutTagsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutTagsInput, PostUncheckedUpdateWithoutTagsInput>
  }

  export type PostUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutTagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type TagUpsertWithoutPostsInput = {
    update: XOR<TagUpdateWithoutPostsInput, TagUncheckedUpdateWithoutPostsInput>
    create: XOR<TagCreateWithoutPostsInput, TagUncheckedCreateWithoutPostsInput>
    where?: TagWhereInput
  }

  export type TagUpdateToOneWithWhereWithoutPostsInput = {
    where?: TagWhereInput
    data: XOR<TagUpdateWithoutPostsInput, TagUncheckedUpdateWithoutPostsInput>
  }

  export type TagUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TagUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    color?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    usageCount?: IntFieldUpdateOperationsInput | number
    category?: EnumTagCategoryFieldUpdateOperationsInput | $Enums.TagCategory
    priority?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutAdminInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutAdminInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAdminInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAdminInput, UserUncheckedCreateWithoutAdminInput>
  }

  export type UserUpsertWithoutAdminInput = {
    update: XOR<UserUpdateWithoutAdminInput, UserUncheckedUpdateWithoutAdminInput>
    create: XOR<UserCreateWithoutAdminInput, UserUncheckedCreateWithoutAdminInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAdminInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAdminInput, UserUncheckedUpdateWithoutAdminInput>
  }

  export type UserUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAdminInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutReputationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReputationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReputationInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReputationInput, UserUncheckedCreateWithoutReputationInput>
  }

  export type UserUpsertWithoutReputationInput = {
    update: XOR<UserUpdateWithoutReputationInput, UserUncheckedUpdateWithoutReputationInput>
    create: XOR<UserCreateWithoutReputationInput, UserUncheckedCreateWithoutReputationInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReputationInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReputationInput, UserUncheckedUpdateWithoutReputationInput>
  }

  export type UserUpdateWithoutReputationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReputationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type AgencyInvitationCreateWithoutEscortInput = {
    id?: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutInvitationsInput
  }

  export type AgencyInvitationUncheckedCreateWithoutEscortInput = {
    id?: string
    agencyId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationCreateOrConnectWithoutEscortInput = {
    where: AgencyInvitationWhereUniqueInput
    create: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput>
  }

  export type AgencyInvitationCreateManyEscortInputEnvelope = {
    data: AgencyInvitationCreateManyEscortInput | AgencyInvitationCreateManyEscortInput[]
    skipDuplicates?: boolean
  }

  export type AgencyMembershipCreateWithoutEscortInput = {
    id?: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutMembershipsInput
  }

  export type AgencyMembershipUncheckedCreateWithoutEscortInput = {
    id?: string
    agencyId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipCreateOrConnectWithoutEscortInput = {
    where: AgencyMembershipWhereUniqueInput
    create: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput>
  }

  export type AgencyMembershipCreateManyEscortInputEnvelope = {
    data: AgencyMembershipCreateManyEscortInput | AgencyMembershipCreateManyEscortInput[]
    skipDuplicates?: boolean
  }

  export type ClientReviewCreateWithoutEscortInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutClientReviewsInput
  }

  export type ClientReviewUncheckedCreateWithoutEscortInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    clientId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ClientReviewCreateOrConnectWithoutEscortInput = {
    where: ClientReviewWhereUniqueInput
    create: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput>
  }

  export type ClientReviewCreateManyEscortInputEnvelope = {
    data: ClientReviewCreateManyEscortInput | ClientReviewCreateManyEscortInput[]
    skipDuplicates?: boolean
  }

  export type EscortVerificationCreateWithoutEscortInput = {
    id?: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutVerificationsInput
    pricing: VerificationPricingCreateNestedOneWithoutVerificationsInput
  }

  export type EscortVerificationUncheckedCreateWithoutEscortInput = {
    id?: string
    agencyId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationCreateOrConnectWithoutEscortInput = {
    where: EscortVerificationWhereUniqueInput
    create: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput>
  }

  export type EscortVerificationCreateManyEscortInputEnvelope = {
    data: EscortVerificationCreateManyEscortInput | EscortVerificationCreateManyEscortInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutEscortInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutEscortInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutEscortInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEscortInput, UserUncheckedCreateWithoutEscortInput>
  }

  export type ReviewCreateWithoutAuthorInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    target: EscortCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutAuthorInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    targetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReviewCreateOrConnectWithoutAuthorInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput>
  }

  export type ReviewCreateManyAuthorInputEnvelope = {
    data: ReviewCreateManyAuthorInput | ReviewCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutTargetInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    author: EscortCreateNestedOneWithoutReviewsGivenInput
  }

  export type ReviewUncheckedCreateWithoutTargetInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    authorId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReviewCreateOrConnectWithoutTargetInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput>
  }

  export type ReviewCreateManyTargetInputEnvelope = {
    data: ReviewCreateManyTargetInput | ReviewCreateManyTargetInput[]
    skipDuplicates?: boolean
  }

  export type AgencyInvitationUpsertWithWhereUniqueWithoutEscortInput = {
    where: AgencyInvitationWhereUniqueInput
    update: XOR<AgencyInvitationUpdateWithoutEscortInput, AgencyInvitationUncheckedUpdateWithoutEscortInput>
    create: XOR<AgencyInvitationCreateWithoutEscortInput, AgencyInvitationUncheckedCreateWithoutEscortInput>
  }

  export type AgencyInvitationUpdateWithWhereUniqueWithoutEscortInput = {
    where: AgencyInvitationWhereUniqueInput
    data: XOR<AgencyInvitationUpdateWithoutEscortInput, AgencyInvitationUncheckedUpdateWithoutEscortInput>
  }

  export type AgencyInvitationUpdateManyWithWhereWithoutEscortInput = {
    where: AgencyInvitationScalarWhereInput
    data: XOR<AgencyInvitationUpdateManyMutationInput, AgencyInvitationUncheckedUpdateManyWithoutEscortInput>
  }

  export type AgencyInvitationScalarWhereInput = {
    AND?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
    OR?: AgencyInvitationScalarWhereInput[]
    NOT?: AgencyInvitationScalarWhereInput | AgencyInvitationScalarWhereInput[]
    id?: StringFilter<"AgencyInvitation"> | string
    agencyId?: StringFilter<"AgencyInvitation"> | string
    escortId?: StringFilter<"AgencyInvitation"> | string
    status?: EnumInvitationStatusFilter<"AgencyInvitation"> | $Enums.InvitationStatus
    message?: StringNullableFilter<"AgencyInvitation"> | string | null
    proposedCommission?: FloatNullableFilter<"AgencyInvitation"> | number | null
    proposedRole?: EnumAgencyRoleFilter<"AgencyInvitation"> | $Enums.AgencyRole
    proposedBenefits?: JsonNullableFilter<"AgencyInvitation">
    invitedBy?: StringFilter<"AgencyInvitation"> | string
    respondedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    expiresAt?: DateTimeFilter<"AgencyInvitation"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyInvitation"> | Date | string | null
  }

  export type AgencyMembershipUpsertWithWhereUniqueWithoutEscortInput = {
    where: AgencyMembershipWhereUniqueInput
    update: XOR<AgencyMembershipUpdateWithoutEscortInput, AgencyMembershipUncheckedUpdateWithoutEscortInput>
    create: XOR<AgencyMembershipCreateWithoutEscortInput, AgencyMembershipUncheckedCreateWithoutEscortInput>
  }

  export type AgencyMembershipUpdateWithWhereUniqueWithoutEscortInput = {
    where: AgencyMembershipWhereUniqueInput
    data: XOR<AgencyMembershipUpdateWithoutEscortInput, AgencyMembershipUncheckedUpdateWithoutEscortInput>
  }

  export type AgencyMembershipUpdateManyWithWhereWithoutEscortInput = {
    where: AgencyMembershipScalarWhereInput
    data: XOR<AgencyMembershipUpdateManyMutationInput, AgencyMembershipUncheckedUpdateManyWithoutEscortInput>
  }

  export type AgencyMembershipScalarWhereInput = {
    AND?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
    OR?: AgencyMembershipScalarWhereInput[]
    NOT?: AgencyMembershipScalarWhereInput | AgencyMembershipScalarWhereInput[]
    id?: StringFilter<"AgencyMembership"> | string
    escortId?: StringFilter<"AgencyMembership"> | string
    agencyId?: StringFilter<"AgencyMembership"> | string
    status?: EnumMembershipStatusFilter<"AgencyMembership"> | $Enums.MembershipStatus
    role?: EnumAgencyRoleFilter<"AgencyMembership"> | $Enums.AgencyRole
    commissionRate?: FloatNullableFilter<"AgencyMembership"> | number | null
    canPostForAgency?: BoolFilter<"AgencyMembership"> | boolean
    canManageEscorts?: BoolFilter<"AgencyMembership"> | boolean
    canAccessFinances?: BoolFilter<"AgencyMembership"> | boolean
    approvedBy?: StringNullableFilter<"AgencyMembership"> | string | null
    approvedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
    createdAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    updatedAt?: DateTimeFilter<"AgencyMembership"> | Date | string
    deletedAt?: DateTimeNullableFilter<"AgencyMembership"> | Date | string | null
  }

  export type ClientReviewUpsertWithWhereUniqueWithoutEscortInput = {
    where: ClientReviewWhereUniqueInput
    update: XOR<ClientReviewUpdateWithoutEscortInput, ClientReviewUncheckedUpdateWithoutEscortInput>
    create: XOR<ClientReviewCreateWithoutEscortInput, ClientReviewUncheckedCreateWithoutEscortInput>
  }

  export type ClientReviewUpdateWithWhereUniqueWithoutEscortInput = {
    where: ClientReviewWhereUniqueInput
    data: XOR<ClientReviewUpdateWithoutEscortInput, ClientReviewUncheckedUpdateWithoutEscortInput>
  }

  export type ClientReviewUpdateManyWithWhereWithoutEscortInput = {
    where: ClientReviewScalarWhereInput
    data: XOR<ClientReviewUpdateManyMutationInput, ClientReviewUncheckedUpdateManyWithoutEscortInput>
  }

  export type ClientReviewScalarWhereInput = {
    AND?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
    OR?: ClientReviewScalarWhereInput[]
    NOT?: ClientReviewScalarWhereInput | ClientReviewScalarWhereInput[]
    id?: StringFilter<"ClientReview"> | string
    rating?: IntFilter<"ClientReview"> | number
    comment?: StringNullableFilter<"ClientReview"> | string | null
    communication?: IntNullableFilter<"ClientReview"> | number | null
    punctuality?: IntNullableFilter<"ClientReview"> | number | null
    appearance?: IntNullableFilter<"ClientReview"> | number | null
    overall?: IntNullableFilter<"ClientReview"> | number | null
    service?: IntNullableFilter<"ClientReview"> | number | null
    value?: IntNullableFilter<"ClientReview"> | number | null
    isAnonymous?: BoolFilter<"ClientReview"> | boolean
    isVerified?: BoolFilter<"ClientReview"> | boolean
    clientId?: StringFilter<"ClientReview"> | string
    escortId?: StringFilter<"ClientReview"> | string
    createdAt?: DateTimeFilter<"ClientReview"> | Date | string
    updatedAt?: DateTimeFilter<"ClientReview"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ClientReview"> | Date | string | null
  }

  export type EscortVerificationUpsertWithWhereUniqueWithoutEscortInput = {
    where: EscortVerificationWhereUniqueInput
    update: XOR<EscortVerificationUpdateWithoutEscortInput, EscortVerificationUncheckedUpdateWithoutEscortInput>
    create: XOR<EscortVerificationCreateWithoutEscortInput, EscortVerificationUncheckedCreateWithoutEscortInput>
  }

  export type EscortVerificationUpdateWithWhereUniqueWithoutEscortInput = {
    where: EscortVerificationWhereUniqueInput
    data: XOR<EscortVerificationUpdateWithoutEscortInput, EscortVerificationUncheckedUpdateWithoutEscortInput>
  }

  export type EscortVerificationUpdateManyWithWhereWithoutEscortInput = {
    where: EscortVerificationScalarWhereInput
    data: XOR<EscortVerificationUpdateManyMutationInput, EscortVerificationUncheckedUpdateManyWithoutEscortInput>
  }

  export type EscortVerificationScalarWhereInput = {
    AND?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
    OR?: EscortVerificationScalarWhereInput[]
    NOT?: EscortVerificationScalarWhereInput | EscortVerificationScalarWhereInput[]
    id?: StringFilter<"EscortVerification"> | string
    agencyId?: StringFilter<"EscortVerification"> | string
    escortId?: StringFilter<"EscortVerification"> | string
    pricingId?: StringFilter<"EscortVerification"> | string
    status?: EnumVerificationStatusFilter<"EscortVerification"> | $Enums.VerificationStatus
    membershipId?: StringNullableFilter<"EscortVerification"> | string | null
    startsAt?: DateTimeFilter<"EscortVerification"> | Date | string
    expiresAt?: DateTimeFilter<"EscortVerification"> | Date | string
    isAutoRenewal?: BoolFilter<"EscortVerification"> | boolean
    reminderSent?: BoolFilter<"EscortVerification"> | boolean
    documentsSubmitted?: JsonNullableFilter<"EscortVerification">
    verificationNotes?: StringNullableFilter<"EscortVerification"> | string | null
    rejectionReason?: StringNullableFilter<"EscortVerification"> | string | null
    verificationSteps?: JsonNullableFilter<"EscortVerification">
    verifiedBy?: StringNullableFilter<"EscortVerification"> | string | null
    createdAt?: DateTimeFilter<"EscortVerification"> | Date | string
    completedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"EscortVerification"> | Date | string | null
  }

  export type UserUpsertWithoutEscortInput = {
    update: XOR<UserUpdateWithoutEscortInput, UserUncheckedUpdateWithoutEscortInput>
    create: XOR<UserCreateWithoutEscortInput, UserUncheckedCreateWithoutEscortInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEscortInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEscortInput, UserUncheckedUpdateWithoutEscortInput>
  }

  export type UserUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type ReviewUpsertWithWhereUniqueWithoutAuthorInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutAuthorInput, ReviewUncheckedUpdateWithoutAuthorInput>
    create: XOR<ReviewCreateWithoutAuthorInput, ReviewUncheckedCreateWithoutAuthorInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutAuthorInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutAuthorInput, ReviewUncheckedUpdateWithoutAuthorInput>
  }

  export type ReviewUpdateManyWithWhereWithoutAuthorInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutAuthorInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    comment?: StringNullableFilter<"Review"> | string | null
    professionalism?: IntNullableFilter<"Review"> | number | null
    communication?: IntNullableFilter<"Review"> | number | null
    reliability?: IntNullableFilter<"Review"> | number | null
    appearance?: IntNullableFilter<"Review"> | number | null
    service?: IntNullableFilter<"Review"> | number | null
    isAnonymous?: BoolFilter<"Review"> | boolean
    isVerified?: BoolFilter<"Review"> | boolean
    helpfulVotes?: IntFilter<"Review"> | number
    authorId?: StringFilter<"Review"> | string
    targetId?: StringFilter<"Review"> | string
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
  }

  export type ReviewUpsertWithWhereUniqueWithoutTargetInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutTargetInput, ReviewUncheckedUpdateWithoutTargetInput>
    create: XOR<ReviewCreateWithoutTargetInput, ReviewUncheckedCreateWithoutTargetInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutTargetInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutTargetInput, ReviewUncheckedUpdateWithoutTargetInput>
  }

  export type ReviewUpdateManyWithWhereWithoutTargetInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutTargetInput>
  }

  export type UserCreateWithoutAgencyInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutAgencyInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAgencyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInvitationCreateWithoutAgencyInput = {
    id?: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    escort: EscortCreateNestedOneWithoutAgencyInvitationsInput
  }

  export type AgencyInvitationUncheckedCreateWithoutAgencyInput = {
    id?: string
    escortId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationCreateOrConnectWithoutAgencyInput = {
    where: AgencyInvitationWhereUniqueInput
    create: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInvitationCreateManyAgencyInputEnvelope = {
    data: AgencyInvitationCreateManyAgencyInput | AgencyInvitationCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type AgencyMembershipCreateWithoutAgencyInput = {
    id?: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    escort: EscortCreateNestedOneWithoutAgencyMembershipsInput
  }

  export type AgencyMembershipUncheckedCreateWithoutAgencyInput = {
    id?: string
    escortId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipCreateOrConnectWithoutAgencyInput = {
    where: AgencyMembershipWhereUniqueInput
    create: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyMembershipCreateManyAgencyInputEnvelope = {
    data: AgencyMembershipCreateManyAgencyInput | AgencyMembershipCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type EscortVerificationCreateWithoutAgencyInput = {
    id?: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
    escort: EscortCreateNestedOneWithoutVerificationsInput
    pricing: VerificationPricingCreateNestedOneWithoutVerificationsInput
  }

  export type EscortVerificationUncheckedCreateWithoutAgencyInput = {
    id?: string
    escortId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationCreateOrConnectWithoutAgencyInput = {
    where: EscortVerificationWhereUniqueInput
    create: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput>
  }

  export type EscortVerificationCreateManyAgencyInputEnvelope = {
    data: EscortVerificationCreateManyAgencyInput | EscortVerificationCreateManyAgencyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutAgencyInput = {
    update: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
    create: XOR<UserCreateWithoutAgencyInput, UserUncheckedCreateWithoutAgencyInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgencyInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgencyInput, UserUncheckedUpdateWithoutAgencyInput>
  }

  export type UserUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type AgencyInvitationUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyInvitationWhereUniqueInput
    update: XOR<AgencyInvitationUpdateWithoutAgencyInput, AgencyInvitationUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyInvitationCreateWithoutAgencyInput, AgencyInvitationUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyInvitationUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyInvitationWhereUniqueInput
    data: XOR<AgencyInvitationUpdateWithoutAgencyInput, AgencyInvitationUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyInvitationUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyInvitationScalarWhereInput
    data: XOR<AgencyInvitationUpdateManyMutationInput, AgencyInvitationUncheckedUpdateManyWithoutAgencyInput>
  }

  export type AgencyMembershipUpsertWithWhereUniqueWithoutAgencyInput = {
    where: AgencyMembershipWhereUniqueInput
    update: XOR<AgencyMembershipUpdateWithoutAgencyInput, AgencyMembershipUncheckedUpdateWithoutAgencyInput>
    create: XOR<AgencyMembershipCreateWithoutAgencyInput, AgencyMembershipUncheckedCreateWithoutAgencyInput>
  }

  export type AgencyMembershipUpdateWithWhereUniqueWithoutAgencyInput = {
    where: AgencyMembershipWhereUniqueInput
    data: XOR<AgencyMembershipUpdateWithoutAgencyInput, AgencyMembershipUncheckedUpdateWithoutAgencyInput>
  }

  export type AgencyMembershipUpdateManyWithWhereWithoutAgencyInput = {
    where: AgencyMembershipScalarWhereInput
    data: XOR<AgencyMembershipUpdateManyMutationInput, AgencyMembershipUncheckedUpdateManyWithoutAgencyInput>
  }

  export type EscortVerificationUpsertWithWhereUniqueWithoutAgencyInput = {
    where: EscortVerificationWhereUniqueInput
    update: XOR<EscortVerificationUpdateWithoutAgencyInput, EscortVerificationUncheckedUpdateWithoutAgencyInput>
    create: XOR<EscortVerificationCreateWithoutAgencyInput, EscortVerificationUncheckedCreateWithoutAgencyInput>
  }

  export type EscortVerificationUpdateWithWhereUniqueWithoutAgencyInput = {
    where: EscortVerificationWhereUniqueInput
    data: XOR<EscortVerificationUpdateWithoutAgencyInput, EscortVerificationUncheckedUpdateWithoutAgencyInput>
  }

  export type EscortVerificationUpdateManyWithWhereWithoutAgencyInput = {
    where: EscortVerificationScalarWhereInput
    data: XOR<EscortVerificationUpdateManyMutationInput, EscortVerificationUncheckedUpdateManyWithoutAgencyInput>
  }

  export type ClientReviewCreateWithoutClientInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    escort: EscortCreateNestedOneWithoutClientReviewsInput
  }

  export type ClientReviewUncheckedCreateWithoutClientInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    escortId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ClientReviewCreateOrConnectWithoutClientInput = {
    where: ClientReviewWhereUniqueInput
    create: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput>
  }

  export type ClientReviewCreateManyClientInputEnvelope = {
    data: ClientReviewCreateManyClientInput | ClientReviewCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutClientInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutClientInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutClientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutClientInput, UserUncheckedCreateWithoutClientInput>
  }

  export type PaymentCreateWithoutClientInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type PaymentUncheckedCreateWithoutClientInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type PaymentCreateOrConnectWithoutClientInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput>
  }

  export type PaymentCreateManyClientInputEnvelope = {
    data: PaymentCreateManyClientInput | PaymentCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PointTransactionCreateWithoutClientInput = {
    id?: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
  }

  export type PointTransactionUncheckedCreateWithoutClientInput = {
    id?: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
  }

  export type PointTransactionCreateOrConnectWithoutClientInput = {
    where: PointTransactionWhereUniqueInput
    create: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput>
  }

  export type PointTransactionCreateManyClientInputEnvelope = {
    data: PointTransactionCreateManyClientInput | PointTransactionCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PointsHistoryCreateWithoutClientInput = {
    id?: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
  }

  export type PointsHistoryUncheckedCreateWithoutClientInput = {
    id?: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
  }

  export type PointsHistoryCreateOrConnectWithoutClientInput = {
    where: PointsHistoryWhereUniqueInput
    create: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput>
  }

  export type PointsHistoryCreateManyClientInputEnvelope = {
    data: PointsHistoryCreateManyClientInput | PointsHistoryCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PointsPurchaseCreateWithoutClientInput = {
    id?: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    package: PointsPackageCreateNestedOneWithoutPurchasesInput
  }

  export type PointsPurchaseUncheckedCreateWithoutClientInput = {
    id?: string
    packageId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PointsPurchaseCreateOrConnectWithoutClientInput = {
    where: PointsPurchaseWhereUniqueInput
    create: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput>
  }

  export type PointsPurchaseCreateManyClientInputEnvelope = {
    data: PointsPurchaseCreateManyClientInput | PointsPurchaseCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type PremiumActivationCreateWithoutClientInput = {
    id?: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
  }

  export type PremiumActivationUncheckedCreateWithoutClientInput = {
    id?: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
  }

  export type PremiumActivationCreateOrConnectWithoutClientInput = {
    where: PremiumActivationWhereUniqueInput
    create: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput>
  }

  export type PremiumActivationCreateManyClientInputEnvelope = {
    data: PremiumActivationCreateManyClientInput | PremiumActivationCreateManyClientInput[]
    skipDuplicates?: boolean
  }

  export type ClientReviewUpsertWithWhereUniqueWithoutClientInput = {
    where: ClientReviewWhereUniqueInput
    update: XOR<ClientReviewUpdateWithoutClientInput, ClientReviewUncheckedUpdateWithoutClientInput>
    create: XOR<ClientReviewCreateWithoutClientInput, ClientReviewUncheckedCreateWithoutClientInput>
  }

  export type ClientReviewUpdateWithWhereUniqueWithoutClientInput = {
    where: ClientReviewWhereUniqueInput
    data: XOR<ClientReviewUpdateWithoutClientInput, ClientReviewUncheckedUpdateWithoutClientInput>
  }

  export type ClientReviewUpdateManyWithWhereWithoutClientInput = {
    where: ClientReviewScalarWhereInput
    data: XOR<ClientReviewUpdateManyMutationInput, ClientReviewUncheckedUpdateManyWithoutClientInput>
  }

  export type UserUpsertWithoutClientInput = {
    update: XOR<UserUpdateWithoutClientInput, UserUncheckedUpdateWithoutClientInput>
    create: XOR<UserCreateWithoutClientInput, UserUncheckedCreateWithoutClientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutClientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutClientInput, UserUncheckedUpdateWithoutClientInput>
  }

  export type UserUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PaymentUpsertWithWhereUniqueWithoutClientInput = {
    where: PaymentWhereUniqueInput
    update: XOR<PaymentUpdateWithoutClientInput, PaymentUncheckedUpdateWithoutClientInput>
    create: XOR<PaymentCreateWithoutClientInput, PaymentUncheckedCreateWithoutClientInput>
  }

  export type PaymentUpdateWithWhereUniqueWithoutClientInput = {
    where: PaymentWhereUniqueInput
    data: XOR<PaymentUpdateWithoutClientInput, PaymentUncheckedUpdateWithoutClientInput>
  }

  export type PaymentUpdateManyWithWhereWithoutClientInput = {
    where: PaymentScalarWhereInput
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyWithoutClientInput>
  }

  export type PaymentScalarWhereInput = {
    AND?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    OR?: PaymentScalarWhereInput[]
    NOT?: PaymentScalarWhereInput | PaymentScalarWhereInput[]
    id?: StringFilter<"Payment"> | string
    amount?: FloatFilter<"Payment"> | number
    currency?: StringFilter<"Payment"> | string
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    type?: EnumPaymentTypeFilter<"Payment"> | $Enums.PaymentType
    description?: StringNullableFilter<"Payment"> | string | null
    stripePaymentId?: StringNullableFilter<"Payment"> | string | null
    metadata?: JsonNullableFilter<"Payment">
    failureReason?: StringNullableFilter<"Payment"> | string | null
    refundReason?: StringNullableFilter<"Payment"> | string | null
    processorFee?: FloatNullableFilter<"Payment"> | number | null
    netAmount?: FloatNullableFilter<"Payment"> | number | null
    taxAmount?: FloatNullableFilter<"Payment"> | number | null
    taxRate?: FloatNullableFilter<"Payment"> | number | null
    clientId?: StringNullableFilter<"Payment"> | string | null
    escortId?: StringNullableFilter<"Payment"> | string | null
    agencyId?: StringNullableFilter<"Payment"> | string | null
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Payment"> | Date | string | null
  }

  export type PointTransactionUpsertWithWhereUniqueWithoutClientInput = {
    where: PointTransactionWhereUniqueInput
    update: XOR<PointTransactionUpdateWithoutClientInput, PointTransactionUncheckedUpdateWithoutClientInput>
    create: XOR<PointTransactionCreateWithoutClientInput, PointTransactionUncheckedCreateWithoutClientInput>
  }

  export type PointTransactionUpdateWithWhereUniqueWithoutClientInput = {
    where: PointTransactionWhereUniqueInput
    data: XOR<PointTransactionUpdateWithoutClientInput, PointTransactionUncheckedUpdateWithoutClientInput>
  }

  export type PointTransactionUpdateManyWithWhereWithoutClientInput = {
    where: PointTransactionScalarWhereInput
    data: XOR<PointTransactionUpdateManyMutationInput, PointTransactionUncheckedUpdateManyWithoutClientInput>
  }

  export type PointTransactionScalarWhereInput = {
    AND?: PointTransactionScalarWhereInput | PointTransactionScalarWhereInput[]
    OR?: PointTransactionScalarWhereInput[]
    NOT?: PointTransactionScalarWhereInput | PointTransactionScalarWhereInput[]
    id?: StringFilter<"PointTransaction"> | string
    clientId?: StringFilter<"PointTransaction"> | string
    amount?: IntFilter<"PointTransaction"> | number
    type?: EnumPointTransactionTypeFilter<"PointTransaction"> | $Enums.PointTransactionType
    description?: StringNullableFilter<"PointTransaction"> | string | null
    cost?: FloatNullableFilter<"PointTransaction"> | number | null
    postId?: StringNullableFilter<"PointTransaction"> | string | null
    messageId?: StringNullableFilter<"PointTransaction"> | string | null
    paymentId?: StringNullableFilter<"PointTransaction"> | string | null
    purchaseId?: StringNullableFilter<"PointTransaction"> | string | null
    actionId?: StringNullableFilter<"PointTransaction"> | string | null
    balanceBefore?: IntFilter<"PointTransaction"> | number
    balanceAfter?: IntFilter<"PointTransaction"> | number
    metadata?: JsonNullableFilter<"PointTransaction">
    source?: StringNullableFilter<"PointTransaction"> | string | null
    createdAt?: DateTimeFilter<"PointTransaction"> | Date | string
  }

  export type PointsHistoryUpsertWithWhereUniqueWithoutClientInput = {
    where: PointsHistoryWhereUniqueInput
    update: XOR<PointsHistoryUpdateWithoutClientInput, PointsHistoryUncheckedUpdateWithoutClientInput>
    create: XOR<PointsHistoryCreateWithoutClientInput, PointsHistoryUncheckedCreateWithoutClientInput>
  }

  export type PointsHistoryUpdateWithWhereUniqueWithoutClientInput = {
    where: PointsHistoryWhereUniqueInput
    data: XOR<PointsHistoryUpdateWithoutClientInput, PointsHistoryUncheckedUpdateWithoutClientInput>
  }

  export type PointsHistoryUpdateManyWithWhereWithoutClientInput = {
    where: PointsHistoryScalarWhereInput
    data: XOR<PointsHistoryUpdateManyMutationInput, PointsHistoryUncheckedUpdateManyWithoutClientInput>
  }

  export type PointsHistoryScalarWhereInput = {
    AND?: PointsHistoryScalarWhereInput | PointsHistoryScalarWhereInput[]
    OR?: PointsHistoryScalarWhereInput[]
    NOT?: PointsHistoryScalarWhereInput | PointsHistoryScalarWhereInput[]
    id?: StringFilter<"PointsHistory"> | string
    clientId?: StringFilter<"PointsHistory"> | string
    type?: EnumPointTransactionTypeFilter<"PointsHistory"> | $Enums.PointTransactionType
    amount?: IntFilter<"PointsHistory"> | number
    description?: StringFilter<"PointsHistory"> | string
    balanceBefore?: IntFilter<"PointsHistory"> | number
    balanceAfter?: IntFilter<"PointsHistory"> | number
    metadata?: JsonNullableFilter<"PointsHistory">
    source?: StringNullableFilter<"PointsHistory"> | string | null
    purchaseId?: StringNullableFilter<"PointsHistory"> | string | null
    actionId?: StringNullableFilter<"PointsHistory"> | string | null
    createdAt?: DateTimeFilter<"PointsHistory"> | Date | string
  }

  export type PointsPurchaseUpsertWithWhereUniqueWithoutClientInput = {
    where: PointsPurchaseWhereUniqueInput
    update: XOR<PointsPurchaseUpdateWithoutClientInput, PointsPurchaseUncheckedUpdateWithoutClientInput>
    create: XOR<PointsPurchaseCreateWithoutClientInput, PointsPurchaseUncheckedCreateWithoutClientInput>
  }

  export type PointsPurchaseUpdateWithWhereUniqueWithoutClientInput = {
    where: PointsPurchaseWhereUniqueInput
    data: XOR<PointsPurchaseUpdateWithoutClientInput, PointsPurchaseUncheckedUpdateWithoutClientInput>
  }

  export type PointsPurchaseUpdateManyWithWhereWithoutClientInput = {
    where: PointsPurchaseScalarWhereInput
    data: XOR<PointsPurchaseUpdateManyMutationInput, PointsPurchaseUncheckedUpdateManyWithoutClientInput>
  }

  export type PointsPurchaseScalarWhereInput = {
    AND?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
    OR?: PointsPurchaseScalarWhereInput[]
    NOT?: PointsPurchaseScalarWhereInput | PointsPurchaseScalarWhereInput[]
    id?: StringFilter<"PointsPurchase"> | string
    clientId?: StringFilter<"PointsPurchase"> | string
    packageId?: StringFilter<"PointsPurchase"> | string
    pointsPurchased?: IntFilter<"PointsPurchase"> | number
    bonusPoints?: IntFilter<"PointsPurchase"> | number
    totalPoints?: IntFilter<"PointsPurchase"> | number
    amountPaid?: FloatFilter<"PointsPurchase"> | number
    status?: EnumPaymentStatusFilter<"PointsPurchase"> | $Enums.PaymentStatus
    stripePaymentId?: StringNullableFilter<"PointsPurchase"> | string | null
    createdAt?: DateTimeFilter<"PointsPurchase"> | Date | string
    completedAt?: DateTimeNullableFilter<"PointsPurchase"> | Date | string | null
  }

  export type PremiumActivationUpsertWithWhereUniqueWithoutClientInput = {
    where: PremiumActivationWhereUniqueInput
    update: XOR<PremiumActivationUpdateWithoutClientInput, PremiumActivationUncheckedUpdateWithoutClientInput>
    create: XOR<PremiumActivationCreateWithoutClientInput, PremiumActivationUncheckedCreateWithoutClientInput>
  }

  export type PremiumActivationUpdateWithWhereUniqueWithoutClientInput = {
    where: PremiumActivationWhereUniqueInput
    data: XOR<PremiumActivationUpdateWithoutClientInput, PremiumActivationUncheckedUpdateWithoutClientInput>
  }

  export type PremiumActivationUpdateManyWithWhereWithoutClientInput = {
    where: PremiumActivationScalarWhereInput
    data: XOR<PremiumActivationUpdateManyMutationInput, PremiumActivationUncheckedUpdateManyWithoutClientInput>
  }

  export type PremiumActivationScalarWhereInput = {
    AND?: PremiumActivationScalarWhereInput | PremiumActivationScalarWhereInput[]
    OR?: PremiumActivationScalarWhereInput[]
    NOT?: PremiumActivationScalarWhereInput | PremiumActivationScalarWhereInput[]
    id?: StringFilter<"PremiumActivation"> | string
    clientId?: StringFilter<"PremiumActivation"> | string
    tier?: EnumPremiumTierFilter<"PremiumActivation"> | $Enums.PremiumTier
    duration?: IntFilter<"PremiumActivation"> | number
    pointsCost?: IntFilter<"PremiumActivation"> | number
    activatedAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    expiresAt?: DateTimeFilter<"PremiumActivation"> | Date | string
    isActive?: BoolFilter<"PremiumActivation"> | boolean
    activatedBy?: StringFilter<"PremiumActivation"> | string
  }

  export type PointsPurchaseCreateWithoutPackageInput = {
    id?: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    client: ClientCreateNestedOneWithoutPointsPurchasesInput
  }

  export type PointsPurchaseUncheckedCreateWithoutPackageInput = {
    id?: string
    clientId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PointsPurchaseCreateOrConnectWithoutPackageInput = {
    where: PointsPurchaseWhereUniqueInput
    create: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput>
  }

  export type PointsPurchaseCreateManyPackageInputEnvelope = {
    data: PointsPurchaseCreateManyPackageInput | PointsPurchaseCreateManyPackageInput[]
    skipDuplicates?: boolean
  }

  export type PointsPurchaseUpsertWithWhereUniqueWithoutPackageInput = {
    where: PointsPurchaseWhereUniqueInput
    update: XOR<PointsPurchaseUpdateWithoutPackageInput, PointsPurchaseUncheckedUpdateWithoutPackageInput>
    create: XOR<PointsPurchaseCreateWithoutPackageInput, PointsPurchaseUncheckedCreateWithoutPackageInput>
  }

  export type PointsPurchaseUpdateWithWhereUniqueWithoutPackageInput = {
    where: PointsPurchaseWhereUniqueInput
    data: XOR<PointsPurchaseUpdateWithoutPackageInput, PointsPurchaseUncheckedUpdateWithoutPackageInput>
  }

  export type PointsPurchaseUpdateManyWithWhereWithoutPackageInput = {
    where: PointsPurchaseScalarWhereInput
    data: XOR<PointsPurchaseUpdateManyMutationInput, PointsPurchaseUncheckedUpdateManyWithoutPackageInput>
  }

  export type ClientCreateWithoutPointsPurchasesInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPointsPurchasesInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPointsPurchasesInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPointsPurchasesInput, ClientUncheckedCreateWithoutPointsPurchasesInput>
  }

  export type PointsPackageCreateWithoutPurchasesInput = {
    id?: string
    name: string
    points: number
    price: number
    bonus?: number
    isActive?: boolean
    isPopular?: boolean
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PointsPackageUncheckedCreateWithoutPurchasesInput = {
    id?: string
    name: string
    points: number
    price: number
    bonus?: number
    isActive?: boolean
    isPopular?: boolean
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PointsPackageCreateOrConnectWithoutPurchasesInput = {
    where: PointsPackageWhereUniqueInput
    create: XOR<PointsPackageCreateWithoutPurchasesInput, PointsPackageUncheckedCreateWithoutPurchasesInput>
  }

  export type ClientUpsertWithoutPointsPurchasesInput = {
    update: XOR<ClientUpdateWithoutPointsPurchasesInput, ClientUncheckedUpdateWithoutPointsPurchasesInput>
    create: XOR<ClientCreateWithoutPointsPurchasesInput, ClientUncheckedCreateWithoutPointsPurchasesInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPointsPurchasesInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPointsPurchasesInput, ClientUncheckedUpdateWithoutPointsPurchasesInput>
  }

  export type ClientUpdateWithoutPointsPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPointsPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type PointsPackageUpsertWithoutPurchasesInput = {
    update: XOR<PointsPackageUpdateWithoutPurchasesInput, PointsPackageUncheckedUpdateWithoutPurchasesInput>
    create: XOR<PointsPackageCreateWithoutPurchasesInput, PointsPackageUncheckedCreateWithoutPurchasesInput>
    where?: PointsPackageWhereInput
  }

  export type PointsPackageUpdateToOneWithWhereWithoutPurchasesInput = {
    where?: PointsPackageWhereInput
    data: XOR<PointsPackageUpdateWithoutPurchasesInput, PointsPackageUncheckedUpdateWithoutPurchasesInput>
  }

  export type PointsPackageUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsPackageUncheckedUpdateWithoutPurchasesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    bonus?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isPopular?: BoolFieldUpdateOperationsInput | boolean
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ClientCreateWithoutPointTransactionsInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPointTransactionsInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPointTransactionsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPointTransactionsInput, ClientUncheckedCreateWithoutPointTransactionsInput>
  }

  export type ClientUpsertWithoutPointTransactionsInput = {
    update: XOR<ClientUpdateWithoutPointTransactionsInput, ClientUncheckedUpdateWithoutPointTransactionsInput>
    create: XOR<ClientCreateWithoutPointTransactionsInput, ClientUncheckedCreateWithoutPointTransactionsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPointTransactionsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPointTransactionsInput, ClientUncheckedUpdateWithoutPointTransactionsInput>
  }

  export type ClientUpdateWithoutPointTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPointTransactionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateWithoutPointsHistoryInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPointsHistoryInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPointsHistoryInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPointsHistoryInput, ClientUncheckedCreateWithoutPointsHistoryInput>
  }

  export type ClientUpsertWithoutPointsHistoryInput = {
    update: XOR<ClientUpdateWithoutPointsHistoryInput, ClientUncheckedUpdateWithoutPointsHistoryInput>
    create: XOR<ClientCreateWithoutPointsHistoryInput, ClientUncheckedCreateWithoutPointsHistoryInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPointsHistoryInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPointsHistoryInput, ClientUncheckedUpdateWithoutPointsHistoryInput>
  }

  export type ClientUpdateWithoutPointsHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPointsHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateWithoutPremiumActivationsInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPremiumActivationsInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPremiumActivationsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPremiumActivationsInput, ClientUncheckedCreateWithoutPremiumActivationsInput>
  }

  export type ClientUpsertWithoutPremiumActivationsInput = {
    update: XOR<ClientUpdateWithoutPremiumActivationsInput, ClientUncheckedUpdateWithoutPremiumActivationsInput>
    create: XOR<ClientCreateWithoutPremiumActivationsInput, ClientUncheckedCreateWithoutPremiumActivationsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPremiumActivationsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPremiumActivationsInput, ClientUncheckedUpdateWithoutPremiumActivationsInput>
  }

  export type ClientUpdateWithoutPremiumActivationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPremiumActivationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
  }

  export type ClientCreateWithoutClientReviewsInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    user: UserCreateNestedOneWithoutClientInput
    payments?: PaymentCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutClientReviewsInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    payments?: PaymentUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutClientReviewsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutClientReviewsInput, ClientUncheckedCreateWithoutClientReviewsInput>
  }

  export type EscortCreateWithoutClientReviewsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutClientReviewsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutClientReviewsInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutClientReviewsInput, EscortUncheckedCreateWithoutClientReviewsInput>
  }

  export type ClientUpsertWithoutClientReviewsInput = {
    update: XOR<ClientUpdateWithoutClientReviewsInput, ClientUncheckedUpdateWithoutClientReviewsInput>
    create: XOR<ClientCreateWithoutClientReviewsInput, ClientUncheckedCreateWithoutClientReviewsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutClientReviewsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutClientReviewsInput, ClientUncheckedUpdateWithoutClientReviewsInput>
  }

  export type ClientUpdateWithoutClientReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    payments?: PaymentUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutClientReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    payments?: PaymentUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type EscortUpsertWithoutClientReviewsInput = {
    update: XOR<EscortUpdateWithoutClientReviewsInput, EscortUncheckedUpdateWithoutClientReviewsInput>
    create: XOR<EscortCreateWithoutClientReviewsInput, EscortUncheckedCreateWithoutClientReviewsInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutClientReviewsInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutClientReviewsInput, EscortUncheckedUpdateWithoutClientReviewsInput>
  }

  export type EscortUpdateWithoutClientReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutClientReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type BanAppealCreateWithoutBanInput = {
    id?: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
  }

  export type BanAppealUncheckedCreateWithoutBanInput = {
    id?: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
  }

  export type BanAppealCreateOrConnectWithoutBanInput = {
    where: BanAppealWhereUniqueInput
    create: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput>
  }

  export type BanAppealCreateManyBanInputEnvelope = {
    data: BanAppealCreateManyBanInput | BanAppealCreateManyBanInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutBanHistoryInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutBanHistoryInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBanHistoryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBanHistoryInput, UserUncheckedCreateWithoutBanHistoryInput>
  }

  export type BanAppealUpsertWithWhereUniqueWithoutBanInput = {
    where: BanAppealWhereUniqueInput
    update: XOR<BanAppealUpdateWithoutBanInput, BanAppealUncheckedUpdateWithoutBanInput>
    create: XOR<BanAppealCreateWithoutBanInput, BanAppealUncheckedCreateWithoutBanInput>
  }

  export type BanAppealUpdateWithWhereUniqueWithoutBanInput = {
    where: BanAppealWhereUniqueInput
    data: XOR<BanAppealUpdateWithoutBanInput, BanAppealUncheckedUpdateWithoutBanInput>
  }

  export type BanAppealUpdateManyWithWhereWithoutBanInput = {
    where: BanAppealScalarWhereInput
    data: XOR<BanAppealUpdateManyMutationInput, BanAppealUncheckedUpdateManyWithoutBanInput>
  }

  export type BanAppealScalarWhereInput = {
    AND?: BanAppealScalarWhereInput | BanAppealScalarWhereInput[]
    OR?: BanAppealScalarWhereInput[]
    NOT?: BanAppealScalarWhereInput | BanAppealScalarWhereInput[]
    id?: StringFilter<"BanAppeal"> | string
    banId?: StringFilter<"BanAppeal"> | string
    reason?: StringFilter<"BanAppeal"> | string
    evidence?: JsonNullableFilter<"BanAppeal">
    status?: EnumAppealStatusFilter<"BanAppeal"> | $Enums.AppealStatus
    reviewedBy?: StringNullableFilter<"BanAppeal"> | string | null
    reviewNotes?: StringNullableFilter<"BanAppeal"> | string | null
    createdAt?: DateTimeFilter<"BanAppeal"> | Date | string
    reviewedAt?: DateTimeNullableFilter<"BanAppeal"> | Date | string | null
  }

  export type UserUpsertWithoutBanHistoryInput = {
    update: XOR<UserUpdateWithoutBanHistoryInput, UserUncheckedUpdateWithoutBanHistoryInput>
    create: XOR<UserCreateWithoutBanHistoryInput, UserUncheckedCreateWithoutBanHistoryInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBanHistoryInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBanHistoryInput, UserUncheckedUpdateWithoutBanHistoryInput>
  }

  export type UserUpdateWithoutBanHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBanHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type BanCreateWithoutAppealsInput = {
    id?: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutBanHistoryInput
  }

  export type BanUncheckedCreateWithoutAppealsInput = {
    id?: string
    userId: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BanCreateOrConnectWithoutAppealsInput = {
    where: BanWhereUniqueInput
    create: XOR<BanCreateWithoutAppealsInput, BanUncheckedCreateWithoutAppealsInput>
  }

  export type BanUpsertWithoutAppealsInput = {
    update: XOR<BanUpdateWithoutAppealsInput, BanUncheckedUpdateWithoutAppealsInput>
    create: XOR<BanCreateWithoutAppealsInput, BanUncheckedCreateWithoutAppealsInput>
    where?: BanWhereInput
  }

  export type BanUpdateToOneWithWhereWithoutAppealsInput = {
    where?: BanWhereInput
    data: XOR<BanUpdateWithoutAppealsInput, BanUncheckedUpdateWithoutAppealsInput>
  }

  export type BanUpdateWithoutAppealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutBanHistoryNestedInput
  }

  export type BanUncheckedUpdateWithoutAppealsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostCreateWithoutInteractionsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutInteractionsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutInteractionsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutInteractionsInput, PostUncheckedCreateWithoutInteractionsInput>
  }

  export type UserCreateWithoutReceivedInteractionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReceivedInteractionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReceivedInteractionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedInteractionsInput, UserUncheckedCreateWithoutReceivedInteractionsInput>
  }

  export type UserCreateWithoutInteractionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutInteractionsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInteractionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInteractionsInput, UserUncheckedCreateWithoutInteractionsInput>
  }

  export type PostUpsertWithoutInteractionsInput = {
    update: XOR<PostUpdateWithoutInteractionsInput, PostUncheckedUpdateWithoutInteractionsInput>
    create: XOR<PostCreateWithoutInteractionsInput, PostUncheckedCreateWithoutInteractionsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutInteractionsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutInteractionsInput, PostUncheckedUpdateWithoutInteractionsInput>
  }

  export type PostUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutReceivedInteractionsInput = {
    update: XOR<UserUpdateWithoutReceivedInteractionsInput, UserUncheckedUpdateWithoutReceivedInteractionsInput>
    create: XOR<UserCreateWithoutReceivedInteractionsInput, UserUncheckedCreateWithoutReceivedInteractionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedInteractionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedInteractionsInput, UserUncheckedUpdateWithoutReceivedInteractionsInput>
  }

  export type UserUpdateWithoutReceivedInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutInteractionsInput = {
    update: XOR<UserUpdateWithoutInteractionsInput, UserUncheckedUpdateWithoutInteractionsInput>
    create: XOR<UserCreateWithoutInteractionsInput, UserUncheckedCreateWithoutInteractionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInteractionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInteractionsInput, UserUncheckedUpdateWithoutInteractionsInput>
  }

  export type UserUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutInteractionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutChatRateLimitsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutChatRateLimitsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutChatRateLimitsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChatRateLimitsInput, UserUncheckedCreateWithoutChatRateLimitsInput>
  }

  export type UserUpsertWithoutChatRateLimitsInput = {
    update: XOR<UserUpdateWithoutChatRateLimitsInput, UserUncheckedUpdateWithoutChatRateLimitsInput>
    create: XOR<UserCreateWithoutChatRateLimitsInput, UserUncheckedCreateWithoutChatRateLimitsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChatRateLimitsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChatRateLimitsInput, UserUncheckedUpdateWithoutChatRateLimitsInput>
  }

  export type UserUpdateWithoutChatRateLimitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutChatRateLimitsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type AgencyCreateWithoutMembershipsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    user: UserCreateNestedOneWithoutAgencyInput
    invitations?: AgencyInvitationCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutMembershipsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    invitations?: AgencyInvitationUncheckedCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutMembershipsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutMembershipsInput, AgencyUncheckedCreateWithoutMembershipsInput>
  }

  export type EscortCreateWithoutAgencyMembershipsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutAgencyMembershipsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutAgencyMembershipsInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutAgencyMembershipsInput, EscortUncheckedCreateWithoutAgencyMembershipsInput>
  }

  export type AgencyUpsertWithoutMembershipsInput = {
    update: XOR<AgencyUpdateWithoutMembershipsInput, AgencyUncheckedUpdateWithoutMembershipsInput>
    create: XOR<AgencyCreateWithoutMembershipsInput, AgencyUncheckedCreateWithoutMembershipsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutMembershipsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutMembershipsInput, AgencyUncheckedUpdateWithoutMembershipsInput>
  }

  export type AgencyUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutAgencyNestedInput
    invitations?: AgencyInvitationUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    invitations?: AgencyInvitationUncheckedUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type EscortUpsertWithoutAgencyMembershipsInput = {
    update: XOR<EscortUpdateWithoutAgencyMembershipsInput, EscortUncheckedUpdateWithoutAgencyMembershipsInput>
    create: XOR<EscortCreateWithoutAgencyMembershipsInput, EscortUncheckedCreateWithoutAgencyMembershipsInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutAgencyMembershipsInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutAgencyMembershipsInput, EscortUncheckedUpdateWithoutAgencyMembershipsInput>
  }

  export type EscortUpdateWithoutAgencyMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutAgencyMembershipsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type AgencyCreateWithoutInvitationsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    user: UserCreateNestedOneWithoutAgencyInput
    memberships?: AgencyMembershipCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutInvitationsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    memberships?: AgencyMembershipUncheckedCreateNestedManyWithoutAgencyInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutInvitationsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutInvitationsInput, AgencyUncheckedCreateWithoutInvitationsInput>
  }

  export type EscortCreateWithoutAgencyInvitationsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutAgencyInvitationsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutAgencyInvitationsInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutAgencyInvitationsInput, EscortUncheckedCreateWithoutAgencyInvitationsInput>
  }

  export type AgencyUpsertWithoutInvitationsInput = {
    update: XOR<AgencyUpdateWithoutInvitationsInput, AgencyUncheckedUpdateWithoutInvitationsInput>
    create: XOR<AgencyCreateWithoutInvitationsInput, AgencyUncheckedCreateWithoutInvitationsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutInvitationsInput, AgencyUncheckedUpdateWithoutInvitationsInput>
  }

  export type AgencyUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutAgencyNestedInput
    memberships?: AgencyMembershipUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    memberships?: AgencyMembershipUncheckedUpdateManyWithoutAgencyNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type EscortUpsertWithoutAgencyInvitationsInput = {
    update: XOR<EscortUpdateWithoutAgencyInvitationsInput, EscortUncheckedUpdateWithoutAgencyInvitationsInput>
    create: XOR<EscortCreateWithoutAgencyInvitationsInput, EscortUncheckedCreateWithoutAgencyInvitationsInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutAgencyInvitationsInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutAgencyInvitationsInput, EscortUncheckedUpdateWithoutAgencyInvitationsInput>
  }

  export type EscortUpdateWithoutAgencyInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutAgencyInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type AgencyCreateWithoutVerificationsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    user: UserCreateNestedOneWithoutAgencyInput
    invitations?: AgencyInvitationCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipCreateNestedManyWithoutAgencyInput
  }

  export type AgencyUncheckedCreateWithoutVerificationsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    companyName: string
    businessLicense?: string | null
    contactPerson: string
    address: string
    cedulaFrente?: string | null
    cedulaTrasera?: string | null
    verificationStatus?: $Enums.VerificationStatus
    taxId?: string | null
    maxPosts?: number | null
    totalEscorts?: number
    verifiedEscorts?: number
    totalVerifications?: number
    activeEscorts?: number
    defaultCommissionRate?: number
    invitations?: AgencyInvitationUncheckedCreateNestedManyWithoutAgencyInput
    memberships?: AgencyMembershipUncheckedCreateNestedManyWithoutAgencyInput
  }

  export type AgencyCreateOrConnectWithoutVerificationsInput = {
    where: AgencyWhereUniqueInput
    create: XOR<AgencyCreateWithoutVerificationsInput, AgencyUncheckedCreateWithoutVerificationsInput>
  }

  export type EscortCreateWithoutVerificationsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutVerificationsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutVerificationsInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutVerificationsInput, EscortUncheckedCreateWithoutVerificationsInput>
  }

  export type VerificationPricingCreateWithoutVerificationsInput = {
    id?: string
    name: string
    cost?: number
    description: string
    isActive?: boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationPricingUncheckedCreateWithoutVerificationsInput = {
    id?: string
    name: string
    cost?: number
    description: string
    isActive?: boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VerificationPricingCreateOrConnectWithoutVerificationsInput = {
    where: VerificationPricingWhereUniqueInput
    create: XOR<VerificationPricingCreateWithoutVerificationsInput, VerificationPricingUncheckedCreateWithoutVerificationsInput>
  }

  export type AgencyUpsertWithoutVerificationsInput = {
    update: XOR<AgencyUpdateWithoutVerificationsInput, AgencyUncheckedUpdateWithoutVerificationsInput>
    create: XOR<AgencyCreateWithoutVerificationsInput, AgencyUncheckedCreateWithoutVerificationsInput>
    where?: AgencyWhereInput
  }

  export type AgencyUpdateToOneWithWhereWithoutVerificationsInput = {
    where?: AgencyWhereInput
    data: XOR<AgencyUpdateWithoutVerificationsInput, AgencyUncheckedUpdateWithoutVerificationsInput>
  }

  export type AgencyUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutAgencyNestedInput
    invitations?: AgencyInvitationUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUpdateManyWithoutAgencyNestedInput
  }

  export type AgencyUncheckedUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    companyName?: StringFieldUpdateOperationsInput | string
    businessLicense?: NullableStringFieldUpdateOperationsInput | string | null
    contactPerson?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    cedulaFrente?: NullableStringFieldUpdateOperationsInput | string | null
    cedulaTrasera?: NullableStringFieldUpdateOperationsInput | string | null
    verificationStatus?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    taxId?: NullableStringFieldUpdateOperationsInput | string | null
    maxPosts?: NullableIntFieldUpdateOperationsInput | number | null
    totalEscorts?: IntFieldUpdateOperationsInput | number
    verifiedEscorts?: IntFieldUpdateOperationsInput | number
    totalVerifications?: IntFieldUpdateOperationsInput | number
    activeEscorts?: IntFieldUpdateOperationsInput | number
    defaultCommissionRate?: FloatFieldUpdateOperationsInput | number
    invitations?: AgencyInvitationUncheckedUpdateManyWithoutAgencyNestedInput
    memberships?: AgencyMembershipUncheckedUpdateManyWithoutAgencyNestedInput
  }

  export type EscortUpsertWithoutVerificationsInput = {
    update: XOR<EscortUpdateWithoutVerificationsInput, EscortUncheckedUpdateWithoutVerificationsInput>
    create: XOR<EscortCreateWithoutVerificationsInput, EscortUncheckedCreateWithoutVerificationsInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutVerificationsInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutVerificationsInput, EscortUncheckedUpdateWithoutVerificationsInput>
  }

  export type EscortUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type VerificationPricingUpsertWithoutVerificationsInput = {
    update: XOR<VerificationPricingUpdateWithoutVerificationsInput, VerificationPricingUncheckedUpdateWithoutVerificationsInput>
    create: XOR<VerificationPricingCreateWithoutVerificationsInput, VerificationPricingUncheckedCreateWithoutVerificationsInput>
    where?: VerificationPricingWhereInput
  }

  export type VerificationPricingUpdateToOneWithWhereWithoutVerificationsInput = {
    where?: VerificationPricingWhereInput
    data: XOR<VerificationPricingUpdateWithoutVerificationsInput, VerificationPricingUncheckedUpdateWithoutVerificationsInput>
  }

  export type VerificationPricingUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationPricingUncheckedUpdateWithoutVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    cost?: FloatFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    features?: NullableJsonNullValueInput | InputJsonValue
    duration?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EscortVerificationCreateWithoutPricingInput = {
    id?: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
    agency: AgencyCreateNestedOneWithoutVerificationsInput
    escort: EscortCreateNestedOneWithoutVerificationsInput
  }

  export type EscortVerificationUncheckedCreateWithoutPricingInput = {
    id?: string
    agencyId: string
    escortId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationCreateOrConnectWithoutPricingInput = {
    where: EscortVerificationWhereUniqueInput
    create: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput>
  }

  export type EscortVerificationCreateManyPricingInputEnvelope = {
    data: EscortVerificationCreateManyPricingInput | EscortVerificationCreateManyPricingInput[]
    skipDuplicates?: boolean
  }

  export type EscortVerificationUpsertWithWhereUniqueWithoutPricingInput = {
    where: EscortVerificationWhereUniqueInput
    update: XOR<EscortVerificationUpdateWithoutPricingInput, EscortVerificationUncheckedUpdateWithoutPricingInput>
    create: XOR<EscortVerificationCreateWithoutPricingInput, EscortVerificationUncheckedCreateWithoutPricingInput>
  }

  export type EscortVerificationUpdateWithWhereUniqueWithoutPricingInput = {
    where: EscortVerificationWhereUniqueInput
    data: XOR<EscortVerificationUpdateWithoutPricingInput, EscortVerificationUncheckedUpdateWithoutPricingInput>
  }

  export type EscortVerificationUpdateManyWithWhereWithoutPricingInput = {
    where: EscortVerificationScalarWhereInput
    data: XOR<EscortVerificationUpdateManyMutationInput, EscortVerificationUncheckedUpdateManyWithoutPricingInput>
  }

  export type BoostCreateWithoutPricingInput = {
    id?: string
    isActive?: boolean
    amount?: number
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    post: PostCreateNestedOneWithoutBoostsInput
    user: UserCreateNestedOneWithoutBoostsInput
  }

  export type BoostUncheckedCreateWithoutPricingInput = {
    id?: string
    isActive?: boolean
    amount?: number
    userId: string
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostCreateOrConnectWithoutPricingInput = {
    where: BoostWhereUniqueInput
    create: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput>
  }

  export type BoostCreateManyPricingInputEnvelope = {
    data: BoostCreateManyPricingInput | BoostCreateManyPricingInput[]
    skipDuplicates?: boolean
  }

  export type BoostUpsertWithWhereUniqueWithoutPricingInput = {
    where: BoostWhereUniqueInput
    update: XOR<BoostUpdateWithoutPricingInput, BoostUncheckedUpdateWithoutPricingInput>
    create: XOR<BoostCreateWithoutPricingInput, BoostUncheckedCreateWithoutPricingInput>
  }

  export type BoostUpdateWithWhereUniqueWithoutPricingInput = {
    where: BoostWhereUniqueInput
    data: XOR<BoostUpdateWithoutPricingInput, BoostUncheckedUpdateWithoutPricingInput>
  }

  export type BoostUpdateManyWithWhereWithoutPricingInput = {
    where: BoostScalarWhereInput
    data: XOR<BoostUpdateManyMutationInput, BoostUncheckedUpdateManyWithoutPricingInput>
  }

  export type BoostCreateWithoutPostInput = {
    id?: string
    isActive?: boolean
    amount?: number
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
    pricing: BoostPricingCreateNestedOneWithoutBoostsInput
    user: UserCreateNestedOneWithoutBoostsInput
  }

  export type BoostUncheckedCreateWithoutPostInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    userId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostCreateOrConnectWithoutPostInput = {
    where: BoostWhereUniqueInput
    create: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput>
  }

  export type BoostCreateManyPostInputEnvelope = {
    data: BoostCreateManyPostInput | BoostCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type FavoriteCreateWithoutPostInput = {
    id?: string
    isNotified?: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutFavoritesInput
  }

  export type FavoriteUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type FavoriteCreateOrConnectWithoutPostInput = {
    where: FavoriteWhereUniqueInput
    create: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput>
  }

  export type FavoriteCreateManyPostInputEnvelope = {
    data: FavoriteCreateManyPostInput | FavoriteCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type LikeCreateWithoutPostInput = {
    id?: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutLikesInput
  }

  export type LikeUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type LikeCreateOrConnectWithoutPostInput = {
    where: LikeWhereUniqueInput
    create: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput>
  }

  export type LikeCreateManyPostInputEnvelope = {
    data: LikeCreateManyPostInput | LikeCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type PostTagCreateWithoutPostInput = {
    id?: string
    createdAt?: Date | string
    tag: TagCreateNestedOneWithoutPostsInput
  }

  export type PostTagUncheckedCreateWithoutPostInput = {
    id?: string
    tagId: string
    createdAt?: Date | string
  }

  export type PostTagCreateOrConnectWithoutPostInput = {
    where: PostTagWhereUniqueInput
    create: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput>
  }

  export type PostTagCreateManyPostInputEnvelope = {
    data: PostTagCreateManyPostInput | PostTagCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutPostsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutPostsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
  }

  export type LocationCreateWithoutPostsInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    users?: UserCreateNestedManyWithoutLocationInput
  }

  export type LocationUncheckedCreateWithoutPostsInput = {
    id?: string
    country: string
    state?: string | null
    city: string
    users?: UserUncheckedCreateNestedManyWithoutLocationInput
  }

  export type LocationCreateOrConnectWithoutPostsInput = {
    where: LocationWhereUniqueInput
    create: XOR<LocationCreateWithoutPostsInput, LocationUncheckedCreateWithoutPostsInput>
  }

  export type ReportCreateWithoutPostInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    author: UserCreateNestedOneWithoutReportsInput
    targetUser?: UserCreateNestedOneWithoutReportsReceivedInput
  }

  export type ReportUncheckedCreateWithoutPostInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    targetUserId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportCreateOrConnectWithoutPostInput = {
    where: ReportWhereUniqueInput
    create: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput>
  }

  export type ReportCreateManyPostInputEnvelope = {
    data: ReportCreateManyPostInput | ReportCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type TrendingHistoryCreateWithoutPostInput = {
    id?: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
  }

  export type TrendingHistoryUncheckedCreateWithoutPostInput = {
    id?: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
  }

  export type TrendingHistoryCreateOrConnectWithoutPostInput = {
    where: TrendingHistoryWhereUniqueInput
    create: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput>
  }

  export type TrendingHistoryCreateManyPostInputEnvelope = {
    data: TrendingHistoryCreateManyPostInput | TrendingHistoryCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type UserInteractionCreateWithoutPostInput = {
    id?: string
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
    targetUser?: UserCreateNestedOneWithoutReceivedInteractionsInput
    user: UserCreateNestedOneWithoutInteractionsInput
  }

  export type UserInteractionUncheckedCreateWithoutPostInput = {
    id?: string
    userId: string
    targetUserId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionCreateOrConnectWithoutPostInput = {
    where: UserInteractionWhereUniqueInput
    create: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput>
  }

  export type UserInteractionCreateManyPostInputEnvelope = {
    data: UserInteractionCreateManyPostInput | UserInteractionCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type BoostUpsertWithWhereUniqueWithoutPostInput = {
    where: BoostWhereUniqueInput
    update: XOR<BoostUpdateWithoutPostInput, BoostUncheckedUpdateWithoutPostInput>
    create: XOR<BoostCreateWithoutPostInput, BoostUncheckedCreateWithoutPostInput>
  }

  export type BoostUpdateWithWhereUniqueWithoutPostInput = {
    where: BoostWhereUniqueInput
    data: XOR<BoostUpdateWithoutPostInput, BoostUncheckedUpdateWithoutPostInput>
  }

  export type BoostUpdateManyWithWhereWithoutPostInput = {
    where: BoostScalarWhereInput
    data: XOR<BoostUpdateManyMutationInput, BoostUncheckedUpdateManyWithoutPostInput>
  }

  export type FavoriteUpsertWithWhereUniqueWithoutPostInput = {
    where: FavoriteWhereUniqueInput
    update: XOR<FavoriteUpdateWithoutPostInput, FavoriteUncheckedUpdateWithoutPostInput>
    create: XOR<FavoriteCreateWithoutPostInput, FavoriteUncheckedCreateWithoutPostInput>
  }

  export type FavoriteUpdateWithWhereUniqueWithoutPostInput = {
    where: FavoriteWhereUniqueInput
    data: XOR<FavoriteUpdateWithoutPostInput, FavoriteUncheckedUpdateWithoutPostInput>
  }

  export type FavoriteUpdateManyWithWhereWithoutPostInput = {
    where: FavoriteScalarWhereInput
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyWithoutPostInput>
  }

  export type LikeUpsertWithWhereUniqueWithoutPostInput = {
    where: LikeWhereUniqueInput
    update: XOR<LikeUpdateWithoutPostInput, LikeUncheckedUpdateWithoutPostInput>
    create: XOR<LikeCreateWithoutPostInput, LikeUncheckedCreateWithoutPostInput>
  }

  export type LikeUpdateWithWhereUniqueWithoutPostInput = {
    where: LikeWhereUniqueInput
    data: XOR<LikeUpdateWithoutPostInput, LikeUncheckedUpdateWithoutPostInput>
  }

  export type LikeUpdateManyWithWhereWithoutPostInput = {
    where: LikeScalarWhereInput
    data: XOR<LikeUpdateManyMutationInput, LikeUncheckedUpdateManyWithoutPostInput>
  }

  export type PostTagUpsertWithWhereUniqueWithoutPostInput = {
    where: PostTagWhereUniqueInput
    update: XOR<PostTagUpdateWithoutPostInput, PostTagUncheckedUpdateWithoutPostInput>
    create: XOR<PostTagCreateWithoutPostInput, PostTagUncheckedCreateWithoutPostInput>
  }

  export type PostTagUpdateWithWhereUniqueWithoutPostInput = {
    where: PostTagWhereUniqueInput
    data: XOR<PostTagUpdateWithoutPostInput, PostTagUncheckedUpdateWithoutPostInput>
  }

  export type PostTagUpdateManyWithWhereWithoutPostInput = {
    where: PostTagScalarWhereInput
    data: XOR<PostTagUpdateManyMutationInput, PostTagUncheckedUpdateManyWithoutPostInput>
  }

  export type UserUpsertWithoutPostsInput = {
    update: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
  }

  export type UserUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type LocationUpsertWithoutPostsInput = {
    update: XOR<LocationUpdateWithoutPostsInput, LocationUncheckedUpdateWithoutPostsInput>
    create: XOR<LocationCreateWithoutPostsInput, LocationUncheckedCreateWithoutPostsInput>
    where?: LocationWhereInput
  }

  export type LocationUpdateToOneWithWhereWithoutPostsInput = {
    where?: LocationWhereInput
    data: XOR<LocationUpdateWithoutPostsInput, LocationUncheckedUpdateWithoutPostsInput>
  }

  export type LocationUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    users?: UserUpdateManyWithoutLocationNestedInput
  }

  export type LocationUncheckedUpdateWithoutPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    state?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    users?: UserUncheckedUpdateManyWithoutLocationNestedInput
  }

  export type ReportUpsertWithWhereUniqueWithoutPostInput = {
    where: ReportWhereUniqueInput
    update: XOR<ReportUpdateWithoutPostInput, ReportUncheckedUpdateWithoutPostInput>
    create: XOR<ReportCreateWithoutPostInput, ReportUncheckedCreateWithoutPostInput>
  }

  export type ReportUpdateWithWhereUniqueWithoutPostInput = {
    where: ReportWhereUniqueInput
    data: XOR<ReportUpdateWithoutPostInput, ReportUncheckedUpdateWithoutPostInput>
  }

  export type ReportUpdateManyWithWhereWithoutPostInput = {
    where: ReportScalarWhereInput
    data: XOR<ReportUpdateManyMutationInput, ReportUncheckedUpdateManyWithoutPostInput>
  }

  export type TrendingHistoryUpsertWithWhereUniqueWithoutPostInput = {
    where: TrendingHistoryWhereUniqueInput
    update: XOR<TrendingHistoryUpdateWithoutPostInput, TrendingHistoryUncheckedUpdateWithoutPostInput>
    create: XOR<TrendingHistoryCreateWithoutPostInput, TrendingHistoryUncheckedCreateWithoutPostInput>
  }

  export type TrendingHistoryUpdateWithWhereUniqueWithoutPostInput = {
    where: TrendingHistoryWhereUniqueInput
    data: XOR<TrendingHistoryUpdateWithoutPostInput, TrendingHistoryUncheckedUpdateWithoutPostInput>
  }

  export type TrendingHistoryUpdateManyWithWhereWithoutPostInput = {
    where: TrendingHistoryScalarWhereInput
    data: XOR<TrendingHistoryUpdateManyMutationInput, TrendingHistoryUncheckedUpdateManyWithoutPostInput>
  }

  export type TrendingHistoryScalarWhereInput = {
    AND?: TrendingHistoryScalarWhereInput | TrendingHistoryScalarWhereInput[]
    OR?: TrendingHistoryScalarWhereInput[]
    NOT?: TrendingHistoryScalarWhereInput | TrendingHistoryScalarWhereInput[]
    id?: StringFilter<"TrendingHistory"> | string
    postId?: StringFilter<"TrendingHistory"> | string
    position?: IntFilter<"TrendingHistory"> | number
    score?: FloatFilter<"TrendingHistory"> | number
    category?: StringNullableFilter<"TrendingHistory"> | string | null
    date?: DateTimeFilter<"TrendingHistory"> | Date | string
  }

  export type UserInteractionUpsertWithWhereUniqueWithoutPostInput = {
    where: UserInteractionWhereUniqueInput
    update: XOR<UserInteractionUpdateWithoutPostInput, UserInteractionUncheckedUpdateWithoutPostInput>
    create: XOR<UserInteractionCreateWithoutPostInput, UserInteractionUncheckedCreateWithoutPostInput>
  }

  export type UserInteractionUpdateWithWhereUniqueWithoutPostInput = {
    where: UserInteractionWhereUniqueInput
    data: XOR<UserInteractionUpdateWithoutPostInput, UserInteractionUncheckedUpdateWithoutPostInput>
  }

  export type UserInteractionUpdateManyWithWhereWithoutPostInput = {
    where: UserInteractionScalarWhereInput
    data: XOR<UserInteractionUpdateManyMutationInput, UserInteractionUncheckedUpdateManyWithoutPostInput>
  }

  export type PostCreateWithoutTrendingHistoryInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutTrendingHistoryInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutTrendingHistoryInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutTrendingHistoryInput, PostUncheckedCreateWithoutTrendingHistoryInput>
  }

  export type PostUpsertWithoutTrendingHistoryInput = {
    update: XOR<PostUpdateWithoutTrendingHistoryInput, PostUncheckedUpdateWithoutTrendingHistoryInput>
    create: XOR<PostCreateWithoutTrendingHistoryInput, PostUncheckedCreateWithoutTrendingHistoryInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutTrendingHistoryInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutTrendingHistoryInput, PostUncheckedUpdateWithoutTrendingHistoryInput>
  }

  export type PostUpdateWithoutTrendingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutTrendingHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type ChatMemberCreateWithoutChatInput = {
    id?: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
    user: UserCreateNestedOneWithoutChatMembersInput
  }

  export type ChatMemberUncheckedCreateWithoutChatInput = {
    id?: string
    userId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type ChatMemberCreateOrConnectWithoutChatInput = {
    where: ChatMemberWhereUniqueInput
    create: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput>
  }

  export type ChatMemberCreateManyChatInputEnvelope = {
    data: ChatMemberCreateManyChatInput | ChatMemberCreateManyChatInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutChatInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    receiver?: UserCreateNestedOneWithoutReceivedMessagesInput
    sender: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutChatInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    receiverId?: string | null
  }

  export type MessageCreateOrConnectWithoutChatInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput>
  }

  export type MessageCreateManyChatInputEnvelope = {
    data: MessageCreateManyChatInput | MessageCreateManyChatInput[]
    skipDuplicates?: boolean
  }

  export type ChatMemberUpsertWithWhereUniqueWithoutChatInput = {
    where: ChatMemberWhereUniqueInput
    update: XOR<ChatMemberUpdateWithoutChatInput, ChatMemberUncheckedUpdateWithoutChatInput>
    create: XOR<ChatMemberCreateWithoutChatInput, ChatMemberUncheckedCreateWithoutChatInput>
  }

  export type ChatMemberUpdateWithWhereUniqueWithoutChatInput = {
    where: ChatMemberWhereUniqueInput
    data: XOR<ChatMemberUpdateWithoutChatInput, ChatMemberUncheckedUpdateWithoutChatInput>
  }

  export type ChatMemberUpdateManyWithWhereWithoutChatInput = {
    where: ChatMemberScalarWhereInput
    data: XOR<ChatMemberUpdateManyMutationInput, ChatMemberUncheckedUpdateManyWithoutChatInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutChatInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutChatInput, MessageUncheckedUpdateWithoutChatInput>
    create: XOR<MessageCreateWithoutChatInput, MessageUncheckedCreateWithoutChatInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutChatInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutChatInput, MessageUncheckedUpdateWithoutChatInput>
  }

  export type MessageUpdateManyWithWhereWithoutChatInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutChatInput>
  }

  export type ChatCreateWithoutMembersInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    messages?: MessageCreateNestedManyWithoutChatInput
  }

  export type ChatUncheckedCreateWithoutMembersInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    messages?: MessageUncheckedCreateNestedManyWithoutChatInput
  }

  export type ChatCreateOrConnectWithoutMembersInput = {
    where: ChatWhereUniqueInput
    create: XOR<ChatCreateWithoutMembersInput, ChatUncheckedCreateWithoutMembersInput>
  }

  export type UserCreateWithoutChatMembersInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutChatMembersInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutChatMembersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutChatMembersInput, UserUncheckedCreateWithoutChatMembersInput>
  }

  export type ChatUpsertWithoutMembersInput = {
    update: XOR<ChatUpdateWithoutMembersInput, ChatUncheckedUpdateWithoutMembersInput>
    create: XOR<ChatCreateWithoutMembersInput, ChatUncheckedCreateWithoutMembersInput>
    where?: ChatWhereInput
  }

  export type ChatUpdateToOneWithWhereWithoutMembersInput = {
    where?: ChatWhereInput
    data: XOR<ChatUpdateWithoutMembersInput, ChatUncheckedUpdateWithoutMembersInput>
  }

  export type ChatUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUpdateManyWithoutChatNestedInput
  }

  export type ChatUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: MessageUncheckedUpdateManyWithoutChatNestedInput
  }

  export type UserUpsertWithoutChatMembersInput = {
    update: XOR<UserUpdateWithoutChatMembersInput, UserUncheckedUpdateWithoutChatMembersInput>
    create: XOR<UserCreateWithoutChatMembersInput, UserUncheckedCreateWithoutChatMembersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutChatMembersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutChatMembersInput, UserUncheckedUpdateWithoutChatMembersInput>
  }

  export type UserUpdateWithoutChatMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutChatMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type ChatCreateWithoutMessagesInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    members?: ChatMemberCreateNestedManyWithoutChatInput
  }

  export type ChatUncheckedCreateWithoutMessagesInput = {
    id?: string
    isGroup?: boolean
    name?: string | null
    description?: string | null
    avatar?: string | null
    isDisputeChat?: boolean
    disputeStatus?: $Enums.DisputeStatus
    disputeReason?: string | null
    isArchived?: boolean
    mutedUntil?: Date | string | null
    maxMembers?: number | null
    isPrivate?: boolean
    requireApproval?: boolean
    allowFiles?: boolean
    allowImages?: boolean
    allowVoice?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    lastActivity?: Date | string
    members?: ChatMemberUncheckedCreateNestedManyWithoutChatInput
  }

  export type ChatCreateOrConnectWithoutMessagesInput = {
    where: ChatWhereUniqueInput
    create: XOR<ChatCreateWithoutMessagesInput, ChatUncheckedCreateWithoutMessagesInput>
  }

  export type UserCreateWithoutReceivedMessagesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReceivedMessagesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReceivedMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type UserCreateWithoutSentMessagesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type ChatUpsertWithoutMessagesInput = {
    update: XOR<ChatUpdateWithoutMessagesInput, ChatUncheckedUpdateWithoutMessagesInput>
    create: XOR<ChatCreateWithoutMessagesInput, ChatUncheckedCreateWithoutMessagesInput>
    where?: ChatWhereInput
  }

  export type ChatUpdateToOneWithWhereWithoutMessagesInput = {
    where?: ChatWhereInput
    data: XOR<ChatUpdateWithoutMessagesInput, ChatUncheckedUpdateWithoutMessagesInput>
  }

  export type ChatUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    members?: ChatMemberUpdateManyWithoutChatNestedInput
  }

  export type ChatUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    isGroup?: BoolFieldUpdateOperationsInput | boolean
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    isDisputeChat?: BoolFieldUpdateOperationsInput | boolean
    disputeStatus?: EnumDisputeStatusFieldUpdateOperationsInput | $Enums.DisputeStatus
    disputeReason?: NullableStringFieldUpdateOperationsInput | string | null
    isArchived?: BoolFieldUpdateOperationsInput | boolean
    mutedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxMembers?: NullableIntFieldUpdateOperationsInput | number | null
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    requireApproval?: BoolFieldUpdateOperationsInput | boolean
    allowFiles?: BoolFieldUpdateOperationsInput | boolean
    allowImages?: BoolFieldUpdateOperationsInput | boolean
    allowVoice?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActivity?: DateTimeFieldUpdateOperationsInput | Date | string
    members?: ChatMemberUncheckedUpdateManyWithoutChatNestedInput
  }

  export type UserUpsertWithoutReceivedMessagesInput = {
    update: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PostCreateWithoutFavoritesInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutFavoritesInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutFavoritesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutFavoritesInput, PostUncheckedCreateWithoutFavoritesInput>
  }

  export type UserCreateWithoutFavoritesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutFavoritesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFavoritesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
  }

  export type PostUpsertWithoutFavoritesInput = {
    update: XOR<PostUpdateWithoutFavoritesInput, PostUncheckedUpdateWithoutFavoritesInput>
    create: XOR<PostCreateWithoutFavoritesInput, PostUncheckedCreateWithoutFavoritesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutFavoritesInput, PostUncheckedUpdateWithoutFavoritesInput>
  }

  export type PostUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutFavoritesInput = {
    update: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
    create: XOR<UserCreateWithoutFavoritesInput, UserUncheckedCreateWithoutFavoritesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFavoritesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFavoritesInput, UserUncheckedUpdateWithoutFavoritesInput>
  }

  export type UserUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutFavoritesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PostCreateWithoutLikesInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutLikesInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutLikesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
  }

  export type UserCreateWithoutLikesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutLikesInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutLikesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
  }

  export type PostUpsertWithoutLikesInput = {
    update: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutLikesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
  }

  export type PostUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutLikesInput = {
    update: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
    create: XOR<UserCreateWithoutLikesInput, UserUncheckedCreateWithoutLikesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutLikesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutLikesInput, UserUncheckedUpdateWithoutLikesInput>
  }

  export type UserUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type EscortCreateWithoutReviewsGivenInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviews?: ReviewCreateNestedManyWithoutTargetInput
  }

  export type EscortUncheckedCreateWithoutReviewsGivenInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutTargetInput
  }

  export type EscortCreateOrConnectWithoutReviewsGivenInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutReviewsGivenInput, EscortUncheckedCreateWithoutReviewsGivenInput>
  }

  export type EscortCreateWithoutReviewsInput = {
    id?: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationCreateNestedManyWithoutEscortInput
    user: UserCreateNestedOneWithoutEscortInput
    reviewsGiven?: ReviewCreateNestedManyWithoutAuthorInput
  }

  export type EscortUncheckedCreateWithoutReviewsInput = {
    id?: string
    userId: string
    isVerified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationExpiresAt?: Date | string | null
    rating?: number
    totalRatings?: number
    age?: number | null
    height?: string | null
    weight?: string | null
    bodyType?: string | null
    ethnicity?: string | null
    hairColor?: string | null
    eyeColor?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortCreatelanguagesInput | string[]
    maxPosts?: number
    currentPosts?: number
    totalBookings?: number
    completedBookings?: number
    services?: EscortCreateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedCreateNestedManyWithoutEscortInput
    agencyMemberships?: AgencyMembershipUncheckedCreateNestedManyWithoutEscortInput
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutEscortInput
    verifications?: EscortVerificationUncheckedCreateNestedManyWithoutEscortInput
    reviewsGiven?: ReviewUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type EscortCreateOrConnectWithoutReviewsInput = {
    where: EscortWhereUniqueInput
    create: XOR<EscortCreateWithoutReviewsInput, EscortUncheckedCreateWithoutReviewsInput>
  }

  export type EscortUpsertWithoutReviewsGivenInput = {
    update: XOR<EscortUpdateWithoutReviewsGivenInput, EscortUncheckedUpdateWithoutReviewsGivenInput>
    create: XOR<EscortCreateWithoutReviewsGivenInput, EscortUncheckedCreateWithoutReviewsGivenInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutReviewsGivenInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutReviewsGivenInput, EscortUncheckedUpdateWithoutReviewsGivenInput>
  }

  export type EscortUpdateWithoutReviewsGivenInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviews?: ReviewUpdateManyWithoutTargetNestedInput
  }

  export type EscortUncheckedUpdateWithoutReviewsGivenInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutTargetNestedInput
  }

  export type EscortUpsertWithoutReviewsInput = {
    update: XOR<EscortUpdateWithoutReviewsInput, EscortUncheckedUpdateWithoutReviewsInput>
    create: XOR<EscortCreateWithoutReviewsInput, EscortUncheckedCreateWithoutReviewsInput>
    where?: EscortWhereInput
  }

  export type EscortUpdateToOneWithWhereWithoutReviewsInput = {
    where?: EscortWhereInput
    data: XOR<EscortUpdateWithoutReviewsInput, EscortUncheckedUpdateWithoutReviewsInput>
  }

  export type EscortUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUpdateManyWithoutEscortNestedInput
    user?: UserUpdateOneRequiredWithoutEscortNestedInput
    reviewsGiven?: ReviewUpdateManyWithoutAuthorNestedInput
  }

  export type EscortUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    totalRatings?: IntFieldUpdateOperationsInput | number
    age?: NullableIntFieldUpdateOperationsInput | number | null
    height?: NullableStringFieldUpdateOperationsInput | string | null
    weight?: NullableStringFieldUpdateOperationsInput | string | null
    bodyType?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicity?: NullableStringFieldUpdateOperationsInput | string | null
    hairColor?: NullableStringFieldUpdateOperationsInput | string | null
    eyeColor?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    languages?: EscortUpdatelanguagesInput | string[]
    maxPosts?: IntFieldUpdateOperationsInput | number
    currentPosts?: IntFieldUpdateOperationsInput | number
    totalBookings?: IntFieldUpdateOperationsInput | number
    completedBookings?: IntFieldUpdateOperationsInput | number
    services?: EscortUpdateservicesInput | string[]
    agencyInvitations?: AgencyInvitationUncheckedUpdateManyWithoutEscortNestedInput
    agencyMemberships?: AgencyMembershipUncheckedUpdateManyWithoutEscortNestedInput
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutEscortNestedInput
    verifications?: EscortVerificationUncheckedUpdateManyWithoutEscortNestedInput
    reviewsGiven?: ReviewUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UserCreateWithoutReportsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReportsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReportsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
  }

  export type PostCreateWithoutReportsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostCreateNestedManyWithoutPostInput
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutReportsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    boosts?: BoostUncheckedCreateNestedManyWithoutPostInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutReportsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutReportsInput, PostUncheckedCreateWithoutReportsInput>
  }

  export type UserCreateWithoutReportsReceivedInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutReportsReceivedInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReportsReceivedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReportsReceivedInput, UserUncheckedCreateWithoutReportsReceivedInput>
  }

  export type UserUpsertWithoutReportsInput = {
    update: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
    create: XOR<UserCreateWithoutReportsInput, UserUncheckedCreateWithoutReportsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportsInput, UserUncheckedUpdateWithoutReportsInput>
  }

  export type UserUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PostUpsertWithoutReportsInput = {
    update: XOR<PostUpdateWithoutReportsInput, PostUncheckedUpdateWithoutReportsInput>
    create: XOR<PostCreateWithoutReportsInput, PostUncheckedCreateWithoutReportsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutReportsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutReportsInput, PostUncheckedUpdateWithoutReportsInput>
  }

  export type PostUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type UserUpsertWithoutReportsReceivedInput = {
    update: XOR<UserUpdateWithoutReportsReceivedInput, UserUncheckedUpdateWithoutReportsReceivedInput>
    create: XOR<UserCreateWithoutReportsReceivedInput, UserUncheckedCreateWithoutReportsReceivedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReportsReceivedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReportsReceivedInput, UserUncheckedUpdateWithoutReportsReceivedInput>
  }

  export type UserUpdateWithoutReportsReceivedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutReportsReceivedInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    boosts?: BoostCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    boosts?: BoostUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type ClientCreateWithoutPaymentsInput = {
    id?: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewCreateNestedManyWithoutClientInput
    user: UserCreateNestedOneWithoutClientInput
    pointTransactions?: PointTransactionCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationCreateNestedManyWithoutClientInput
  }

  export type ClientUncheckedCreateWithoutPaymentsInput = {
    id?: string
    userId: string
    points?: number
    isPremium?: boolean
    premiumUntil?: Date | string | null
    premiumTier?: $Enums.PremiumTier
    chatPriorityUntil?: Date | string | null
    maxFavorites?: number
    currentFavorites?: number
    dailyMessageLimit?: number
    messagesUsedToday?: number
    canViewPhoneNumbers?: boolean
    canSendImages?: boolean
    canSendVoiceMessages?: boolean
    prioritySupport?: boolean
    canSeeOnlineStatus?: boolean
    totalMessagesUsed?: number
    lastMessageReset?: Date | string
    canAccessPremiumProfiles?: boolean
    lastDailyPointsClaim?: Date | string | null
    dailyLoginStreak?: number
    totalDailyPointsEarned?: number
    totalPointsEarned?: number
    totalPointsSpent?: number
    pointsLastUpdated?: Date | string
    totalPointsPurchased?: number
    agePreferenceMin?: number | null
    agePreferenceMax?: number | null
    locationPreference?: string | null
    clientReviews?: ClientReviewUncheckedCreateNestedManyWithoutClientInput
    pointTransactions?: PointTransactionUncheckedCreateNestedManyWithoutClientInput
    pointsHistory?: PointsHistoryUncheckedCreateNestedManyWithoutClientInput
    pointsPurchases?: PointsPurchaseUncheckedCreateNestedManyWithoutClientInput
    premiumActivations?: PremiumActivationUncheckedCreateNestedManyWithoutClientInput
  }

  export type ClientCreateOrConnectWithoutPaymentsInput = {
    where: ClientWhereUniqueInput
    create: XOR<ClientCreateWithoutPaymentsInput, ClientUncheckedCreateWithoutPaymentsInput>
  }

  export type ClientUpsertWithoutPaymentsInput = {
    update: XOR<ClientUpdateWithoutPaymentsInput, ClientUncheckedUpdateWithoutPaymentsInput>
    create: XOR<ClientCreateWithoutPaymentsInput, ClientUncheckedCreateWithoutPaymentsInput>
    where?: ClientWhereInput
  }

  export type ClientUpdateToOneWithWhereWithoutPaymentsInput = {
    where?: ClientWhereInput
    data: XOR<ClientUpdateWithoutPaymentsInput, ClientUncheckedUpdateWithoutPaymentsInput>
  }

  export type ClientUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUpdateManyWithoutClientNestedInput
    user?: UserUpdateOneRequiredWithoutClientNestedInput
    pointTransactions?: PointTransactionUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUpdateManyWithoutClientNestedInput
  }

  export type ClientUncheckedUpdateWithoutPaymentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    points?: IntFieldUpdateOperationsInput | number
    isPremium?: BoolFieldUpdateOperationsInput | boolean
    premiumUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    premiumTier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    chatPriorityUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    maxFavorites?: IntFieldUpdateOperationsInput | number
    currentFavorites?: IntFieldUpdateOperationsInput | number
    dailyMessageLimit?: IntFieldUpdateOperationsInput | number
    messagesUsedToday?: IntFieldUpdateOperationsInput | number
    canViewPhoneNumbers?: BoolFieldUpdateOperationsInput | boolean
    canSendImages?: BoolFieldUpdateOperationsInput | boolean
    canSendVoiceMessages?: BoolFieldUpdateOperationsInput | boolean
    prioritySupport?: BoolFieldUpdateOperationsInput | boolean
    canSeeOnlineStatus?: BoolFieldUpdateOperationsInput | boolean
    totalMessagesUsed?: IntFieldUpdateOperationsInput | number
    lastMessageReset?: DateTimeFieldUpdateOperationsInput | Date | string
    canAccessPremiumProfiles?: BoolFieldUpdateOperationsInput | boolean
    lastDailyPointsClaim?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLoginStreak?: IntFieldUpdateOperationsInput | number
    totalDailyPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsEarned?: IntFieldUpdateOperationsInput | number
    totalPointsSpent?: IntFieldUpdateOperationsInput | number
    pointsLastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    totalPointsPurchased?: IntFieldUpdateOperationsInput | number
    agePreferenceMin?: NullableIntFieldUpdateOperationsInput | number | null
    agePreferenceMax?: NullableIntFieldUpdateOperationsInput | number | null
    locationPreference?: NullableStringFieldUpdateOperationsInput | string | null
    clientReviews?: ClientReviewUncheckedUpdateManyWithoutClientNestedInput
    pointTransactions?: PointTransactionUncheckedUpdateManyWithoutClientNestedInput
    pointsHistory?: PointsHistoryUncheckedUpdateManyWithoutClientNestedInput
    pointsPurchases?: PointsPurchaseUncheckedUpdateManyWithoutClientNestedInput
    premiumActivations?: PremiumActivationUncheckedUpdateManyWithoutClientNestedInput
  }

  export type PostCreateWithoutBoostsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    favorites?: FavoriteCreateNestedManyWithoutPostInput
    likes?: LikeCreateNestedManyWithoutPostInput
    tags?: PostTagCreateNestedManyWithoutPostInput
    author: UserCreateNestedOneWithoutPostsInput
    locationRef?: LocationCreateNestedOneWithoutPostsInput
    reports?: ReportCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryCreateNestedManyWithoutPostInput
    interactions?: UserInteractionCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutBoostsInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
    favorites?: FavoriteUncheckedCreateNestedManyWithoutPostInput
    likes?: LikeUncheckedCreateNestedManyWithoutPostInput
    tags?: PostTagUncheckedCreateNestedManyWithoutPostInput
    reports?: ReportUncheckedCreateNestedManyWithoutPostInput
    trendingHistory?: TrendingHistoryUncheckedCreateNestedManyWithoutPostInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutBoostsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutBoostsInput, PostUncheckedCreateWithoutBoostsInput>
  }

  export type BoostPricingCreateWithoutBoostsInput = {
    id?: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive?: boolean
    multiplier?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BoostPricingUncheckedCreateWithoutBoostsInput = {
    id?: string
    type: $Enums.BoostType
    duration: number
    price: number
    isActive?: boolean
    multiplier?: number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BoostPricingCreateOrConnectWithoutBoostsInput = {
    where: BoostPricingWhereUniqueInput
    create: XOR<BoostPricingCreateWithoutBoostsInput, BoostPricingUncheckedCreateWithoutBoostsInput>
  }

  export type UserCreateWithoutBoostsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminCreateNestedOneWithoutUserInput
    agency?: AgencyCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestCreateNestedOneWithoutUserInput
    banHistory?: BanCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitCreateNestedManyWithoutUserInput
    client?: ClientCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenCreateNestedManyWithoutUserInput
    escort?: EscortCreateNestedOneWithoutUserInput
    favorites?: FavoriteCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationCreateNestedOneWithoutUserInput
    likes?: LikeCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageCreateNestedManyWithoutSenderInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    reports?: ReportCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionCreateNestedManyWithoutUserInput
    reputation?: UserReputationCreateNestedOneWithoutUserInput
    settings?: UserSettingsCreateNestedOneWithoutUserInput
    location?: LocationCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutBoostsInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    locationId?: string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
    admin?: AdminUncheckedCreateNestedOneWithoutUserInput
    agency?: AgencyUncheckedCreateNestedOneWithoutUserInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedCreateNestedManyWithoutReviewerInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedCreateNestedOneWithoutUserInput
    banHistory?: BanUncheckedCreateNestedManyWithoutUserInput
    chatMembers?: ChatMemberUncheckedCreateNestedManyWithoutUserInput
    chatRateLimits?: ChatRateLimitUncheckedCreateNestedManyWithoutUserInput
    client?: ClientUncheckedCreateNestedOneWithoutUserInput
    deviceTokens?: DeviceTokenUncheckedCreateNestedManyWithoutUserInput
    escort?: EscortUncheckedCreateNestedOneWithoutUserInput
    favorites?: FavoriteUncheckedCreateNestedManyWithoutUserInput
    identityVerification?: IdentityVerificationUncheckedCreateNestedOneWithoutUserInput
    likes?: LikeUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutReceiverInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutSenderInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    reports?: ReportUncheckedCreateNestedManyWithoutAuthorInput
    reportsReceived?: ReportUncheckedCreateNestedManyWithoutTargetUserInput
    searchHistory?: SearchHistoryUncheckedCreateNestedManyWithoutUserInput
    subscriptions?: SubscriptionUncheckedCreateNestedManyWithoutUserInput
    blockedBy?: UserBlockUncheckedCreateNestedManyWithoutBlockedInput
    blockedUsers?: UserBlockUncheckedCreateNestedManyWithoutBlockerInput
    receivedInteractions?: UserInteractionUncheckedCreateNestedManyWithoutTargetUserInput
    interactions?: UserInteractionUncheckedCreateNestedManyWithoutUserInput
    reputation?: UserReputationUncheckedCreateNestedOneWithoutUserInput
    settings?: UserSettingsUncheckedCreateNestedOneWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBoostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBoostsInput, UserUncheckedCreateWithoutBoostsInput>
  }

  export type PostUpsertWithoutBoostsInput = {
    update: XOR<PostUpdateWithoutBoostsInput, PostUncheckedUpdateWithoutBoostsInput>
    create: XOR<PostCreateWithoutBoostsInput, PostUncheckedCreateWithoutBoostsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutBoostsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutBoostsInput, PostUncheckedUpdateWithoutBoostsInput>
  }

  export type PostUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type BoostPricingUpsertWithoutBoostsInput = {
    update: XOR<BoostPricingUpdateWithoutBoostsInput, BoostPricingUncheckedUpdateWithoutBoostsInput>
    create: XOR<BoostPricingCreateWithoutBoostsInput, BoostPricingUncheckedCreateWithoutBoostsInput>
    where?: BoostPricingWhereInput
  }

  export type BoostPricingUpdateToOneWithWhereWithoutBoostsInput = {
    where?: BoostPricingWhereInput
    data: XOR<BoostPricingUpdateWithoutBoostsInput, BoostPricingUncheckedUpdateWithoutBoostsInput>
  }

  export type BoostPricingUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BoostPricingUncheckedUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumBoostTypeFieldUpdateOperationsInput | $Enums.BoostType
    duration?: IntFieldUpdateOperationsInput | number
    price?: FloatFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    multiplier?: FloatFieldUpdateOperationsInput | number
    features?: NullableJsonNullValueInput | InputJsonValue
    maxBoosts?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutBoostsInput = {
    update: XOR<UserUpdateWithoutBoostsInput, UserUncheckedUpdateWithoutBoostsInput>
    create: XOR<UserCreateWithoutBoostsInput, UserUncheckedCreateWithoutBoostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBoostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBoostsInput, UserUncheckedUpdateWithoutBoostsInput>
  }

  export type UserUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
    location?: LocationUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBoostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type PostCreateManyLocationRefInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    authorId: string
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
  }

  export type UserCreateManyLocationInput = {
    id?: string
    email: string
    username: string
    firstName: string
    lastName: string
    password: string
    avatar?: string | null
    phone?: string | null
    bio?: string | null
    website?: string | null
    userType: $Enums.UserType
    accountStatus?: $Enums.AccountStatus
    canLogin?: boolean
    isActive?: boolean
    isBanned?: boolean
    banReason?: string | null
    profileViews?: number
    passwordResetToken?: string | null
    passwordResetExpiry?: Date | string | null
    emailVerificationToken?: string | null
    emailVerified?: boolean
    emailVerifiedAt?: Date | string | null
    timezone?: string | null
    language?: string | null
    lastLoginIP?: string | null
    lastDailyReset?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    lastLogin?: Date | string | null
    lastActiveAt?: Date | string | null
    deletedAt?: Date | string | null
    deletionReason?: string | null
    googleId?: string | null
  }

  export type PostUpdateWithoutLocationRefInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutLocationRefInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateManyWithoutLocationRefInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUpdateOneWithoutUserNestedInput
    agency?: AgencyUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUpdateOneWithoutUserNestedInput
    banHistory?: BanUpdateManyWithoutUserNestedInput
    boosts?: BoostUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUpdateManyWithoutUserNestedInput
    client?: ClientUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUpdateManyWithoutUserNestedInput
    escort?: EscortUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUpdateOneWithoutUserNestedInput
    likes?: LikeUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    reports?: ReportUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: AdminUncheckedUpdateOneWithoutUserNestedInput
    agency?: AgencyUncheckedUpdateOneWithoutUserNestedInput
    reviewedAgencyRequests?: AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerNestedInput
    agencyRegistrationRequest?: AgencyRegistrationRequestUncheckedUpdateOneWithoutUserNestedInput
    banHistory?: BanUncheckedUpdateManyWithoutUserNestedInput
    boosts?: BoostUncheckedUpdateManyWithoutUserNestedInput
    chatMembers?: ChatMemberUncheckedUpdateManyWithoutUserNestedInput
    chatRateLimits?: ChatRateLimitUncheckedUpdateManyWithoutUserNestedInput
    client?: ClientUncheckedUpdateOneWithoutUserNestedInput
    deviceTokens?: DeviceTokenUncheckedUpdateManyWithoutUserNestedInput
    escort?: EscortUncheckedUpdateOneWithoutUserNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutUserNestedInput
    identityVerification?: IdentityVerificationUncheckedUpdateOneWithoutUserNestedInput
    likes?: LikeUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutReceiverNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutSenderNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    reports?: ReportUncheckedUpdateManyWithoutAuthorNestedInput
    reportsReceived?: ReportUncheckedUpdateManyWithoutTargetUserNestedInput
    searchHistory?: SearchHistoryUncheckedUpdateManyWithoutUserNestedInput
    subscriptions?: SubscriptionUncheckedUpdateManyWithoutUserNestedInput
    blockedBy?: UserBlockUncheckedUpdateManyWithoutBlockedNestedInput
    blockedUsers?: UserBlockUncheckedUpdateManyWithoutBlockerNestedInput
    receivedInteractions?: UserInteractionUncheckedUpdateManyWithoutTargetUserNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutUserNestedInput
    reputation?: UserReputationUncheckedUpdateOneWithoutUserNestedInput
    settings?: UserSettingsUncheckedUpdateOneWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutLocationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    userType?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    accountStatus?: EnumAccountStatusFieldUpdateOperationsInput | $Enums.AccountStatus
    canLogin?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    isBanned?: BoolFieldUpdateOperationsInput | boolean
    banReason?: NullableStringFieldUpdateOperationsInput | string | null
    profileViews?: IntFieldUpdateOperationsInput | number
    passwordResetToken?: NullableStringFieldUpdateOperationsInput | string | null
    passwordResetExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailVerificationToken?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timezone?: NullableStringFieldUpdateOperationsInput | string | null
    language?: NullableStringFieldUpdateOperationsInput | string | null
    lastLoginIP?: NullableStringFieldUpdateOperationsInput | string | null
    lastDailyReset?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastActiveAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletionReason?: NullableStringFieldUpdateOperationsInput | string | null
    googleId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AgencyRegistrationRequestCreateManyReviewerInput = {
    id?: string
    userId: string
    fullName: string
    documentNumber: string
    businessPhone: string
    businessEmail: string
    documentFrontImage: string
    documentBackImage: string
    reviewNotes?: string | null
    rejectionReason?: string | null
    submittedAt?: Date | string
    reviewedAt?: Date | string | null
    status?: $Enums.AgencyRequestStatus
  }

  export type BanCreateManyUserInput = {
    id?: string
    reason: string
    bannedBy: string
    adminId?: string | null
    isActive?: boolean
    expiresAt?: Date | string | null
    severity?: $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BoostCreateManyUserInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type ChatMemberCreateManyUserInput = {
    id?: string
    chatId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type ChatRateLimitCreateManyUserInput = {
    id?: string
    count?: number
    windowStart?: Date | string
    limitType?: $Enums.RateLimitType
  }

  export type DeviceTokenCreateManyUserInput = {
    id?: string
    token: string
    platform: string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type FavoriteCreateManyUserInput = {
    id?: string
    postId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type LikeCreateManyUserInput = {
    id?: string
    postId: string
    createdAt?: Date | string
  }

  export type MessageCreateManyReceiverInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    chatId: string
  }

  export type MessageCreateManySenderInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    receiverId?: string | null
    chatId: string
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    title: string
    message: string
    type: $Enums.NotificationType
    isRead?: boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: $Enums.NotificationPriority
    expiresAt?: Date | string | null
    isSent?: boolean
    sentAt?: Date | string | null
    deliveryMethod?: NotificationCreatedeliveryMethodInput | string[]
    isEmailSent?: boolean
    emailSentAt?: Date | string | null
    actionUrl?: string | null
    actionText?: string | null
    createdAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type PostCreateManyAuthorInput = {
    id?: string
    title: string
    description: string
    images?: PostCreateimagesInput | string[]
    phone: string
    isActive?: boolean
    views?: number
    viewsToday?: number
    clicks?: number
    clicksToday?: number
    score?: number
    engagementRate?: number
    lastBoosted?: Date | string | null
    locationId?: string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: number
    isTrending?: boolean
    isFeatured?: boolean
    discoveryScore?: number
    qualityScore?: number
    lastScoreUpdate?: Date | string
    isPrivate?: boolean
    premiumOnly?: boolean
    uniqueViews?: number
    totalTime?: number
    bounceRate?: number
    whatsappClicks?: number
    hasActiveBoost?: boolean
    boostEndsAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    expiresAt?: Date | string | null
    age?: number | null
    location?: string | null
    services?: PostCreateservicesInput | string[]
    sexo?: string | null
  }

  export type ReportCreateManyAuthorInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    targetUserId?: string | null
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReportCreateManyTargetUserInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    postId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type SearchHistoryCreateManyUserInput = {
    id?: string
    query: string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: number
    clicked?: boolean
    createdAt?: Date | string
  }

  export type SubscriptionCreateManyUserInput = {
    id?: string
    planId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserBlockCreateManyBlockedInput = {
    id?: string
    blockerId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserBlockCreateManyBlockerInput = {
    id?: string
    blockedId: string
    reason?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionCreateManyTargetUserInput = {
    id?: string
    userId: string
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type UserInteractionCreateManyUserInput = {
    id?: string
    targetUserId?: string | null
    postId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type AgencyRegistrationRequestUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
    user?: UserUpdateOneRequiredWithoutAgencyRegistrationRequestNestedInput
  }

  export type AgencyRegistrationRequestUncheckedUpdateWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type AgencyRegistrationRequestUncheckedUpdateManyWithoutReviewerInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    fullName?: StringFieldUpdateOperationsInput | string
    documentNumber?: StringFieldUpdateOperationsInput | string
    businessPhone?: StringFieldUpdateOperationsInput | string
    businessEmail?: StringFieldUpdateOperationsInput | string
    documentFrontImage?: StringFieldUpdateOperationsInput | string
    documentBackImage?: StringFieldUpdateOperationsInput | string
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    submittedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAgencyRequestStatusFieldUpdateOperationsInput | $Enums.AgencyRequestStatus
  }

  export type BanUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appeals?: BanAppealUpdateManyWithoutBanNestedInput
  }

  export type BanUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    appeals?: BanAppealUncheckedUpdateManyWithoutBanNestedInput
  }

  export type BanUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    bannedBy?: StringFieldUpdateOperationsInput | string
    adminId?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    severity?: EnumBanSeverityFieldUpdateOperationsInput | $Enums.BanSeverity
    evidence?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BoostUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneRequiredWithoutBoostsNestedInput
    pricing?: BoostPricingUpdateOneRequiredWithoutBoostsNestedInput
  }

  export type BoostUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ChatMemberUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
    chat?: ChatUpdateOneRequiredWithoutMembersNestedInput
  }

  export type ChatMemberUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ChatMemberUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ChatRateLimitUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type ChatRateLimitUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type ChatRateLimitUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    windowStart?: DateTimeFieldUpdateOperationsInput | Date | string
    limitType?: EnumRateLimitTypeFieldUpdateOperationsInput | $Enums.RateLimitType
  }

  export type DeviceTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    platform?: StringFieldUpdateOperationsInput | string
    deviceInfo?: NullableJsonNullValueInput | InputJsonValue
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat?: ChatUpdateOneRequiredWithoutMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUncheckedUpdateManyWithoutReceiverInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat?: ChatUpdateOneRequiredWithoutMessagesNestedInput
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type MessageUncheckedUpdateManyWithoutSenderInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
    chatId?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    isRead?: BoolFieldUpdateOperationsInput | boolean
    data?: NullableJsonNullValueInput | InputJsonValue
    priority?: EnumNotificationPriorityFieldUpdateOperationsInput | $Enums.NotificationPriority
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isSent?: BoolFieldUpdateOperationsInput | boolean
    sentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryMethod?: NotificationUpdatedeliveryMethodInput | string[]
    isEmailSent?: BoolFieldUpdateOperationsInput | boolean
    emailSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionUrl?: NullableStringFieldUpdateOperationsInput | string | null
    actionText?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PostUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUpdateManyWithoutPostNestedInput
    likes?: LikeUpdateManyWithoutPostNestedInput
    tags?: PostTagUpdateManyWithoutPostNestedInput
    locationRef?: LocationUpdateOneWithoutPostsNestedInput
    reports?: ReportUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
    boosts?: BoostUncheckedUpdateManyWithoutPostNestedInput
    favorites?: FavoriteUncheckedUpdateManyWithoutPostNestedInput
    likes?: LikeUncheckedUpdateManyWithoutPostNestedInput
    tags?: PostTagUncheckedUpdateManyWithoutPostNestedInput
    reports?: ReportUncheckedUpdateManyWithoutPostNestedInput
    trendingHistory?: TrendingHistoryUncheckedUpdateManyWithoutPostNestedInput
    interactions?: UserInteractionUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    images?: PostUpdateimagesInput | string[]
    phone?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    views?: IntFieldUpdateOperationsInput | number
    viewsToday?: IntFieldUpdateOperationsInput | number
    clicks?: IntFieldUpdateOperationsInput | number
    clicksToday?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    engagementRate?: FloatFieldUpdateOperationsInput | number
    lastBoosted?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    locationId?: NullableStringFieldUpdateOperationsInput | string | null
    rates?: NullableJsonNullValueInput | InputJsonValue
    availability?: NullableJsonNullValueInput | InputJsonValue
    trendingScore?: FloatFieldUpdateOperationsInput | number
    isTrending?: BoolFieldUpdateOperationsInput | boolean
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    discoveryScore?: FloatFieldUpdateOperationsInput | number
    qualityScore?: FloatFieldUpdateOperationsInput | number
    lastScoreUpdate?: DateTimeFieldUpdateOperationsInput | Date | string
    isPrivate?: BoolFieldUpdateOperationsInput | boolean
    premiumOnly?: BoolFieldUpdateOperationsInput | boolean
    uniqueViews?: IntFieldUpdateOperationsInput | number
    totalTime?: IntFieldUpdateOperationsInput | number
    bounceRate?: FloatFieldUpdateOperationsInput | number
    whatsappClicks?: IntFieldUpdateOperationsInput | number
    hasActiveBoost?: BoolFieldUpdateOperationsInput | boolean
    boostEndsAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    age?: NullableIntFieldUpdateOperationsInput | number | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    services?: PostUpdateservicesInput | string[]
    sexo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReportUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneWithoutReportsNestedInput
    targetUser?: UserUpdateOneWithoutReportsReceivedNestedInput
  }

  export type ReportUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUpdateWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: UserUpdateOneRequiredWithoutReportsNestedInput
    post?: PostUpdateOneWithoutReportsNestedInput
  }

  export type ReportUncheckedUpdateWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUncheckedUpdateManyWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchHistoryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SearchHistoryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SearchHistoryUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    query?: StringFieldUpdateOperationsInput | string
    filters?: NullableJsonNullValueInput | InputJsonValue
    results?: IntFieldUpdateOperationsInput | number
    clicked?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    plan?: SubscriptionPlanUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    planId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockUpdateWithoutBlockedInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blocker?: UserUpdateOneRequiredWithoutBlockedUsersNestedInput
  }

  export type UserBlockUncheckedUpdateWithoutBlockedInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockerId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockUncheckedUpdateManyWithoutBlockedInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockerId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockUpdateWithoutBlockerInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    blocked?: UserUpdateOneRequiredWithoutBlockedByNestedInput
  }

  export type UserBlockUncheckedUpdateWithoutBlockerInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockedId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserBlockUncheckedUpdateManyWithoutBlockerInput = {
    id?: StringFieldUpdateOperationsInput | string
    blockedId?: StringFieldUpdateOperationsInput | string
    reason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUpdateWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutInteractionsNestedInput
    user?: UserUpdateOneRequiredWithoutInteractionsNestedInput
  }

  export type UserInteractionUncheckedUpdateWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUncheckedUpdateManyWithoutTargetUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutInteractionsNestedInput
    targetUser?: UserUpdateOneWithoutReceivedInteractionsNestedInput
  }

  export type UserInteractionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionCreateManyPlanInput = {
    id?: string
    userId: string
    status?: $Enums.SubscriptionStatus
    stripeSubscriptionId?: string | null
    currentPeriodStart: Date | string
    currentPeriodEnd: Date | string
    postsUsed?: number
    imagesUsed?: number
    boostsUsed?: number
    startsAt: Date | string
    endsAt: Date | string
    cancelledAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SubscriptionUpdateWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSubscriptionsNestedInput
  }

  export type SubscriptionUncheckedUpdateWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubscriptionUncheckedUpdateManyWithoutPlanInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    status?: EnumSubscriptionStatusFieldUpdateOperationsInput | $Enums.SubscriptionStatus
    stripeSubscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    currentPeriodStart?: DateTimeFieldUpdateOperationsInput | Date | string
    currentPeriodEnd?: DateTimeFieldUpdateOperationsInput | Date | string
    postsUsed?: IntFieldUpdateOperationsInput | number
    imagesUsed?: IntFieldUpdateOperationsInput | number
    boostsUsed?: IntFieldUpdateOperationsInput | number
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    endsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagCreateManyTagInput = {
    id?: string
    postId: string
    createdAt?: Date | string
  }

  export type PostTagUpdateWithoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutTagsNestedInput
  }

  export type PostTagUncheckedUpdateWithoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagUncheckedUpdateManyWithoutTagInput = {
    id?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AgencyInvitationCreateManyEscortInput = {
    id?: string
    agencyId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipCreateManyEscortInput = {
    id?: string
    agencyId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ClientReviewCreateManyEscortInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    clientId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type EscortVerificationCreateManyEscortInput = {
    id?: string
    agencyId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type ReviewCreateManyAuthorInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    targetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ReviewCreateManyTargetInput = {
    id?: string
    rating: number
    comment?: string | null
    professionalism?: number | null
    communication?: number | null
    reliability?: number | null
    appearance?: number | null
    service?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    helpfulVotes?: number
    authorId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutInvitationsNestedInput
  }

  export type AgencyInvitationUncheckedUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationUncheckedUpdateManyWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutMembershipsNestedInput
  }

  export type AgencyMembershipUncheckedUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipUncheckedUpdateManyWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutClientReviewsNestedInput
  }

  export type ClientReviewUncheckedUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    clientId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewUncheckedUpdateManyWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    clientId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutVerificationsNestedInput
    pricing?: VerificationPricingUpdateOneRequiredWithoutVerificationsNestedInput
  }

  export type EscortVerificationUncheckedUpdateWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUncheckedUpdateManyWithoutEscortInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    target?: EscortUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    targetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    targetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUpdateWithoutTargetInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: EscortUpdateOneRequiredWithoutReviewsGivenNestedInput
  }

  export type ReviewUncheckedUpdateWithoutTargetInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    authorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReviewUncheckedUpdateManyWithoutTargetInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    professionalism?: NullableIntFieldUpdateOperationsInput | number | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    reliability?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    helpfulVotes?: IntFieldUpdateOperationsInput | number
    authorId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationCreateManyAgencyInput = {
    id?: string
    escortId: string
    status?: $Enums.InvitationStatus
    message?: string | null
    proposedCommission?: number | null
    proposedRole?: $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy: string
    respondedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type AgencyMembershipCreateManyAgencyInput = {
    id?: string
    escortId: string
    status?: $Enums.MembershipStatus
    role?: $Enums.AgencyRole
    commissionRate?: number | null
    canPostForAgency?: boolean
    canManageEscorts?: boolean
    canAccessFinances?: boolean
    approvedBy?: string | null
    approvedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type EscortVerificationCreateManyAgencyInput = {
    id?: string
    escortId: string
    pricingId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type AgencyInvitationUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    escort?: EscortUpdateOneRequiredWithoutAgencyInvitationsNestedInput
  }

  export type AgencyInvitationUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyInvitationUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumInvitationStatusFieldUpdateOperationsInput | $Enums.InvitationStatus
    message?: NullableStringFieldUpdateOperationsInput | string | null
    proposedCommission?: NullableFloatFieldUpdateOperationsInput | number | null
    proposedRole?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    proposedBenefits?: NullableJsonNullValueInput | InputJsonValue
    invitedBy?: StringFieldUpdateOperationsInput | string
    respondedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    escort?: EscortUpdateOneRequiredWithoutAgencyMembershipsNestedInput
  }

  export type AgencyMembershipUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AgencyMembershipUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumMembershipStatusFieldUpdateOperationsInput | $Enums.MembershipStatus
    role?: EnumAgencyRoleFieldUpdateOperationsInput | $Enums.AgencyRole
    commissionRate?: NullableFloatFieldUpdateOperationsInput | number | null
    canPostForAgency?: BoolFieldUpdateOperationsInput | boolean
    canManageEscorts?: BoolFieldUpdateOperationsInput | boolean
    canAccessFinances?: BoolFieldUpdateOperationsInput | boolean
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    escort?: EscortUpdateOneRequiredWithoutVerificationsNestedInput
    pricing?: VerificationPricingUpdateOneRequiredWithoutVerificationsNestedInput
  }

  export type EscortVerificationUncheckedUpdateWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUncheckedUpdateManyWithoutAgencyInput = {
    id?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewCreateManyClientInput = {
    id?: string
    rating: number
    comment?: string | null
    communication?: number | null
    punctuality?: number | null
    appearance?: number | null
    overall?: number | null
    service?: number | null
    value?: number | null
    isAnonymous?: boolean
    isVerified?: boolean
    escortId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type PaymentCreateManyClientInput = {
    id?: string
    amount: number
    currency?: string
    status?: $Enums.PaymentStatus
    type: $Enums.PaymentType
    description?: string | null
    stripePaymentId?: string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: string | null
    refundReason?: string | null
    processorFee?: number | null
    netAmount?: number | null
    taxAmount?: number | null
    taxRate?: number | null
    escortId?: string | null
    agencyId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    completedAt?: Date | string | null
  }

  export type PointTransactionCreateManyClientInput = {
    id?: string
    amount: number
    type: $Enums.PointTransactionType
    description?: string | null
    cost?: number | null
    postId?: string | null
    messageId?: string | null
    paymentId?: string | null
    purchaseId?: string | null
    actionId?: string | null
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    createdAt?: Date | string
  }

  export type PointsHistoryCreateManyClientInput = {
    id?: string
    type: $Enums.PointTransactionType
    amount: number
    description: string
    balanceBefore: number
    balanceAfter: number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: string | null
    purchaseId?: string | null
    actionId?: string | null
    createdAt?: Date | string
  }

  export type PointsPurchaseCreateManyClientInput = {
    id?: string
    packageId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PremiumActivationCreateManyClientInput = {
    id?: string
    tier: $Enums.PremiumTier
    duration: number
    pointsCost: number
    activatedAt?: Date | string
    expiresAt: Date | string
    isActive?: boolean
    activatedBy?: string
  }

  export type ClientReviewUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    escort?: EscortUpdateOneRequiredWithoutClientReviewsNestedInput
  }

  export type ClientReviewUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    escortId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClientReviewUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    communication?: NullableIntFieldUpdateOperationsInput | number | null
    punctuality?: NullableIntFieldUpdateOperationsInput | number | null
    appearance?: NullableIntFieldUpdateOperationsInput | number | null
    overall?: NullableIntFieldUpdateOperationsInput | number | null
    service?: NullableIntFieldUpdateOperationsInput | number | null
    value?: NullableIntFieldUpdateOperationsInput | number | null
    isAnonymous?: BoolFieldUpdateOperationsInput | boolean
    isVerified?: BoolFieldUpdateOperationsInput | boolean
    escortId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PaymentUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: StringFieldUpdateOperationsInput | string
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    type?: EnumPaymentTypeFieldUpdateOperationsInput | $Enums.PaymentType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableJsonNullValueInput | InputJsonValue
    failureReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundReason?: NullableStringFieldUpdateOperationsInput | string | null
    processorFee?: NullableFloatFieldUpdateOperationsInput | number | null
    netAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    taxRate?: NullableFloatFieldUpdateOperationsInput | number | null
    escortId?: NullableStringFieldUpdateOperationsInput | string | null
    agencyId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointTransactionUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointTransactionUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointTransactionUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    description?: NullableStringFieldUpdateOperationsInput | string | null
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    postId?: NullableStringFieldUpdateOperationsInput | string | null
    messageId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsHistoryUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumPointTransactionTypeFieldUpdateOperationsInput | $Enums.PointTransactionType
    amount?: IntFieldUpdateOperationsInput | number
    description?: StringFieldUpdateOperationsInput | string
    balanceBefore?: IntFieldUpdateOperationsInput | number
    balanceAfter?: IntFieldUpdateOperationsInput | number
    metadata?: NullableJsonNullValueInput | InputJsonValue
    source?: NullableStringFieldUpdateOperationsInput | string | null
    purchaseId?: NullableStringFieldUpdateOperationsInput | string | null
    actionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PointsPurchaseUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    package?: PointsPackageUpdateOneRequiredWithoutPurchasesNestedInput
  }

  export type PointsPurchaseUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointsPurchaseUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    packageId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PremiumActivationUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PremiumActivationUncheckedUpdateWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PremiumActivationUncheckedUpdateManyWithoutClientInput = {
    id?: StringFieldUpdateOperationsInput | string
    tier?: EnumPremiumTierFieldUpdateOperationsInput | $Enums.PremiumTier
    duration?: IntFieldUpdateOperationsInput | number
    pointsCost?: IntFieldUpdateOperationsInput | number
    activatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    activatedBy?: StringFieldUpdateOperationsInput | string
  }

  export type PointsPurchaseCreateManyPackageInput = {
    id?: string
    clientId: string
    pointsPurchased: number
    bonusPoints?: number
    totalPoints: number
    amountPaid: number
    status?: $Enums.PaymentStatus
    stripePaymentId?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
  }

  export type PointsPurchaseUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    client?: ClientUpdateOneRequiredWithoutPointsPurchasesNestedInput
  }

  export type PointsPurchaseUncheckedUpdateWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PointsPurchaseUncheckedUpdateManyWithoutPackageInput = {
    id?: StringFieldUpdateOperationsInput | string
    clientId?: StringFieldUpdateOperationsInput | string
    pointsPurchased?: IntFieldUpdateOperationsInput | number
    bonusPoints?: IntFieldUpdateOperationsInput | number
    totalPoints?: IntFieldUpdateOperationsInput | number
    amountPaid?: FloatFieldUpdateOperationsInput | number
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    stripePaymentId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanAppealCreateManyBanInput = {
    id?: string
    reason: string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.AppealStatus
    reviewedBy?: string | null
    reviewNotes?: string | null
    createdAt?: Date | string
    reviewedAt?: Date | string | null
  }

  export type BanAppealUpdateWithoutBanInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanAppealUncheckedUpdateWithoutBanInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BanAppealUncheckedUpdateManyWithoutBanInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    evidence?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumAppealStatusFieldUpdateOperationsInput | $Enums.AppealStatus
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationCreateManyPricingInput = {
    id?: string
    agencyId: string
    escortId: string
    status?: $Enums.VerificationStatus
    membershipId?: string | null
    startsAt?: Date | string
    expiresAt: Date | string
    isAutoRenewal?: boolean
    reminderSent?: boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: string | null
    rejectionReason?: string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: string | null
    createdAt?: Date | string
    completedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type EscortVerificationUpdateWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    agency?: AgencyUpdateOneRequiredWithoutVerificationsNestedInput
    escort?: EscortUpdateOneRequiredWithoutVerificationsNestedInput
  }

  export type EscortVerificationUncheckedUpdateWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EscortVerificationUncheckedUpdateManyWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    agencyId?: StringFieldUpdateOperationsInput | string
    escortId?: StringFieldUpdateOperationsInput | string
    status?: EnumVerificationStatusFieldUpdateOperationsInput | $Enums.VerificationStatus
    membershipId?: NullableStringFieldUpdateOperationsInput | string | null
    startsAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isAutoRenewal?: BoolFieldUpdateOperationsInput | boolean
    reminderSent?: BoolFieldUpdateOperationsInput | boolean
    documentsSubmitted?: NullableJsonNullValueInput | InputJsonValue
    verificationNotes?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    verificationSteps?: NullableJsonNullValueInput | InputJsonValue
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostCreateManyPricingInput = {
    id?: string
    isActive?: boolean
    amount?: number
    userId: string
    postId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type BoostUpdateWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    post?: PostUpdateOneRequiredWithoutBoostsNestedInput
    user?: UserUpdateOneRequiredWithoutBoostsNestedInput
  }

  export type BoostUncheckedUpdateWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostUncheckedUpdateManyWithoutPricingInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    postId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostCreateManyPostInput = {
    id?: string
    pricingId: string
    isActive?: boolean
    amount?: number
    userId: string
    viewsBefore?: number
    viewsAfter?: number
    clicksBefore?: number
    clicksAfter?: number
    engagementBefore?: number
    engagementAfter?: number
    conversionRate?: number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: string | null
    stackLevel?: number
    isStackBoost?: boolean
    createdAt?: Date | string
    expiresAt: Date | string
    deletedAt?: Date | string | null
  }

  export type FavoriteCreateManyPostInput = {
    id?: string
    userId: string
    isNotified?: boolean
    createdAt?: Date | string
  }

  export type LikeCreateManyPostInput = {
    id?: string
    userId: string
    createdAt?: Date | string
  }

  export type PostTagCreateManyPostInput = {
    id?: string
    tagId: string
    createdAt?: Date | string
  }

  export type ReportCreateManyPostInput = {
    id?: string
    reason: $Enums.ReportReason
    description?: string | null
    status?: $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: string | null
    severity?: $Enums.ReportSeverity
    resolution?: string | null
    resolvedBy?: string | null
    resolvedAt?: Date | string | null
    actionTaken?: string | null
    authorId: string
    targetUserId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type TrendingHistoryCreateManyPostInput = {
    id?: string
    position: number
    score: number
    category?: string | null
    date?: Date | string
  }

  export type UserInteractionCreateManyPostInput = {
    id?: string
    userId: string
    targetUserId?: string | null
    type: $Enums.InteractionType
    weight?: number
    duration?: number | null
    whatsappOpened?: boolean
    deviceType?: string | null
    source?: string | null
    location?: string | null
    sessionId?: string | null
    userAgent?: string | null
    metadata?: string | null
    createdAt?: Date | string
  }

  export type BoostUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pricing?: BoostPricingUpdateOneRequiredWithoutBoostsNestedInput
    user?: UserUpdateOneRequiredWithoutBoostsNestedInput
  }

  export type BoostUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BoostUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    pricingId?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    amount?: FloatFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    viewsBefore?: IntFieldUpdateOperationsInput | number
    viewsAfter?: IntFieldUpdateOperationsInput | number
    clicksBefore?: IntFieldUpdateOperationsInput | number
    clicksAfter?: IntFieldUpdateOperationsInput | number
    engagementBefore?: FloatFieldUpdateOperationsInput | number
    engagementAfter?: FloatFieldUpdateOperationsInput | number
    conversionRate?: FloatFieldUpdateOperationsInput | number
    targetAudience?: NullableJsonNullValueInput | InputJsonValue
    geography?: NullableStringFieldUpdateOperationsInput | string | null
    stackLevel?: IntFieldUpdateOperationsInput | number
    isStackBoost?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FavoriteUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFavoritesNestedInput
  }

  export type FavoriteUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    isNotified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutLikesNestedInput
  }

  export type LikeUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LikeUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: TagUpdateOneRequiredWithoutPostsNestedInput
  }

  export type PostTagUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostTagUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    tagId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReportUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    author?: UserUpdateOneRequiredWithoutReportsNestedInput
    targetUser?: UserUpdateOneWithoutReportsReceivedNestedInput
  }

  export type ReportUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ReportUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: EnumReportReasonFieldUpdateOperationsInput | $Enums.ReportReason
    description?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumReportStatusFieldUpdateOperationsInput | $Enums.ReportStatus
    evidence?: NullableJsonNullValueInput | InputJsonValue
    category?: NullableStringFieldUpdateOperationsInput | string | null
    severity?: EnumReportSeverityFieldUpdateOperationsInput | $Enums.ReportSeverity
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actionTaken?: NullableStringFieldUpdateOperationsInput | string | null
    authorId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TrendingHistoryUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrendingHistoryUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TrendingHistoryUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    position?: IntFieldUpdateOperationsInput | number
    score?: FloatFieldUpdateOperationsInput | number
    category?: NullableStringFieldUpdateOperationsInput | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    targetUser?: UserUpdateOneWithoutReceivedInteractionsNestedInput
    user?: UserUpdateOneRequiredWithoutInteractionsNestedInput
  }

  export type UserInteractionUncheckedUpdateWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserInteractionUncheckedUpdateManyWithoutPostInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    targetUserId?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumInteractionTypeFieldUpdateOperationsInput | $Enums.InteractionType
    weight?: FloatFieldUpdateOperationsInput | number
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    whatsappOpened?: BoolFieldUpdateOperationsInput | boolean
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    metadata?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ChatMemberCreateManyChatInput = {
    id?: string
    userId: string
    joinedAt?: Date | string
    lastRead?: Date | string
    isMuted?: boolean
    role?: $Enums.ChatRole
    messageCount?: number
    maxMessages?: number
    canAddMembers?: boolean
    canDeleteMessages?: boolean
    canManageChat?: boolean
    messagesCount?: number
  }

  export type MessageCreateManyChatInput = {
    id?: string
    content?: string | null
    messageType?: $Enums.MessageType
    fileUrl?: string | null
    fileName?: string | null
    fileSize?: number | null
    mimeType?: string | null
    isRead?: boolean
    costPoints?: number | null
    isPremiumMessage?: boolean
    isEdited?: boolean
    editedAt?: Date | string | null
    isForwarded?: boolean
    replyToId?: string | null
    isEncrypted?: boolean
    expiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    readAt?: Date | string | null
    senderId: string
    receiverId?: string | null
  }

  export type ChatMemberUpdateWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
    user?: UserUpdateOneRequiredWithoutChatMembersNestedInput
  }

  export type ChatMemberUncheckedUpdateWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type ChatMemberUncheckedUpdateManyWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    joinedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastRead?: DateTimeFieldUpdateOperationsInput | Date | string
    isMuted?: BoolFieldUpdateOperationsInput | boolean
    role?: EnumChatRoleFieldUpdateOperationsInput | $Enums.ChatRole
    messageCount?: IntFieldUpdateOperationsInput | number
    maxMessages?: IntFieldUpdateOperationsInput | number
    canAddMembers?: BoolFieldUpdateOperationsInput | boolean
    canDeleteMessages?: BoolFieldUpdateOperationsInput | boolean
    canManageChat?: BoolFieldUpdateOperationsInput | boolean
    messagesCount?: IntFieldUpdateOperationsInput | number
  }

  export type MessageUpdateWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    receiver?: UserUpdateOneWithoutReceivedMessagesNestedInput
    sender?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessageUncheckedUpdateManyWithoutChatInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    messageType?: EnumMessageTypeFieldUpdateOperationsInput | $Enums.MessageType
    fileUrl?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    isRead?: BoolFieldUpdateOperationsInput | boolean
    costPoints?: NullableIntFieldUpdateOperationsInput | number | null
    isPremiumMessage?: BoolFieldUpdateOperationsInput | boolean
    isEdited?: BoolFieldUpdateOperationsInput | boolean
    editedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    isForwarded?: BoolFieldUpdateOperationsInput | boolean
    replyToId?: NullableStringFieldUpdateOperationsInput | string | null
    isEncrypted?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    senderId?: StringFieldUpdateOperationsInput | string
    receiverId?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use LocationCountOutputTypeDefaultArgs instead
     */
    export type LocationCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionPlanCountOutputTypeDefaultArgs instead
     */
    export type SubscriptionPlanCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionPlanCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagCountOutputTypeDefaultArgs instead
     */
    export type TagCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EscortCountOutputTypeDefaultArgs instead
     */
    export type EscortCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EscortCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgencyCountOutputTypeDefaultArgs instead
     */
    export type AgencyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgencyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientCountOutputTypeDefaultArgs instead
     */
    export type ClientCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PointsPackageCountOutputTypeDefaultArgs instead
     */
    export type PointsPackageCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PointsPackageCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BanCountOutputTypeDefaultArgs instead
     */
    export type BanCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BanCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VerificationPricingCountOutputTypeDefaultArgs instead
     */
    export type VerificationPricingCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VerificationPricingCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BoostPricingCountOutputTypeDefaultArgs instead
     */
    export type BoostPricingCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BoostPricingCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostCountOutputTypeDefaultArgs instead
     */
    export type PostCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ChatCountOutputTypeDefaultArgs instead
     */
    export type ChatCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ChatCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LocationDefaultArgs instead
     */
    export type LocationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LocationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgencyRegistrationRequestDefaultArgs instead
     */
    export type AgencyRegistrationRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgencyRegistrationRequestDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSettingsDefaultArgs instead
     */
    export type UserSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DeviceTokenDefaultArgs instead
     */
    export type DeviceTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DeviceTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SearchHistoryDefaultArgs instead
     */
    export type SearchHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SearchHistoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserBlockDefaultArgs instead
     */
    export type UserBlockArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserBlockDefaultArgs<ExtArgs>
    /**
     * @deprecated Use IdentityVerificationDefaultArgs instead
     */
    export type IdentityVerificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = IdentityVerificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionPlanDefaultArgs instead
     */
    export type SubscriptionPlanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionPlanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubscriptionDefaultArgs instead
     */
    export type SubscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubscriptionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TagDefaultArgs instead
     */
    export type TagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TagDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostTagDefaultArgs instead
     */
    export type PostTagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostTagDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AdminDefaultArgs instead
     */
    export type AdminArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AdminDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserReputationDefaultArgs instead
     */
    export type UserReputationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserReputationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EscortDefaultArgs instead
     */
    export type EscortArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EscortDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgencyDefaultArgs instead
     */
    export type AgencyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgencyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientDefaultArgs instead
     */
    export type ClientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PointsPackageDefaultArgs instead
     */
    export type PointsPackageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PointsPackageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PointsPurchaseDefaultArgs instead
     */
    export type PointsPurchaseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PointsPurchaseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PointTransactionDefaultArgs instead
     */
    export type PointTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PointTransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PointsHistoryDefaultArgs instead
     */
    export type PointsHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PointsHistoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PremiumActivationDefaultArgs instead
     */
    export type PremiumActivationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PremiumActivationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientReviewDefaultArgs instead
     */
    export type ClientReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BanDefaultArgs instead
     */
    export type BanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BanAppealDefaultArgs instead
     */
    export type BanAppealArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BanAppealDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserInteractionDefaultArgs instead
     */
    export type UserInteractionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserInteractionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ChatRateLimitDefaultArgs instead
     */
    export type ChatRateLimitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ChatRateLimitDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgencyMembershipDefaultArgs instead
     */
    export type AgencyMembershipArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgencyMembershipDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AgencyInvitationDefaultArgs instead
     */
    export type AgencyInvitationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AgencyInvitationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use EscortVerificationDefaultArgs instead
     */
    export type EscortVerificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = EscortVerificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use VerificationPricingDefaultArgs instead
     */
    export type VerificationPricingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = VerificationPricingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BoostPricingDefaultArgs instead
     */
    export type BoostPricingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BoostPricingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PostDefaultArgs instead
     */
    export type PostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PostDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TrendingHistoryDefaultArgs instead
     */
    export type TrendingHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TrendingHistoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ChatDefaultArgs instead
     */
    export type ChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ChatDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ChatMemberDefaultArgs instead
     */
    export type ChatMemberArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ChatMemberDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MessageDefaultArgs instead
     */
    export type MessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MessageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FavoriteDefaultArgs instead
     */
    export type FavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FavoriteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LikeDefaultArgs instead
     */
    export type LikeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LikeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReportDefaultArgs instead
     */
    export type ReportArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReportDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NotificationDefaultArgs instead
     */
    export type NotificationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NotificationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentDefaultArgs instead
     */
    export type PaymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BoostDefaultArgs instead
     */
    export type BoostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BoostDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AppMetricsDefaultArgs instead
     */
    export type AppMetricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AppMetricsDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}